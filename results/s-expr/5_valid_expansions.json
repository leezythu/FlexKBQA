[
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bq3bg4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bq3bg4 ns:business.product_category.products ?x .\n?x ns:business.consumer_product.category ns:m.0bqtd .\n}\n",
        "TopicEntityMid": "m.0bq3bg4",
        "mid2name": {
            "ns:m.0bq3bg4": "Outdoor furniture industry",
            "ns:m.0bqtd": "Do it yourself"
        },
        "SExpr_w_name": "(AND (JOIN business.consumer_product.category Do it yourself) (JOIN (R business.product_category.products) Outdoor furniture industry))",
        "SExpr": "(AND (JOIN business.consumer_product.category m.0bqtd) (JOIN (R business.product_category.products) m.0bq3bg4))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h_2qt7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h_2qt7 ns:book.poem_character.appears_in_poems ?x .\n?x ns:book.written_work.author ns:m.0gg89tf .\n}\n",
        "TopicEntityMid": "m.0h_2qt7",
        "mid2name": {
            "ns:m.0h_2qt7": "Angel of Valentine Days and Nights",
            "ns:m.0gg89tf": "Aberjhani"
        },
        "SExpr_w_name": "(AND (JOIN book.written_work.author Aberjhani) (JOIN (R book.poem_character.appears_in_poems) Angel of Valentine Days and Nights))",
        "SExpr": "(AND (JOIN book.written_work.author m.0gg89tf) (JOIN (R book.poem_character.appears_in_poems) m.0h_2qt7))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fsyhl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fsyhl ns:music.album.artist ?x .\n?x ns:music.artist.genre ns:m.064t9 .\n}\n",
        "TopicEntityMid": "m.01fsyhl",
        "mid2name": {
            "ns:m.01fsyhl": "Freddie Mercury Tribute",
            "ns:m.064t9": "Pop music"
        },
        "SExpr_w_name": "(AND (JOIN music.artist.genre Pop music) (JOIN (R music.album.artist) Freddie Mercury Tribute))",
        "SExpr": "(AND (JOIN music.artist.genre m.064t9) (JOIN (R music.album.artist) m.01fsyhl))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05q7n6y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05q7n6y ns:music.artist.genre ?x .\n?x ns:base.webvideo.internet_video_genre.internet_video ns:m.0p7hzch .\n}\n",
        "TopicEntityMid": "m.05q7n6y",
        "mid2name": {
            "ns:m.05q7n6y": "Irson Kudikova",
            "ns:m.0p7hzch": "Where Is He? (a1,s1)"
        },
        "SExpr_w_name": "(AND (JOIN base.webvideo.internet_video_genre.internet_video Where Is He? (a1,s1)) (JOIN (R music.artist.genre) Irson Kudikova))",
        "SExpr": "(AND (JOIN base.webvideo.internet_video_genre.internet_video m.0p7hzch) (JOIN (R music.artist.genre) m.05q7n6y))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g7pm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g7pm ns:location.location.containedby ?x .\n?x ns:biology.breed_origin.breeds_originating_here ns:m.02cj3 .\n}\n",
        "TopicEntityMid": "m.0g7pm",
        "mid2name": {
            "ns:m.0g7pm": "Kiel",
            "ns:m.02cj3": "Dachshund"
        },
        "SExpr_w_name": "(AND (JOIN biology.breed_origin.breeds_originating_here Dachshund) (JOIN (R location.location.containedby) Kiel))",
        "SExpr": "(AND (JOIN biology.breed_origin.breeds_originating_here m.02cj3) (JOIN (R location.location.containedby) m.0g7pm))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jhxmy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jhxmy ns:music.album.artist ?x .\n?x ns:music.artist.genre ns:m.02w4v .\n}\n",
        "TopicEntityMid": "m.03jhxmy",
        "mid2name": {
            "ns:m.03jhxmy": "El Canto del Viento",
            "ns:m.02w4v": "Folk music"
        },
        "SExpr_w_name": "(AND (JOIN music.artist.genre Folk music) (JOIN (R music.album.artist) El Canto del Viento))",
        "SExpr": "(AND (JOIN music.artist.genre m.02w4v) (JOIN (R music.album.artist) m.03jhxmy))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n9mwjb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n9mwjb ns:music.composition.composer ?x .\n?x ns:music.artist.track ns:m.0dpl6t3 .\n}\n",
        "TopicEntityMid": "m.0n9mwjb",
        "mid2name": {
            "ns:m.0n9mwjb": "Snuff Box Theme Song",
            "ns:m.0dpl6t3": "Reach for the Ground"
        },
        "SExpr_w_name": "(AND (JOIN music.artist.track Reach for the Ground) (JOIN (R music.composition.composer) Snuff Box Theme Song))",
        "SExpr": "(AND (JOIN music.artist.track m.0dpl6t3) (JOIN (R music.composition.composer) m.0n9mwjb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v4vchb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v4vchb ns:biology.animal_owner.animals_owned ?x .\n?x ns:biology.animal_ownership.animal ns:m.0v38xvy .\n}\n",
        "TopicEntityMid": "m.0v4vchb",
        "mid2name": {
            "ns:m.0v4vchb": "William Bethell",
            "ns:m.0v38xvy": "Ruler"
        },
        "SExpr_w_name": "(AND (JOIN biology.animal_ownership.animal Ruler) (JOIN (R biology.animal_owner.animals_owned) William Bethell))",
        "SExpr": "(AND (JOIN biology.animal_ownership.animal m.0v38xvy) (JOIN (R biology.animal_owner.animals_owned) m.0v4vchb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c3svw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c3svw ns:people.person.gender ?x .\n?x ns:base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor ns:m.04yhgxn .\n}\n",
        "TopicEntityMid": "m.0c3svw",
        "mid2name": {
            "ns:m.0c3svw": "Holly Sampson",
            "ns:m.04yhgxn": "Hypoadrenocorticism in dogs"
        },
        "SExpr_w_name": "(AND (JOIN base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor Hypoadrenocorticism in dogsn) (JOIN (R people.person.gender) Holly Sampson))",
        "SExpr": "(AND (JOIN base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor m.04yhgxn) (JOIN (R people.person.gender) m.0c3svw))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dlw6bp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dlw6bp ns:tv.tv_series_episode.director ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "TopicEntityMid": "m.0dlw6bp",
        "mid2name": {
            "ns:m.0dlw6bp": "Father Payne - Right To Life",
            "ns:m.02zsn": "Female"
        },
        "SExpr_w_name": "(AND (JOIN people.person.gender Femalesn) (JOIN (R tv.tv_series_episode.director) Father Payne - Right To Life))",
        "SExpr": "(AND (JOIN people.person.gender m.02zsn) (JOIN (R tv.tv_series_episode.director) m.0dlw6bp))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2yp6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2yp6 ns:martial_arts.martial_arts_organization.martial_arts ?x .\n?x ns:martial_arts.martial_art.category ns:m.02rj0b .\n}\n",
        "TopicEntityMid": "m.0f2yp6",
        "mid2name": {
            "ns:m.0f2yp6": "Song Moo Kwan",
            "ns:m.02rj0b": "Strike"
        },
        "SExpr_w_name": "(AND (JOIN martial_arts.martial_art.category Strike) (JOIN (R martial_arts.martial_arts_organization.martial_arts) Song Moo Kwan))",
        "SExpr": "(AND (JOIN martial_arts.martial_art.category m.02rj0b) (JOIN (R martial_arts.martial_arts_organization.martial_arts) m.0f2yp6))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c5fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c5fr ns:royalty.royal_line.preceded_by ?x .\n?x ns:royalty.royal_line.preceded_by ns:m.05mxmt .\n}\n",
        "TopicEntityMid": "m.0c5fr",
        "mid2name": {
            "ns:m.0c5fr": "House of Bourbon",
            "ns:m.05mxmt": "House of Capet"
        },
        "SExpr_w_name": "(AND (JOIN royalty.royal_line.preceded_by House of Capet) (JOIN (R royalty.royal_line.preceded_by) House of Bourbon))",
        "SExpr": "(AND (JOIN royalty.royal_line.preceded_by m.05mxmt) (JOIN (R royalty.royal_line.preceded_by) m.0c5fr))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l691g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l691g ns:biology.gene_group.gene ?x .\n?x ns:biology.gene_group_membership.evidence ns:m.02mcggx .\n}\n",
        "TopicEntityMid": "m.02l691g",
        "mid2name": {
            "ns:m.02l691g": "intrinsic to mitochondrial inner membrane",
            "ns:m.02mcggx": "Inferred from Sequence or Structural Similarity"
        },
        "SExpr_w_name": "(AND (JOIN biology.gene_group_membership.evidence Inferred from Sequence or Structural Similarity) (JOIN (R biology.gene_group.gene) intrinsic to mitochondrial inner membrane))",
        "SExpr": "(AND (JOIN biology.gene_group_membership.evidence m.02mcggx) (JOIN (R biology.gene_group.gene) m.02l691g))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ljgl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ljgl ns:base.descriptive_names.names.descriptive_name ?x .\n?x ns:base.schemastaging.plural_form.language ns:m.0l1r8v .\n}\n",
        "TopicEntityMid": "m.02ljgl",
        "mid2name": {
            "ns:m.02ljgl": "Monument",
            "ns:m.0l1r8v": "Portuguese"
        },
        "SExpr_w_name": "(AND (JOIN base.schemastaging.plural_form.language Portuguese) (JOIN (R base.descriptive_names.names.descriptive_name) Monument))",
        "SExpr": "(AND (JOIN base.schemastaging.plural_form.language m.0l1r8v) (JOIN (R base.descriptive_names.names.descriptive_name) m.02ljgl))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_00)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_00 ns:base.activism.political_party.supports_issues ?x .\n?x ns:base.activism.activism_issue.activists ns:m.014488 .\n}\n",
        "TopicEntityMid": "m.0_00",
        "mid2name": {
            "ns:m.0_00": "African National Congress",
            "ns:m.014488": "Harry Belafonte"
        },
        "SExpr_w_name": "(AND (JOIN base.activism.activism_issue.activists Harry Belafonte) (JOIN (R base.activism.political_party.supports_issues) African National Congress))",
        "SExpr": "(AND (JOIN base.activism.activism_issue.activists m.014488) (JOIN (R base.activism.political_party.supports_issues) m.0_00))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h4pql5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h4pql5 ns:fictional_universe.character_occupation.characters_with_this_occupation ?x .\n?x ns:fictional_universe.fictional_character.gender ns:m.05zppz .\n}\n",
        "TopicEntityMid": "m.0h4pql5",
        "mid2name": {
            "ns:m.0h4pql5": "Military aviator",
            "ns:m.05zppz": "Male"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_character.gender Male) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) Military aviator))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_character.gender m.05zppz) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) m.0h4pql5))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h7b56)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h7b56 ns:time.holiday_category.holidays ?x .\n?x ns:base.schemastaging.holiday_extra.observance_rule ns:m.01146277 .\n}\n",
        "TopicEntityMid": "m.02h7b56",
        "mid2name": {
            "ns:m.02h7b56": "Pagan holiday",
            "ns:m.01146277": "May Day observance rule (Finland, 1978 - now)"
        },
        "SExpr_w_name": "(AND (JOIN base.schemastaging.holiday_extra.observance_rule May Day observance rule (Finland, 1978 - now)) (JOIN (R time.holiday_category.holidays) Pagan holiday))",
        "SExpr": "(AND (JOIN base.schemastaging.holiday_extra.observance_rule m.01146277) (JOIN (R time.holiday_category.holidays) m.02h7b56))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03p67)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03p67 ns:cvg.cvg_genre.games ?x .\n?x ns:base.wikipedia_infobox.video_game.platforms ns:m.0d714 .\n}\n",
        "TopicEntityMid": "m.03p67",
        "mid2name": {
            "ns:m.03p67": "Hentai",
            "ns:m.0d714": "IBM PC compatible"
        },
        "SExpr_w_name": "(AND (JOIN base.wikipedia_infobox.video_game.platforms IBM PC compatible) (JOIN (R cvg.cvg_genre.games) Hentai))",
        "SExpr": "(AND (JOIN base.wikipedia_infobox.video_game.platforms m.0d714) (JOIN (R cvg.cvg_genre.games) m.03p67))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bw1ng)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bw1ng ns:fictional_universe.work_of_fiction.setting ?x .\n?x ns:fictional_universe.fictional_setting.characters_that_have_lived_here ns:m.01d5g .\n}\n",
        "TopicEntityMid": "m.03bw1ng",
        "mid2name": {
            "ns:m.03bw1ng": "Mark of Cain, Part Two",
            "ns:m.01d5g": "Bruce Wayne"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_setting.characters_that_have_lived_here Bruce Wayne) (JOIN (R fictional_universe.work_of_fiction.setting) Mark of Cain, Part Two))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_setting.characters_that_have_lived_here m.01d5g) (JOIN (R fictional_universe.work_of_fiction.setting) m.03bw1ng))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0w4yxfv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0w4yxfv ns:time.event.locations ?x .\n?x ns:location.location.containedby ns:m.0d05w3 .\n}\n",
        "TopicEntityMid": "m.0w4yxfv",
        "mid2name": {
            "ns:m.0w4yxfv": "Manny Pacquiao vs. Brandon Rios",
            "ns:m.0d05w3": "China"
        },
        "SExpr_w_name": "(AND (JOIN location.location.containedby China) (JOIN (R time.event.locations) Manny Pacquiao vs. Brandon Rios))",
        "SExpr": "(AND (JOIN location.location.containedby m.0d05w3) (JOIN (R time.event.locations) m.0w4yxfv))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pxfkz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pxfkz ns:conferences.conference_subject.specific_conferences_about_this ?x .\n?x ns:conferences.conference_series.conference ns:m.0y47dch .\n}\n",
        "TopicEntityMid": "m.02pxfkz",
        "mid2name": {
            "ns:m.02pxfkz": "Digital marketing",
            "ns:m.0y47dch": "Cardiff Digital"
        },
        "SExpr_w_name": "(AND (JOIN conferences.conference_series.conference Cardiff Digital) (JOIN (R conferences.conference_subject.specific_conferences_about_this) Digital marketing))",
        "SExpr": "(AND (JOIN conferences.conference_series.conference m.0y47dch) (JOIN (R conferences.conference_subject.specific_conferences_about_this) m.02pxfkz))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j3j98x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j3j98x ns:law.us_patent.associated_inventions ?x .\n?x ns:law.invention.inventor ns:m.05mrfbc .\n}\n",
        "TopicEntityMid": "m.0j3j98x",
        "mid2name": {
            "ns:m.0j3j98x": "Electric field domain patterning: U.S. Patent No. 6,156,255",
            "ns:m.05mrfbc": "Robert L. Byer"
        },
        "SExpr_w_name": "(AND (JOIN law.invention.inventor Robert L. Byer) (JOIN (R law.us_patent.associated_inventions) Electric field domain patterning: U.S. Patent No. 6,156,255))",
        "SExpr": "(AND (JOIN law.invention.inventor m.05mrfbc) (JOIN (R law.us_patent.associated_inventions) m.0j3j98x))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pwc0w6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pwc0w6 ns:people.profession.people_with_this_profession ?x .\n?x ns:book.author.works_written ns:m.0690mft .\n}\n",
        "TopicEntityMid": "m.0pwc0w6",
        "mid2name": {
            "ns:m.0pwc0w6": "Boxing Trainer",
            "ns:m.0690mft": "I Only Talk Winning"
        },
        "SExpr_w_name": "(AND (JOIN book.author.works_written I Only Talk Winning) (JOIN (R people.profession.people_with_this_profession) Boxing Trainer))",
        "SExpr": "(AND (JOIN book.author.works_written m.0690mft) (JOIN (R people.profession.people_with_this_profession) m.0pwc0w6))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03f0h4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03f0h4 ns:base.descriptive_names.names.descriptive_name ?x .\n?x ns:base.schemastaging.plural_form.language ns:m.0lg4jy .\n}\n",
        "TopicEntityMid": "m.03f0h4",
        "mid2name": {
            "ns:m.03f0h4": "Roman temple",
            "ns:m.0lg4jy": "Russian"
        },
        "SExpr_w_name": "(AND (JOIN base.schemastaging.plural_form.language Russian) (JOIN (R base.descriptive_names.names.descriptive_name) Roman temple))",
        "SExpr": "(AND (JOIN base.schemastaging.plural_form.language m.0lg4jy) (JOIN (R base.descriptive_names.names.descriptive_name) m.03f0h4))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b_4m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b_4m ns:computer.computer_processor.manufacturers ?x .\n?x ns:book.author.works_written ns:m.06nkls2 .\n}\n",
        "TopicEntityMid": "m.09b_4m",
        "mid2name": {
            "ns:m.09b_4m": "Intel Core",
            "ns:m.06nkls2": "16-/32-Bit Embedded Processors"
        },
        "SExpr_w_name": "(AND (JOIN book.author.works_written 16-/32-Bit Embedded Processors) (JOIN (R computer.computer_processor.manufacturers) Intel Core))",
        "SExpr": "(AND (JOIN book.author.works_written m.06nkls2) (JOIN (R computer.computer_processor.manufacturers) m.09b_4m))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03thbj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03thbj ns:location.location.containedby ?x .\n?x ns:biology.breed_origin.breeds_originating_here ns:m.02kgrx .\n}\n",
        "TopicEntityMid": "m.03thbj",
        "mid2name": {
            "ns:m.03thbj": "River Mellte",
            "ns:m.02kgrx": "Cardigan Welsh Corgi"
        },
        "SExpr_w_name": "(AND (JOIN biology.breed_origin.breeds_originating_here Cardigan Welsh Corgi) (JOIN (R location.location.containedby) River Mellte))",
        "SExpr": "(AND (JOIN biology.breed_origin.breeds_originating_here m.02kgrx) (JOIN (R location.location.containedby) m.03thbj))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027pbrg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027pbrg ns:organization.organization.geographic_scope ?x .\n?x ns:biology.breed_origin.breeds_originating_here ns:m.01qn1p .\n}\n",
        "TopicEntityMid": "m.027pbrg",
        "mid2name": {
            "ns:m.027pbrg": "South Wales Miners' Federation",
            "ns:m.01qn1p": "English Shepherd"
        },
        "SExpr_w_name": "(AND (JOIN biology.breed_origin.breeds_originating_here English Shepherd) (JOIN (R organization.organization.geographic_scope) South Wales Miners' Federation))",
        "SExpr": "(AND (JOIN biology.breed_origin.breeds_originating_here m.01qn1p) (JOIN (R organization.organization.geographic_scope) m.027pbrg))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.021q23)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.021q23 ns:organization.organization.headquarters ?x .\n?x ns:location.mailing_address.country ns:m.0j1z8 .\n}\n",
        "TopicEntityMid": "m.021q23",
        "mid2name": {
            "ns:m.021q23": "International Cricket Council",
            "ns:m.0j1z8": "United Arab Emirates"
        },
        "SExpr_w_name": "(AND (JOIN location.mailing_address.country United Arab Emirates) (JOIN (R organization.organization.headquarters) International Cricket Council))",
        "SExpr": "(AND (JOIN location.mailing_address.country m.0j1z8) (JOIN (R organization.organization.headquarters) m.021q23))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036wwt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036wwt ns:law.constitutional_amendment_proposer.constitutional_amendments_proposed ?x .\n?x ns:law.constitutional_amendment.constitution ns:m.07sdd .\n}\n",
        "TopicEntityMid": "m.036wwt",
        "mid2name": {
            "ns:m.036wwt": "United States Senate Committee on the Judiciary",
            "ns:m.07sdd": "United States Constitution"
        },
        "SExpr_w_name": "(AND (JOIN law.constitutional_amendment.constitution United States Constitution) (JOIN (R law.constitutional_amendment_proposer.constitutional_amendments_proposed) United States Senate Committee on the Judiciary))",
        "SExpr": "(AND (JOIN law.constitutional_amendment.constitution m.07sdd) (JOIN (R law.constitutional_amendment_proposer.constitutional_amendments_proposed) m.036wwt))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0wqxv88)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0wqxv88 ns:music.artist.track ?x .\n?x ns:music.recording.artist ns:m.0__h8qp .\n}\n",
        "TopicEntityMid": "m.0wqxv88",
        "mid2name": {
            "ns:m.0wqxv88": "LazyTown",
            "ns:m.0__h8qp": "LazyTown Entertainment"
        },
        "SExpr_w_name": "(AND (JOIN music.recording.artist LazyTown Entertainment) (JOIN (R music.artist.track) LazyTown))",
        "SExpr": "(AND (JOIN music.recording.artist m.0__h8qp) (JOIN (R music.artist.track) m.0wqxv88))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042_90)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042_90 ns:education.grade_level.locations_used ?x .\n?x ns:base.csafarms.area_served.farms ns:m.0ch8vx5 .\n}\n",
        "TopicEntityMid": "m.042_90",
        "mid2name": {
            "ns:m.042_90": "Eighth grade",
            "ns:m.0ch8vx5": "Veldhuizen Family Farm"
        },
        "SExpr_w_name": "(AND (JOIN base.csafarms.area_served.farms Veldhuizen Family Farm) (JOIN (R education.grade_level.locations_used) Eighth grade))",
        "SExpr": "(AND (JOIN base.csafarms.area_served.farms m.0ch8vx5) (JOIN (R education.grade_level.locations_used) m.042_90))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jscm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jscm ns:sports.sports_team.league ?x .\n?x ns:sports.sports_league_participation.league ns:m.059yj .\n}\n",
        "TopicEntityMid": "m.01jscm",
        "mid2name": {
            "ns:m.01jscm": "Toledo Maroons",
            "ns:m.059yj": "National Football League"
        },
        "SExpr_w_name": "(AND (JOIN sports.sports_league_participation.league National Football League) (JOIN (R sports.sports_team.league) Toledo Maroons))",
        "SExpr": "(AND (JOIN sports.sports_league_participation.league m.059yj) (JOIN (R sports.sports_team.league) m.01jscm))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bvpvr3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bvpvr3 ns:music.producer.releases_produced ?x .\n?x ns:music.release.album ns:m.0bvpvq9 .\n}\n",
        "TopicEntityMid": "m.0bvpvr3",
        "mid2name": {
            "ns:m.0bvpvr3": "Sandy Yaguda",
            "ns:m.0bvpvq9": "Beatlemania"
        },
        "SExpr_w_name": "(AND (JOIN music.release.album Beatlemania) (JOIN (R music.producer.releases_produced) Sandy Yaguda))",
        "SExpr": "(AND (JOIN music.release.album m.0bvpvq9) (JOIN (R music.producer.releases_produced) m.0bvpvr3))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02s8r8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02s8r8 ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n?x ns:book.written_work.author ns:m.0yxl .\n}\n",
        "TopicEntityMid": "m.02s8r8",
        "mid2name": {
            "ns:m.02s8r8": "Brian Bolland",
            "ns:m.0yxl": "Alan Moore"
        },
        "SExpr_w_name": "(AND (JOIN book.written_work.author Alan Moore) (JOIN (R comic_books.comic_book_penciler.comic_books_penciled) Brian Bolland))",
        "SExpr": "(AND (JOIN book.written_work.author m.0yxl) (JOIN (R comic_books.comic_book_penciler.comic_books_penciled) m.02s8r8))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jfk1r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jfk1r ns:computer.programming_language.influenced_by ?x .\n?x ns:computer.programming_language.dialects ns:m.02js86 .\n}\n",
        "TopicEntityMid": "m.04jfk1r",
        "mid2name": {
            "ns:m.04jfk1r": "Fantom",
            "ns:m.02js86": "Groovy"
        },
        "SExpr_w_name": "(AND (JOIN computer.programming_language.dialects Groovy) (JOIN (R computer.programming_language.influenced_by) Fantom))",
        "SExpr": "(AND (JOIN computer.programming_language.dialects m.02js86) (JOIN (R computer.programming_language.influenced_by) m.04jfk1r))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mpk31)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mpk31 ns:book.report_issuing_institution.technical_reports_issued ?x .\n?x ns:book.written_work.author ns:m.05mpl10 .\n}\n",
        "TopicEntityMid": "m.05mpk31",
        "mid2name": {
            "ns:m.05mpk31": "Klamath Bird Observatory",
            "ns:m.05mpl10": "North American Bird Conservation Initiative, U.S. Committee"
        },
        "SExpr_w_name": "(AND (JOIN book.written_work.author North American Bird Conservation Initiative, U.S. Committee) (JOIN (R book.report_issuing_institution.technical_reports_issued) Klamath Bird Observatory))",
        "SExpr": "(AND (JOIN book.written_work.author m.05mpl10) (JOIN (R book.report_issuing_institution.technical_reports_issued) m.05mpk31))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023k2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023k2 ns:organization.non_profit_designation.organizations_with_this_designation ?x .\n?x ns:organization.non_profit_registration.non_profit_organization ns:m.0n4gpv6 .\n}\n",
        "TopicEntityMid": "m.023k2",
        "mid2name": {
            "ns:m.023k2": "Corporation",
            "ns:m.0n4gpv6": "Santee Historical Society"
        },
        "SExpr_w_name": "(AND (JOIN organization.non_profit_registration.non_profit_organization Santee Historical Society) (JOIN (R organization.non_profit_designation.organizations_with_this_designation) Corporation))",
        "SExpr": "(AND (JOIN organization.non_profit_registration.non_profit_organization m.0n4gpv6) (JOIN (R organization.non_profit_designation.organizations_with_this_designation) m.023k2))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xnkt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xnkt ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n?x ns:fictional_universe.work_of_fiction.setting ns:m.0dx9r .\n}\n",
        "TopicEntityMid": "m.02xnkt",
        "mid2name": {
            "ns:m.02xnkt": "Andy Kubert",
            "ns:m.0dx9r": "Hampton Court Palace"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.work_of_fiction.setting Hampton Court Palace) (JOIN (R comic_books.comic_book_penciler.comic_books_penciled) Andy Kubert))",
        "SExpr": "(AND (JOIN fictional_universe.work_of_fiction.setting m.0dx9r) (JOIN (R comic_books.comic_book_penciler.comic_books_penciled) m.02xnkt))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jmm4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jmm4 ns:sports.sports_team.league ?x .\n?x ns:sports.sports_league_participation.league ns:m.05jvx .\n}\n",
        "TopicEntityMid": "m.0jmm4",
        "mid2name": {
            "ns:m.0jmm4": "Portland Trail Blazers",
            "ns:m.05jvx": "National Basketball Association"
        },
        "SExpr_w_name": "(AND (JOIN sports.sports_league_participation.league National Basketball Association) (JOIN (R sports.sports_team.league) Portland Trail Blazers))",
        "SExpr": "(AND (JOIN sports.sports_league_participation.league m.05jvx) (JOIN (R sports.sports_team.league) m.0jmm4))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01540h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01540h ns:music.artist.genre ?x .\n?x ns:music.genre.artists ns:m.014hz6 .\n}\n",
        "TopicEntityMid": "m.01540h",
        "mid2name": {
            "ns:m.01540h": "New Philharmonic Orchestra",
            "ns:m.014hz6": "London Philharmonic Orchestra"
        },
        "SExpr_w_name": "(AND (JOIN music.genre.artists London Philharmonic Orchestra) (JOIN (R music.artist.genre) New Philharmonic Orchestra))",
        "SExpr": "(AND (JOIN music.genre.artists m.014hz6) (JOIN (R music.artist.genre) m.01540h))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07j4t43)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07j4t43 ns:olympics.olympic_event_competition.event ?x .\n?x ns:olympics.olympic_event.competitions ns:m.07msl4w .\n}\n",
        "TopicEntityMid": "m.07j4t43",
        "mid2name": {
            "ns:m.07j4t43": "Fencing at the 1984 Summer Olympics - Men's Épée, Individual",
            "ns:m.07msl4w": "Fencing at the 1960 Summer Olympics - Men's Épée, Individual"
        },
        "SExpr_w_name": "(AND (JOIN olympics.olympic_event.competitions Fencing at the 1960 Summer Olympics - Men's Épée, Individual) (JOIN (R olympics.olympic_event_competition.event) Fencing at the 1984 Summer Olympics - Men's Épée, Individual))",
        "SExpr": "(AND (JOIN olympics.olympic_event.competitions m.07msl4w) (JOIN (R olympics.olympic_event_competition.event) m.07j4t43))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qh0k_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qh0k_ ns:book.written_work.author ?x .\n?x ns:book.author.works_written ns:m.05qh98z .\n}\n",
        "TopicEntityMid": "m.05qh0k_",
        "mid2name": {
            "ns:m.05qh0k_": "Explorers in Hell",
            "ns:m.05qh98z": "Lord of the Isles"
        },
        "SExpr_w_name": "(AND (JOIN book.author.works_written Lord of the Isles) (JOIN (R book.written_work.author) Explorers in Hell))",
        "SExpr": "(AND (JOIN book.author.works_written m.05qh98z) (JOIN (R book.written_work.author) m.05qh0k_))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d5p0v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d5p0v ns:music.genre.artists ?x .\n?x ns:music.artist.genre ns:m.0215l8 .\n}\n",
        "TopicEntityMid": "m.0d5p0v",
        "mid2name": {
            "ns:m.0d5p0v": "Türkü",
            "ns:m.0215l8": "Anatolian rock"
        },
        "SExpr_w_name": "(AND (JOIN music.artist.genre Anatolian rock) (JOIN (R music.genre.artists) Türkü))",
        "SExpr": "(AND (JOIN music.artist.genre m.0215l8) (JOIN (R music.genre.artists) m.0d5p0v))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07g_g85)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07g_g85 ns:fictional_universe.fictional_character.character_created_by ?x .\n?x ns:book.author.works_written ns:m.02z729s .\n}\n",
        "TopicEntityMid": "m.07g_g85",
        "mid2name": {
            "ns:m.07g_g85": "John Dowling",
            "ns:m.02z729s": "Breaking Dawn"
        },
        "SExpr_w_name": "(AND (JOIN book.author.works_written Breaking Dawns) (JOIN (R fictional_universe.fictional_character.character_created_by) John Dowling))",
        "SExpr": "(AND (JOIN book.author.works_written m.02z729s) (JOIN (R fictional_universe.fictional_character.character_created_by) m.07g_g85))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hdrc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hdrc ns:location.location.containedby ?x .\n?x ns:biology.breed_origin.breeds_originating_here ns:m.02232 .\n}\n",
        "TopicEntityMid": "m.01hdrc",
        "mid2name": {
            "ns:m.01hdrc": "Rio Grande do Norte",
            "ns:m.02232": "Canchim"
        },
        "SExpr_w_name": "(AND (JOIN biology.breed_origin.breeds_originating_here Canchim) (JOIN (R location.location.containedby) Rio Grande do Norte))",
        "SExpr": "(AND (JOIN biology.breed_origin.breeds_originating_here m.02232) (JOIN (R location.location.containedby) m.01hdrc))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05k0rb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05k0rb ns:music.composition.composer ?x .\n?x ns:book.author.works_written ns:m.0clx1wn .\n}\n",
        "TopicEntityMid": "m.05k0rb",
        "mid2name": {
            "ns:m.05k0rb": "L'étoile",
            "ns:m.0clx1wn": "A neglected education"
        },
        "SExpr_w_name": "(AND (JOIN book.author.works_written A neglected educationn) (JOIN (R music.composition.composer) L'étoile))",
        "SExpr": "(AND (JOIN book.author.works_written m.0clx1wn) (JOIN (R music.composition.composer) m.05k0rb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03999ct)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03999ct ns:music.release.album ?x .\n?x ns:music.album.artist ns:m.03l72s .\n}\n",
        "TopicEntityMid": "m.03999ct",
        "mid2name": {
            "ns:m.03999ct": "Very Together",
            "ns:m.03l72s": "Eumir Deodato"
        },
        "SExpr_w_name": "(AND (JOIN music.album.artist Eumir Deodatos) (JOIN (R music.release.album) Very Together))",
        "SExpr": "(AND (JOIN music.album.artist m.03l72s) (JOIN (R music.release.album) m.03999ct))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n?x ns:fictional_universe.fictional_universe.organizations ns:m.08y019 .\n}\n",
        "TopicEntityMid": "m.0f1bg",
        "mid2name": {
            "ns:m.0f1bg": "Luke Skywalker",
            "ns:m.08y019": "Imperial Dungeoneers"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_universe.organizations Imperial Dungeoneers) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Luke Skywalker))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_universe.organizations m.08y019) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0f1bg))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0226r4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0226r4 ns:sports.sports_team.league ?x .\n?x ns:sports.sports_league_participation.league ns:m.01f_pk .\n}\n",
        "TopicEntityMid": "m.0226r4",
        "mid2name": {
            "ns:m.0226r4": "Kitchener Rangers",
            "ns:m.01f_pk": "Ontario Hockey League"
        },
        "SExpr_w_name": "(AND (JOIN sports.sports_league_participation.league Ontario Hockey League) (JOIN (R sports.sports_team.league) Kitchener Rangers))",
        "SExpr": "(AND (JOIN sports.sports_league_participation.league m.01f_pk) (JOIN (R sports.sports_team.league) m.0226r4))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04h9yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04h9yy ns:biology.organism_classification_rank.higher_rank ?x .\n?x ns:biology.organism_classification_rank.higher_rank ns:m.03bqsd1 .\n}\n",
        "TopicEntityMid": "m.04h9yy",
        "mid2name": {
            "ns:m.04h9yy": "Series",
            "ns:m.03bqsd1": "Section"
        },
        "SExpr_w_name": "(AND (JOIN biology.organism_classification_rank.higher_rank Section) (JOIN (R biology.organism_classification_rank.higher_rank) Series))",
        "SExpr": "(AND (JOIN biology.organism_classification_rank.higher_rank m.03bqsd1) (JOIN (R biology.organism_classification_rank.higher_rank) m.04h9yy))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010w4z0m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010w4z0m ns:music.composition.composer ?x .\n?x ns:book.author.works_written ns:m.06m8csd .\n}\n",
        "TopicEntityMid": "m.010w4z0m",
        "mid2name": {
            "ns:m.010w4z0m": "The Planets, op. 32: III. Mercury, the Winged Messenger",
            "ns:m.06m8csd": "The Lure"
        },
        "SExpr_w_name": "(AND (JOIN book.author.works_written The Lure) (JOIN (R music.composition.composer) The Planets, op. 32: III. Mercury, the Winged Messenger))",
        "SExpr": "(AND (JOIN book.author.works_written m.06m8csd) (JOIN (R music.composition.composer) m.010w4z0m))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03l_y5v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03l_y5v ns:business.shopping_center.owner ?x .\n?x ns:dataworld.information_source.data_operations ns:m.03mk8ln .\n}\n",
        "TopicEntityMid": "m.03l_y5v",
        "mid2name": {
            "ns:m.03l_y5v": "Factory Stores of America - Nebraska City",
            "ns:m.03mk8ln": "Added malls and retail locations"
        },
        "SExpr_w_name": "(AND (JOIN dataworld.information_source.data_operations Added malls and retail locationsn) (JOIN (R business.shopping_center.owner) Factory Stores of America - Nebraska City))",
        "SExpr": "(AND (JOIN dataworld.information_source.data_operations m.03mk8ln) (JOIN (R business.shopping_center.owner) m.03l_y5v))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09k61sb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09k61sb ns:comic_books.comic_book_genre.comic_book_series_in_this_genre ?x .\n?x ns:comic_books.comic_book_series.publisher ns:m.02hvd .\n}\n",
        "TopicEntityMid": "m.09k61sb",
        "mid2name": {
            "ns:m.09k61sb": "Superhero comics",
            "ns:m.02hvd": "DC Comics"
        },
        "SExpr_w_name": "(AND (JOIN comic_books.comic_book_series.publisher DC Comics) (JOIN (R comic_books.comic_book_genre.comic_book_series_in_this_genre) Superhero comics))",
        "SExpr": "(AND (JOIN comic_books.comic_book_series.publisher m.02hvd) (JOIN (R comic_books.comic_book_genre.comic_book_series_in_this_genre) m.09k61sb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015353)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015353 ns:organization.organization.headquarters ?x .\n?x ns:location.mailing_address.citytown ns:m.06cn5 .\n}\n",
        "TopicEntityMid": "m.015353",
        "mid2name": {
            "ns:m.015353": "Riga Autobus Factory",
            "ns:m.06cn5": "Riga"
        },
        "SExpr_w_name": "(AND (JOIN location.mailing_address.citytown Riga) (JOIN (R organization.organization.headquarters) Riga Autobus Factory))",
        "SExpr": "(AND (JOIN location.mailing_address.citytown m.06cn5) (JOIN (R organization.organization.headquarters) m.015353))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zdf6m8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zdf6m8 ns:award.award_nominated_work.award_nominations ?x .\n?x ns:award.award_nomination.award ns:m.0wkfxrs .\n}\n",
        "TopicEntityMid": "m.0zdf6m8",
        "mid2name": {
            "ns:m.0zdf6m8": "Faust",
            "ns:m.0wkfxrs": "Laurence Olivier Award for Outstanding New Opera Production of the Year"
        },
        "SExpr_w_name": "(AND (JOIN award.award_nomination.award Laurence Olivier Award for Outstanding New Opera Production of the Years) (JOIN (R award.award_nominated_work.award_nominations) Faust))",
        "SExpr": "(AND (JOIN award.award_nomination.award m.0wkfxrs) (JOIN (R award.award_nominated_work.award_nominations) m.0zdf6m8))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bszy9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bszy9 ns:soccer.football_match.held_at ?x .\n?x ns:olympics.olympic_venue.olympic_games_used_in ns:m.0blg2 .\n}\n",
        "TopicEntityMid": "m.0bszy9",
        "mid2name": {
            "ns:m.0bszy9": "1961 FA Cup Final",
            "ns:m.0blg2": "1948 Summer Olympics"
        },
        "SExpr_w_name": "(AND (JOIN olympics.olympic_venue.olympic_games_used_in 1948 Summer Olympics) (JOIN (R soccer.football_match.held_at) 1961 FA Cup Final))",
        "SExpr": "(AND (JOIN olympics.olympic_venue.olympic_games_used_in m.0blg2) (JOIN (R soccer.football_match.held_at) m.0bszy9))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05rqm1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05rqm1 ns:computer.software_genre.software_in_genre ?x .\n?x ns:computer.software.service_network ns:m.0cvkt2 .\n}\n",
        "TopicEntityMid": "m.05rqm1",
        "mid2name": {
            "ns:m.05rqm1": "Learning management system",
            "ns:m.0cvkt2": "eLML"
        },
        "SExpr_w_name": "(AND (JOIN computer.software.service_network eLML) (JOIN (R computer.software_genre.software_in_genre) Learning management system))",
        "SExpr": "(AND (JOIN computer.software.service_network m.0cvkt2) (JOIN (R computer.software_genre.software_in_genre) m.05rqm1))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_z42)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_z42 ns:tv.tv_program.languages ?x .\n?x ns:language.human_language.dialects ns:m.01bvf .\n}\n",
        "TopicEntityMid": "m.05_z42",
        "mid2name": {
            "ns:m.05_z42": "The Colbert Report",
            "ns:m.01bvf": "British English"
        },
        "SExpr_w_name": "(AND (JOIN language.human_language.dialects British English) (JOIN (R tv.tv_program.languages) The Colbert Report))",
        "SExpr": "(AND (JOIN language.human_language.dialects m.01bvf) (JOIN (R tv.tv_program.languages) m.05_z42))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k83gf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k83gf ns:base.morelaw.legal_right.laws_intended_to_secure_this_right ?x .\n?x ns:base.morelaw.law.legal_system ns:m.0kbyg .\n}\n",
        "TopicEntityMid": "m.02k83gf",
        "mid2name": {
            "ns:m.02k83gf": "Plant patent",
            "ns:m.0kbyg": "Law of the United States"
        },
        "SExpr_w_name": "(AND (JOIN base.morelaw.law.legal_system Law of the United States) (JOIN (R base.morelaw.legal_right.laws_intended_to_secure_this_right) Plant patent))",
        "SExpr": "(AND (JOIN base.morelaw.law.legal_system m.0kbyg) (JOIN (R base.morelaw.legal_right.laws_intended_to_secure_this_right) m.02k83gf))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q2lk_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q2lk_ ns:business.consumer_product.company ?x .\n?x ns:business.company_product_relationship.company ns:m.02ht8r .\n}\n",
        "TopicEntityMid": "m.03q2lk_",
        "mid2name": {
            "ns:m.03q2lk_": "Pentax Optio S60",
            "ns:m.02ht8r": "Pentax"
        },
        "SExpr_w_name": "(AND (JOIN business.company_product_relationship.company Pentax) (JOIN (R business.consumer_product.company) Pentax Optio S60))",
        "SExpr": "(AND (JOIN business.company_product_relationship.company m.02ht8r) (JOIN (R business.consumer_product.company) m.03q2lk_))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0283p6y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0283p6y ns:fictional_universe.fictional_character.has_possessed ?x .\n?x ns:music.composition.recordings ns:m.012xfy8 .\n}\n",
        "TopicEntityMid": "m.0283p6y",
        "mid2name": {
            "ns:m.0283p6y": "Ren Honjo",
            "ns:m.012xfy8": "Drugs"
        },
        "SExpr_w_name": "(AND (JOIN music.composition.recordings Drugs) (JOIN (R fictional_universe.fictional_character.has_possessed) Ren Honjo))",
        "SExpr": "(AND (JOIN music.composition.recordings m.012xfy8) (JOIN (R fictional_universe.fictional_character.has_possessed) m.0283p6y))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_9yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_9yy ns:book.book_subject.works ?x .\n?x ns:book.written_work.author ns:m.0gxtqhg .\n}\n",
        "TopicEntityMid": "m.02_9yy",
        "mid2name": {
            "ns:m.02_9yy": "Mobile browser",
            "ns:m.0gxtqhg": "Jean L. Graef"
        },
        "SExpr_w_name": "(AND (JOIN book.written_work.author Jean L. Graef) (JOIN (R book.book_subject.works) Mobile browser))",
        "SExpr": "(AND (JOIN book.written_work.author m.0gxtqhg) (JOIN (R book.book_subject.works) m.02_9yy))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010v2664)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010v2664 ns:music.featured_artist.recordings ?x .\n?x ns:music.recording.artist ns:m.043nrmy .\n}\n",
        "TopicEntityMid": "m.010v2664",
        "mid2name": {
            "ns:m.010v2664": "Charlise Rookwood",
            "ns:m.043nrmy": "Kid Crème"
        },
        "SExpr_w_name": "(AND (JOIN music.recording.artist Kid Crème) (JOIN (R music.featured_artist.recordings) Charlise Rookwood))",
        "SExpr": "(AND (JOIN music.recording.artist m.043nrmy) (JOIN (R music.featured_artist.recordings) m.010v2664))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037p3r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037p3r ns:astronomy.asteroid.member_of_asteroid_group ?x .\n?x ns:astronomy.asteroid_group.asteroid_group_members ns:m.0f5d_m .\n}\n",
        "TopicEntityMid": "m.037p3r",
        "mid2name": {
            "ns:m.037p3r": "145 Adeona",
            "ns:m.0f5d_m": "1971 Hagihara"
        },
        "SExpr_w_name": "(AND (JOIN astronomy.asteroid_group.asteroid_group_members 1971 Hagihara) (JOIN (R astronomy.asteroid.member_of_asteroid_group) 145 Adeona))",
        "SExpr": "(AND (JOIN astronomy.asteroid_group.asteroid_group_members m.0f5d_m) (JOIN (R astronomy.asteroid.member_of_asteroid_group) m.037p3r))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rkhg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rkhg ns:base.schemastaging.food_extra.narrower ?x .\n?x ns:business.consumer_product.brand ns:m.08w2vy .\n}\n",
        "TopicEntityMid": "m.02rkhg",
        "mid2name": {
            "ns:m.02rkhg": "Ground beef",
            "ns:m.08w2vy": "Morningstar Farms"
        },
        "SExpr_w_name": "(AND (JOIN business.consumer_product.brand Morningstar Farms) (JOIN (R base.schemastaging.food_extra.narrower) Ground beef))",
        "SExpr": "(AND (JOIN business.consumer_product.brand m.08w2vy) (JOIN (R base.schemastaging.food_extra.narrower) m.02rkhg))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0109rc1r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0109rc1r ns:time.holiday_category.holidays ?x .\n?x ns:base.schemastaging.holiday_extra.observance_rule ns:m.0_lxhn5 .\n}\n",
        "TopicEntityMid": "m.0109rc1r",
        "mid2name": {
            "ns:m.0109rc1r": "Public Holidays in Nigeria",
            "ns:m.0_lxhn5": "Nigerian Independence Day observance rule (Nigeria, 1961 - now)"
        },
        "SExpr_w_name": "(AND (JOIN base.schemastaging.holiday_extra.observance_rule Nigerian Independence Day observance rule (Nigeria, 1961 - now)) (JOIN (R time.holiday_category.holidays) Public Holidays in Nigeria))",
        "SExpr": "(AND (JOIN base.schemastaging.holiday_extra.observance_rule m.0_lxhn5) (JOIN (R time.holiday_category.holidays) m.0109rc1r))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r20gg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r20gg ns:internet.website.category ?x .\n?x ns:organization.organization_sector.organizations_in_this_sector ns:m.0130zrsh .\n}\n",
        "TopicEntityMid": "m.02r20gg",
        "mid2name": {
            "ns:m.02r20gg": "TheScreamOnline",
            "ns:m.0130zrsh": "MYSTICA.TV"
        },
        "SExpr_w_name": "(AND (JOIN organization.organization_sector.organizations_in_this_sector MYSTICA.TV) (JOIN (R internet.website.category) TheScreamOnline))",
        "SExpr": "(AND (JOIN organization.organization_sector.organizations_in_this_sector m.0130zrsh) (JOIN (R internet.website.category) m.02r20gg))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dzsff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dzsff ns:music.composition.composer ?x .\n?x ns:music.artist.track ns:m.012_hf2x .\n}\n",
        "TopicEntityMid": "m.04dzsff",
        "mid2name": {
            "ns:m.04dzsff": "Wide Open Spaces",
            "ns:m.012_hf2x": "But a Dream"
        },
        "SExpr_w_name": "(AND (JOIN music.artist.track But a Dream) (JOIN (R music.composition.composer) Wide Open Spaces))",
        "SExpr": "(AND (JOIN music.artist.track m.012_hf2x) (JOIN (R music.composition.composer) m.04dzsff))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hz6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hz6q ns:organization.organization.place_founded ?x .\n?x ns:biology.breed_origin.breeds_originating_here ns:m.02r4blp .\n}\n",
        "TopicEntityMid": "m.03hz6q",
        "mid2name": {
            "ns:m.03hz6q": "Moët & Chandon",
            "ns:m.02r4blp": "Braque d'Auvergne"
        },
        "SExpr_w_name": "(AND (JOIN biology.breed_origin.breeds_originating_here Braque d'Auvergne) (JOIN (R organization.organization.place_founded) Moët & Chandon))",
        "SExpr": "(AND (JOIN biology.breed_origin.breeds_originating_here m.02r4blp) (JOIN (R organization.organization.place_founded) m.03hz6q))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g4ptf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g4ptf_ ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n?x ns:fictional_universe.fictional_universe.organizations ns:m.0cgxmx3 .\n}\n",
        "TopicEntityMid": "m.0g4ptf_",
        "mid2name": {
            "ns:m.0g4ptf_": "Nightcloud",
            "ns:m.0cgxmx3": "ShadowClan"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_universe.organizations ShadowClan) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Nightcloud))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_universe.organizations m.0cgxmx3) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0g4ptf_))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jhm3w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jhm3w ns:meteorology.tropical_cyclone.category ?x .\n?x ns:meteorology.tropical_cyclone_category.meteorological_service ns:m.01lvb3 .\n}\n",
        "TopicEntityMid": "m.04jhm3w",
        "mid2name": {
            "ns:m.04jhm3w": "Hurricane Hanna",
            "ns:m.01lvb3": "National Hurricane Center"
        },
        "SExpr_w_name": "(AND (JOIN meteorology.tropical_cyclone_category.meteorological_service National Hurricane Center) (JOIN (R meteorology.tropical_cyclone.category) Hurricane Hanna))",
        "SExpr": "(AND (JOIN meteorology.tropical_cyclone_category.meteorological_service m.01lvb3) (JOIN (R meteorology.tropical_cyclone.category) m.04jhm3w))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.085x_c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.085x_c ns:organization.organization.acquired_by ?x .\n?x ns:business.acquisition.acquiring_company ns:m.01_tlg .\n}\n",
        "TopicEntityMid": "m.085x_c",
        "mid2name": {
            "ns:m.085x_c": "Von Roll",
            "ns:m.01_tlg": "Doppelmayr Garaventa Group"
        },
        "SExpr_w_name": "(AND (JOIN business.acquisition.acquiring_company Doppelmayr Garaventa Group) (JOIN (R organization.organization.acquired_by) Von Roll))",
        "SExpr": "(AND (JOIN business.acquisition.acquiring_company m.01_tlg) (JOIN (R organization.organization.acquired_by) m.085x_c))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f_58p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f_58p ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n?x ns:fictional_universe.fictional_universe.characters ns:m.0f_17x .\n}\n",
        "TopicEntityMid": "m.0f_58p",
        "mid2name": {
            "ns:m.0f_58p": "The Doctor",
            "ns:m.0f_17x": "Heinkel Wolfe and Yumie Takagi"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_universe.characters Heinkel Wolfe and Yumie Takagi) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) The Doctor))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_universe.characters m.0f_17x) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0f_58p))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rk0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rk0 ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n?x ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ns:m.0h_01p8 .\n}\n",
        "TopicEntityMid": "m.03rk0",
        "mid2name": {
            "ns:m.03rk0": "India",
            "ns:m.0h_01p8": "Heroes"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_character.appears_in_these_fictional_universes Heroes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) India))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_character.appears_in_these_fictional_universes m.0h_01p8) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.03rk0))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02sr_z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02sr_z ns:music.artist.genre ?x .\n?x ns:music.genre.artists ns:m.011z3g .\n}\n",
        "TopicEntityMid": "m.02sr_z",
        "mid2name": {
            "ns:m.02sr_z": "Glenn Miller Orchestra",
            "ns:m.011z3g": "Outkast"
        },
        "SExpr_w_name": "(AND (JOIN music.genre.artists Outkast) (JOIN (R music.artist.genre) Glenn Miller Orchestra))",
        "SExpr": "(AND (JOIN music.genre.artists m.011z3g) (JOIN (R music.artist.genre) m.02sr_z))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ck96kz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ck96kz ns:military.military_unit.servicemembers ?x .\n?x ns:military.military_service.military_force ns:m.0chtrwn .\n}\n",
        "TopicEntityMid": "m.0ck96kz",
        "mid2name": {
            "ns:m.0ck96kz": "Sacred Band of Thebes",
            "ns:m.0chtrwn": "Ancient Theban Army"
        },
        "SExpr_w_name": "(AND (JOIN military.military_service.military_force Ancient Theban Armyn) (JOIN (R military.military_unit.servicemembers) Sacred Band of Thebes))",
        "SExpr": "(AND (JOIN military.military_service.military_force m.0chtrwn) (JOIN (R military.military_unit.servicemembers) m.0ck96kz))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033nzk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033nzk ns:sports.sports_team.league ?x .\n?x ns:sports.sports_league_participation.league ns:m.02zm3 .\n}\n",
        "TopicEntityMid": "m.033nzk",
        "mid2name": {
            "ns:m.033nzk": "Chile national football team",
            "ns:m.02zm3": "Fédération Internationale de Football Association"
        },
        "SExpr_w_name": "(AND (JOIN sports.sports_league_participation.league Fédération Internationale de Football Association) (JOIN (R sports.sports_team.league) Chile national football team))",
        "SExpr": "(AND (JOIN sports.sports_league_participation.league m.02zm3) (JOIN (R sports.sports_team.league) m.033nzk))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbx4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbx4 ns:medicine.medical_trial.references ?x .\n?x ns:book.written_work.author ns:m.04mkm_w .\n}\n",
        "TopicEntityMid": "m.03zbbx4",
        "mid2name": {
            "ns:m.03zbbx4": "A Phase I Evaluation of Azidothymidine (AZT) in Children with Acquired Immune Deficiency Syndrome (AIDS) or AIDS Related Complex (ARC)",
            "ns:m.04mkm_w": "GJ Gorse"
        },
        "SExpr_w_name": "(AND (JOIN book.written_work.author GJ Gorse) (JOIN (R medicine.medical_trial.references) A Phase I Evaluation of Azidothymidine (AZT) in Children with Acquired Immune Deficiency Syndrome (AIDS) or AIDS Related Complex (ARC)))",
        "SExpr": "(AND (JOIN book.written_work.author m.04mkm_w) (JOIN (R medicine.medical_trial.references) m.03zbbx4))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dljykq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dljykq ns:government.government_office_or_title.office_holders ?x .\n?x ns:government.government_position_held.governmental_body ns:m.05pdh2z .\n}\n",
        "TopicEntityMid": "m.0dljykq",
        "mid2name": {
            "ns:m.0dljykq": "Lehendakari",
            "ns:m.05pdh2z": "Basque Government"
        },
        "SExpr_w_name": "(AND (JOIN government.government_position_held.governmental_body Basque Government) (JOIN (R government.government_office_or_title.office_holders) Lehendakari))",
        "SExpr": "(AND (JOIN government.government_position_held.governmental_body m.05pdh2z) (JOIN (R government.government_office_or_title.office_holders) m.0dljykq))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010lw4c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010lw4c ns:music.recording.artist ?x .\n?x ns:music.artist.genre ns:m.03_d0 .\n}\n",
        "TopicEntityMid": "m.010lw4c",
        "mid2name": {
            "ns:m.010lw4c": "Fina - Departure",
            "ns:m.03_d0": "Jazz"
        },
        "SExpr_w_name": "(AND (JOIN music.artist.genre Jazz) (JOIN (R music.recording.artist) Fina - Departure))",
        "SExpr": "(AND (JOIN music.artist.genre m.03_d0) (JOIN (R music.recording.artist) m.010lw4c))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mm73j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mm73j ns:sports.sports_team.sport ?x .\n?x ns:award.hall_of_fame_discipline.halls_of_fame ns:m.01nzmp .\n}\n",
        "TopicEntityMid": "m.06mm73j",
        "mid2name": {
            "ns:m.06mm73j": "Racine Normals",
            "ns:m.01nzmp": "Pro Football Hall of Fame"
        },
        "SExpr_w_name": "(AND (JOIN award.hall_of_fame_discipline.halls_of_fame Pro Football Hall of Fame) (JOIN (R sports.sports_team.sport) Racine Normals))",
        "SExpr": "(AND (JOIN award.hall_of_fame_discipline.halls_of_fame m.01nzmp) (JOIN (R sports.sports_team.sport) m.06mm73j))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dc60vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dc60vr ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n?x ns:fictional_universe.fictional_character.has_possessed ns:m.0c1p3dl .\n}\n",
        "TopicEntityMid": "m.0dc60vr",
        "mid2name": {
            "ns:m.0dc60vr": "Lemuria",
            "ns:m.0c1p3dl": "dart tube from beneath the sea"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_character.has_possessed dart tube from beneath the sea) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Lemuria))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_character.has_possessed m.0c1p3dl) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.0dc60vr))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gnzgr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gnzgr ns:location.location.containedby ?x .\n?x ns:biology.breed_origin.breeds_originating_here ns:m.01p5rd .\n}\n",
        "TopicEntityMid": "m.04gnzgr",
        "mid2name": {
            "ns:m.04gnzgr": "Geneva Mosque",
            "ns:m.01p5rd": "Bernese Mountain Dog"
        },
        "SExpr_w_name": "(AND (JOIN biology.breed_origin.breeds_originating_here Bernese Mountain Dog) (JOIN (R location.location.containedby) Geneva Mosque))",
        "SExpr": "(AND (JOIN biology.breed_origin.breeds_originating_here m.01p5rd) (JOIN (R location.location.containedby) m.04gnzgr))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y6fnf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y6fnf_ ns:fictional_universe.fictional_object.featured_in_fictional_universe ?x .\n?x ns:fictional_universe.fictional_universe.organizations ns:m.0_yf9vx .\n}\n",
        "TopicEntityMid": "m.0y6fnf_",
        "mid2name": {
            "ns:m.0y6fnf_": "Superman suit",
            "ns:m.0_yf9vx": "Justice League of Earth"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_universe.organizations Justice League of Earth) (JOIN (R fictional_universe.fictional_object.featured_in_fictional_universe) Superman suit))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_universe.organizations m.0_yf9vx) (JOIN (R fictional_universe.fictional_object.featured_in_fictional_universe) m.0y6fnf_))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k2h3dx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k2h3dx ns:film.film.country ?x .\n?x ns:fictional_universe.fictional_setting.characters_that_have_lived_here ns:m.03cv_s6 .\n}\n",
        "TopicEntityMid": "m.0k2h3dx",
        "mid2name": {
            "ns:m.0k2h3dx": "Mon Bole Priya Priya",
            "ns:m.03cv_s6": "Molly Walker"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_setting.characters_that_have_lived_here Molly Walker) (JOIN (R film.film.country) Mon Bole Priya Priya))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_setting.characters_that_have_lived_here m.03cv_s6) (JOIN (R film.film.country) m.0k2h3dx))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jvpb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jvpb ns:internet.protocol.api ?x .\n?x ns:internet.api.site ns:m.0bx7jv8 .\n}\n",
        "TopicEntityMid": "m.02jvpb",
        "mid2name": {
            "ns:m.02jvpb": "Atom",
            "ns:m.0bx7jv8": "Hi5"
        },
        "SExpr_w_name": "(AND (JOIN internet.api.site Hi5) (JOIN (R internet.protocol.api) Atom))",
        "SExpr": "(AND (JOIN internet.api.site m.0bx7jv8) (JOIN (R internet.protocol.api) m.02jvpb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07chfxf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07chfxf ns:tv.tv_program.languages ?x .\n?x ns:language.human_language.dialects ns:m.02w0r .\n}\n",
        "TopicEntityMid": "m.07chfxf",
        "mid2name": {
            "ns:m.07chfxf": "De Wereld Draait Door",
            "ns:m.02w0r": "Frisian languages"
        },
        "SExpr_w_name": "(AND (JOIN language.human_language.dialects Frisian languages) (JOIN (R tv.tv_program.languages) De Wereld Draait Door))",
        "SExpr": "(AND (JOIN language.human_language.dialects m.02w0r) (JOIN (R tv.tv_program.languages) m.07chfxf))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pmfw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pmfw ns:base.filmcameras.camera_manufacturer.cameras_manufactured ?x .\n?x ns:business.consumer_product.category ns:m.0dv5r .\n}\n",
        "TopicEntityMid": "m.03pmfw",
        "mid2name": {
            "ns:m.03pmfw": "Nikon Corporation",
            "ns:m.0dv5r": "Camera"
        },
        "SExpr_w_name": "(AND (JOIN business.consumer_product.category Camera) (JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) Nikon Corporation))",
        "SExpr": "(AND (JOIN business.consumer_product.category m.0dv5r) (JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) m.03pmfw))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_rdqnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_rdqnz ns:business.consumer_product.company ?x .\n?x ns:business.company_product_relationship.company ns:m.03c7tvs .\n}\n",
        "TopicEntityMid": "m.0_rdqnz",
        "mid2name": {
            "ns:m.0_rdqnz": "Bon Vœux 750ml",
            "ns:m.03c7tvs": "Dupont Brewery"
        },
        "SExpr_w_name": "(AND (JOIN business.company_product_relationship.company Dupont Brewerys) (JOIN (R business.consumer_product.company) Bon Vœux 750ml))",
        "SExpr": "(AND (JOIN business.company_product_relationship.company m.03c7tvs) (JOIN (R business.consumer_product.company) m.0_rdqnz))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c5x4cb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c5x4cb ns:fictional_universe.fictional_organization.fictional_organization_founder ?x .\n?x ns:fictional_universe.fictional_character.has_possessed ns:m.0cnspfq .\n}\n",
        "TopicEntityMid": "m.0c5x4cb",
        "mid2name": {
            "ns:m.0c5x4cb": "Mageguild",
            "ns:m.0cnspfq": "Tysian Mageguild"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_character.has_possessed Tysian Mageguild) (JOIN (R fictional_universe.fictional_organization.fictional_organization_founder) Mageguild))",
        "SExpr": "(AND (JOIN fictional_universe.fictional_character.has_possessed m.0cnspfq) (JOIN (R fictional_universe.fictional_organization.fictional_organization_founder) m.0c5x4cb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026crj2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026crj2 ns:book.book_subject.works ?x .\n?x ns:book.written_work.author ns:m.05xv5vd .\n}\n",
        "TopicEntityMid": "m.026crj2",
        "mid2name": {
            "ns:m.026crj2": "Construction of the World Trade Center",
            "ns:m.05xv5vd": "Angus K. Gillespie"
        },
        "SExpr_w_name": "(AND (JOIN book.written_work.author Angus K. Gillespie) (JOIN (R book.book_subject.works) Construction of the World Trade Center))",
        "SExpr": "(AND (JOIN book.written_work.author m.05xv5vd) (JOIN (R book.book_subject.works) m.026crj2))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bltb7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bltb7 ns:fictional_universe.fictional_character.character_created_by ?x .\n?x ns:comic_books.comic_book_inker.comic_covers_inked ns:m.06hyys .\n}\n",
        "TopicEntityMid": "m.0bltb7",
        "mid2name": {
            "ns:m.0bltb7": "Martha Washington",
            "ns:m.06hyys": "Ronin"
        },
        "SExpr_w_name": "(AND (JOIN comic_books.comic_book_inker.comic_covers_inked Ronins) (JOIN (R fictional_universe.fictional_character.character_created_by) Martha Washington))",
        "SExpr": "(AND (JOIN comic_books.comic_book_inker.comic_covers_inked m.06hyys) (JOIN (R fictional_universe.fictional_character.character_created_by) m.0bltb7))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06m_5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06m_5 ns:biology.breed_origin.breeds_originating_here ?x .\n?x ns:biology.organism_classification.higher_classification ns:m.0bt9lr .\n}\n",
        "TopicEntityMid": "m.06m_5",
        "mid2name": {
            "ns:m.06m_5": "Sri Lanka",
            "ns:m.0bt9lr": "Dog"
        },
        "SExpr_w_name": "(AND (JOIN biology.organism_classification.higher_classification Dog) (JOIN (R biology.breed_origin.breeds_originating_here) Sri Lanka))",
        "SExpr": "(AND (JOIN biology.organism_classification.higher_classification m.0bt9lr) (JOIN (R biology.breed_origin.breeds_originating_here) m.06m_5))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j2y4sq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j2y4sq ns:book.book_subject.works ?x .\n?x ns:book.written_work.author ns:m.0cmy_hg .\n}\n",
        "TopicEntityMid": "m.0j2y4sq",
        "mid2name": {
            "ns:m.0j2y4sq": "Self-Aligned Vertical Combdrive Actuators",
            "ns:m.0cmy_hg": "Olav Solgaard"
        },
        "SExpr_w_name": "(AND (JOIN book.written_work.author Olav Solgaard) (JOIN (R book.book_subject.works) Self-Aligned Vertical Combdrive Actuators))",
        "SExpr": "(AND (JOIN book.written_work.author m.0cmy_hg) (JOIN (R book.book_subject.works) m.0j2y4sq))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027vyw9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027vyw9 ns:government.government_agency.jurisdiction ?x .\n?x ns:biology.breed_origin.breeds_originating_here ns:m.027dd3t .\n}\n",
        "TopicEntityMid": "m.027vyw9",
        "mid2name": {
            "ns:m.027vyw9": "Norwegian Railway Authority",
            "ns:m.027dd3t": "Black Norwegian Elkhound"
        },
        "SExpr_w_name": "(AND (JOIN biology.breed_origin.breeds_originating_here Black Norwegian Elkhound) (JOIN (R government.government_agency.jurisdiction) Norwegian Railway Authority))",
        "SExpr": "(AND (JOIN biology.breed_origin.breeds_originating_here m.027dd3t) (JOIN (R government.government_agency.jurisdiction) m.027vyw9))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cz3m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cz3m ns:meteorology.tropical_cyclone.category ?x .\n?x ns:meteorology.tropical_cyclone_category.Beaufort_scale ns:m.01xs1n6 .\n}\n",
        "TopicEntityMid": "m.02cz3m",
        "mid2name": {
            "ns:m.02cz3m": "Hurricane Hazel",
            "ns:m.01xs1n6": "Beaufort force 12"
        },
        "SExpr_w_name": "(AND (JOIN meteorology.tropical_cyclone_category.Beaufort_scale Beaufort force 12) (JOIN (R meteorology.tropical_cyclone.category) Hurricane Hazel))",
        "SExpr": "(AND (JOIN meteorology.tropical_cyclone_category.Beaufort_scale m.01xs1n6) (JOIN (R meteorology.tropical_cyclone.category) m.02cz3m))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099l22)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099l22 ns:location.location.containedby ?x .\n?x ns:olympics.olympic_host_city.olympics_hosted ns:m.0l98s .\n}\n",
        "TopicEntityMid": "m.099l22",
        "mid2name": {
            "ns:m.099l22": "Munich National Theatre",
            "ns:m.0l98s": "1972 Summer Olympics"
        },
        "SExpr_w_name": "(AND (JOIN olympics.olympic_host_city.olympics_hosted 1972 Summer Olympicss) (JOIN (R location.location.containedby) Munich National Theatre))",
        "SExpr": "(AND (JOIN olympics.olympic_host_city.olympics_hosted m.0l98s) (JOIN (R location.location.containedby) m.099l22))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hz3hb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hz3hb ns:government.legislative_committee.legislature ?x .\n?x ns:government.governmental_body.body_this_is_a_component_of ns:m.02727v .\n}\n",
        "TopicEntityMid": "m.04hz3hb",
        "mid2name": {
            "ns:m.04hz3hb": "Vermont Committee on Judiciary",
            "ns:m.02727v": "Vermont General Assembly"
        },
        "SExpr_w_name": "(AND (JOIN government.governmental_body.body_this_is_a_component_of Vermont General Assembly) (JOIN (R government.legislative_committee.legislature) Vermont Committee on Judiciary))",
        "SExpr": "(AND (JOIN government.governmental_body.body_this_is_a_component_of m.02727v) (JOIN (R government.legislative_committee.legislature) m.04hz3hb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03z5vb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03z5vb ns:medicine.medical_trial_sponsor.trials_sponsored ?x .\n?x ns:medicine.medical_trial.references ns:m.040fvqh .\n}\n",
        "TopicEntityMid": "m.03z5vb",
        "mid2name": {
            "ns:m.03z5vb": "National Institute of Allergy and Infectious Diseases",
            "ns:m.040fvqh": "The safety and immunogenicity of a human immunodeficiency virus type 1 (HIV-1) recombinant gp160 candidate vaccine in humans. NIAID AIDS Vaccine Clinical Trials Network."
        },
        "SExpr_w_name": "(AND (JOIN medicine.medical_trial.references The safety and immunogenicity of a human immunodeficiency virus type 1 (HIV-1) recombinant gp160 candidate vaccine in humans. NIAID AIDS Vaccine Clinical Trials Network.) (JOIN (R medicine.medical_trial_sponsor.trials_sponsored) National Institute of Allergy and Infectious Diseases))",
        "SExpr": "(AND (JOIN medicine.medical_trial.references m.040fvqh) (JOIN (R medicine.medical_trial_sponsor.trials_sponsored) m.03z5vb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01v8jm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01v8jm ns:astronomy.celestial_object.category ?x .\n?x ns:astronomy.celestial_object_category.objects ns:m.03vv7h .\n}\n",
        "TopicEntityMid": "m.01v8jm",
        "mid2name": {
            "ns:m.01v8jm": "Pinwheel Galaxy",
            "ns:m.03vv7h": "Messier 96"
        },
        "SExpr_w_name": "(AND (JOIN astronomy.celestial_object_category.objects Messier 96) (JOIN (R astronomy.celestial_object.category) Pinwheel Galaxy))",
        "SExpr": "(AND (JOIN astronomy.celestial_object_category.objects m.03vv7h) (JOIN (R astronomy.celestial_object.category) m.01v8jm))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hwvzl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hwvzl ns:award.award_nominated_work.award_nominations ?x .\n?x ns:award.award_nomination.award ns:m.0x2n0hl .\n}\n",
        "TopicEntityMid": "m.04hwvzl",
        "mid2name": {
            "ns:m.04hwvzl": "Merry Edwards Winery",
            "ns:m.0x2n0hl": "James Beard Award for Outstanding Wine, Beer, or Spirits Professional"
        },
        "SExpr_w_name": "(AND (JOIN award.award_nomination.award James Beard Award for Outstanding Wine, Beer, or Spirits Professional) (JOIN (R award.award_nominated_work.award_nominations) Merry Edwards Winery))",
        "SExpr": "(AND (JOIN award.award_nomination.award m.0x2n0hl) (JOIN (R award.award_nominated_work.award_nominations) m.04hwvzl))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023k6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023k6q ns:fictional_universe.fictional_organization.members ?x .\n?x ns:comic_books.comic_book_character.created_by ns:m.0kbg6 .\n}\n",
        "TopicEntityMid": "m.023k6q",
        "mid2name": {
            "ns:m.023k6q": "Hellfire Club",
            "ns:m.0kbg6": "Chris Claremont"
        },
        "SExpr_w_name": "(AND (JOIN comic_books.comic_book_character.created_by Chris Claremont) (JOIN (R fictional_universe.fictional_organization.members) Hellfire Club))",
        "SExpr": "(AND (JOIN comic_books.comic_book_character.created_by m.0kbg6) (JOIN (R fictional_universe.fictional_organization.members) m.023k6q))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06m7y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06m7y0 ns:comic_books.comic_book_story_arc.spanning ?x .\n?x ns:fictional_universe.work_of_fiction.setting ns:m.03fdg .\n}\n",
        "TopicEntityMid": "m.06m7y0",
        "mid2name": {
            "ns:m.06m7y0": "No Man's Land",
            "ns:m.03fdg": "Gotham City"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.work_of_fiction.setting Gotham City) (JOIN (R comic_books.comic_book_story_arc.spanning) No Man's Land))",
        "SExpr": "(AND (JOIN fictional_universe.work_of_fiction.setting m.03fdg) (JOIN (R comic_books.comic_book_story_arc.spanning) m.06m7y0))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k3nk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k3nk ns:geography.mountain_range.passes ?x .\n?x ns:location.location.containedby ns:m.0l36s .\n}\n",
        "TopicEntityMid": "m.0k3nk",
        "mid2name": {
            "ns:m.0k3nk": "Cascade Range",
            "ns:m.0l36s": "Tehama County"
        },
        "SExpr_w_name": "(AND (JOIN location.location.containedby Tehama Countys) (JOIN (R geography.mountain_range.passes) Cascade Range))",
        "SExpr": "(AND (JOIN location.location.containedby m.0l36s) (JOIN (R geography.mountain_range.passes) m.0k3nk))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqs1y5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqs1y5 ns:medicine.drug_formulation.active_ingredient_moieties ?x .\n?x ns:medicine.medical_treatment.used_to_treat ns:m.02vrr .\n}\n",
        "TopicEntityMid": "m.0hqs1y5",
        "mid2name": {
            "ns:m.0hqs1y5": "Phenobarbital 15 tablet",
            "ns:m.02vrr": "Epilepsy"
        },
        "SExpr_w_name": "(AND (JOIN medicine.medical_treatment.used_to_treat Epilepsy) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) Phenobarbital 15 tablet))",
        "SExpr": "(AND (JOIN medicine.medical_treatment.used_to_treat m.02vrr) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqs1y5))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mk8pq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mk8pq ns:business.consumer_product.company ?x .\n?x ns:business.company_product_relationship.company ns:m.03mk6c1 .\n}\n",
        "TopicEntityMid": "m.03mk8pq",
        "mid2name": {
            "ns:m.03mk8pq": "2005 Meeker \"Winemaker's Reserve\" Dry Creek Valley Zinfandel",
            "ns:m.03mk6c1": "Meeker Vineyard"
        },
        "SExpr_w_name": "(AND (JOIN business.company_product_relationship.company Meeker Vineyard) (JOIN (R business.consumer_product.company) 2005 Meeker \"Winemaker's Reserve\" Dry Creek Valley Zinfandel))",
        "SExpr": "(AND (JOIN business.company_product_relationship.company m.03mk6c1) (JOIN (R business.consumer_product.company) m.03mk8pq))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09jwmvt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09jwmvt ns:organization.organization_committee.committee_of ?x .\n?x ns:organization.organization.committees ns:m.09jwmp2 .\n}\n",
        "TopicEntityMid": "m.09jwmvt",
        "mid2name": {
            "ns:m.09jwmvt": "Visual Artists Sector",
            "ns:m.09jwmp2": "Youth Sector"
        },
        "SExpr_w_name": "(AND (JOIN organization.organization.committees Youth Sector) (JOIN (R organization.organization_committee.committee_of) Visual Artists Sector))",
        "SExpr": "(AND (JOIN organization.organization.committees m.09jwmp2) (JOIN (R organization.organization_committee.committee_of) m.09jwmvt))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x0jzcb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x0jzcb ns:time.event.included_in_event ?x .\n?x ns:time.event.included_in_event ns:m.03mfdg .\n}\n",
        "TopicEntityMid": "m.0x0jzcb",
        "mid2name": {
            "ns:m.0x0jzcb": "Speed skating at the 2014 Winter Olympics - Men's 1500 metres",
            "ns:m.03mfdg": "2014 Winter Olympics"
        },
        "SExpr_w_name": "(AND (JOIN time.event.included_in_event 2014 Winter Olympics) (JOIN (R time.event.included_in_event) Speed skating at the 2014 Winter Olympics - Men's 1500 metres))",
        "SExpr": "(AND (JOIN time.event.included_in_event m.03mfdg) (JOIN (R time.event.included_in_event) m.0x0jzcb))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05040d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05040d ns:book.publishing_company.books_published ?x .\n?x ns:book.book_edition.book ns:m.0j3hb3k .\n}\n",
        "TopicEntityMid": "m.05040d",
        "mid2name": {
            "ns:m.05040d": "Helix",
            "ns:m.0j3hb3k": "The dome: ground zero"
        },
        "SExpr_w_name": "(AND (JOIN book.book_edition.book The dome: ground zero) (JOIN (R book.publishing_company.books_published) Helix))",
        "SExpr": "(AND (JOIN book.book_edition.book m.0j3hb3k) (JOIN (R book.publishing_company.books_published) m.05040d))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01k8mzv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01k8mzv ns:music.artist.genre ?x .\n?x ns:music.genre.artists ns:m.012lfr .\n}\n",
        "TopicEntityMid": "m.01k8mzv",
        "mid2name": {
            "ns:m.01k8mzv": "Aaron Tippin",
            "ns:m.012lfr": "Creedence Clearwater Revival"
        },
        "SExpr_w_name": "(AND (JOIN music.genre.artists Creedence Clearwater Revival) (JOIN (R music.artist.genre) Aaron Tippin))",
        "SExpr": "(AND (JOIN music.genre.artists m.012lfr) (JOIN (R music.artist.genre) m.01k8mzv))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bb9tr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bb9tr ns:government.government_office_or_title.office_holders ?x .\n?x ns:government.government_position_held.governmental_body ns:m.0czb3d4 .\n}\n",
        "TopicEntityMid": "m.0bb9tr",
        "mid2name": {
            "ns:m.0bb9tr": "Minister for Foreign Affairs",
            "ns:m.0czb3d4": "Ministry of Foreign Affairs"
        },
        "SExpr_w_name": "(AND (JOIN government.government_position_held.governmental_body Ministry of Foreign Affairs) (JOIN (R government.government_office_or_title.office_holders) Minister for Foreign Affairs))",
        "SExpr": "(AND (JOIN government.government_position_held.governmental_body m.0czb3d4) (JOIN (R government.government_office_or_title.office_holders) m.0bb9tr))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03b8l03)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03b8l03 ns:music.release.track_list ?x .\n?x ns:music.release_track.recording ns:m.01dsj8g .\n}\n",
        "TopicEntityMid": "m.03b8l03",
        "mid2name": {
            "ns:m.03b8l03": "2006-06-06: Berlin, Germany (disc 2)",
            "ns:m.01dsj8g": "Seek & Destroy"
        },
        "SExpr_w_name": "(AND (JOIN music.release_track.recording Seek & Destroy) (JOIN (R music.release.track_list) 2006-06-06: Berlin, Germany (disc 2)))",
        "SExpr": "(AND (JOIN music.release_track.recording m.01dsj8g) (JOIN (R music.release.track_list) m.03b8l03))"
    }
]