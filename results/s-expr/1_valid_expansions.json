[{"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0115t8nf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0115t8nf ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0115t8nf", "mid2name": {"ns:m.0115t8nf": "To The Slaughter"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) To The Slaughter))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0115t8nf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pd6g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pd6g ns:government.governmental_body.body_this_is_a_component_of ?y .\n?y ns:base.ontologies.ontology_instance.equivalent_instances ?x .\n}\n", "TopicEntityMid": "m.03pd6g", "mid2name": {"ns:m.03pd6g": "United States District Court for the District of Alaska"}, "SExpr_w_name": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R government.governmental_body.body_this_is_a_component_of) United States District Court for the District of Alaska))", "SExpr": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R government.governmental_body.body_this_is_a_component_of) m.03pd6g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ghcz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ghcz ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02ghcz", "mid2name": {"ns:m.02ghcz": "Jetstar Airways"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Jetstar Airways))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02ghcz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.040n63)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.040n63 ns:wine.wine_color.wines ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.040n63", "mid2name": {"ns:m.040n63": "Ros\u00e9"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R wine.wine_color.wines) Ros\u00e9))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R wine.wine_color.wines) m.040n63))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c2sx_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c2sx_ ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.05c2sx_", "mid2name": {"ns:m.05c2sx_": "St. George's College, Cairo"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) St. George's College, Cairo))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.05c2sx_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hj3lhd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hj3lhd ns:music.music_video_subject.subject_in_these_music_videos ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0hj3lhd", "mid2name": {"ns:m.0hj3lhd": "Creativity"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R music.music_video_subject.subject_in_these_music_videos) Creativity))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R music.music_video_subject.subject_in_these_music_videos) m.0hj3lhd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06xg1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06xg1 ns:religion.religion.holidays ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.06xg1", "mid2name": {"ns:m.06xg1": "Samaritanism"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R religion.religion.holidays) Samaritanism))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R religion.religion.holidays) m.06xg1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09nk2n0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09nk2n0 ns:tv.tv_character.appeared_in_tv_episodes ?y .\n?y ns:tv.tv_guest_role.actor ?x .\n}\n", "TopicEntityMid": "m.09nk2n0", "mid2name": {"ns:m.09nk2n0": "Harry Zakovitch"}, "SExpr_w_name": "(JOIN (R tv.tv_guest_role.actor) (JOIN (R tv.tv_character.appeared_in_tv_episodes) Harry Zakovitch))", "SExpr": "(JOIN (R tv.tv_guest_role.actor) (JOIN (R tv.tv_character.appeared_in_tv_episodes) m.09nk2n0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03j6c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03j6c ns:religion.religion.places_of_worship_historical ?y .\n?y ns:religion.place_of_worship_historical_use.place_of_worship ?x .\n}\n", "TopicEntityMid": "m.03j6c", "mid2name": {"ns:m.03j6c": "Hinduism"}, "SExpr_w_name": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) Hinduism))", "SExpr": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) m.03j6c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026lvy7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026lvy7 ns:computer.software.developer ?y .\n?y ns:computer.software_developer.software ?x .\n}\n", "TopicEntityMid": "m.026lvy7", "mid2name": {"ns:m.026lvy7": "Zotero"}, "SExpr_w_name": "(JOIN (R computer.software_developer.software) (JOIN (R computer.software.developer) Zotero))", "SExpr": "(JOIN (R computer.software_developer.software) (JOIN (R computer.software.developer) m.026lvy7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c_j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c_j ns:time.day_of_year.calendar_system ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05c_j", "mid2name": {"ns:m.05c_j": "November 1"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.day_of_year.calendar_system) November 1))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.day_of_year.calendar_system) m.05c_j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fgl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fgl ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.05fgl", "mid2name": {"ns:m.05fgl": "Niklaus Wirth"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Niklaus Wirth))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.05fgl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hsn78)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hsn78 ns:internet.top_level_domain_status.domains ?y .\n?y ns:internet.top_level_domain.registry ?x .\n}\n", "TopicEntityMid": "m.02hsn78", "mid2name": {"ns:m.02hsn78": "In root but not taking registrations"}, "SExpr_w_name": "(JOIN (R internet.top_level_domain.registry) (JOIN (R internet.top_level_domain_status.domains) In root but not taking registrations))", "SExpr": "(JOIN (R internet.top_level_domain.registry) (JOIN (R internet.top_level_domain_status.domains) m.02hsn78))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vltsv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vltsv ns:law.constitutional_amendment.proposed_by ?y .\n?y ns:base.inaugurations.inauguration_speaker.inauguration ?x .\n}\n", "TopicEntityMid": "m.02vltsv", "mid2name": {"ns:m.02vltsv": "Congressional Apportionment Amendment"}, "SExpr_w_name": "(JOIN (R base.inaugurations.inauguration_speaker.inauguration) (JOIN (R law.constitutional_amendment.proposed_by) Congressional Apportionment Amendment))", "SExpr": "(JOIN (R base.inaugurations.inauguration_speaker.inauguration) (JOIN (R law.constitutional_amendment.proposed_by) m.02vltsv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qd4t3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qd4t3 ns:music.composition.composer ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.02qd4t3", "mid2name": {"ns:m.02qd4t3": "Real Girl"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) Real Girl))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) m.02qd4t3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gbcf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gbcf ns:music.genre.artists ?y .\n?y ns:base.database.database_host.database_s ?x .\n}\n", "TopicEntityMid": "m.01gbcf", "mid2name": {"ns:m.01gbcf": "Math rock"}, "SExpr_w_name": "(JOIN (R base.database.database_host.database_s) (JOIN (R music.genre.artists) Math rock))", "SExpr": "(JOIN (R base.database.database_host.database_s) (JOIN (R music.genre.artists) m.01gbcf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bl47)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bl47 ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.01bl47", "mid2name": {"ns:m.01bl47": "Wolfgang Tillmans"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Wolfgang Tillmans))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.01bl47))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ghq7r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ghq7r ns:business.business_operation.industry ?y .\n?y ns:base.descriptive_names.names.descriptive_name ?x .\n}\n", "TopicEntityMid": "m.03ghq7r", "mid2name": {"ns:m.03ghq7r": "Harvest Moon Estate and Winery"}, "SExpr_w_name": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R business.business_operation.industry) Harvest Moon Estate and Winery))", "SExpr": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R business.business_operation.industry) m.03ghq7r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cxx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cxx ns:book.written_work.author ?y .\n?y ns:base.fictionaluniverse.fictional_spacecraft_designer.spacecraft_classes_designed ?x .\n}\n", "TopicEntityMid": "m.02cxx", "mid2name": {"ns:m.02cxx": "Dune Messiah"}, "SExpr_w_name": "(JOIN (R base.fictionaluniverse.fictional_spacecraft_designer.spacecraft_classes_designed) (JOIN (R book.written_work.author) Dune Messiah))", "SExpr": "(JOIN (R base.fictionaluniverse.fictional_spacecraft_designer.spacecraft_classes_designed) (JOIN (R book.written_work.author) m.02cxx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gxq34z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gxq34z ns:book.written_work.author ?y .\n?y ns:visual_art.visual_artist.art_series ?x .\n}\n", "TopicEntityMid": "m.0gxq34z", "mid2name": {"ns:m.0gxq34z": "Harlem Renaissance Dialogues (Part 6): Publishing Trends and Modern Readers"}, "SExpr_w_name": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R book.written_work.author) Harlem Renaissance Dialogues (Part 6): Publishing Trends and Modern Readers))", "SExpr": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R book.written_work.author) m.0gxq34z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010bgq9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010bgq9v ns:internet.website_owner.websites_owned ?y .\n?y ns:internet.website.category ?x .\n}\n", "TopicEntityMid": "m.010bgq9v", "mid2name": {"ns:m.010bgq9v": "Premiere Media Group, Inc."}, "SExpr_w_name": "(JOIN (R internet.website.category) (JOIN (R internet.website_owner.websites_owned) Premiere Media Group, Inc.))", "SExpr": "(JOIN (R internet.website.category) (JOIN (R internet.website_owner.websites_owned) m.010bgq9v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h1q7kc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h1q7kc ns:people.ethnicity.includes_groups ?y .\n?y ns:people.ethnicity.languages_spoken ?x .\n}\n", "TopicEntityMid": "m.0h1q7kc", "mid2name": {"ns:m.0h1q7kc": "Paraguayan"}, "SExpr_w_name": "(JOIN (R people.ethnicity.languages_spoken) (JOIN (R people.ethnicity.includes_groups) Paraguayan))", "SExpr": "(JOIN (R people.ethnicity.languages_spoken) (JOIN (R people.ethnicity.includes_groups) m.0h1q7kc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_yl6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_yl6z ns:martial_arts.martial_art_category.martial_arts ?y .\n?y ns:martial_arts.martial_art.category ?x .\n}\n", "TopicEntityMid": "m.02_yl6z", "mid2name": {"ns:m.02_yl6z": "Internal"}, "SExpr_w_name": "(JOIN (R martial_arts.martial_art.category) (JOIN (R martial_arts.martial_art_category.martial_arts) Internal))", "SExpr": "(JOIN (R martial_arts.martial_art.category) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02_yl6z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wkbg7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wkbg7 ns:comic_books.comic_book_issue.cover_colors ?y .\n?y ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n}\n", "TopicEntityMid": "m.02wkbg7", "mid2name": {"ns:m.02wkbg7": "Batman #1"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (JOIN (R comic_books.comic_book_issue.cover_colors) Batman #1))", "SExpr": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (JOIN (R comic_books.comic_book_issue.cover_colors) m.02wkbg7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_w3r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_w3r ns:aviation.aircraft_model.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.01_w3r", "mid2name": {"ns:m.01_w3r": "Bell P-59A"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) Bell P-59A))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) m.01_w3r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01cw9p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01cw9p ns:astronomy.astronomical_observatory.discoveries ?y .\n?y ns:astronomy.astronomical_discovery.discoverer ?x .\n}\n", "TopicEntityMid": "m.01cw9p", "mid2name": {"ns:m.01cw9p": "W. M. Keck Observatory"}, "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.discoverer) (JOIN (R astronomy.astronomical_observatory.discoveries) W. M. Keck Observatory))", "SExpr": "(JOIN (R astronomy.astronomical_discovery.discoverer) (JOIN (R astronomy.astronomical_observatory.discoveries) m.01cw9p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03xkcd6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03xkcd6 ns:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.03xkcd6", "mid2name": {"ns:m.03xkcd6": "Case of the Namesake Murders"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) Case of the Namesake Murders))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) m.03xkcd6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05wy2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05wy2 ns:base.skosbase.vocabulary_equivalent_topic.narrower_concept ?y .\n?y ns:base.skosbase.skos_concept.equivalent_topic ?x .\n}\n", "TopicEntityMid": "m.05wy2", "mid2name": {"ns:m.05wy2": "Gasoline"}, "SExpr_w_name": "(JOIN (R base.skosbase.skos_concept.equivalent_topic) (JOIN (R base.skosbase.vocabulary_equivalent_topic.narrower_concept) Gasoline))", "SExpr": "(JOIN (R base.skosbase.skos_concept.equivalent_topic) (JOIN (R base.skosbase.vocabulary_equivalent_topic.narrower_concept) m.05wy2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083mg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083mg ns:organization.club_interest.clubs ?y .\n?y ns:organization.organization.headquarters ?x .\n}\n", "TopicEntityMid": "m.083mg", "mid2name": {"ns:m.083mg": "Walking"}, "SExpr_w_name": "(JOIN (R organization.organization.headquarters) (JOIN (R organization.club_interest.clubs) Walking))", "SExpr": "(JOIN (R organization.organization.headquarters) (JOIN (R organization.club_interest.clubs) m.083mg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019rg5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019rg5 ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.019rg5", "mid2name": {"ns:m.019rg5": "Kenya"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Kenya))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.019rg5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j2k3cz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j2k3cz ns:book.book_character.appears_in_stories ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0j2k3cz", "mid2name": {"ns:m.0j2k3cz": "Pai Mahutanga"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_character.appears_in_stories) Pai Mahutanga))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_character.appears_in_stories) m.0j2k3cz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06t35m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06t35m ns:visual_art.visual_art_support.artworks ?y .\n?y ns:visual_art.artwork.artist ?x .\n}\n", "TopicEntityMid": "m.06t35m", "mid2name": {"ns:m.06t35m": "Shaped canvas"}, "SExpr_w_name": "(JOIN (R visual_art.artwork.artist) (JOIN (R visual_art.visual_art_support.artworks) Shaped canvas))", "SExpr": "(JOIN (R visual_art.artwork.artist) (JOIN (R visual_art.visual_art_support.artworks) m.06t35m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.0f1bg", "mid2name": {"ns:m.0f1bg": "Luke Skywalker"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Luke Skywalker))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0f1bg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rftl5b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rftl5b ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0rftl5b", "mid2name": {"ns:m.0rftl5b": "To War"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) To War))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0rftl5b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ft5b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ft5b ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01ft5b", "mid2name": {"ns:m.01ft5b": "Kindergarten"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Kindergarten))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01ft5b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0256dw9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0256dw9 ns:meteorology.tropical_cyclone_category.Beaufort_scale ?y .\n?y ns:meteorology.beaufort_wind_force.tropical_cyclone_categories ?x .\n}\n", "TopicEntityMid": "m.0256dw9", "mid2name": {"ns:m.0256dw9": "Category 2 Tropical Cyclone (BOM)"}, "SExpr_w_name": "(JOIN (R meteorology.beaufort_wind_force.tropical_cyclone_categories) (JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) Category 2 Tropical Cyclone (BOM)))", "SExpr": "(JOIN (R meteorology.beaufort_wind_force.tropical_cyclone_categories) (JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) m.0256dw9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqx75g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqx75g ns:medicine.drug.active_moieties ?y .\n?y ns:medicine.medical_treatment.used_to_treat ?x .\n}\n", "TopicEntityMid": "m.0hqx75g", "mid2name": {"ns:m.0hqx75g": "Disopyramide phosphate"}, "SExpr_w_name": "(JOIN (R medicine.medical_treatment.used_to_treat) (JOIN (R medicine.drug.active_moieties) Disopyramide phosphate))", "SExpr": "(JOIN (R medicine.medical_treatment.used_to_treat) (JOIN (R medicine.drug.active_moieties) m.0hqx75g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09vklq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09vklq ns:fictional_universe.fictional_object.composition ?y .\n?y ns:fictional_universe.fictional_substance.appears_in_fictional_universe ?x .\n}\n", "TopicEntityMid": "m.09vklq", "mid2name": {"ns:m.09vklq": "Captain America's shield"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_substance.appears_in_fictional_universe) (JOIN (R fictional_universe.fictional_object.composition) Captain America's shield))", "SExpr": "(JOIN (R fictional_universe.fictional_substance.appears_in_fictional_universe) (JOIN (R fictional_universe.fictional_object.composition) m.09vklq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gdtdk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gdtdk ns:wine.vineyard.wines ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.04gdtdk", "mid2name": {"ns:m.04gdtdk": "Gap's Crown Vineyard"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R wine.vineyard.wines) Gap's Crown Vineyard))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R wine.vineyard.wines) m.04gdtdk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02sd44y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02sd44y ns:religion.belief.belief_of ?y .\n?y ns:religion.religion.places_of_worship_historical ?x .\n}\n", "TopicEntityMid": "m.02sd44y", "mid2name": {"ns:m.02sd44y": "Premortality"}, "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.belief.belief_of) Premortality))", "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.belief.belief_of) m.02sd44y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07k53y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07k53y ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.07k53y", "mid2name": {"ns:m.07k53y": "USC Trojans football"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) USC Trojans football))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.07k53y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05v205j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05v205j ns:business.business_location.address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "TopicEntityMid": "m.05v205j", "mid2name": {"ns:m.05v205j": "The Leisure Deck"}, "SExpr_w_name": "(JOIN (R location.mailing_address.citytown) (JOIN (R business.business_location.address) The Leisure Deck))", "SExpr": "(JOIN (R location.mailing_address.citytown) (JOIN (R business.business_location.address) m.05v205j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0myy0vz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0myy0vz ns:travel.accommodation.features ?y .\n?y ns:organization.club_interest.clubs ?x .\n}\n", "TopicEntityMid": "m.0myy0vz", "mid2name": {"ns:m.0myy0vz": "JW Marriott Hotel Mexico City"}, "SExpr_w_name": "(JOIN (R organization.club_interest.clubs) (JOIN (R travel.accommodation.features) JW Marriott Hotel Mexico City))", "SExpr": "(JOIN (R organization.club_interest.clubs) (JOIN (R travel.accommodation.features) m.0myy0vz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jxrk_0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jxrk_0 ns:medicine.drug.active_moieties ?y .\n?y ns:medicine.drug.brands ?x .\n}\n", "TopicEntityMid": "m.0jxrk_0", "mid2name": {"ns:m.0jxrk_0": "Phenol/Diphenhydramine"}, "SExpr_w_name": "(JOIN (R medicine.drug.brands) (JOIN (R medicine.drug.active_moieties) Phenol/Diphenhydramine))", "SExpr": "(JOIN (R medicine.drug.brands) (JOIN (R medicine.drug.active_moieties) m.0jxrk_0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0120k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0120k ns:computer.software_genre.software_in_genre ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0120k", "mid2name": {"ns:m.0120k": "File archiver"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.software_genre.software_in_genre) File archiver))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.software_genre.software_in_genre) m.0120k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yh0q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yh0q ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.01yh0q", "mid2name": {"ns:m.01yh0q": "University College, Toronto"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) University College, Toronto))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.01yh0q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gfzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gfzw ns:computer.computer_processor.manufacturers ?y .\n?y ns:user.robert.mobile_phones.product_brand.products ?x .\n}\n", "TopicEntityMid": "m.0gfzw", "mid2name": {"ns:m.0gfzw": "ARM architecture"}, "SExpr_w_name": "(JOIN (R user.robert.mobile_phones.product_brand.products) (JOIN (R computer.computer_processor.manufacturers) ARM architecture))", "SExpr": "(JOIN (R user.robert.mobile_phones.product_brand.products) (JOIN (R computer.computer_processor.manufacturers) m.0gfzw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bl05x_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bl05x_ ns:business.employer.employees ?y .\n?y ns:business.employment_tenure.person ?x .\n}\n", "TopicEntityMid": "m.0bl05x_", "mid2name": {"ns:m.0bl05x_": "Stanford Chemical Engineering"}, "SExpr_w_name": "(JOIN (R business.employment_tenure.person) (JOIN (R business.employer.employees) Stanford Chemical Engineering))", "SExpr": "(JOIN (R business.employment_tenure.person) (JOIN (R business.employer.employees) m.0bl05x_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047q349)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047q349 ns:astronomy.astronomical_observatory.discoveries ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n}\n", "TopicEntityMid": "m.047q349", "mid2name": {"ns:m.047q349": "Sears Tower \u2013 Harvard Observatory"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.astronomical_observatory.discoveries) Sears Tower \u2013 Harvard Observatory))", "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.astronomical_observatory.discoveries) m.047q349))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04c_fg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04c_fg9 ns:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.04c_fg9", "mid2name": {"ns:m.04c_fg9": "Chapter Seven: The Hero's Life"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) Chapter Seven: The Hero's Life))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) m.04c_fg9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fr4gk7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fr4gk7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0fr4gk7", "mid2name": {"ns:m.0fr4gk7": "Dragon Soul"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Dragon Soul))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0fr4gk7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0z2p66v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0z2p66v ns:meteorology.tropical_cyclone.category ?y .\n?y ns:meteorology.tropical_cyclone_category.Beaufort_scale ?x .\n}\n", "TopicEntityMid": "m.0z2p66v", "mid2name": {"ns:m.0z2p66v": "Typhoon Haiyan"}, "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) (JOIN (R meteorology.tropical_cyclone.category) Typhoon Haiyan))", "SExpr": "(JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) (JOIN (R meteorology.tropical_cyclone.category) m.0z2p66v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n32 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01n32", "mid2name": {"ns:m.01n32": "City"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) City))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01n32))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.082cb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.082cb ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.082cb", "mid2name": {"ns:m.082cb": "War"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) War))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.082cb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062vvj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062vvj ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.062vvj", "mid2name": {"ns:m.062vvj": "Kennedy Space Center Launch Complex 39"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Kennedy Space Center Launch Complex 39))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.062vvj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b70yvx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b70yvx ns:projects.project.participants ?y .\n?y ns:projects.project_participation.participant ?x .\n}\n", "TopicEntityMid": "m.0b70yvx", "mid2name": {"ns:m.0b70yvx": "Development of Google Maps"}, "SExpr_w_name": "(JOIN (R projects.project_participation.participant) (JOIN (R projects.project.participants) Development of Google Maps))", "SExpr": "(JOIN (R projects.project_participation.participant) (JOIN (R projects.project.participants) m.0b70yvx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04kyw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04kyw ns:computer.programming_language.dialects ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.04kyw", "mid2name": {"ns:m.04kyw": "Lisp"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.programming_language.dialects) Lisp))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.programming_language.dialects) m.04kyw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_3zhw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_3zhw ns:computer.computer.parent_model ?y .\n?y ns:book.book_subject.works ?x .\n}\n", "TopicEntityMid": "m.02_3zhw", "mid2name": {"ns:m.02_3zhw": "CM-1"}, "SExpr_w_name": "(JOIN (R book.book_subject.works) (JOIN (R computer.computer.parent_model) CM-1))", "SExpr": "(JOIN (R book.book_subject.works) (JOIN (R computer.computer.parent_model) m.02_3zhw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mkz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mkz ns:conferences.conference_subject.specific_conferences_about_this ?y .\n?y ns:conferences.conference.series ?x .\n}\n", "TopicEntityMid": "m.0mkz", "mid2name": {"ns:m.0mkz": "Artificial intelligence"}, "SExpr_w_name": "(JOIN (R conferences.conference.series) (JOIN (R conferences.conference_subject.specific_conferences_about_this) Artificial intelligence))", "SExpr": "(JOIN (R conferences.conference.series) (JOIN (R conferences.conference_subject.specific_conferences_about_this) m.0mkz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06148c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06148c ns:olympics.olympic_athlete.country ?y .\n?y ns:olympics.olympic_athlete_affiliation.country ?x .\n}\n", "TopicEntityMid": "m.06148c", "mid2name": {"ns:m.06148c": "Jelena Jankovi\u0107"}, "SExpr_w_name": "(JOIN (R olympics.olympic_athlete_affiliation.country) (JOIN (R olympics.olympic_athlete.country) Jelena Jankovi\u0107))", "SExpr": "(JOIN (R olympics.olympic_athlete_affiliation.country) (JOIN (R olympics.olympic_athlete.country) m.06148c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022q2mh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022q2mh ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.022q2mh", "mid2name": {"ns:m.022q2mh": "Sony DSLR-A100"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) Sony DSLR-A100))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.022q2mh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gfnnz2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gfnnz2 ns:book.book_edition.book ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0gfnnz2", "mid2name": {"ns:m.0gfnnz2": "The Collected Lute Music of John Dowland, 2nd edition"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) The Collected Lute Music of John Dowland, 2nd edition))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) m.0gfnnz2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05p7twy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05p7twy ns:ice_hockey.hockey_division.teams ?y .\n?y ns:sports.sports_team.colors ?x .\n}\n", "TopicEntityMid": "m.05p7twy", "mid2name": {"ns:m.05p7twy": "U.S. Division"}, "SExpr_w_name": "(JOIN (R sports.sports_team.colors) (JOIN (R ice_hockey.hockey_division.teams) U.S. Division))", "SExpr": "(JOIN (R sports.sports_team.colors) (JOIN (R ice_hockey.hockey_division.teams) m.05p7twy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gs1w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gs1w ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.03gs1w", "mid2name": {"ns:m.03gs1w": "Mark Buckingham"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Mark Buckingham))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.03gs1w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09hgk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09hgk ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.09hgk", "mid2name": {"ns:m.09hgk": "Charles University in Prague"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) Charles University in Prague))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.09hgk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09gwyd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09gwyd ns:comic_books.comic_book_series.publisher ?y .\n?y ns:organization.club_interest.clubs ?x .\n}\n", "TopicEntityMid": "m.09gwyd", "mid2name": {"ns:m.09gwyd": "Civil War"}, "SExpr_w_name": "(JOIN (R organization.club_interest.clubs) (JOIN (R comic_books.comic_book_series.publisher) Civil War))", "SExpr": "(JOIN (R organization.club_interest.clubs) (JOIN (R comic_books.comic_book_series.publisher) m.09gwyd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099wcz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099wcz ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.099wcz", "mid2name": {"ns:m.099wcz": "Chromosome 11 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 11 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.099wcz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.065mzc0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.065mzc0 ns:business.business_operation.industry ?y .\n?y ns:business.product_category.products ?x .\n}\n", "TopicEntityMid": "m.065mzc0", "mid2name": {"ns:m.065mzc0": "United Spirits"}, "SExpr_w_name": "(JOIN (R business.product_category.products) (JOIN (R business.business_operation.industry) United Spirits))", "SExpr": "(JOIN (R business.product_category.products) (JOIN (R business.business_operation.industry) m.065mzc0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qrc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qrc ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0qrc", "mid2name": {"ns:m.0qrc": "Agamemnon"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Agamemnon))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.0qrc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0668p87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0668p87 ns:symbols.heraldic_coronet.coat_of_arms ?y .\n?y ns:symbols.coat_of_arms.bearers ?x .\n}\n", "TopicEntityMid": "m.0668p87", "mid2name": {"ns:m.0668p87": "Baronial coronet"}, "SExpr_w_name": "(JOIN (R symbols.coat_of_arms.bearers) (JOIN (R symbols.heraldic_coronet.coat_of_arms) Baronial coronet))", "SExpr": "(JOIN (R symbols.coat_of_arms.bearers) (JOIN (R symbols.heraldic_coronet.coat_of_arms) m.0668p87))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0256dv3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0256dv3 ns:meteorology.tropical_cyclone_category.Beaufort_scale ?y .\n?y ns:meteorology.beaufort_wind_force.tropical_cyclone_categories ?x .\n}\n", "TopicEntityMid": "m.0256dv3", "mid2name": {"ns:m.0256dv3": "Category 4 Severe Tropical Cyclone (BOM)"}, "SExpr_w_name": "(JOIN (R meteorology.beaufort_wind_force.tropical_cyclone_categories) (JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) Category 4 Severe Tropical Cyclone (BOM)))", "SExpr": "(JOIN (R meteorology.beaufort_wind_force.tropical_cyclone_categories) (JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) m.0256dv3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03k02tb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03k02tb ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.03k02tb", "mid2name": {"ns:m.03k02tb": "2005 Clos LaChance \"Hummingbird Series, Buff-Bellied\" Central Coast Estate Zinfandel"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) 2005 Clos LaChance \"Hummingbird Series, Buff-Bellied\" Central Coast Estate Zinfandel))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.03k02tb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qwpnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qwpnz ns:business.industry.parent_industry ?y .\n?y ns:business.industry.child_industry ?x .\n}\n", "TopicEntityMid": "m.03qwpnz", "mid2name": {"ns:m.03qwpnz": "Miscellaneous Structural Metal Work (fabricated bar joists and concrete reinforcing bars)"}, "SExpr_w_name": "(JOIN (R business.industry.child_industry) (JOIN (R business.industry.parent_industry) Miscellaneous Structural Metal Work (fabricated bar joists and concrete reinforcing bars)))", "SExpr": "(JOIN (R business.industry.child_industry) (JOIN (R business.industry.parent_industry) m.03qwpnz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04kk206)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04kk206 ns:skiing.ski_lift.ski_area ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.04kk206", "mid2name": {"ns:m.04kk206": "Sunnyside"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R skiing.ski_lift.ski_area) Sunnyside))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R skiing.ski_lift.ski_area) m.04kk206))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0glsrm2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0glsrm2 ns:visual_art.art_series.artworks ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0glsrm2", "mid2name": {"ns:m.0glsrm2": "Wheat Fields"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R visual_art.art_series.artworks) Wheat Fields))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R visual_art.art_series.artworks) m.0glsrm2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0217zf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0217zf ns:language.language_writing_system.languages ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.0217zf", "mid2name": {"ns:m.0217zf": "English alphabet"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R language.language_writing_system.languages) English alphabet))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R language.language_writing_system.languages) m.0217zf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lywwl8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lywwl8 ns:food.beer.brewery_brand ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n", "TopicEntityMid": "m.0lywwl8", "mid2name": {"ns:m.0lywwl8": "Atwater Traverse City Cherry Wheat"}, "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R food.beer.brewery_brand) Atwater Traverse City Cherry Wheat))", "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R food.beer.brewery_brand) m.0lywwl8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.038zh6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.038zh6 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.038zh6", "mid2name": {"ns:m.038zh6": "England cricket team"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) England cricket team))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.038zh6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042q9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042q9_ ns:engineering.engine.category ?y .\n?y ns:engineering.engine_category.engines ?x .\n}\n", "TopicEntityMid": "m.042q9_", "mid2name": {"ns:m.042q9_": "General Electric LM2500"}, "SExpr_w_name": "(JOIN (R engineering.engine_category.engines) (JOIN (R engineering.engine.category) General Electric LM2500))", "SExpr": "(JOIN (R engineering.engine_category.engines) (JOIN (R engineering.engine.category) m.042q9_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqz6j0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqz6j0 ns:medicine.drug_manufacturer.drugs_manufactured ?y .\n?y ns:medicine.manufactured_drug_form.available_in ?x .\n}\n", "TopicEntityMid": "m.0hqz6j0", "mid2name": {"ns:m.0hqz6j0": "Hillestad Pharmaceuticals USA"}, "SExpr_w_name": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R medicine.drug_manufacturer.drugs_manufactured) Hillestad Pharmaceuticals USA))", "SExpr": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R medicine.drug_manufacturer.drugs_manufactured) m.0hqz6j0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0q56v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0q56v ns:business.product_category.products ?y .\n?y ns:business.consumer_product.category ?x .\n}\n", "TopicEntityMid": "m.0q56v", "mid2name": {"ns:m.0q56v": "Game controller"}, "SExpr_w_name": "(JOIN (R business.consumer_product.category) (JOIN (R business.product_category.products) Game controller))", "SExpr": "(JOIN (R business.consumer_product.category) (JOIN (R business.product_category.products) m.0q56v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0z7hdmd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0z7hdmd ns:book.written_work.author ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.0z7hdmd", "mid2name": {"ns:m.0z7hdmd": "Judy"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R book.written_work.author) Judy))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R book.written_work.author) m.0z7hdmd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kfqnwh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kfqnwh ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.0kfqnwh", "mid2name": {"ns:m.0kfqnwh": "Sophisticated Ladies"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) Sophisticated Ladies))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.0kfqnwh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hr72)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hr72 ns:cricket.cricket_tournament_event.tournament ?y .\n?y ns:time.recurring_event.current_frequency ?x .\n}\n", "TopicEntityMid": "m.07hr72", "mid2name": {"ns:m.07hr72": "Duleep Trophy in 2005\u201306"}, "SExpr_w_name": "(JOIN (R time.recurring_event.current_frequency) (JOIN (R cricket.cricket_tournament_event.tournament) Duleep Trophy in 2005\u201306))", "SExpr": "(JOIN (R time.recurring_event.current_frequency) (JOIN (R cricket.cricket_tournament_event.tournament) m.07hr72))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dbzfp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dbzfp ns:aviation.aircraft_model.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.0dbzfp", "mid2name": {"ns:m.0dbzfp": "Avro Tudor"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) Avro Tudor))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) m.0dbzfp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h870d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h870d ns:computer.computer.parent_model ?y .\n?y ns:computer.computer.compatible_oses ?x .\n}\n", "TopicEntityMid": "m.02h870d", "mid2name": {"ns:m.02h870d": "Atari 1040 STf"}, "SExpr_w_name": "(JOIN (R computer.computer.compatible_oses) (JOIN (R computer.computer.parent_model) Atari 1040 STf))", "SExpr": "(JOIN (R computer.computer.compatible_oses) (JOIN (R computer.computer.parent_model) m.02h870d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05wh9td)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05wh9td ns:boats.ship_designer.ship_classes_designed ?y .\n?y ns:boats.ship_class.length_overall_m ?x .\n}\n", "TopicEntityMid": "m.05wh9td", "mid2name": {"ns:m.05wh9td": "Luedtke Brothers"}, "SExpr_w_name": "(JOIN (R boats.ship_class.length_overall_m) (JOIN (R boats.ship_designer.ship_classes_designed) Luedtke Brothers))", "SExpr": "(JOIN (R boats.ship_class.length_overall_m) (JOIN (R boats.ship_designer.ship_classes_designed) m.05wh9td))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03vrjx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03vrjx ns:music.genre.artists ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.03vrjx", "mid2name": {"ns:m.03vrjx": "Oldies"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.genre.artists) Oldies))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.genre.artists) m.03vrjx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01y_vl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01y_vl ns:language.human_language.dialects ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.01y_vl", "mid2name": {"ns:m.01y_vl": "Mari language"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R language.human_language.dialects) Mari language))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R language.human_language.dialects) m.01y_vl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05sr_fd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05sr_fd ns:business.endorsed_product.endorsements ?y .\n?y ns:business.product_endorsement.endorsee ?x .\n}\n", "TopicEntityMid": "m.05sr_fd", "mid2name": {"ns:m.05sr_fd": "Tinactin"}, "SExpr_w_name": "(JOIN (R business.product_endorsement.endorsee) (JOIN (R business.endorsed_product.endorsements) Tinactin))", "SExpr": "(JOIN (R business.product_endorsement.endorsee) (JOIN (R business.endorsed_product.endorsements) m.05sr_fd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r7yl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r7yl ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.05r7yl", "mid2name": {"ns:m.05r7yl": "Simms Taback"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Simms Taback))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.05r7yl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lgw7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lgw7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0lgw7", "mid2name": {"ns:m.0lgw7": "Photographer"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Photographer))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0lgw7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03__f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03__f ns:location.location.containedby ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.03__f", "mid2name": {"ns:m.03__f": "Johnston Atoll"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) Johnston Atoll))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) m.03__f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cpb_yv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cpb_yv ns:ice_hockey.hockey_division.teams ?y .\n?y ns:sports.sports_team.league ?x .\n}\n", "TopicEntityMid": "m.0cpb_yv", "mid2name": {"ns:m.0cpb_yv": "Atlantic Division"}, "SExpr_w_name": "(JOIN (R sports.sports_team.league) (JOIN (R ice_hockey.hockey_division.teams) Atlantic Division))", "SExpr": "(JOIN (R sports.sports_team.league) (JOIN (R ice_hockey.hockey_division.teams) m.0cpb_yv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gkzs2f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gkzs2f ns:business.consumer_product.brand ?y .\n?y ns:digicams.digital_camera_manufacturer.cameras ?x .\n}\n", "TopicEntityMid": "m.0gkzs2f", "mid2name": {"ns:m.0gkzs2f": "Panasonic Lumix DMC-GH2"}, "SExpr_w_name": "(JOIN (R digicams.digital_camera_manufacturer.cameras) (JOIN (R business.consumer_product.brand) Panasonic Lumix DMC-GH2))", "SExpr": "(JOIN (R digicams.digital_camera_manufacturer.cameras) (JOIN (R business.consumer_product.brand) m.0gkzs2f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ztrjdw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ztrjdw ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0ztrjdw", "mid2name": {"ns:m.0ztrjdw": "Scott Eldridge"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Scott Eldridge))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0ztrjdw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p6w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p6w ns:computer.programming_language.dialects ?y .\n?y ns:computer.programming_language.influenced_by ?x .\n}\n", "TopicEntityMid": "m.02p6w", "mid2name": {"ns:m.02p6w": "Eiffel"}, "SExpr_w_name": "(JOIN (R computer.programming_language.influenced_by) (JOIN (R computer.programming_language.dialects) Eiffel))", "SExpr": "(JOIN (R computer.programming_language.influenced_by) (JOIN (R computer.programming_language.dialects) m.02p6w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083vt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083vt ns:architecture.lighthouse_construction_material.used_on_lighthouse ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.083vt", "mid2name": {"ns:m.083vt": "Wood"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R architecture.lighthouse_construction_material.used_on_lighthouse) Wood))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R architecture.lighthouse_construction_material.used_on_lighthouse) m.083vt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02s9qg8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02s9qg8 ns:education.school_newspaper.school ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.02s9qg8", "mid2name": {"ns:m.02s9qg8": "Chipog\u00f3"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R education.school_newspaper.school) Chipog\u00f3))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R education.school_newspaper.school) m.02s9qg8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cvvc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cvvc ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0cvvc", "mid2name": {"ns:m.0cvvc": "Andaman and Nicobar Islands"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Andaman and Nicobar Islands))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0cvvc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqs3pp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqs3pp ns:medicine.drug_formulation.active_ingredient_moieties ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0hqs3pp", "mid2name": {"ns:m.0hqs3pp": "Gaba 6 liquid"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) Gaba 6 liquid))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqs3pp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07nj9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07nj9 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.07nj9", "mid2name": {"ns:m.07nj9": "Divine Comedy"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Divine Comedy))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.07nj9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01rjzhr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01rjzhr ns:music.album.artist ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.01rjzhr", "mid2name": {"ns:m.01rjzhr": "Parade (1999 original Broadway cast)"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.album.artist) Parade (1999 original Broadway cast)))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.album.artist) m.01rjzhr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02943b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02943b ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02943b", "mid2name": {"ns:m.02943b": "Diorite"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Diorite))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02943b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d1vdb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d1vdb ns:medicine.medical_trial.phase ?y .\n?y ns:medicine.medical_trial_phase.medical_trials ?x .\n}\n", "TopicEntityMid": "m.04d1vdb", "mid2name": {"ns:m.04d1vdb": "Efficacy and Safety of SPD417 in Treatment of Manic Symptoms in Adults With Bipolar I Disorder"}, "SExpr_w_name": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) Efficacy and Safety of SPD417 in Treatment of Manic Symptoms in Adults With Bipolar I Disorder))", "SExpr": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) m.04d1vdb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwj00)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwj00 ns:biology.cytogenetic_band.chromosome ?y .\n?y ns:biology.chromosome.band ?x .\n}\n", "TopicEntityMid": "m.02kwj00", "mid2name": {"ns:m.02kwj00": "Human Cytogenetic Band 2p16.2"}, "SExpr_w_name": "(JOIN (R biology.chromosome.band) (JOIN (R biology.cytogenetic_band.chromosome) Human Cytogenetic Band 2p16.2))", "SExpr": "(JOIN (R biology.chromosome.band) (JOIN (R biology.cytogenetic_band.chromosome) m.02kwj00))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.040v969)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.040v969 ns:medicine.drug.active_moieties ?y .\n?y ns:medicine.medical_treatment.used_to_treat ?x .\n}\n", "TopicEntityMid": "m.040v969", "mid2name": {"ns:m.040v969": "Vincristine sulfate"}, "SExpr_w_name": "(JOIN (R medicine.medical_treatment.used_to_treat) (JOIN (R medicine.drug.active_moieties) Vincristine sulfate))", "SExpr": "(JOIN (R medicine.medical_treatment.used_to_treat) (JOIN (R medicine.drug.active_moieties) m.040v969))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ys76cw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ys76cw ns:music.album.artist ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.0ys76cw", "mid2name": {"ns:m.0ys76cw": "iTunes Festival: London 2013"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R music.album.artist) iTunes Festival: London 2013))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R music.album.artist) m.0ys76cw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.0chghy", "mid2name": {"ns:m.0chghy": "Australia"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Australia))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.0chghy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g8xg2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g8xg2 ns:music.artist.track ?y .\n?y ns:music.recording.artist ?x .\n}\n", "TopicEntityMid": "m.0g8xg2", "mid2name": {"ns:m.0g8xg2": "Edward Downes"}, "SExpr_w_name": "(JOIN (R music.recording.artist) (JOIN (R music.artist.track) Edward Downes))", "SExpr": "(JOIN (R music.recording.artist) (JOIN (R music.artist.track) m.0g8xg2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011_65)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011_65 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.011_65", "mid2name": {"ns:m.011_65": "Emirates"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Emirates))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.011_65))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n493q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n493q ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0n493q", "mid2name": {"ns:m.0n493q": "The Final Countdown (original radio edit)"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) The Final Countdown (original radio edit)))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0n493q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04w0y4h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04w0y4h ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.04w0y4h", "mid2name": {"ns:m.04w0y4h": "American League Most Valuable Player Award"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) American League Most Valuable Player Award))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.04w0y4h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.063gfd3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.063gfd3 ns:business.product_line.parent_product_line ?y .\n?y ns:business.product_line.includes_product_lines ?x .\n}\n", "TopicEntityMid": "m.063gfd3", "mid2name": {"ns:m.063gfd3": "Terminator Salvation Vehicles"}, "SExpr_w_name": "(JOIN (R business.product_line.includes_product_lines) (JOIN (R business.product_line.parent_product_line) Terminator Salvation Vehicles))", "SExpr": "(JOIN (R business.product_line.includes_product_lines) (JOIN (R business.product_line.parent_product_line) m.063gfd3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j1wqy4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j1wqy4 ns:book.illustrator.magazine_covers ?y .\n?y ns:book.publication.contents ?x .\n}\n", "TopicEntityMid": "m.0j1wqy4", "mid2name": {"ns:m.0j1wqy4": "Pamela Lee"}, "SExpr_w_name": "(JOIN (R book.publication.contents) (JOIN (R book.illustrator.magazine_covers) Pamela Lee))", "SExpr": "(JOIN (R book.publication.contents) (JOIN (R book.illustrator.magazine_covers) m.0j1wqy4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dm6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dm6 ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.ecology.food_web_member.eaten_by ?x .\n}\n", "TopicEntityMid": "m.04dm6", "mid2name": {"ns:m.04dm6": "Komondor"}, "SExpr_w_name": "(JOIN (R base.ecology.food_web_member.eaten_by) (JOIN (R biology.organism_classification.higher_classification) Komondor))", "SExpr": "(JOIN (R base.ecology.food_web_member.eaten_by) (JOIN (R biology.organism_classification.higher_classification) m.04dm6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q12w4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q12w4 ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.03q12w4", "mid2name": {"ns:m.03q12w4": "2005 Sunce \"Old Vines, Pena Creek Vineyard\" Dry Creek Valley Zinfandel"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) 2005 Sunce \"Old Vines, Pena Creek Vineyard\" Dry Creek Valley Zinfandel))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.03q12w4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gdhq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gdhq ns:award.award_category.winners ?y .\n?y ns:award.award_honor.award_winner ?x .\n}\n", "TopicEntityMid": "m.03gdhq", "mid2name": {"ns:m.03gdhq": "Officer of the Order of the British Empire"}, "SExpr_w_name": "(JOIN (R award.award_honor.award_winner) (JOIN (R award.award_category.winners) Officer of the Order of the British Empire))", "SExpr": "(JOIN (R award.award_honor.award_winner) (JOIN (R award.award_category.winners) m.03gdhq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c791sw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c791sw ns:book.book_edition.book ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0c791sw", "mid2name": {"ns:m.0c791sw": "The voyages of Captain James Cook round the world : selected from his journals and edited by Christopher Lloyd"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) The voyages of Captain James Cook round the world : selected from his journals and edited by Christopher Lloyd))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) m.0c791sw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b_wsry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b_wsry ns:fictional_universe.fictional_universe.organizations ?y .\n?y ns:military.military_unit.servicemembers ?x .\n}\n", "TopicEntityMid": "m.0b_wsry", "mid2name": {"ns:m.0b_wsry": "Sacred Band of Stepsons"}, "SExpr_w_name": "(JOIN (R military.military_unit.servicemembers) (JOIN (R fictional_universe.fictional_universe.organizations) Sacred Band of Stepsons))", "SExpr": "(JOIN (R military.military_unit.servicemembers) (JOIN (R fictional_universe.fictional_universe.organizations) m.0b_wsry))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058r4f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058r4f ns:food.culinary_tool.used_in_recipes ?y .\n?y ns:food.recipe.author ?x .\n}\n", "TopicEntityMid": "m.058r4f", "mid2name": {"ns:m.058r4f": "Chef's knife"}, "SExpr_w_name": "(JOIN (R food.recipe.author) (JOIN (R food.culinary_tool.used_in_recipes) Chef's knife))", "SExpr": "(JOIN (R food.recipe.author) (JOIN (R food.culinary_tool.used_in_recipes) m.058r4f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0466d6p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0466d6p ns:tv.tv_episode_segment.subjects ?y .\n?y ns:tv.tv_program.filming_locations ?x .\n}\n", "TopicEntityMid": "m.0466d6p", "mid2name": {"ns:m.0466d6p": "Suspension Bridge"}, "SExpr_w_name": "(JOIN (R tv.tv_program.filming_locations) (JOIN (R tv.tv_episode_segment.subjects) Suspension Bridge))", "SExpr": "(JOIN (R tv.tv_program.filming_locations) (JOIN (R tv.tv_episode_segment.subjects) m.0466d6p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03nwvqm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03nwvqm ns:award.award_nominee.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.03nwvqm", "mid2name": {"ns:m.03nwvqm": "Chennai Super Kings"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) Chennai Super Kings))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) m.03nwvqm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gljl_4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gljl_4 ns:organization.organization_founder.organizations_founded ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.0gljl_4", "mid2name": {"ns:m.0gljl_4": "Chris Ringland"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R organization.organization_founder.organizations_founded) Chris Ringland))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R organization.organization_founder.organizations_founded) m.0gljl_4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_gx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_gx ns:religion.religion.places_of_worship_historical ?y .\n?y ns:religion.place_of_worship_historical_use.place_of_worship ?x .\n}\n", "TopicEntityMid": "m.03_gx", "mid2name": {"ns:m.03_gx": "Judaism"}, "SExpr_w_name": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) Judaism))", "SExpr": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) m.03_gx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08w6sy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08w6sy ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "TopicEntityMid": "m.08w6sy", "mid2name": {"ns:m.08w6sy": "Hazelwood West High School"}, "SExpr_w_name": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) Hazelwood West High School))", "SExpr": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.08w6sy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ygt3m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ygt3m ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.04ygt3m", "mid2name": {"ns:m.04ygt3m": "Gisborough Hall"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) Gisborough Hall))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.04ygt3m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0129y0h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0129y0h ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0129y0h", "mid2name": {"ns:m.0129y0h": "Space and Dub"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Space and Dub))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0129y0h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n65dgx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n65dgx ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.0n65dgx", "mid2name": {"ns:m.0n65dgx": "Porgy and Bess"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) Porgy and Bess))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.0n65dgx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lzh6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lzh6 ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0lzh6", "mid2name": {"ns:m.0lzh6": "John Boynton Priestley"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) John Boynton Priestley))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.0lzh6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045gth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045gth ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.045gth", "mid2name": {"ns:m.045gth": "Schwinn Bicycle Company"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Schwinn Bicycle Company))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.045gth))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g14x0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g14x0 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0g14x0", "mid2name": {"ns:m.0g14x0": "The Structure of Evolutionary Theory"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) The Structure of Evolutionary Theory))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0g14x0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ng72)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ng72 ns:visual_art.visual_art_form.artists ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.01ng72", "mid2name": {"ns:m.01ng72": "Metalworking"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R visual_art.visual_art_form.artists) Metalworking))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R visual_art.visual_art_form.artists) m.01ng72))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.041z1gp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.041z1gp ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.041z1gp", "mid2name": {"ns:m.041z1gp": "Wait Wait... Don't Tell Me!"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) Wait Wait... Don't Tell Me!))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.041z1gp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0836b7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0836b7 ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.0836b7", "mid2name": {"ns:m.0836b7": "Maastrichtian"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Maastrichtian))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.0836b7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d4pw5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d4pw5 ns:biology.organism_classification.rank ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0d4pw5", "mid2name": {"ns:m.0d4pw5": "Splake"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.rank) Splake))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.rank) m.0d4pw5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.063lnlx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.063lnlx ns:boats.ship_designer.ship_classes_designed ?y .\n?y ns:boats.ship_class.length_overall_m ?x .\n}\n", "TopicEntityMid": "m.063lnlx", "mid2name": {"ns:m.063lnlx": "Cornelius Shields"}, "SExpr_w_name": "(JOIN (R boats.ship_class.length_overall_m) (JOIN (R boats.ship_designer.ship_classes_designed) Cornelius Shields))", "SExpr": "(JOIN (R boats.ship_class.length_overall_m) (JOIN (R boats.ship_designer.ship_classes_designed) m.063lnlx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k7_02w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k7_02w ns:travel.tourist_attraction.near_travel_destination ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.0k7_02w", "mid2name": {"ns:m.0k7_02w": "Crocodile Park"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R travel.tourist_attraction.near_travel_destination) Crocodile Park))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R travel.tourist_attraction.near_travel_destination) m.0k7_02w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqy5f9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqy5f9 ns:medicine.drug_administration_route.drug_formulations ?y .\n?y ns:medicine.drug_formulation.active_ingredient_moieties ?x .\n}\n", "TopicEntityMid": "m.0hqy5f9", "mid2name": {"ns:m.0hqy5f9": "Intracavitary"}, "SExpr_w_name": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.drug_administration_route.drug_formulations) Intracavitary))", "SExpr": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.drug_administration_route.drug_formulations) m.0hqy5f9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02bv9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02bv9 ns:language.human_language.dialects ?y .\n?y ns:language.human_language.language_family ?x .\n}\n", "TopicEntityMid": "m.02bv9", "mid2name": {"ns:m.02bv9": "Dutch Language"}, "SExpr_w_name": "(JOIN (R language.human_language.language_family) (JOIN (R language.human_language.dialects) Dutch Language))", "SExpr": "(JOIN (R language.human_language.language_family) (JOIN (R language.human_language.dialects) m.02bv9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wjpj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wjpj ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02wjpj", "mid2name": {"ns:m.02wjpj": "Sputnik 3"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Sputnik 3))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02wjpj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f_h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f_h6 ns:religion.religion.includes ?y .\n?y ns:religion.religion.places_of_worship_historical ?x .\n}\n", "TopicEntityMid": "m.0f_h6", "mid2name": {"ns:m.0f_h6": "Abrahamic religions"}, "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religion.includes) Abrahamic religions))", "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religion.includes) m.0f_h6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zfmbjt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zfmbjt ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.0zfmbjt", "mid2name": {"ns:m.0zfmbjt": "MAGIO"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) MAGIO))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.0zfmbjt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_0lb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_0lb ns:fictional_universe.fictional_organization_founder.fictional_organizations_founded ?y .\n?y ns:fictional_universe.fictional_organization.members ?x .\n}\n", "TopicEntityMid": "m.07_0lb", "mid2name": {"ns:m.07_0lb": "Raquella Berto-Anirul"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_organization.members) (JOIN (R fictional_universe.fictional_organization_founder.fictional_organizations_founded) Raquella Berto-Anirul))", "SExpr": "(JOIN (R fictional_universe.fictional_organization.members) (JOIN (R fictional_universe.fictional_organization_founder.fictional_organizations_founded) m.07_0lb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gx3fwf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gx3fwf ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0gx3fwf", "mid2name": {"ns:m.0gx3fwf": "Joey Boukadakis"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Joey Boukadakis))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0gx3fwf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01g8dv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01g8dv ns:automotive.model.generations ?y .\n?y ns:automotive.model.make ?x .\n}\n", "TopicEntityMid": "m.01g8dv", "mid2name": {"ns:m.01g8dv": "Chevrolet Corvette"}, "SExpr_w_name": "(JOIN (R automotive.model.make) (JOIN (R automotive.model.generations) Chevrolet Corvette))", "SExpr": "(JOIN (R automotive.model.make) (JOIN (R automotive.model.generations) m.01g8dv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.094ntzy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.094ntzy ns:physics.particle.antiparticle ?y .\n?y ns:physics.particle_antiparticle.particle ?x .\n}\n", "TopicEntityMid": "m.094ntzy", "mid2name": {"ns:m.094ntzy": "Bottom antiquark"}, "SExpr_w_name": "(JOIN (R physics.particle_antiparticle.particle) (JOIN (R physics.particle.antiparticle) Bottom antiquark))", "SExpr": "(JOIN (R physics.particle_antiparticle.particle) (JOIN (R physics.particle.antiparticle) m.094ntzy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04g51)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04g51 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.04g51", "mid2name": {"ns:m.04g51": "Literature"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Literature))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.04g51))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01l9k47)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01l9k47 ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.01l9k47", "mid2name": {"ns:m.01l9k47": "Non ci badar, guarda e passa..."}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) Non ci badar, guarda e passa...))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.01l9k47))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz9rkf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz9rkf ns:education.department.department_of ?y .\n?y ns:business.employer.employees ?x .\n}\n", "TopicEntityMid": "m.0hz9rkf", "mid2name": {"ns:m.0hz9rkf": "Ingenier\u00eda Inform\u00e1tica"}, "SExpr_w_name": "(JOIN (R business.employer.employees) (JOIN (R education.department.department_of) Ingenier\u00eda Inform\u00e1tica))", "SExpr": "(JOIN (R business.employer.employees) (JOIN (R education.department.department_of) m.0hz9rkf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.1203ng2yx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.1203ng2yx ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.ecology.food_web_member.eaten_by ?x .\n}\n", "TopicEntityMid": "g.1203ng2yx", "mid2name": {"ns:g.1203ng2yx": "Damchi"}, "SExpr_w_name": "(JOIN (R base.ecology.food_web_member.eaten_by) (JOIN (R biology.organism_classification.higher_classification) Damchi))", "SExpr": "(JOIN (R base.ecology.food_web_member.eaten_by) (JOIN (R biology.organism_classification.higher_classification) g.1203ng2yx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wjn0x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wjn0x ns:business.job_title.people_with_this_title ?y .\n?y ns:business.employment_tenure.company ?x .\n}\n", "TopicEntityMid": "m.02wjn0x", "mid2name": {"ns:m.02wjn0x": "Assistant Professor"}, "SExpr_w_name": "(JOIN (R business.employment_tenure.company) (JOIN (R business.job_title.people_with_this_title) Assistant Professor))", "SExpr": "(JOIN (R business.employment_tenure.company) (JOIN (R business.job_title.people_with_this_title) m.02wjn0x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030qb3t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030qb3t ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?y .\n?y ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.030qb3t", "mid2name": {"ns:m.030qb3t": "Los Angeles"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Los Angeles))", "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.030qb3t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n9xkfv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n9xkfv ns:tv.tv_program.country_of_origin ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.0n9xkfv", "mid2name": {"ns:m.0n9xkfv": "Voice of the Voters"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R tv.tv_program.country_of_origin) Voice of the Voters))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R tv.tv_program.country_of_origin) m.0n9xkfv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hzzjp8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hzzjp8 ns:fictional_universe.fictional_universe.species ?y .\n?y ns:fictional_universe.character_species.characters_of_this_species ?x .\n}\n", "TopicEntityMid": "m.0hzzjp8", "mid2name": {"ns:m.0hzzjp8": "ThunderCats"}, "SExpr_w_name": "(JOIN (R fictional_universe.character_species.characters_of_this_species) (JOIN (R fictional_universe.fictional_universe.species) ThunderCats))", "SExpr": "(JOIN (R fictional_universe.character_species.characters_of_this_species) (JOIN (R fictional_universe.fictional_universe.species) m.0hzzjp8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d8gn_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d8gn_ ns:spaceflight.rocket_launch_site.rockets_launched_here ?y .\n?y ns:spaceflight.rocket.launch_sites ?x .\n}\n", "TopicEntityMid": "m.03d8gn_", "mid2name": {"ns:m.03d8gn_": "ELA-1"}, "SExpr_w_name": "(JOIN (R spaceflight.rocket.launch_sites) (JOIN (R spaceflight.rocket_launch_site.rockets_launched_here) ELA-1))", "SExpr": "(JOIN (R spaceflight.rocket.launch_sites) (JOIN (R spaceflight.rocket_launch_site.rockets_launched_here) m.03d8gn_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07g25t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07g25t ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.07g25t", "mid2name": {"ns:m.07g25t": "Jekyll & Hyde"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Jekyll & Hyde))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.07g25t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062t2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062t2 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.062t2", "mid2name": {"ns:m.062t2": "Pain"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Pain))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.062t2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h64)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h64 ns:location.country.administrative_divisions ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03h64", "mid2name": {"ns:m.03h64": "Hong Kong"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R location.country.administrative_divisions) Hong Kong))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R location.country.administrative_divisions) m.03h64))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099hmk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099hmk ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.099hmk", "mid2name": {"ns:m.099hmk": "Chromosome 1 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 1 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.099hmk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07fky9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07fky9 ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.07fky9", "mid2name": {"ns:m.07fky9": "Battersea Railway Bridge"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) Battersea Railway Bridge))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.07fky9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033587)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033587 ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n", "TopicEntityMid": "m.033587", "mid2name": {"ns:m.033587": "Barrie Colts"}, "SExpr_w_name": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) Barrie Colts))", "SExpr": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) m.033587))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c1c78q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c1c78q ns:base.militaryinfiction.event_in_fiction.location ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.0c1c78q", "mid2name": {"ns:m.0c1c78q": "The Band brings gods to Sandia"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R base.militaryinfiction.event_in_fiction.location) The Band brings gods to Sandia))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R base.militaryinfiction.event_in_fiction.location) m.0c1c78q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06kmj1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06kmj1 ns:book.author.works_written ?y .\n?y ns:book.written_work.original_language ?x .\n}\n", "TopicEntityMid": "m.06kmj1", "mid2name": {"ns:m.06kmj1": "J\u00e1nos Arany"}, "SExpr_w_name": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) J\u00e1nos Arany))", "SExpr": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) m.06kmj1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01my95)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01my95 ns:olympics.olympic_athlete.country ?y .\n?y ns:olympics.olympic_athlete_affiliation.country ?x .\n}\n", "TopicEntityMid": "m.01my95", "mid2name": {"ns:m.01my95": "Roger Federer"}, "SExpr_w_name": "(JOIN (R olympics.olympic_athlete_affiliation.country) (JOIN (R olympics.olympic_athlete.country) Roger Federer))", "SExpr": "(JOIN (R olympics.olympic_athlete_affiliation.country) (JOIN (R olympics.olympic_athlete.country) m.01my95))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0b1q0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0b1q0 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0c0b1q0", "mid2name": {"ns:m.0c0b1q0": "Wizard Weather"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Wizard Weather))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0c0b1q0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.081pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.081pw ns:tv.tv_subject.tv_episode_segments ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.081pw", "mid2name": {"ns:m.081pw": "World War II"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R tv.tv_subject.tv_episode_segments) World War II))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R tv.tv_subject.tv_episode_segments) m.081pw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017k6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017k6 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.017k6", "mid2name": {"ns:m.017k6": "Basque Language"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Basque Language))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.017k6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05xr7p_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05xr7p_ ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.05xr7p_", "mid2name": {"ns:m.05xr7p_": "Didier Graffet"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Didier Graffet))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.05xr7p_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g9xrjr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g9xrjr ns:law.legal_case.parties ?y .\n?y ns:law.legal_case_party_relationship.parties ?x .\n}\n", "TopicEntityMid": "m.0g9xrjr", "mid2name": {"ns:m.0g9xrjr": "Silvio Berlusconi prostitute trial"}, "SExpr_w_name": "(JOIN (R law.legal_case_party_relationship.parties) (JOIN (R law.legal_case.parties) Silvio Berlusconi prostitute trial))", "SExpr": "(JOIN (R law.legal_case_party_relationship.parties) (JOIN (R law.legal_case.parties) m.0g9xrjr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rq165q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rq165q ns:business.product_theme.product_lines ?y .\n?y ns:business.product_line.category ?x .\n}\n", "TopicEntityMid": "m.0rq165q", "mid2name": {"ns:m.0rq165q": "Build cloud infrastructures"}, "SExpr_w_name": "(JOIN (R business.product_line.category) (JOIN (R business.product_theme.product_lines) Build cloud infrastructures))", "SExpr": "(JOIN (R business.product_line.category) (JOIN (R business.product_theme.product_lines) m.0rq165q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0238f7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0238f7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0238f7", "mid2name": {"ns:m.0238f7": "Marriage"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Marriage))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0238f7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08_lx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08_lx0 ns:government.political_ideology.political_parties ?y .\n?y ns:base.activism.political_party.supports_issues ?x .\n}\n", "TopicEntityMid": "m.08_lx0", "mid2name": {"ns:m.08_lx0": "Libertarianism"}, "SExpr_w_name": "(JOIN (R base.activism.political_party.supports_issues) (JOIN (R government.political_ideology.political_parties) Libertarianism))", "SExpr": "(JOIN (R base.activism.political_party.supports_issues) (JOIN (R government.political_ideology.political_parties) m.08_lx0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09lr3h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09lr3h ns:travel.accommodation.features ?y .\n?y ns:travel.accommodation_feature.accommodation_with_this_feature ?x .\n}\n", "TopicEntityMid": "m.09lr3h", "mid2name": {"ns:m.09lr3h": "Disney's Yacht Club Resort"}, "SExpr_w_name": "(JOIN (R travel.accommodation_feature.accommodation_with_this_feature) (JOIN (R travel.accommodation.features) Disney's Yacht Club Resort))", "SExpr": "(JOIN (R travel.accommodation_feature.accommodation_with_this_feature) (JOIN (R travel.accommodation.features) m.09lr3h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054slh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054slh ns:olympics.olympic_athlete.demonstration_events_competed_in ?y .\n?y ns:olympics.demonstration_event_athlete_relationship.athlete ?x .\n}\n", "TopicEntityMid": "m.054slh", "mid2name": {"ns:m.054slh": "Dordi Nordby"}, "SExpr_w_name": "(JOIN (R olympics.demonstration_event_athlete_relationship.athlete) (JOIN (R olympics.olympic_athlete.demonstration_events_competed_in) Dordi Nordby))", "SExpr": "(JOIN (R olympics.demonstration_event_athlete_relationship.athlete) (JOIN (R olympics.olympic_athlete.demonstration_events_competed_in) m.054slh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j1cjhj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j1cjhj ns:projects.project.participants ?y .\n?y ns:projects.project_participation.role ?x .\n}\n", "TopicEntityMid": "m.0j1cjhj", "mid2name": {"ns:m.0j1cjhj": "Diamondoid Thin Films as Electron Emitters project"}, "SExpr_w_name": "(JOIN (R projects.project_participation.role) (JOIN (R projects.project.participants) Diamondoid Thin Films as Electron Emitters project))", "SExpr": "(JOIN (R projects.project_participation.role) (JOIN (R projects.project.participants) m.0j1cjhj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0r4j_fq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0r4j_fq ns:soccer.football_league_season.league ?y .\n?y ns:soccer.football_league.governing_body ?x .\n}\n", "TopicEntityMid": "m.0r4j_fq", "mid2name": {"ns:m.0r4j_fq": "2013 Campeonato Brasileiro S\u00e9rie B"}, "SExpr_w_name": "(JOIN (R soccer.football_league.governing_body) (JOIN (R soccer.football_league_season.league) 2013 Campeonato Brasileiro S\u00e9rie B))", "SExpr": "(JOIN (R soccer.football_league.governing_body) (JOIN (R soccer.football_league_season.league) m.0r4j_fq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05pbd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05pbd ns:religion.religion.includes ?y .\n?y ns:religion.religion.founding_figures ?x .\n}\n", "TopicEntityMid": "m.05pbd", "mid2name": {"ns:m.05pbd": "Oriental Orthodoxy"}, "SExpr_w_name": "(JOIN (R religion.religion.founding_figures) (JOIN (R religion.religion.includes) Oriental Orthodoxy))", "SExpr": "(JOIN (R religion.religion.founding_figures) (JOIN (R religion.religion.includes) m.05pbd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bs5g7c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bs5g7c ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.0bs5g7c", "mid2name": {"ns:m.0bs5g7c": "Engine Company 16 Fire Station"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Engine Company 16 Fire Station))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.0bs5g7c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwmk9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwmk9 ns:biology.genomic_locus.annotation ?y .\n?y ns:biology.cytogenetic_band.chromosome ?x .\n}\n", "TopicEntityMid": "m.02kwmk9", "mid2name": {"ns:m.02kwmk9": "Locus for Human Cytogenetic Band 5q35.2"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.chromosome) (JOIN (R biology.genomic_locus.annotation) Locus for Human Cytogenetic Band 5q35.2))", "SExpr": "(JOIN (R biology.cytogenetic_band.chromosome) (JOIN (R biology.genomic_locus.annotation) m.02kwmk9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03krj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03krj ns:organization.organization_sector.organizations_in_this_sector ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03krj", "mid2name": {"ns:m.03krj": "Handball"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R organization.organization_sector.organizations_in_this_sector) Handball))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R organization.organization_sector.organizations_in_this_sector) m.03krj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0459x8h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0459x8h ns:government.election.primaries ?y .\n?y ns:government.election.campaigns ?x .\n}\n", "TopicEntityMid": "m.0459x8h", "mid2name": {"ns:m.0459x8h": "2002 Election, Georgia\u2019s 7th Congressional District"}, "SExpr_w_name": "(JOIN (R government.election.campaigns) (JOIN (R government.election.primaries) 2002 Election, Georgia\u2019s 7th Congressional District))", "SExpr": "(JOIN (R government.election.campaigns) (JOIN (R government.election.primaries) m.0459x8h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.075hqm3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.075hqm3 ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.075hqm3", "mid2name": {"ns:m.075hqm3": "Josef Eisinger"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Josef Eisinger))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.075hqm3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qkbfk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qkbfk ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.child_classifications ?x .\n}\n", "TopicEntityMid": "m.02qkbfk", "mid2name": {"ns:m.02qkbfk": "Molinara"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.child_classifications) (JOIN (R biology.organism_classification.higher_classification) Molinara))", "SExpr": "(JOIN (R biology.organism_classification.child_classifications) (JOIN (R biology.organism_classification.higher_classification) m.02qkbfk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02w1yc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02w1yc ns:computer.software_license.version_of ?y .\n?y ns:computer.software_license.versions ?x .\n}\n", "TopicEntityMid": "m.02w1yc", "mid2name": {"ns:m.02w1yc": "Mozilla Public License"}, "SExpr_w_name": "(JOIN (R computer.software_license.versions) (JOIN (R computer.software_license.version_of) Mozilla Public License))", "SExpr": "(JOIN (R computer.software_license.versions) (JOIN (R computer.software_license.version_of) m.02w1yc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083pzzb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083pzzb ns:food.recipe.author ?y .\n?y ns:food.recipe_author.recipes ?x .\n}\n", "TopicEntityMid": "m.083pzzb", "mid2name": {"ns:m.083pzzb": "Foie Gras Pasta"}, "SExpr_w_name": "(JOIN (R food.recipe_author.recipes) (JOIN (R food.recipe.author) Foie Gras Pasta))", "SExpr": "(JOIN (R food.recipe_author.recipes) (JOIN (R food.recipe.author) m.083pzzb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_g3qj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_g3qj ns:protected_sites.site_listing_category.category_of ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05_g3qj", "mid2name": {"ns:m.05_g3qj": "UWH Cultural Criteria"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R protected_sites.site_listing_category.category_of) UWH Cultural Criteria))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R protected_sites.site_listing_category.category_of) m.05_g3qj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7g7rx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7g7rx ns:fictional_universe.fictional_organization.members ?y .\n?y ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.0h7g7rx", "mid2name": {"ns:m.0h7g7rx": "Honey Airlines"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_organization.members) Honey Airlines))", "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_organization.members) m.0h7g7rx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xmf42g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xmf42g ns:automotive.make.model_s ?y .\n?y ns:automotive.model.generations ?x .\n}\n", "TopicEntityMid": "m.0xmf42g", "mid2name": {"ns:m.0xmf42g": "Pontiac"}, "SExpr_w_name": "(JOIN (R automotive.model.generations) (JOIN (R automotive.make.model_s) Pontiac))", "SExpr": "(JOIN (R automotive.model.generations) (JOIN (R automotive.make.model_s) m.0xmf42g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cyl6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cyl6 ns:base.petbreeds.dog_breed.cities_where_this_dog_is_popular ?y .\n?y ns:base.petbreeds.dog_city_relationship.cities ?x .\n}\n", "TopicEntityMid": "m.02cyl6", "mid2name": {"ns:m.02cyl6": "Maltese"}, "SExpr_w_name": "(JOIN (R base.petbreeds.dog_city_relationship.cities) (JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) Maltese))", "SExpr": "(JOIN (R base.petbreeds.dog_city_relationship.cities) (JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) m.02cyl6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fr8nd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fr8nd ns:aviation.aircraft.model ?y .\n?y ns:aviation.aircraft_model.aircraft ?x .\n}\n", "TopicEntityMid": "m.0fr8nd", "mid2name": {"ns:m.0fr8nd": "Jabit III"}, "SExpr_w_name": "(JOIN (R aviation.aircraft_model.aircraft) (JOIN (R aviation.aircraft.model) Jabit III))", "SExpr": "(JOIN (R aviation.aircraft_model.aircraft) (JOIN (R aviation.aircraft.model) m.0fr8nd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kd_x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kd_x ns:transportation.road.orientation ?y .\n?y ns:transportation.road_orientation.roads_with_this_orientation ?x .\n}\n", "TopicEntityMid": "m.0kd_x", "mid2name": {"ns:m.0kd_x": "US Interstate 5"}, "SExpr_w_name": "(JOIN (R transportation.road_orientation.roads_with_this_orientation) (JOIN (R transportation.road.orientation) US Interstate 5))", "SExpr": "(JOIN (R transportation.road_orientation.roads_with_this_orientation) (JOIN (R transportation.road.orientation) m.0kd_x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j8zw8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j8zw8 ns:user.robert.default_domain.media_consumer.films_watched ?y .\n?y ns:user.robert.default_domain.film_review.film ?x .\n}\n", "TopicEntityMid": "m.0j8zw8", "mid2name": {"ns:m.0j8zw8": "robert"}, "SExpr_w_name": "(JOIN (R user.robert.default_domain.film_review.film) (JOIN (R user.robert.default_domain.media_consumer.films_watched) robert))", "SExpr": "(JOIN (R user.robert.default_domain.film_review.film) (JOIN (R user.robert.default_domain.media_consumer.films_watched) m.0j8zw8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwm_g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwm_g ns:biology.cytogenetic_band.chromosome ?y .\n?y ns:biology.chromosome.band ?x .\n}\n", "TopicEntityMid": "m.02kwm_g", "mid2name": {"ns:m.02kwm_g": "Human Cytogenetic Band 6q13"}, "SExpr_w_name": "(JOIN (R biology.chromosome.band) (JOIN (R biology.cytogenetic_band.chromosome) Human Cytogenetic Band 6q13))", "SExpr": "(JOIN (R biology.chromosome.band) (JOIN (R biology.cytogenetic_band.chromosome) m.02kwm_g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.073g7m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.073g7m ns:business.product_line.producer_s ?y .\n?y ns:business.company_product_line_relationship.company ?x .\n}\n", "TopicEntityMid": "m.073g7m", "mid2name": {"ns:m.073g7m": "Backup software"}, "SExpr_w_name": "(JOIN (R business.company_product_line_relationship.company) (JOIN (R business.product_line.producer_s) Backup software))", "SExpr": "(JOIN (R business.company_product_line_relationship.company) (JOIN (R business.product_line.producer_s) m.073g7m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03nnwsq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03nnwsq ns:broadcast.tv_station_owner.tv_stations ?y .\n?y ns:broadcast.broadcast.area_served ?x .\n}\n", "TopicEntityMid": "m.03nnwsq", "mid2name": {"ns:m.03nnwsq": "Winston Broadcasting Network"}, "SExpr_w_name": "(JOIN (R broadcast.broadcast.area_served) (JOIN (R broadcast.tv_station_owner.tv_stations) Winston Broadcasting Network))", "SExpr": "(JOIN (R broadcast.broadcast.area_served) (JOIN (R broadcast.tv_station_owner.tv_stations) m.03nnwsq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zmb844)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zmb844 ns:book.translation.language ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.0zmb844", "mid2name": {"ns:m.0zmb844": "The Homeric hymns"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R book.translation.language) The Homeric hymns))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R book.translation.language) m.0zmb844))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06xw2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06xw2 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.06xw2", "mid2name": {"ns:m.06xw2": "Search engine"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Search engine))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.06xw2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgll)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgll ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.02kwgll", "mid2name": {"ns:m.02kwgll": "Chromosome 18 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 18 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.02kwgll))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cm859)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cm859 ns:base.formula1.formula_1_team.base ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.03cm859", "mid2name": {"ns:m.03cm859": "Force India"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R base.formula1.formula_1_team.base) Force India))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R base.formula1.formula_1_team.base) m.03cm859))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0108h7yk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0108h7yk ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0108h7yk", "mid2name": {"ns:m.0108h7yk": "Citrus"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Citrus))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0108h7yk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015qh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015qh ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.015qh", "mid2name": {"ns:m.015qh": "Bulgaria"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Bulgaria))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.015qh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09msl0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09msl0 ns:sports.mascot.team ?y .\n?y ns:award.award_nominee.award_nominations ?x .\n}\n", "TopicEntityMid": "m.09msl0", "mid2name": {"ns:m.09msl0": "H'Angus"}, "SExpr_w_name": "(JOIN (R award.award_nominee.award_nominations) (JOIN (R sports.mascot.team) H'Angus))", "SExpr": "(JOIN (R award.award_nominee.award_nominations) (JOIN (R sports.mascot.team) m.09msl0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ngsz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ngsz ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01ngsz", "mid2name": {"ns:m.01ngsz": "Optical telescope"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Optical telescope))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01ngsz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036k5h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036k5h ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.036k5h", "mid2name": {"ns:m.036k5h": "Grey"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Grey))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.036k5h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.040v961)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.040v961 ns:book.written_work.author ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.040v961", "mid2name": {"ns:m.040v961": "Preirradiation chemotherapy with cyclophosphamide, doxorubicin, vincristine, and dexamethasone for primary CNS lymphomas: initial report of radiation therapy oncology group protocol 88-06"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R book.written_work.author) Preirradiation chemotherapy with cyclophosphamide, doxorubicin, vincristine, and dexamethasone for primary CNS lymphomas: initial report of radiation therapy oncology group protocol 88-06))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R book.written_work.author) m.040v961))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fqsd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fqsd ns:base.filmcameras.camera_manufacturer.cameras_manufactured ?y .\n?y ns:base.filmcameras.camera.camera_series ?x .\n}\n", "TopicEntityMid": "m.0fqsd", "mid2name": {"ns:m.0fqsd": "Olympus Corporation"}, "SExpr_w_name": "(JOIN (R base.filmcameras.camera.camera_series) (JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) Olympus Corporation))", "SExpr": "(JOIN (R base.filmcameras.camera.camera_series) (JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) m.0fqsd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059j2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059j2 ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.059j2", "mid2name": {"ns:m.059j2": "Netherlands"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Netherlands))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.059j2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cjjl6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cjjl6 ns:music.genre.artists ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0cjjl6", "mid2name": {"ns:m.0cjjl6": "Sleaze rock"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.genre.artists) Sleaze rock))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.genre.artists) m.0cjjl6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05l0r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05l0r ns:language.human_language.dialects ?y .\n?y ns:language.human_language.language_family ?x .\n}\n", "TopicEntityMid": "m.05l0r", "mid2name": {"ns:m.05l0r": "Occitan language"}, "SExpr_w_name": "(JOIN (R language.human_language.language_family) (JOIN (R language.human_language.dialects) Occitan language))", "SExpr": "(JOIN (R language.human_language.language_family) (JOIN (R language.human_language.dialects) m.05l0r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.076y7_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.076y7_r ns:engineering.engine.category ?y .\n?y ns:base.engineeringdraft.manufactured_component_category.meronyms ?x .\n}\n", "TopicEntityMid": "m.076y7_r", "mid2name": {"ns:m.076y7_r": "Rolls-Royce Eagle XVI"}, "SExpr_w_name": "(JOIN (R base.engineeringdraft.manufactured_component_category.meronyms) (JOIN (R engineering.engine.category) Rolls-Royce Eagle XVI))", "SExpr": "(JOIN (R base.engineeringdraft.manufactured_component_category.meronyms) (JOIN (R engineering.engine.category) m.076y7_r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06_wzv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06_wzv ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.06_wzv", "mid2name": {"ns:m.06_wzv": "Sringeri Sharada Peetham"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) Sringeri Sharada Peetham))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.06_wzv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03f0h4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03f0h4 ns:base.descriptive_names.names.descriptive_name ?y .\n?y ns:base.schemastaging.plural_form.language ?x .\n}\n", "TopicEntityMid": "m.03f0h4", "mid2name": {"ns:m.03f0h4": "Roman temple"}, "SExpr_w_name": "(JOIN (R base.schemastaging.plural_form.language) (JOIN (R base.descriptive_names.names.descriptive_name) Roman temple))", "SExpr": "(JOIN (R base.schemastaging.plural_form.language) (JOIN (R base.descriptive_names.names.descriptive_name) m.03f0h4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0380c9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0380c9 ns:location.location.containedby ?y .\n?y ns:fictional_universe.school_in_fiction.students_graduates ?x .\n}\n", "TopicEntityMid": "m.0380c9", "mid2name": {"ns:m.0380c9": "Byrd Stadium"}, "SExpr_w_name": "(JOIN (R fictional_universe.school_in_fiction.students_graduates) (JOIN (R location.location.containedby) Byrd Stadium))", "SExpr": "(JOIN (R fictional_universe.school_in_fiction.students_graduates) (JOIN (R location.location.containedby) m.0380c9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.069dlf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.069dlf ns:sports.sports_team.roster ?y .\n?y ns:sports.sports_team_roster.player ?x .\n}\n", "TopicEntityMid": "m.069dlf", "mid2name": {"ns:m.069dlf": "Southern California Sun"}, "SExpr_w_name": "(JOIN (R sports.sports_team_roster.player) (JOIN (R sports.sports_team.roster) Southern California Sun))", "SExpr": "(JOIN (R sports.sports_team_roster.player) (JOIN (R sports.sports_team.roster) m.069dlf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k0sb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k0sb ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0k0sb", "mid2name": {"ns:m.0k0sb": "Serbian language"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Serbian language))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0k0sb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hn_sbj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hn_sbj ns:fictional_universe.fictional_universe.characters ?y .\n?y ns:fictional_universe.fictional_character.has_possessed ?x .\n}\n", "TopicEntityMid": "m.0hn_sbj", "mid2name": {"ns:m.0hn_sbj": "Back to the Future"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.has_possessed) (JOIN (R fictional_universe.fictional_universe.characters) Back to the Future))", "SExpr": "(JOIN (R fictional_universe.fictional_character.has_possessed) (JOIN (R fictional_universe.fictional_universe.characters) m.0hn_sbj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wf32_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wf32_ ns:music.composition.composer ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.03wf32_", "mid2name": {"ns:m.03wf32_": "Cinq-Mars"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) Cinq-Mars))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) m.03wf32_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:book.author.works_written ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.07_m9_", "mid2name": {"ns:m.07_m9_": "Adolf Hitler"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R book.author.works_written) Adolf Hitler))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R book.author.works_written) m.07_m9_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03twx9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03twx9 ns:government.governmental_body.body_this_is_a_component_of ?y .\n?y ns:government.governmental_body.jurisdiction ?x .\n}\n", "TopicEntityMid": "m.03twx9", "mid2name": {"ns:m.03twx9": "Georgia House of Representatives"}, "SExpr_w_name": "(JOIN (R government.governmental_body.jurisdiction) (JOIN (R government.governmental_body.body_this_is_a_component_of) Georgia House of Representatives))", "SExpr": "(JOIN (R government.governmental_body.jurisdiction) (JOIN (R government.governmental_body.body_this_is_a_component_of) m.03twx9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023v6y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023v6y ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.023v6y", "mid2name": {"ns:m.023v6y": "David Drake"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) David Drake))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.023v6y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fc68)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fc68 ns:computer.computer_processor.manufacturers ?y .\n?y ns:user.robert.mobile_phones.product_brand.products ?x .\n}\n", "TopicEntityMid": "m.0fc68", "mid2name": {"ns:m.0fc68": "Motorola 88000"}, "SExpr_w_name": "(JOIN (R user.robert.mobile_phones.product_brand.products) (JOIN (R computer.computer_processor.manufacturers) Motorola 88000))", "SExpr": "(JOIN (R user.robert.mobile_phones.product_brand.products) (JOIN (R computer.computer_processor.manufacturers) m.0fc68))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05y5ync)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05y5ync ns:engineering.signal_modulation_mode.parent_modulation ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05y5ync", "mid2name": {"ns:m.05y5ync": "Double sideband modulation"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R engineering.signal_modulation_mode.parent_modulation) Double sideband modulation))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R engineering.signal_modulation_mode.parent_modulation) m.05y5ync))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_8tt9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_8tt9 ns:base.landcover.classification_publication.keywords ?y .\n?y ns:book.book_subject.works ?x .\n}\n", "TopicEntityMid": "m.04_8tt9", "mid2name": {"ns:m.04_8tt9": "Vegetation Classification and Mapping at Allegheny Portage Railroad National Historic Site"}, "SExpr_w_name": "(JOIN (R book.book_subject.works) (JOIN (R base.landcover.classification_publication.keywords) Vegetation Classification and Mapping at Allegheny Portage Railroad National Historic Site))", "SExpr": "(JOIN (R book.book_subject.works) (JOIN (R base.landcover.classification_publication.keywords) m.04_8tt9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jglnr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jglnr ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.01jglnr", "mid2name": {"ns:m.01jglnr": "Wildside"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) Wildside))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.01jglnr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.075z01)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.075z01 ns:location.location.containedby ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.075z01", "mid2name": {"ns:m.075z01": "W. P. Carey School of Business"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) W. P. Carey School of Business))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) m.075z01))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05zppz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05zppz ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.05zppz", "mid2name": {"ns:m.05zppz": "Male"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Male))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.05zppz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nph4c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nph4c ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0nph4c", "mid2name": {"ns:m.0nph4c": "Soft Serve"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Soft Serve))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0nph4c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c20hwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c20hwx ns:time.event.included_in_event ?y .\n?y ns:base.tournaments.tournament.rounds ?x .\n}\n", "TopicEntityMid": "m.0c20hwx", "mid2name": {"ns:m.0c20hwx": "2010 FIFA World Cup Group E - CMR ./. NED"}, "SExpr_w_name": "(JOIN (R base.tournaments.tournament.rounds) (JOIN (R time.event.included_in_event) 2010 FIFA World Cup Group E - CMR ./. NED))", "SExpr": "(JOIN (R base.tournaments.tournament.rounds) (JOIN (R time.event.included_in_event) m.0c20hwx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04y6f5v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04y6f5v ns:computer.computer_processor.manufacturers ?y .\n?y ns:law.patent_assignee.patents_assigned ?x .\n}\n", "TopicEntityMid": "m.04y6f5v", "mid2name": {"ns:m.04y6f5v": "Alpha 21064"}, "SExpr_w_name": "(JOIN (R law.patent_assignee.patents_assigned) (JOIN (R computer.computer_processor.manufacturers) Alpha 21064))", "SExpr": "(JOIN (R law.patent_assignee.patents_assigned) (JOIN (R computer.computer_processor.manufacturers) m.04y6f5v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02w4by3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02w4by3 ns:film.film.costume_design_by ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.02w4by3", "mid2name": {"ns:m.02w4by3": "Camp Rock"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) Camp Rock))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) m.02w4by3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0q35n0d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0q35n0d ns:business.job_title.people_with_this_title ?y .\n?y ns:business.employment_tenure.company ?x .\n}\n", "TopicEntityMid": "m.0q35n0d", "mid2name": {"ns:m.0q35n0d": "Cabaret Shows"}, "SExpr_w_name": "(JOIN (R business.employment_tenure.company) (JOIN (R business.job_title.people_with_this_title) Cabaret Shows))", "SExpr": "(JOIN (R business.employment_tenure.company) (JOIN (R business.job_title.people_with_this_title) m.0q35n0d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07932)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07932 ns:spaceflight.rocket.launch_sites ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.07932", "mid2name": {"ns:m.07932": "Saturn V"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R spaceflight.rocket.launch_sites) Saturn V))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R spaceflight.rocket.launch_sites) m.07932))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.044ngkk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.044ngkk ns:protected_sites.protected_site.system ?y .\n?y ns:protected_sites.park_system.member_parks ?x .\n}\n", "TopicEntityMid": "m.044ngkk", "mid2name": {"ns:m.044ngkk": "Oyster Bay Regional Shoreline"}, "SExpr_w_name": "(JOIN (R protected_sites.park_system.member_parks) (JOIN (R protected_sites.protected_site.system) Oyster Bay Regional Shoreline))", "SExpr": "(JOIN (R protected_sites.park_system.member_parks) (JOIN (R protected_sites.protected_site.system) m.044ngkk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04sfxg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04sfxg ns:location.location.containedby ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.04sfxg", "mid2name": {"ns:m.04sfxg": "Sweet Briar College"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) Sweet Briar College))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) m.04sfxg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tlvj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tlvj ns:music.voice.singers ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.01tlvj", "mid2name": {"ns:m.01tlvj": "Bass-baritone"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.voice.singers) Bass-baritone))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.voice.singers) m.01tlvj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hzb6lk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hzb6lk ns:education.department.department_of ?y .\n?y ns:business.employer.employees ?x .\n}\n", "TopicEntityMid": "m.0hzb6lk", "mid2name": {"ns:m.0hzb6lk": "Especializaci\u00f3n en Gerencia Log\u00edstica"}, "SExpr_w_name": "(JOIN (R business.employer.employees) (JOIN (R education.department.department_of) Especializaci\u00f3n en Gerencia Log\u00edstica))", "SExpr": "(JOIN (R business.employer.employees) (JOIN (R education.department.department_of) m.0hzb6lk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hrh1q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hrh1q ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02hrh1q", "mid2name": {"ns:m.02hrh1q": "Actor"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Actor))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02hrh1q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?y .\n?y ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.05qtj", "mid2name": {"ns:m.05qtj": "Paris"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Paris))", "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.05qtj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wjmnh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wjmnh ns:medicine.drug_administration_route.drug_formulations ?y .\n?y ns:medicine.drug_formulation.active_ingredient_moieties ?x .\n}\n", "TopicEntityMid": "m.02wjmnh", "mid2name": {"ns:m.02wjmnh": "Cutaneous"}, "SExpr_w_name": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.drug_administration_route.drug_formulations) Cutaneous))", "SExpr": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.drug_administration_route.drug_formulations) m.02wjmnh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bmkv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bmkv ns:martial_arts.martial_art.category ?y .\n?y ns:martial_arts.martial_art_category.martial_arts ?x .\n}\n", "TopicEntityMid": "m.0bmkv", "mid2name": {"ns:m.0bmkv": "Qigong"}, "SExpr_w_name": "(JOIN (R martial_arts.martial_art_category.martial_arts) (JOIN (R martial_arts.martial_art.category) Qigong))", "SExpr": "(JOIN (R martial_arts.martial_art_category.martial_arts) (JOIN (R martial_arts.martial_art.category) m.0bmkv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f85g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f85g ns:base.descriptive_names.names.descriptive_name ?y .\n?y ns:base.schemastaging.plural_form.language ?x .\n}\n", "TopicEntityMid": "m.0f85g", "mid2name": {"ns:m.0f85g": "Basilica"}, "SExpr_w_name": "(JOIN (R base.schemastaging.plural_form.language) (JOIN (R base.descriptive_names.names.descriptive_name) Basilica))", "SExpr": "(JOIN (R base.schemastaging.plural_form.language) (JOIN (R base.descriptive_names.names.descriptive_name) m.0f85g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hdnxj3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hdnxj3 ns:projects.project.participants ?y .\n?y ns:projects.project_participation.role ?x .\n}\n", "TopicEntityMid": "m.0hdnxj3", "mid2name": {"ns:m.0hdnxj3": "Cochran Lab : Engineered Knottins as Molecular Imaging Agents"}, "SExpr_w_name": "(JOIN (R projects.project_participation.role) (JOIN (R projects.project.participants) Cochran Lab : Engineered Knottins as Molecular Imaging Agents))", "SExpr": "(JOIN (R projects.project_participation.role) (JOIN (R projects.project.participants) m.0hdnxj3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02y1p_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02y1p_ ns:music.group_member.membership ?y .\n?y ns:music.group_membership.group ?x .\n}\n", "TopicEntityMid": "m.02y1p_", "mid2name": {"ns:m.02y1p_": "Leisha Hailey"}, "SExpr_w_name": "(JOIN (R music.group_membership.group) (JOIN (R music.group_member.membership) Leisha Hailey))", "SExpr": "(JOIN (R music.group_membership.group) (JOIN (R music.group_member.membership) m.02y1p_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01271h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01271h ns:music.artist.genre ?y .\n?y ns:base.collectives.collective_focus.collectives ?x .\n}\n", "TopicEntityMid": "m.01271h", "mid2name": {"ns:m.01271h": "Trent Reznor"}, "SExpr_w_name": "(JOIN (R base.collectives.collective_focus.collectives) (JOIN (R music.artist.genre) Trent Reznor))", "SExpr": "(JOIN (R base.collectives.collective_focus.collectives) (JOIN (R music.artist.genre) m.01271h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c81wwy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c81wwy ns:fictional_universe.fictional_character.has_possessed ?y .\n?y ns:fictional_universe.fictional_object.composition ?x .\n}\n", "TopicEntityMid": "m.0c81wwy", "mid2name": {"ns:m.0c81wwy": "Tr\u00f4s, founder of Troy"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.composition) (JOIN (R fictional_universe.fictional_character.has_possessed) Tr\u00f4s, founder of Troy))", "SExpr": "(JOIN (R fictional_universe.fictional_object.composition) (JOIN (R fictional_universe.fictional_character.has_possessed) m.0c81wwy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zzwfy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zzwfy ns:music.release.album ?y .\n?y ns:music.album.acquire_webpage ?x .\n}\n", "TopicEntityMid": "m.03zzwfy", "mid2name": {"ns:m.03zzwfy": "Q Presents: Glastonbury 2003"}, "SExpr_w_name": "(JOIN (R music.album.acquire_webpage) (JOIN (R music.release.album) Q Presents: Glastonbury 2003))", "SExpr": "(JOIN (R music.album.acquire_webpage) (JOIN (R music.release.album) m.03zzwfy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011tyq2b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011tyq2b ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.011tyq2b", "mid2name": {"ns:m.011tyq2b": "Swiss\u00f4tel Dresden"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Swiss\u00f4tel Dresden))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.011tyq2b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.041st)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.041st ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.041st", "mid2name": {"ns:m.041st": "Jean-Michel Basquiat"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Jean-Michel Basquiat))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.041st))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_8wg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_8wg ns:fictional_universe.fictional_object.featured_in_fictional_universe ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.04_8wg", "mid2name": {"ns:m.04_8wg": "Sun Crusher"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_object.featured_in_fictional_universe) Sun Crusher))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_object.featured_in_fictional_universe) m.04_8wg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rzrcf5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rzrcf5 ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0rzrcf5", "mid2name": {"ns:m.0rzrcf5": "Mads Haahr"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Mads Haahr))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0rzrcf5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_0m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_0m ns:base.inaugurations.inauguration_speaker.inauguration ?y .\n?y ns:time.event.instance_of_recurring_event ?x .\n}\n", "TopicEntityMid": "m.04_0m", "mid2name": {"ns:m.04_0m": "Martin Van Buren"}, "SExpr_w_name": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) Martin Van Buren))", "SExpr": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.04_0m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033mmj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033mmj ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.033mmj", "mid2name": {"ns:m.033mmj": "Corsair"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Corsair))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.033mmj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03y165f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03y165f ns:astronomy.asteroid.member_of_asteroid_group ?y .\n?y ns:astronomy.asteroid_group.asteroid_group_members ?x .\n}\n", "TopicEntityMid": "m.03y165f", "mid2name": {"ns:m.03y165f": "5878 Charlene"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid_group.asteroid_group_members) (JOIN (R astronomy.asteroid.member_of_asteroid_group) 5878 Charlene))", "SExpr": "(JOIN (R astronomy.asteroid_group.asteroid_group_members) (JOIN (R astronomy.asteroid.member_of_asteroid_group) m.03y165f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqs5vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqs5vv ns:medicine.drug_formulation.active_ingredient_moieties ?y .\n?y ns:medicine.drug_ingredient.active_ingredient_of_formulation ?x .\n}\n", "TopicEntityMid": "m.0hqs5vv", "mid2name": {"ns:m.0hqs5vv": "Penicillium chrysogenum var. chrysogenum 6 liquid"}, "SExpr_w_name": "(JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) Penicillium chrysogenum var. chrysogenum 6 liquid))", "SExpr": "(JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqs5vv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cwxh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cwxh ns:fictional_universe.fictional_character.character_created_by ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03cwxh", "mid2name": {"ns:m.03cwxh": "Jon Talbain"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.character_created_by) Jon Talbain))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.character_created_by) m.03cwxh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bm9td_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bm9td_ ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.0bm9td_", "mid2name": {"ns:m.0bm9td_": "Swiss\u00f4tel Krasnye Holmy Moscow"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) Swiss\u00f4tel Krasnye Holmy Moscow))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.0bm9td_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06jd163)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06jd163 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.06jd163", "mid2name": {"ns:m.06jd163": "The Sigma rhapsody of the Iliad"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) The Sigma rhapsody of the Iliad))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.06jd163))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04zl7p4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04zl7p4 ns:location.location.street_address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "TopicEntityMid": "m.04zl7p4", "mid2name": {"ns:m.04zl7p4": "Semiahmoo Golf and Country Club"}, "SExpr_w_name": "(JOIN (R location.mailing_address.citytown) (JOIN (R location.location.street_address) Semiahmoo Golf and Country Club))", "SExpr": "(JOIN (R location.mailing_address.citytown) (JOIN (R location.location.street_address) m.04zl7p4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jcm_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jcm_ ns:royalty.royal_line.preceded_by ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.01jcm_", "mid2name": {"ns:m.01jcm_": "House of Hesse"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R royalty.royal_line.preceded_by) House of Hesse))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R royalty.royal_line.preceded_by) m.01jcm_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zd6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zd6 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0zd6", "mid2name": {"ns:m.0zd6": "Macintosh"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Macintosh))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0zd6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04yqhp0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04yqhp0 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.04yqhp0", "mid2name": {"ns:m.04yqhp0": "Lonely Planet Signspotting 2"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Lonely Planet Signspotting 2))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.04yqhp0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02v3qq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02v3qq ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.02v3qq", "mid2name": {"ns:m.02v3qq": "Alice Waters"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Alice Waters))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.02v3qq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09kqc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09kqc ns:base.webvideo.internet_video_genre.internet_video ?y .\n?y ns:base.webvideo.internet_video.performances ?x .\n}\n", "TopicEntityMid": "m.09kqc", "mid2name": {"ns:m.09kqc": "Humour"}, "SExpr_w_name": "(JOIN (R base.webvideo.internet_video.performances) (JOIN (R base.webvideo.internet_video_genre.internet_video) Humour))", "SExpr": "(JOIN (R base.webvideo.internet_video.performances) (JOIN (R base.webvideo.internet_video_genre.internet_video) m.09kqc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jdd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jdd ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.0jdd", "mid2name": {"ns:m.0jdd": "Afghanistan"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Afghanistan))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.0jdd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t21 ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.07t21", "mid2name": {"ns:m.07t21": "Ukraine"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Ukraine))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.07t21))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ljc6_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ljc6_ ns:olympics.olympic_athlete.country ?y .\n?y ns:olympics.olympic_athlete_affiliation.country ?x .\n}\n", "TopicEntityMid": "m.04ljc6_", "mid2name": {"ns:m.04ljc6_": "Laurent Sciarra"}, "SExpr_w_name": "(JOIN (R olympics.olympic_athlete_affiliation.country) (JOIN (R olympics.olympic_athlete.country) Laurent Sciarra))", "SExpr": "(JOIN (R olympics.olympic_athlete_affiliation.country) (JOIN (R olympics.olympic_athlete.country) m.04ljc6_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.061w14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.061w14 ns:book.periodical.publisher ?y .\n?y ns:book.periodical_publisher_period.publisher ?x .\n}\n", "TopicEntityMid": "m.061w14", "mid2name": {"ns:m.061w14": "The Wanderer"}, "SExpr_w_name": "(JOIN (R book.periodical_publisher_period.publisher) (JOIN (R book.periodical.publisher) The Wanderer))", "SExpr": "(JOIN (R book.periodical_publisher_period.publisher) (JOIN (R book.periodical.publisher) m.061w14))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01v7bp9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01v7bp9 ns:music.artist.track ?y .\n?y ns:music.recording.tracks ?x .\n}\n", "TopicEntityMid": "m.01v7bp9", "mid2name": {"ns:m.01v7bp9": "Sierra Leone"}, "SExpr_w_name": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) Sierra Leone))", "SExpr": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) m.01v7bp9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hfk6k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hfk6k ns:user.techgnostic.default_domain.publishing_cycle.periodicals ?y .\n?y ns:user.techgnostic.default_domain.periodical.subject ?x .\n}\n", "TopicEntityMid": "m.02hfk6k", "mid2name": {"ns:m.02hfk6k": "Monthly"}, "SExpr_w_name": "(JOIN (R user.techgnostic.default_domain.periodical.subject) (JOIN (R user.techgnostic.default_domain.publishing_cycle.periodicals) Monthly))", "SExpr": "(JOIN (R user.techgnostic.default_domain.periodical.subject) (JOIN (R user.techgnostic.default_domain.publishing_cycle.periodicals) m.02hfk6k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09qck)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09qck ns:biology.organism_classification.rank ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.09qck", "mid2name": {"ns:m.09qck": "Banana"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.rank) Banana))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.rank) m.09qck))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bs4kt6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bs4kt6 ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.0bs4kt6", "mid2name": {"ns:m.0bs4kt6": "Baitul Hamd, Mississauga"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Baitul Hamd, Mississauga))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.0bs4kt6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0167gd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0167gd ns:business.product_category.product_lines ?y .\n?y ns:business.product_line.brand ?x .\n}\n", "TopicEntityMid": "m.0167gd", "mid2name": {"ns:m.0167gd": "Doll"}, "SExpr_w_name": "(JOIN (R business.product_line.brand) (JOIN (R business.product_category.product_lines) Doll))", "SExpr": "(JOIN (R business.product_line.brand) (JOIN (R business.product_category.product_lines) m.0167gd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h1by7z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h1by7z ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.species ?x .\n}\n", "TopicEntityMid": "m.0h1by7z", "mid2name": {"ns:m.0h1by7z": "Snarf"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.species) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Snarf))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.species) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0h1by7z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03p0wkv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03p0wkv ns:wine.vineyard.wines ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.03p0wkv", "mid2name": {"ns:m.03p0wkv": "Braccialini Vineyard"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R wine.vineyard.wines) Braccialini Vineyard))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R wine.vineyard.wines) m.03p0wkv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c6d4nx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c6d4nx ns:book.book_edition.book ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0c6d4nx", "mid2name": {"ns:m.0c6d4nx": "Mrs. Sappho : the life of C.A. Dawson Scott, mother of International P.E.N."}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) Mrs. Sappho : the life of C.A. Dawson Scott, mother of International P.E.N.))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) m.0c6d4nx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qdy2w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qdy2w ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.05qdy2w", "mid2name": {"ns:m.05qdy2w": "Warren Ellis' Bad Signal"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Warren Ellis' Bad Signal))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.05qdy2w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ch8hcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ch8hcq ns:fictional_universe.fictional_universe.organizations ?y .\n?y ns:military.military_unit.servicemembers ?x .\n}\n", "TopicEntityMid": "m.0ch8hcq", "mid2name": {"ns:m.0ch8hcq": "The Sacred Band of Stepsons universe"}, "SExpr_w_name": "(JOIN (R military.military_unit.servicemembers) (JOIN (R fictional_universe.fictional_universe.organizations) The Sacred Band of Stepsons universe))", "SExpr": "(JOIN (R military.military_unit.servicemembers) (JOIN (R fictional_universe.fictional_universe.organizations) m.0ch8hcq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v6dnt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v6dnt ns:food.candy_bar_manufacturer.candy_bars ?y .\n?y ns:food.candy_bar.sold_in ?x .\n}\n", "TopicEntityMid": "m.04v6dnt", "mid2name": {"ns:m.04v6dnt": "Fox-Cross Candy Company"}, "SExpr_w_name": "(JOIN (R food.candy_bar.sold_in) (JOIN (R food.candy_bar_manufacturer.candy_bars) Fox-Cross Candy Company))", "SExpr": "(JOIN (R food.candy_bar.sold_in) (JOIN (R food.candy_bar_manufacturer.candy_bars) m.04v6dnt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07fj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07fj_ ns:location.country.administrative_divisions ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.07fj_", "mid2name": {"ns:m.07fj_": "Tunisia"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R location.country.administrative_divisions) Tunisia))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R location.country.administrative_divisions) m.07fj_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05hr6vf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05hr6vf ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05hr6vf", "mid2name": {"ns:m.05hr6vf": "Benjamin Paloff"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Benjamin Paloff))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.05hr6vf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c3qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c3qy ns:astronomy.astronomical_discovery.discoverer ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.0c3qy", "mid2name": {"ns:m.0c3qy": "Pluto"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R astronomy.astronomical_discovery.discoverer) Pluto))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R astronomy.astronomical_discovery.discoverer) m.0c3qy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06hdcj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06hdcj ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.06hdcj", "mid2name": {"ns:m.06hdcj": "Race"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Race))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.06hdcj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05syg67)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05syg67 ns:soccer.football_league_season.league ?y .\n?y ns:time.recurring_event.instances ?x .\n}\n", "TopicEntityMid": "m.05syg67", "mid2name": {"ns:m.05syg67": "2008\u201309 Azerbaijan First Division"}, "SExpr_w_name": "(JOIN (R time.recurring_event.instances) (JOIN (R soccer.football_league_season.league) 2008\u201309 Azerbaijan First Division))", "SExpr": "(JOIN (R time.recurring_event.instances) (JOIN (R soccer.football_league_season.league) m.05syg67))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08xrvc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08xrvc ns:base.peleton.cycling_team_professional.team_national_headquarters_location ?y .\n?y ns:base.peleton.cycling_team_based_at.country ?x .\n}\n", "TopicEntityMid": "m.08xrvc", "mid2name": {"ns:m.08xrvc": "Team Ag2r-La Mondiale"}, "SExpr_w_name": "(JOIN (R base.peleton.cycling_team_based_at.country) (JOIN (R base.peleton.cycling_team_professional.team_national_headquarters_location) Team Ag2r-La Mondiale))", "SExpr": "(JOIN (R base.peleton.cycling_team_based_at.country) (JOIN (R base.peleton.cycling_team_professional.team_national_headquarters_location) m.08xrvc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07h_qp5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07h_qp5 ns:olympics.olympic_event.competitions ?y .\n?y ns:olympics.olympic_event_competition.medalists ?x .\n}\n", "TopicEntityMid": "m.07h_qp5", "mid2name": {"ns:m.07h_qp5": "Men's freestyle Wrestling, Welterweight 68-74 kg"}, "SExpr_w_name": "(JOIN (R olympics.olympic_event_competition.medalists) (JOIN (R olympics.olympic_event.competitions) Men's freestyle Wrestling, Welterweight 68-74 kg))", "SExpr": "(JOIN (R olympics.olympic_event_competition.medalists) (JOIN (R olympics.olympic_event.competitions) m.07h_qp5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz1v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz1v ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0hz1v", "mid2name": {"ns:m.0hz1v": "Connection Machine"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Connection Machine))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.0hz1v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03c073t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03c073t ns:food.dish.cuisine ?y .\n?y ns:base.ontologies.ontology_instance.equivalent_instances ?x .\n}\n", "TopicEntityMid": "m.03c073t", "mid2name": {"ns:m.03c073t": "Hotteok"}, "SExpr_w_name": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R food.dish.cuisine) Hotteok))", "SExpr": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R food.dish.cuisine) m.03c073t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pmfw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pmfw ns:base.filmcameras.camera_manufacturer.cameras_manufactured ?y .\n?y ns:business.consumer_product.category ?x .\n}\n", "TopicEntityMid": "m.03pmfw", "mid2name": {"ns:m.03pmfw": "Nikon Corporation"}, "SExpr_w_name": "(JOIN (R business.consumer_product.category) (JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) Nikon Corporation))", "SExpr": "(JOIN (R business.consumer_product.category) (JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) m.03pmfw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02fy0z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02fy0z ns:education.educational_institution.school_magazines ?y .\n?y ns:book.magazine.genre ?x .\n}\n", "TopicEntityMid": "m.02fy0z", "mid2name": {"ns:m.02fy0z": "Ohio University"}, "SExpr_w_name": "(JOIN (R book.magazine.genre) (JOIN (R education.educational_institution.school_magazines) Ohio University))", "SExpr": "(JOIN (R book.magazine.genre) (JOIN (R education.educational_institution.school_magazines) m.02fy0z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059n9cg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059n9cg ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.governmental_body ?x .\n}\n", "TopicEntityMid": "m.059n9cg", "mid2name": {"ns:m.059n9cg": "High Court of Northern Ireland Judge"}, "SExpr_w_name": "(JOIN (R government.government_position_held.governmental_body) (JOIN (R government.government_office_or_title.office_holders) High Court of Northern Ireland Judge))", "SExpr": "(JOIN (R government.government_position_held.governmental_body) (JOIN (R government.government_office_or_title.office_holders) m.059n9cg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r_z8w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r_z8w ns:fictional_universe.fictional_character.character_created_by ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.02r_z8w", "mid2name": {"ns:m.02r_z8w": "Andy Fox"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R fictional_universe.fictional_character.character_created_by) Andy Fox))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R fictional_universe.fictional_character.character_created_by) m.02r_z8w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_hgblp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_hgblp ns:food.recipe.dish ?y .\n?y ns:symbols.namesake.named_after ?x .\n}\n", "TopicEntityMid": "m.0_hgblp", "mid2name": {"ns:m.0_hgblp": "Bloody Mary recipe"}, "SExpr_w_name": "(JOIN (R symbols.namesake.named_after) (JOIN (R food.recipe.dish) Bloody Mary recipe))", "SExpr": "(JOIN (R symbols.namesake.named_after) (JOIN (R food.recipe.dish) m.0_hgblp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bp5ybq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bp5ybq ns:base.skosbase.skos_concept.in_scheme ?y .\n?y ns:base.skosbase.skos_concept_scheme.concepts ?x .\n}\n", "TopicEntityMid": "m.0bp5ybq", "mid2name": {"ns:m.0bp5ybq": "Dental care"}, "SExpr_w_name": "(JOIN (R base.skosbase.skos_concept_scheme.concepts) (JOIN (R base.skosbase.skos_concept.in_scheme) Dental care))", "SExpr": "(JOIN (R base.skosbase.skos_concept_scheme.concepts) (JOIN (R base.skosbase.skos_concept.in_scheme) m.0bp5ybq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bq3x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bq3x ns:fictional_universe.character_occupation.characters_with_this_occupation ?y .\n?y ns:comic_books.comic_book_character.created_by ?x .\n}\n", "TopicEntityMid": "m.0bq3x", "mid2name": {"ns:m.0bq3x": "Serial killer"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_character.created_by) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) Serial killer))", "SExpr": "(JOIN (R comic_books.comic_book_character.created_by) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) m.0bq3x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dkdx3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dkdx3d ns:fictional_universe.fictional_universe.characters ?y .\n?y ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.0dkdx3d", "mid2name": {"ns:m.0dkdx3d": "Sonic Team's NiGHTS Universe"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_universe.characters) Sonic Team's NiGHTS Universe))", "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_universe.characters) m.0dkdx3d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j157r0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j157r0 ns:theater.theater_character.plays_appears_in ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0j157r0", "mid2name": {"ns:m.0j157r0": "Earl of Warwick"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R theater.theater_character.plays_appears_in) Earl of Warwick))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R theater.theater_character.plays_appears_in) m.0j157r0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0br7dp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0br7dp ns:olympics.olympic_venue.olympic_games_used_in ?y .\n?y ns:time.event.includes_event ?x .\n}\n", "TopicEntityMid": "m.0br7dp", "mid2name": {"ns:m.0br7dp": "Palau Sant Jordi"}, "SExpr_w_name": "(JOIN (R time.event.includes_event) (JOIN (R olympics.olympic_venue.olympic_games_used_in) Palau Sant Jordi))", "SExpr": "(JOIN (R time.event.includes_event) (JOIN (R olympics.olympic_venue.olympic_games_used_in) m.0br7dp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027jtll)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027jtll ns:film.film.costume_design_by ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.027jtll", "mid2name": {"ns:m.027jtll": "Benito"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) Benito))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) m.027jtll))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lp8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lp8 ns:religion.religion.places_of_worship_historical ?y .\n?y ns:religion.place_of_worship_historical_use.place_of_worship ?x .\n}\n", "TopicEntityMid": "m.01lp8", "mid2name": {"ns:m.01lp8": "Christianity"}, "SExpr_w_name": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) Christianity))", "SExpr": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) m.01lp8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11vt9ngk5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11vt9ngk5 ns:computer.computer.compatible_oses ?y .\n?y ns:computer.os_compatibility.operating_system ?x .\n}\n", "TopicEntityMid": "g.11vt9ngk5", "mid2name": {"ns:g.11vt9ngk5": "iMac G5"}, "SExpr_w_name": "(JOIN (R computer.os_compatibility.operating_system) (JOIN (R computer.computer.compatible_oses) iMac G5))", "SExpr": "(JOIN (R computer.os_compatibility.operating_system) (JOIN (R computer.computer.compatible_oses) g.11vt9ngk5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gq8gh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gq8gh ns:sports.sports_team.colors ?y .\n?y ns:biology.breed_coloring.breeds ?x .\n}\n", "TopicEntityMid": "m.03gq8gh", "mid2name": {"ns:m.03gq8gh": "Duke Blue Devils football"}, "SExpr_w_name": "(JOIN (R biology.breed_coloring.breeds) (JOIN (R sports.sports_team.colors) Duke Blue Devils football))", "SExpr": "(JOIN (R biology.breed_coloring.breeds) (JOIN (R sports.sports_team.colors) m.03gq8gh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08crjqk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08crjqk ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.08crjqk", "mid2name": {"ns:m.08crjqk": "Malvasia Estremadura"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) Malvasia Estremadura))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.08crjqk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04sv4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04sv4 ns:base.morelaw.plaintiff.lawsuits ?y .\n?y ns:law.legal_case.parties ?x .\n}\n", "TopicEntityMid": "m.04sv4", "mid2name": {"ns:m.04sv4": "Microsoft Corporation"}, "SExpr_w_name": "(JOIN (R law.legal_case.parties) (JOIN (R base.morelaw.plaintiff.lawsuits) Microsoft Corporation))", "SExpr": "(JOIN (R law.legal_case.parties) (JOIN (R base.morelaw.plaintiff.lawsuits) m.04sv4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lpp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lpp7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02lpp7", "mid2name": {"ns:m.02lpp7": "Gold medal"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Gold medal))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02lpp7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gz4f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gz4f ns:olympics.olympic_host_city.olympics_hosted ?y .\n?y ns:time.event.includes_event ?x .\n}\n", "TopicEntityMid": "m.0gz4f", "mid2name": {"ns:m.0gz4f": "Albertville"}, "SExpr_w_name": "(JOIN (R time.event.includes_event) (JOIN (R olympics.olympic_host_city.olympics_hosted) Albertville))", "SExpr": "(JOIN (R time.event.includes_event) (JOIN (R olympics.olympic_host_city.olympics_hosted) m.0gz4f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03595y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03595y ns:spaceflight.space_agency.astronauts ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03595y", "mid2name": {"ns:m.03595y": "JAXA"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R spaceflight.space_agency.astronauts) JAXA))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R spaceflight.space_agency.astronauts) m.03595y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0djtd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0djtd ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.0djtd", "mid2name": {"ns:m.0djtd": "Coconut"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Coconut))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.0djtd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b9qxg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b9qxg ns:fictional_universe.work_of_fiction.setting ?y .\n?y ns:fictional_universe.fictional_setting.works_set_here ?x .\n}\n", "TopicEntityMid": "m.05b9qxg", "mid2name": {"ns:m.05b9qxg": "Film Flam"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.works_set_here) (JOIN (R fictional_universe.work_of_fiction.setting) Film Flam))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.works_set_here) (JOIN (R fictional_universe.work_of_fiction.setting) m.05b9qxg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03dq9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03dq9 ns:tv.tv_writer.tv_segments_written ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03dq9", "mid2name": {"ns:m.03dq9": "Graham Chapman"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R tv.tv_writer.tv_segments_written) Graham Chapman))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R tv.tv_writer.tv_segments_written) m.03dq9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bj7hzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bj7hzh ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0bj7hzh", "mid2name": {"ns:m.0bj7hzh": "Comparative Syntax of Old English and Old Icelandic"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Comparative Syntax of Old English and Old Icelandic))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0bj7hzh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y4f8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y4f8 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0y4f8", "mid2name": {"ns:m.0y4f8": "Vocal music"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Vocal music))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0y4f8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqmwkp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqmwkp ns:medicine.manufactured_drug_form.available_in ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.0hqmwkp", "mid2name": {"ns:m.0hqmwkp": "Anti-Bacterial Moisturizing Hand Citrus Crush 3 soap"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R medicine.manufactured_drug_form.available_in) Anti-Bacterial Moisturizing Hand Citrus Crush 3 soap))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R medicine.manufactured_drug_form.available_in) m.0hqmwkp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0csf14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0csf14 ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0csf14", "mid2name": {"ns:m.0csf14": "Barakzai Dynasty"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Barakzai Dynasty))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0csf14))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018vnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018vnz ns:business.consumer_product.brand ?y .\n?y ns:business.brand.owner_s ?x .\n}\n", "TopicEntityMid": "m.018vnz", "mid2name": {"ns:m.018vnz": "Corn flakes"}, "SExpr_w_name": "(JOIN (R business.brand.owner_s) (JOIN (R business.consumer_product.brand) Corn flakes))", "SExpr": "(JOIN (R business.brand.owner_s) (JOIN (R business.consumer_product.brand) m.018vnz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cnmkn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cnmkn5 ns:geography.geographical_feature_category.subcategory_of ?y .\n?y ns:geography.geographical_feature_category.subcategories ?x .\n}\n", "TopicEntityMid": "m.0cnmkn5", "mid2name": {"ns:m.0cnmkn5": "Undersea peak"}, "SExpr_w_name": "(JOIN (R geography.geographical_feature_category.subcategories) (JOIN (R geography.geographical_feature_category.subcategory_of) Undersea peak))", "SExpr": "(JOIN (R geography.geographical_feature_category.subcategories) (JOIN (R geography.geographical_feature_category.subcategory_of) m.0cnmkn5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hzzhcv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hzzhcv ns:fictional_universe.fictional_universe.languages ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.0hzzhcv", "mid2name": {"ns:m.0hzzhcv": "Shameless"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R fictional_universe.fictional_universe.languages) Shameless))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R fictional_universe.fictional_universe.languages) m.0hzzhcv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0457y47)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0457y47 ns:computer.computer_processor.variants ?y .\n?y ns:computer.computer_processor.manufacturers ?x .\n}\n", "TopicEntityMid": "m.0457y47", "mid2name": {"ns:m.0457y47": "PIC16F88"}, "SExpr_w_name": "(JOIN (R computer.computer_processor.manufacturers) (JOIN (R computer.computer_processor.variants) PIC16F88))", "SExpr": "(JOIN (R computer.computer_processor.manufacturers) (JOIN (R computer.computer_processor.variants) m.0457y47))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07kf84d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07kf84d ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.07kf84d", "mid2name": {"ns:m.07kf84d": "Nevado Las Agujas"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) Nevado Las Agujas))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.07kf84d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n3dvh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n3dvh ns:wine.wine_region.wines ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.04n3dvh", "mid2name": {"ns:m.04n3dvh": "Bucelas DOC"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R wine.wine_region.wines) Bucelas DOC))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R wine.wine_region.wines) m.04n3dvh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_7c_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_7c_ ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03_7c_", "mid2name": {"ns:m.03_7c_": "Fudai daimyo"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Fudai daimyo))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03_7c_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bw_l1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bw_l1 ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03bw_l1", "mid2name": {"ns:m.03bw_l1": "Accipitrinae"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.higher_classification) Accipitrinae))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.higher_classification) m.03bw_l1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0111b1n5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0111b1n5 ns:time.month.calendar_system ?y .\n?y ns:time.calendar.months ?x .\n}\n", "TopicEntityMid": "m.0111b1n5", "mid2name": {"ns:m.0111b1n5": "Ra\u1e25mat"}, "SExpr_w_name": "(JOIN (R time.calendar.months) (JOIN (R time.month.calendar_system) Ra\u1e25mat))", "SExpr": "(JOIN (R time.calendar.months) (JOIN (R time.month.calendar_system) m.0111b1n5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.069pc08)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.069pc08 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.069pc08", "mid2name": {"ns:m.069pc08": "The Shaker spiritual"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) The Shaker spiritual))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.069pc08))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.097485)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.097485 ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.097485", "mid2name": {"ns:m.097485": "Cowboy Curtis"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Cowboy Curtis))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.097485))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jqtdv1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jqtdv1 ns:tv.tv_rating_system.jurisdiction ?y .\n?y ns:location.country.administrative_divisions ?x .\n}\n", "TopicEntityMid": "m.0jqtdv1", "mid2name": {"ns:m.0jqtdv1": "South Korean television rating system"}, "SExpr_w_name": "(JOIN (R location.country.administrative_divisions) (JOIN (R tv.tv_rating_system.jurisdiction) South Korean television rating system))", "SExpr": "(JOIN (R location.country.administrative_divisions) (JOIN (R tv.tv_rating_system.jurisdiction) m.0jqtdv1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059d5x_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059d5x_ ns:comic_books.comic_book_series.publisher ?y .\n?y ns:book.publishing_company.books_published ?x .\n}\n", "TopicEntityMid": "m.059d5x_", "mid2name": {"ns:m.059d5x_": "Nexus Meets Madman"}, "SExpr_w_name": "(JOIN (R book.publishing_company.books_published) (JOIN (R comic_books.comic_book_series.publisher) Nexus Meets Madman))", "SExpr": "(JOIN (R book.publishing_company.books_published) (JOIN (R comic_books.comic_book_series.publisher) m.059d5x_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0536n6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0536n6 ns:location.location.containedby ?y .\n?y ns:base.folklore.mythology.mythical_creatures ?x .\n}\n", "TopicEntityMid": "m.0536n6", "mid2name": {"ns:m.0536n6": "Drin"}, "SExpr_w_name": "(JOIN (R base.folklore.mythology.mythical_creatures) (JOIN (R location.location.containedby) Drin))", "SExpr": "(JOIN (R base.folklore.mythology.mythical_creatures) (JOIN (R location.location.containedby) m.0536n6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.043thwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.043thwx ns:comic_books.comic_book_issue.part_of_series ?y .\n?y ns:award.award_nominated_work.award_nominations ?x .\n}\n", "TopicEntityMid": "m.043thwx", "mid2name": {"ns:m.043thwx": "Y: The Last Man #53"}, "SExpr_w_name": "(JOIN (R award.award_nominated_work.award_nominations) (JOIN (R comic_books.comic_book_issue.part_of_series) Y: The Last Man #53))", "SExpr": "(JOIN (R award.award_nominated_work.award_nominations) (JOIN (R comic_books.comic_book_issue.part_of_series) m.043thwx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gb731)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gb731 ns:astronomy.astronomical_discovery.status ?y .\n?y ns:astronomy.astronomical_discovery_status.objects ?x .\n}\n", "TopicEntityMid": "m.0gb731", "mid2name": {"ns:m.0gb731": "Eris"}, "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery_status.objects) (JOIN (R astronomy.astronomical_discovery.status) Eris))", "SExpr": "(JOIN (R astronomy.astronomical_discovery_status.objects) (JOIN (R astronomy.astronomical_discovery.status) m.0gb731))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078tg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078tg ns:religion.religion.branched_into ?y .\n?y ns:symbols.namesake.named_after ?x .\n}\n", "TopicEntityMid": "m.078tg", "mid2name": {"ns:m.078tg": "Sunni Islam"}, "SExpr_w_name": "(JOIN (R symbols.namesake.named_after) (JOIN (R religion.religion.branched_into) Sunni Islam))", "SExpr": "(JOIN (R symbols.namesake.named_after) (JOIN (R religion.religion.branched_into) m.078tg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025yr5d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025yr5d ns:architecture.tower_shape.lighthouse_has_shape ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.025yr5d", "mid2name": {"ns:m.025yr5d": "Skeletal tower"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R architecture.tower_shape.lighthouse_has_shape) Skeletal tower))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R architecture.tower_shape.lighthouse_has_shape) m.025yr5d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0857zb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0857zb ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.0857zb", "mid2name": {"ns:m.0857zb": "Superstar Limo"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Superstar Limo))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.0857zb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gb_t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gb_t ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.05gb_t", "mid2name": {"ns:m.05gb_t": "ThoughtWorks"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) ThoughtWorks))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.05gb_t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wlxw6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wlxw6 ns:time.holiday_category.holidays ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03wlxw6", "mid2name": {"ns:m.03wlxw6": "US holiday"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.holiday_category.holidays) US holiday))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.holiday_category.holidays) m.03wlxw6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0407zvl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0407zvl ns:spaceflight.rocket.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.0407zvl", "mid2name": {"ns:m.0407zvl": "Sputnik"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R spaceflight.rocket.manufacturer) Sputnik))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R spaceflight.rocket.manufacturer) m.0407zvl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gf8800)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gf8800 ns:sports.tournament_event.competitions ?y .\n?y ns:time.event.included_in_event ?x .\n}\n", "TopicEntityMid": "m.0gf8800", "mid2name": {"ns:m.0gf8800": "Women's Wheelchair Tennis, Doubles"}, "SExpr_w_name": "(JOIN (R time.event.included_in_event) (JOIN (R sports.tournament_event.competitions) Women's Wheelchair Tennis, Doubles))", "SExpr": "(JOIN (R time.event.included_in_event) (JOIN (R sports.tournament_event.competitions) m.0gf8800))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ffldm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ffldm ns:music.composition.composer ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0ffldm", "mid2name": {"ns:m.0ffldm": "Il Pigmalione"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) Il Pigmalione))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) m.0ffldm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v3gs4f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v3gs4f ns:food.beer_style.alcohol_by_volume_range ?y .\n?y ns:measurement_unit.floating_point_range.high_value ?x .\n}\n", "TopicEntityMid": "m.0v3gs4f", "mid2name": {"ns:m.0v3gs4f": "American Pale Ale"}, "SExpr_w_name": "(JOIN (R measurement_unit.floating_point_range.high_value) (JOIN (R food.beer_style.alcohol_by_volume_range) American Pale Ale))", "SExpr": "(JOIN (R measurement_unit.floating_point_range.high_value) (JOIN (R food.beer_style.alcohol_by_volume_range) m.0v3gs4f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07fqfw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07fqfw ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.07fqfw", "mid2name": {"ns:m.07fqfw": "Vandenberg AFB Space Launch Complex 3"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Vandenberg AFB Space Launch Complex 3))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.07fqfw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.097zh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.097zh ns:business.employer.employees ?y .\n?y ns:business.employment_tenure.person ?x .\n}\n", "TopicEntityMid": "m.097zh", "mid2name": {"ns:m.097zh": "Think tank"}, "SExpr_w_name": "(JOIN (R business.employment_tenure.person) (JOIN (R business.employer.employees) Think tank))", "SExpr": "(JOIN (R business.employment_tenure.person) (JOIN (R business.employer.employees) m.097zh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_g7klh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_g7klh ns:tv.sequence_of_tv_episode_segments.tv_series ?y .\n?y ns:tv.tv_program.languages ?x .\n}\n", "TopicEntityMid": "m.0_g7klh", "mid2name": {"ns:m.0_g7klh": "Formidable Opponent"}, "SExpr_w_name": "(JOIN (R tv.tv_program.languages) (JOIN (R tv.sequence_of_tv_episode_segments.tv_series) Formidable Opponent))", "SExpr": "(JOIN (R tv.tv_program.languages) (JOIN (R tv.sequence_of_tv_episode_segments.tv_series) m.0_g7klh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nwzb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nwzb ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0nwzb", "mid2name": {"ns:m.0nwzb": "Gerald Jay Sussman"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Gerald Jay Sussman))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.0nwzb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01l1yv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01l1yv ns:religion.religion.is_part_of ?y .\n?y ns:religion.religion.branched_into ?x .\n}\n", "TopicEntityMid": "m.01l1yv", "mid2name": {"ns:m.01l1yv": "Shafi'i"}, "SExpr_w_name": "(JOIN (R religion.religion.branched_into) (JOIN (R religion.religion.is_part_of) Shafi'i))", "SExpr": "(JOIN (R religion.religion.branched_into) (JOIN (R religion.religion.is_part_of) m.01l1yv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0268yl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0268yl ns:computer.programming_language.influenced_by ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.0268yl", "mid2name": {"ns:m.0268yl": "J#"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) J#))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) m.0268yl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03khhv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03khhv ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03khhv", "mid2name": {"ns:m.03khhv": "Present"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Present))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03khhv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.068nsv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.068nsv ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n", "TopicEntityMid": "m.068nsv", "mid2name": {"ns:m.068nsv": "Denver Spurs"}, "SExpr_w_name": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) Denver Spurs))", "SExpr": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) m.068nsv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07h8pg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07h8pg ns:royalty.royal_line.succeeded_by ?y .\n?y ns:royalty.royal_line.preceded_by ?x .\n}\n", "TopicEntityMid": "m.07h8pg", "mid2name": {"ns:m.07h8pg": "P\u0159emyslid dynasty"}, "SExpr_w_name": "(JOIN (R royalty.royal_line.preceded_by) (JOIN (R royalty.royal_line.succeeded_by) P\u0159emyslid dynasty))", "SExpr": "(JOIN (R royalty.royal_line.preceded_by) (JOIN (R royalty.royal_line.succeeded_by) m.07h8pg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qc8zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qc8zq ns:engineering.battery_size.shape_format ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03qc8zq", "mid2name": {"ns:m.03qc8zq": "D battery"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R engineering.battery_size.shape_format) D battery))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R engineering.battery_size.shape_format) m.03qc8zq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b2t9b8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b2t9b8 ns:book.book_edition_series.part_of_series ?y .\n?y ns:book.book_edition_series.sub_series ?x .\n}\n", "TopicEntityMid": "m.0b2t9b8", "mid2name": {"ns:m.0b2t9b8": "Malthus and the Population Controversy 1803-1830"}, "SExpr_w_name": "(JOIN (R book.book_edition_series.sub_series) (JOIN (R book.book_edition_series.part_of_series) Malthus and the Population Controversy 1803-1830))", "SExpr": "(JOIN (R book.book_edition_series.sub_series) (JOIN (R book.book_edition_series.part_of_series) m.0b2t9b8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j8b37t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j8b37t ns:theater.theater_character.plays_appears_in ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0j8b37t", "mid2name": {"ns:m.0j8b37t": "Hippolyto"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R theater.theater_character.plays_appears_in) Hippolyto))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R theater.theater_character.plays_appears_in) m.0j8b37t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgjm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgjm ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.02kwgjm", "mid2name": {"ns:m.02kwgjm": "Chromosome 9 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 9 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.02kwgjm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s9lq0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s9lq0 ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.01s9lq0", "mid2name": {"ns:m.01s9lq0": "Ronan Tynan"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Ronan Tynan))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.01s9lq0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015y2c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015y2c ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.015y2c", "mid2name": {"ns:m.015y2c": "Atmospheric sciences"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Atmospheric sciences))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.015y2c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k6nt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k6nt ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.0k6nt", "mid2name": {"ns:m.0k6nt": "Denmark"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Denmark))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.0k6nt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hwf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hwf ns:book.book_subject.works ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0hwf", "mid2name": {"ns:m.0hwf": "Alphabet"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R book.book_subject.works) Alphabet))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R book.book_subject.works) m.0hwf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059cjgk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059cjgk ns:book.book_edition.binding ?y .\n?y ns:business.consumer_product.brand ?x .\n}\n", "TopicEntityMid": "m.059cjgk", "mid2name": {"ns:m.059cjgk": "The Prince"}, "SExpr_w_name": "(JOIN (R business.consumer_product.brand) (JOIN (R book.book_edition.binding) The Prince))", "SExpr": "(JOIN (R business.consumer_product.brand) (JOIN (R book.book_edition.binding) m.059cjgk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vx4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vx4 ns:organization.club_interest.clubs ?y .\n?y ns:sports.sports_team.league ?x .\n}\n", "TopicEntityMid": "m.02vx4", "mid2name": {"ns:m.02vx4": "Football"}, "SExpr_w_name": "(JOIN (R sports.sports_team.league) (JOIN (R organization.club_interest.clubs) Football))", "SExpr": "(JOIN (R sports.sports_team.league) (JOIN (R organization.club_interest.clubs) m.02vx4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b07p4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b07p4 ns:visual_art.visual_art_form.artists ?y .\n?y ns:visual_art.visual_artist.art_series ?x .\n}\n", "TopicEntityMid": "m.0b07p4", "mid2name": {"ns:m.0b07p4": "Ceramic art"}, "SExpr_w_name": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.visual_art_form.artists) Ceramic art))", "SExpr": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.visual_art_form.artists) m.0b07p4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04559mv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04559mv ns:broadcast.content.broadcast ?y .\n?y ns:broadcast.podcast_feed.media_format ?x .\n}\n", "TopicEntityMid": "m.04559mv", "mid2name": {"ns:m.04559mv": "Warp Drive Active"}, "SExpr_w_name": "(JOIN (R broadcast.podcast_feed.media_format) (JOIN (R broadcast.content.broadcast) Warp Drive Active))", "SExpr": "(JOIN (R broadcast.podcast_feed.media_format) (JOIN (R broadcast.content.broadcast) m.04559mv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dtdq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dtdq ns:religion.religion.is_part_of ?y .\n?y ns:religion.religion.places_of_worship_historical ?x .\n}\n", "TopicEntityMid": "m.0dtdq", "mid2name": {"ns:m.0dtdq": "Jehovah's Witnesses"}, "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religion.is_part_of) Jehovah's Witnesses))", "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religion.is_part_of) m.0dtdq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1pc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1pc ns:user.narphorium.default_domain.job_title.professions ?y .\n?y ns:base.descriptive_names.names.descriptive_name ?x .\n}\n", "TopicEntityMid": "m.0d1pc", "mid2name": {"ns:m.0d1pc": "Model"}, "SExpr_w_name": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R user.narphorium.default_domain.job_title.professions) Model))", "SExpr": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R user.narphorium.default_domain.job_title.professions) m.0d1pc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n1h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n1h ns:user.narphorium.default_domain.job_title.professions ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0n1h", "mid2name": {"ns:m.0n1h": "Artist"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R user.narphorium.default_domain.job_title.professions) Artist))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R user.narphorium.default_domain.job_title.professions) m.0n1h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030p0gc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030p0gc ns:tv.tv_rating.tv_episodes ?y .\n?y ns:tv.tv_series_episode.director ?x .\n}\n", "TopicEntityMid": "m.030p0gc", "mid2name": {"ns:m.030p0gc": "TV G"}, "SExpr_w_name": "(JOIN (R tv.tv_series_episode.director) (JOIN (R tv.tv_rating.tv_episodes) TV G))", "SExpr": "(JOIN (R tv.tv_series_episode.director) (JOIN (R tv.tv_rating.tv_episodes) m.030p0gc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbwp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbwp ns:medicine.medical_trial.phase ?y .\n?y ns:medicine.medical_trial_phase.medical_trials ?x .\n}\n", "TopicEntityMid": "m.03zbbwp", "mid2name": {"ns:m.03zbbwp": "Hypertension Prevention Trial (HPT) Feasibility Study"}, "SExpr_w_name": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) Hypertension Prevention Trial (HPT) Feasibility Study))", "SExpr": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) m.03zbbwp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j3gcqw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j3gcqw ns:broadcast.radio_station.owner ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.0j3gcqw", "mid2name": {"ns:m.0j3gcqw": "Pro FM"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R broadcast.radio_station.owner) Pro FM))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R broadcast.radio_station.owner) m.0j3gcqw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vd9tq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vd9tq ns:music.group_member.membership ?y .\n?y ns:music.group_membership.group ?x .\n}\n", "TopicEntityMid": "m.07vd9tq", "mid2name": {"ns:m.07vd9tq": "Amanda Louise Marchant"}, "SExpr_w_name": "(JOIN (R music.group_membership.group) (JOIN (R music.group_member.membership) Amanda Louise Marchant))", "SExpr": "(JOIN (R music.group_membership.group) (JOIN (R music.group_member.membership) m.07vd9tq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ch8w02)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ch8w02 ns:fictional_universe.fictional_object.created_by ?y .\n?y ns:base.folklore.mythical_creature.mythology ?x .\n}\n", "TopicEntityMid": "m.0ch8w02", "mid2name": {"ns:m.0ch8w02": "Thunderbolt"}, "SExpr_w_name": "(JOIN (R base.folklore.mythical_creature.mythology) (JOIN (R fictional_universe.fictional_object.created_by) Thunderbolt))", "SExpr": "(JOIN (R base.folklore.mythical_creature.mythology) (JOIN (R fictional_universe.fictional_object.created_by) m.0ch8w02))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b91z_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b91z_ ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.0b91z_", "mid2name": {"ns:m.0b91z_": "Danish National Symphony Orchestra"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Danish National Symphony Orchestra))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.0b91z_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pxmq4g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pxmq4g ns:computer.computer_peripheral.compatible_computers ?y .\n?y ns:computer.computer.compatible_oses ?x .\n}\n", "TopicEntityMid": "m.0pxmq4g", "mid2name": {"ns:m.0pxmq4g": "Drive Controllers-Drive Controllers"}, "SExpr_w_name": "(JOIN (R computer.computer.compatible_oses) (JOIN (R computer.computer_peripheral.compatible_computers) Drive Controllers-Drive Controllers))", "SExpr": "(JOIN (R computer.computer.compatible_oses) (JOIN (R computer.computer_peripheral.compatible_computers) m.0pxmq4g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.032yyw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.032yyw ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.032yyw", "mid2name": {"ns:m.032yyw": "Alex Ross"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Alex Ross))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.032yyw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y4lg88)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y4lg88 ns:computer.computer.compatible_oses ?y .\n?y ns:computer.os_compatibility.operating_system ?x .\n}\n", "TopicEntityMid": "m.0y4lg88", "mid2name": {"ns:m.0y4lg88": "Samsung Galaxy S4 Zoom"}, "SExpr_w_name": "(JOIN (R computer.os_compatibility.operating_system) (JOIN (R computer.computer.compatible_oses) Samsung Galaxy S4 Zoom))", "SExpr": "(JOIN (R computer.os_compatibility.operating_system) (JOIN (R computer.computer.compatible_oses) m.0y4lg88))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m079j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m079j ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.03m079j", "mid2name": {"ns:m.03m079j": "2005 Grey Wolf \"Big Bad Wolf, Evelyn's Estate Vineyard\" Paso Robles Zinfandel"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) 2005 Grey Wolf \"Big Bad Wolf, Evelyn's Estate Vineyard\" Paso Robles Zinfandel))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.03m079j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pdsw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pdsw ns:food.culinary_tool.used_in_recipes ?y .\n?y ns:food.recipe.equipment ?x .\n}\n", "TopicEntityMid": "m.02pdsw", "mid2name": {"ns:m.02pdsw": "Cutting board"}, "SExpr_w_name": "(JOIN (R food.recipe.equipment) (JOIN (R food.culinary_tool.used_in_recipes) Cutting board))", "SExpr": "(JOIN (R food.recipe.equipment) (JOIN (R food.culinary_tool.used_in_recipes) m.02pdsw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w7nwc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w7nwc ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.01w7nwc", "mid2name": {"ns:m.01w7nwc": "Necro"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Necro))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.01w7nwc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fm4bb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fm4bb ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.0fm4bb", "mid2name": {"ns:m.0fm4bb": "Andaz West Hollywood"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) Andaz West Hollywood))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.0fm4bb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tkhdn3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tkhdn3 ns:location.location.containedby ?y .\n?y ns:olympics.olympic_bidding_city.olympics_bid_on ?x .\n}\n", "TopicEntityMid": "m.0tkhdn3", "mid2name": {"ns:m.0tkhdn3": "Metropolitan Vancouver Hotel"}, "SExpr_w_name": "(JOIN (R olympics.olympic_bidding_city.olympics_bid_on) (JOIN (R location.location.containedby) Metropolitan Vancouver Hotel))", "SExpr": "(JOIN (R olympics.olympic_bidding_city.olympics_bid_on) (JOIN (R location.location.containedby) m.0tkhdn3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6_pt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6_pt ns:music.guitar.guitarists ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0g6_pt", "mid2name": {"ns:m.0g6_pt": "ESP Horizon"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.guitar.guitarists) ESP Horizon))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.guitar.guitarists) m.0g6_pt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045wv1r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045wv1r ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.045wv1r", "mid2name": {"ns:m.045wv1r": "2004 Alesia \"Kanzler Vineyard\" Sonoma Coast Pinot Noir"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) 2004 Alesia \"Kanzler Vineyard\" Sonoma Coast Pinot Noir))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.045wv1r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04rs63)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04rs63 ns:meteorology.tropical_cyclone_season.strongest_storm ?y .\n?y ns:meteorology.tropical_cyclone.affected_areas ?x .\n}\n", "TopicEntityMid": "m.04rs63", "mid2name": {"ns:m.04rs63": "2006 Atlantic hurricane season"}, "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone.affected_areas) (JOIN (R meteorology.tropical_cyclone_season.strongest_storm) 2006 Atlantic hurricane season))", "SExpr": "(JOIN (R meteorology.tropical_cyclone.affected_areas) (JOIN (R meteorology.tropical_cyclone_season.strongest_storm) m.04rs63))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099xng)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099xng ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.099xng", "mid2name": {"ns:m.099xng": "Chromosome 14 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 14 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.099xng))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ph675)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ph675 ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.01ph675", "mid2name": {"ns:m.01ph675": "Cyrano de Bergerac"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) Cyrano de Bergerac))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.01ph675))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0724shv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0724shv ns:location.location.containedby ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0724shv", "mid2name": {"ns:m.0724shv": "Faeroes"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R location.location.containedby) Faeroes))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R location.location.containedby) m.0724shv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04pxs4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04pxs4 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.04pxs4", "mid2name": {"ns:m.04pxs4": "Arthur Waskow"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Arthur Waskow))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.04pxs4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06sff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06sff ns:location.country.administrative_divisions ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.06sff", "mid2name": {"ns:m.06sff": "San Marino"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R location.country.administrative_divisions) San Marino))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R location.country.administrative_divisions) m.06sff))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dc60vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dc60vr ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?y .\n?y ns:fictional_universe.fictional_character.has_possessed ?x .\n}\n", "TopicEntityMid": "m.0dc60vr", "mid2name": {"ns:m.0dc60vr": "Lemuria"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.has_possessed) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Lemuria))", "SExpr": "(JOIN (R fictional_universe.fictional_character.has_possessed) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.0dc60vr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0b06z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0b06z ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0c0b06z", "mid2name": {"ns:m.0c0b06z": "Red Light, Love Light"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Red Light, Love Light))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0c0b06z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hz97f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hz97f ns:internet.api.site ?y .\n?y ns:internet.website.category ?x .\n}\n", "TopicEntityMid": "m.02hz97f", "mid2name": {"ns:m.02hz97f": "Digg API"}, "SExpr_w_name": "(JOIN (R internet.website.category) (JOIN (R internet.api.site) Digg API))", "SExpr": "(JOIN (R internet.website.category) (JOIN (R internet.api.site) m.02hz97f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05f4p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05f4p ns:spaceflight.space_agency.astronauts ?y .\n?y ns:user.alexbl.congressional_voting_records.congressional_member.voted_on ?x .\n}\n", "TopicEntityMid": "m.05f4p", "mid2name": {"ns:m.05f4p": "NASA"}, "SExpr_w_name": "(JOIN (R user.alexbl.congressional_voting_records.congressional_member.voted_on) (JOIN (R spaceflight.space_agency.astronauts) NASA))", "SExpr": "(JOIN (R user.alexbl.congressional_voting_records.congressional_member.voted_on) (JOIN (R spaceflight.space_agency.astronauts) m.05f4p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m3mgq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m3mgq ns:user.narphorium.default_domain.job_title.professions ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03m3mgq", "mid2name": {"ns:m.03m3mgq": "Computer Scientist"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R user.narphorium.default_domain.job_title.professions) Computer Scientist))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R user.narphorium.default_domain.job_title.professions) m.03m3mgq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03p34_5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03p34_5 ns:business.business_operation.industry ?y .\n?y ns:base.descriptive_names.names.descriptive_name ?x .\n}\n", "TopicEntityMid": "m.03p34_5", "mid2name": {"ns:m.03p34_5": "Silicon Laboratories, Inc."}, "SExpr_w_name": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R business.business_operation.industry) Silicon Laboratories, Inc.))", "SExpr": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R business.business_operation.industry) m.03p34_5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbw6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbw6 ns:medicine.medical_trial.references ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.03zbbw6", "mid2name": {"ns:m.03zbbw6": "Rapid Evaluation of Amantadine for Treatment of Cocaine Abuse/Dependence \u2013 4"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R medicine.medical_trial.references) Rapid Evaluation of Amantadine for Treatment of Cocaine Abuse/Dependence \u2013 4))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R medicine.medical_trial.references) m.03zbbw6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.049ph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.049ph ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.049ph", "mid2name": {"ns:m.049ph": "Klingon language"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Klingon language))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.049ph))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09k39q8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09k39q8 ns:music.concert_tour.concert_films_or_videos ?y .\n?y ns:music.concert_tour.live_recordings ?x .\n}\n", "TopicEntityMid": "m.09k39q8", "mid2name": {"ns:m.09k39q8": "Selena Live 2010"}, "SExpr_w_name": "(JOIN (R music.concert_tour.live_recordings) (JOIN (R music.concert_tour.concert_films_or_videos) Selena Live 2010))", "SExpr": "(JOIN (R music.concert_tour.live_recordings) (JOIN (R music.concert_tour.concert_films_or_videos) m.09k39q8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h6676)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h6676 ns:base.descriptive_names.names.descriptive_name ?y .\n?y ns:base.schemastaging.plural_form.gender ?x .\n}\n", "TopicEntityMid": "m.02h6676", "mid2name": {"ns:m.02h6676": "Editor"}, "SExpr_w_name": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.descriptive_names.names.descriptive_name) Editor))", "SExpr": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.descriptive_names.names.descriptive_name) m.02h6676))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06hzpc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06hzpc ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.06hzpc", "mid2name": {"ns:m.06hzpc": "Gran Canaria Airport"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Gran Canaria Airport))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.06hzpc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fc1x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fc1x ns:astronomy.galactic_cluster.galaxy_groups ?y .\n?y ns:astronomy.celestial_object.category ?x .\n}\n", "TopicEntityMid": "m.01fc1x", "mid2name": {"ns:m.01fc1x": "Virgo Cluster"}, "SExpr_w_name": "(JOIN (R astronomy.celestial_object.category) (JOIN (R astronomy.galactic_cluster.galaxy_groups) Virgo Cluster))", "SExpr": "(JOIN (R astronomy.celestial_object.category) (JOIN (R astronomy.galactic_cluster.galaxy_groups) m.01fc1x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xrf_g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xrf_g ns:digicams.camera_iso.cameras ?y .\n?y ns:business.consumer_product.brand ?x .\n}\n", "TopicEntityMid": "m.01xrf_g", "mid2name": {"ns:m.01xrf_g": "400"}, "SExpr_w_name": "(JOIN (R business.consumer_product.brand) (JOIN (R digicams.camera_iso.cameras) 400))", "SExpr": "(JOIN (R business.consumer_product.brand) (JOIN (R digicams.camera_iso.cameras) m.01xrf_g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ch295r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ch295r ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0ch295r", "mid2name": {"ns:m.0ch295r": "Wayne Reynolds"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Wayne Reynolds))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.0ch295r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gc_y_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gc_y_ ns:broadcast.broadcast.area_served ?y .\n?y ns:olympics.olympic_bidding_city.olympics_bid_on ?x .\n}\n", "TopicEntityMid": "m.0gc_y_", "mid2name": {"ns:m.0gc_y_": "WDMK"}, "SExpr_w_name": "(JOIN (R olympics.olympic_bidding_city.olympics_bid_on) (JOIN (R broadcast.broadcast.area_served) WDMK))", "SExpr": "(JOIN (R olympics.olympic_bidding_city.olympics_bid_on) (JOIN (R broadcast.broadcast.area_served) m.0gc_y_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dhv_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dhv_ ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.04dhv_", "mid2name": {"ns:m.04dhv_": "Marcel Breuer"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Marcel Breuer))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.04dhv_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0wskvrp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0wskvrp ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.0wskvrp", "mid2name": {"ns:m.0wskvrp": "Executive Tower J"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Executive Tower J))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.0wskvrp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bj5k_k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bj5k_k ns:book.author.works_written ?y .\n?y ns:book.written_work.original_language ?x .\n}\n", "TopicEntityMid": "m.0bj5k_k", "mid2name": {"ns:m.0bj5k_k": "Jim Morekis"}, "SExpr_w_name": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) Jim Morekis))", "SExpr": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) m.0bj5k_k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.080ntlp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.080ntlp ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.080ntlp", "mid2name": {"ns:m.080ntlp": "Diplomat"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Diplomat))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.080ntlp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pwnh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pwnh ns:visual_art.visual_artist.art_series ?y .\n?y ns:visual_art.art_series.artworks ?x .\n}\n", "TopicEntityMid": "m.0pwnh", "mid2name": {"ns:m.0pwnh": "Peter Paul Rubens"}, "SExpr_w_name": "(JOIN (R visual_art.art_series.artworks) (JOIN (R visual_art.visual_artist.art_series) Peter Paul Rubens))", "SExpr": "(JOIN (R visual_art.art_series.artworks) (JOIN (R visual_art.visual_artist.art_series) m.0pwnh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0401q5t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0401q5t ns:music.release.album ?y .\n?y ns:music.album.artist ?x .\n}\n", "TopicEntityMid": "m.0401q5t", "mid2name": {"ns:m.0401q5t": "The Joan Baez Ballad Book"}, "SExpr_w_name": "(JOIN (R music.album.artist) (JOIN (R music.release.album) The Joan Baez Ballad Book))", "SExpr": "(JOIN (R music.album.artist) (JOIN (R music.release.album) m.0401q5t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b9rhl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b9rhl ns:fictional_universe.work_of_fiction.setting ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05b9rhl", "mid2name": {"ns:m.05b9rhl": "We Are Atomic"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.work_of_fiction.setting) We Are Atomic))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.work_of_fiction.setting) m.05b9rhl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dvp10)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dvp10 ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.0dvp10", "mid2name": {"ns:m.0dvp10": "California\u2019s 15th congressional district"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) California\u2019s 15th congressional district))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.0dvp10))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dxh1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dxh1 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0dxh1", "mid2name": {"ns:m.0dxh1": "Emergency medical services"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Emergency medical services))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0dxh1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nspz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nspz ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.05nspz", "mid2name": {"ns:m.05nspz": "Motoko Kusanagi"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Motoko Kusanagi))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.05nspz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0w1d32m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0w1d32m ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0w1d32m", "mid2name": {"ns:m.0w1d32m": "Armed Forces of Ukraine"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Armed Forces of Ukraine))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0w1d32m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r56y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r56y ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.05r56y", "mid2name": {"ns:m.05r56y": "Cat Cora"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Cat Cora))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.05r56y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h7_q9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h7_q9 ns:time.day_of_year.calendar_system ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02h7_q9", "mid2name": {"ns:m.02h7_q9": "Thursday before Easter"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.day_of_year.calendar_system) Thursday before Easter))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.day_of_year.calendar_system) m.02h7_q9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pkdm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pkdm ns:government.governmental_body.body_this_is_a_component_of ?y .\n?y ns:base.ontologies.ontology_instance.equivalent_instances ?x .\n}\n", "TopicEntityMid": "m.03pkdm", "mid2name": {"ns:m.03pkdm": "United States District Court for the District of Maryland"}, "SExpr_w_name": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R government.governmental_body.body_this_is_a_component_of) United States District Court for the District of Maryland))", "SExpr": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R government.governmental_body.body_this_is_a_component_of) m.03pkdm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mzfjkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mzfjkj ns:government.election_poll.election ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0mzfjkj", "mid2name": {"ns:m.0mzfjkj": "American Research Group, 2012 presidential election, 2012-09-10"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R government.election_poll.election) American Research Group, 2012 presidential election, 2012-09-10))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R government.election_poll.election) m.0mzfjkj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03g3w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03g3w ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03g3w", "mid2name": {"ns:m.03g3w": "History"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) History))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03g3w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pc5w2c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pc5w2c ns:time.holiday_period.holidays ?y .\n?y ns:base.saints.feast_day.places_celebrated ?x .\n}\n", "TopicEntityMid": "m.0pc5w2c", "mid2name": {"ns:m.0pc5w2c": "Jul"}, "SExpr_w_name": "(JOIN (R base.saints.feast_day.places_celebrated) (JOIN (R time.holiday_period.holidays) Jul))", "SExpr": "(JOIN (R base.saints.feast_day.places_celebrated) (JOIN (R time.holiday_period.holidays) m.0pc5w2c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078m85)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078m85 ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.child_classifications ?x .\n}\n", "TopicEntityMid": "m.078m85", "mid2name": {"ns:m.078m85": "Muscadelle"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.child_classifications) (JOIN (R biology.organism_classification.higher_classification) Muscadelle))", "SExpr": "(JOIN (R biology.organism_classification.child_classifications) (JOIN (R biology.organism_classification.higher_classification) m.078m85))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zd4m6b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zd4m6b ns:business.brand.owner_s ?y .\n?y ns:business.company_brand_relationship.company ?x .\n}\n", "TopicEntityMid": "m.0zd4m6b", "mid2name": {"ns:m.0zd4m6b": "Galbani"}, "SExpr_w_name": "(JOIN (R business.company_brand_relationship.company) (JOIN (R business.brand.owner_s) Galbani))", "SExpr": "(JOIN (R business.company_brand_relationship.company) (JOIN (R business.brand.owner_s) m.0zd4m6b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fwx6k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fwx6k ns:tv.tv_subject.tv_episodes ?y .\n?y ns:tv.tv_series_episode.director ?x .\n}\n", "TopicEntityMid": "m.0fwx6k", "mid2name": {"ns:m.0fwx6k": "Youth ministry"}, "SExpr_w_name": "(JOIN (R tv.tv_series_episode.director) (JOIN (R tv.tv_subject.tv_episodes) Youth ministry))", "SExpr": "(JOIN (R tv.tv_series_episode.director) (JOIN (R tv.tv_subject.tv_episodes) m.0fwx6k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fmf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fmf ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.05fmf", "mid2name": {"ns:m.05fmf": "Nitric acid"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Nitric acid))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.05fmf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cfn07)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cfn07 ns:engineering.channel_access_method.parent_method ?y .\n?y ns:engineering.channel_access_method.child_method ?x .\n}\n", "TopicEntityMid": "m.03cfn07", "mid2name": {"ns:m.03cfn07": "Contention"}, "SExpr_w_name": "(JOIN (R engineering.channel_access_method.child_method) (JOIN (R engineering.channel_access_method.parent_method) Contention))", "SExpr": "(JOIN (R engineering.channel_access_method.child_method) (JOIN (R engineering.channel_access_method.parent_method) m.03cfn07))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hqp3h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hqp3h ns:comic_books.comic_book_issue.editor ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.02hqp3h", "mid2name": {"ns:m.02hqp3h": "The X-Men #1"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R comic_books.comic_book_issue.editor) The X-Men #1))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R comic_books.comic_book_issue.editor) m.02hqp3h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01317jrt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01317jrt ns:visual_art.art_series.artworks ?y .\n?y ns:visual_art.artwork.artist ?x .\n}\n", "TopicEntityMid": "m.01317jrt", "mid2name": {"ns:m.01317jrt": "The Chanson Fran\u00e7aise Show"}, "SExpr_w_name": "(JOIN (R visual_art.artwork.artist) (JOIN (R visual_art.art_series.artworks) The Chanson Fran\u00e7aise Show))", "SExpr": "(JOIN (R visual_art.artwork.artist) (JOIN (R visual_art.art_series.artworks) m.01317jrt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01k6v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01k6v ns:organization.organization.place_founded ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.01k6v", "mid2name": {"ns:m.01k6v": "Bacardi"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R organization.organization.place_founded) Bacardi))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R organization.organization.place_founded) m.01k6v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.066hvz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.066hvz ns:opera.opera.premiere_production ?y .\n?y ns:opera.opera_production.producing_company ?x .\n}\n", "TopicEntityMid": "m.066hvz", "mid2name": {"ns:m.066hvz": "La rondine"}, "SExpr_w_name": "(JOIN (R opera.opera_production.producing_company) (JOIN (R opera.opera.premiere_production) La rondine))", "SExpr": "(JOIN (R opera.opera_production.producing_company) (JOIN (R opera.opera.premiere_production) m.066hvz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbx9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbx9 ns:medicine.medical_trial.phase ?y .\n?y ns:medicine.medical_trial_phase.medical_trials ?x .\n}\n", "TopicEntityMid": "m.03zbbx9", "mid2name": {"ns:m.03zbbx9": "Physicians' Health Study"}, "SExpr_w_name": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) Physicians' Health Study))", "SExpr": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) m.03zbbx9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cm8sv1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cm8sv1 ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.0cm8sv1", "mid2name": {"ns:m.0cm8sv1": "Surtees Bridge"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) Surtees Bridge))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.0cm8sv1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0bg9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0bg9c ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0c0bg9c", "mid2name": {"ns:m.0c0bg9c": "iPhone 4"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) iPhone 4))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0c0bg9c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jn4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jn4 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03jn4", "mid2name": {"ns:m.03jn4": "London Heathrow Airport"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) London Heathrow Airport))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03jn4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023b7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023b7b ns:visual_art.visual_artist.art_series ?y .\n?y ns:time.event.locations ?x .\n}\n", "TopicEntityMid": "m.023b7b", "mid2name": {"ns:m.023b7b": "Banksy"}, "SExpr_w_name": "(JOIN (R time.event.locations) (JOIN (R visual_art.visual_artist.art_series) Banksy))", "SExpr": "(JOIN (R time.event.locations) (JOIN (R visual_art.visual_artist.art_series) m.023b7b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j5c1z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j5c1z1 ns:law.inventor.inventions ?y .\n?y ns:law.invention.inventor ?x .\n}\n", "TopicEntityMid": "m.0j5c1z1", "mid2name": {"ns:m.0j5c1z1": "Steve Hushek"}, "SExpr_w_name": "(JOIN (R law.invention.inventor) (JOIN (R law.inventor.inventions) Steve Hushek))", "SExpr": "(JOIN (R law.invention.inventor) (JOIN (R law.inventor.inventions) m.0j5c1z1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nl8pd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nl8pd ns:visual_art.artwork.artist ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.05nl8pd", "mid2name": {"ns:m.05nl8pd": "The Farm"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R visual_art.artwork.artist) The Farm))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R visual_art.artwork.artist) m.05nl8pd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ghm0b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ghm0b ns:business.company_advisor.companies_advised ?y .\n?y ns:organization.organization.headquarters ?x .\n}\n", "TopicEntityMid": "m.03ghm0b", "mid2name": {"ns:m.03ghm0b": "Richard Rubin"}, "SExpr_w_name": "(JOIN (R organization.organization.headquarters) (JOIN (R business.company_advisor.companies_advised) Richard Rubin))", "SExpr": "(JOIN (R organization.organization.headquarters) (JOIN (R business.company_advisor.companies_advised) m.03ghm0b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.065myjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.065myjj ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.065myjj", "mid2name": {"ns:m.065myjj": "Maximo"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Maximo))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.065myjj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06q1y2y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06q1y2y ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.06q1y2y", "mid2name": {"ns:m.06q1y2y": "Charming enemy"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Charming enemy))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.06q1y2y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0604fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0604fr ns:zoos.zoo.memberships ?y .\n?y ns:organization.organization.headquarters ?x .\n}\n", "TopicEntityMid": "m.0604fr", "mid2name": {"ns:m.0604fr": "Downtown Aquarium, Denver"}, "SExpr_w_name": "(JOIN (R organization.organization.headquarters) (JOIN (R zoos.zoo.memberships) Downtown Aquarium, Denver))", "SExpr": "(JOIN (R organization.organization.headquarters) (JOIN (R zoos.zoo.memberships) m.0604fr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0725dfj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0725dfj ns:location.location.contains ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.0725dfj", "mid2name": {"ns:m.0725dfj": "Malin"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R location.location.contains) Malin))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R location.location.contains) m.0725dfj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h2vrf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h2vrf ns:computer.software_genre.software_in_genre ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0h2vrf", "mid2name": {"ns:m.0h2vrf": "Build automation"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.software_genre.software_in_genre) Build automation))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.software_genre.software_in_genre) m.0h2vrf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hfjk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hfjk ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0hfjk", "mid2name": {"ns:m.0hfjk": "Western"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Western))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0hfjk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nbyx6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nbyx6q ns:government.election_campaign.candidate ?y .\n?y ns:celebrities.celebrity.celebrity_rivals ?x .\n}\n", "TopicEntityMid": "m.0nbyx6q", "mid2name": {"ns:m.0nbyx6q": "Joe Biden vice-presidential campaign, 2012"}, "SExpr_w_name": "(JOIN (R celebrities.celebrity.celebrity_rivals) (JOIN (R government.election_campaign.candidate) Joe Biden vice-presidential campaign, 2012))", "SExpr": "(JOIN (R celebrities.celebrity.celebrity_rivals) (JOIN (R government.election_campaign.candidate) m.0nbyx6q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rk12l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rk12l ns:wine.grape_variety.wine_styles ?y .\n?y ns:food.wine_style.grape_varieties ?x .\n}\n", "TopicEntityMid": "m.09rk12l", "mid2name": {"ns:m.09rk12l": "Bonarda di Gattinara"}, "SExpr_w_name": "(JOIN (R food.wine_style.grape_varieties) (JOIN (R wine.grape_variety.wine_styles) Bonarda di Gattinara))", "SExpr": "(JOIN (R food.wine_style.grape_varieties) (JOIN (R wine.grape_variety.wine_styles) m.09rk12l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m8kk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m8kk ns:music.artist.track ?y .\n?y ns:music.recording.artist ?x .\n}\n", "TopicEntityMid": "m.03m8kk", "mid2name": {"ns:m.03m8kk": "Red Rodney"}, "SExpr_w_name": "(JOIN (R music.recording.artist) (JOIN (R music.artist.track) Red Rodney))", "SExpr": "(JOIN (R music.recording.artist) (JOIN (R music.artist.track) m.03m8kk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03y7l53)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03y7l53 ns:astronomy.asteroid.member_of_asteroid_group ?y .\n?y ns:astronomy.asteroid_group.asteroid_group_members ?x .\n}\n", "TopicEntityMid": "m.03y7l53", "mid2name": {"ns:m.03y7l53": "19446 Muroski"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid_group.asteroid_group_members) (JOIN (R astronomy.asteroid.member_of_asteroid_group) 19446 Muroski))", "SExpr": "(JOIN (R astronomy.asteroid_group.asteroid_group_members) (JOIN (R astronomy.asteroid.member_of_asteroid_group) m.03y7l53))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0147fv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0147fv ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0147fv", "mid2name": {"ns:m.0147fv": "Narrator"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Narrator))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0147fv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f_z24)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f_z24 ns:music.artist.genre ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0f_z24", "mid2name": {"ns:m.0f_z24": "Brown University Band"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R music.artist.genre) Brown University Band))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R music.artist.genre) m.0f_z24))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f17j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f17j ns:astronomy.constellation.bordering_constellations_new ?y .\n?y ns:astronomy.constellation_bordering_relationship.constellations ?x .\n}\n", "TopicEntityMid": "m.01f17j", "mid2name": {"ns:m.01f17j": "Pictor"}, "SExpr_w_name": "(JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN (R astronomy.constellation.bordering_constellations_new) Pictor))", "SExpr": "(JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN (R astronomy.constellation.bordering_constellations_new) m.01f17j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0175ww)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0175ww ns:aviation.aircraft_model.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.0175ww", "mid2name": {"ns:m.0175ww": "Dassault Mirage III"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) Dassault Mirage III))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) m.0175ww))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04cqn05)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04cqn05 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.04cqn05", "mid2name": {"ns:m.04cqn05": "Park Forest"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Park Forest))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.04cqn05))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.077093l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.077093l ns:skiing.ski_run.served_by ?y .\n?y ns:skiing.ski_lift.ski_area ?x .\n}\n", "TopicEntityMid": "m.077093l", "mid2name": {"ns:m.077093l": "Donkey Serenade"}, "SExpr_w_name": "(JOIN (R skiing.ski_lift.ski_area) (JOIN (R skiing.ski_run.served_by) Donkey Serenade))", "SExpr": "(JOIN (R skiing.ski_lift.ski_area) (JOIN (R skiing.ski_run.served_by) m.077093l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ptds6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ptds6 ns:book.written_work.original_language ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.02ptds6", "mid2name": {"ns:m.02ptds6": "The Nancy Drew Files"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R book.written_work.original_language) The Nancy Drew Files))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R book.written_work.original_language) m.02ptds6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0114bp6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0114bp6z ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0114bp6z", "mid2name": {"ns:m.0114bp6z": "Tjaldva"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Tjaldva))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0114bp6z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bmq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bmq ns:location.country.administrative_divisions ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.05bmq", "mid2name": {"ns:m.05bmq": "Namibia"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.country.administrative_divisions) Namibia))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.country.administrative_divisions) m.05bmq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0mfbj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0mfbj ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0c0mfbj", "mid2name": {"ns:m.0c0mfbj": "Walter Vromans"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Walter Vromans))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0c0mfbj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?y .\n?y ns:fictional_universe.fictional_character.gender ?x .\n}\n", "TopicEntityMid": "m.0h7h6", "mid2name": {"ns:m.0h7h6": "Toronto"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.gender) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Toronto))", "SExpr": "(JOIN (R fictional_universe.fictional_character.gender) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.0h7h6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_hv6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_hv6 ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.02_hv6", "mid2name": {"ns:m.02_hv6": "Pinus longaeva"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Pinus longaeva))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.02_hv6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p8r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p8r ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?y .\n?y ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.02p8r", "mid2name": {"ns:m.02p8r": "Ephesus"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Ephesus))", "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.02p8r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0137zch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0137zch ns:music.recording.artist ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.0137zch", "mid2name": {"ns:m.0137zch": "Loyal to the Zoo"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R music.recording.artist) Loyal to the Zoo))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R music.recording.artist) m.0137zch))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01m4hdv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01m4hdv ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.01m4hdv", "mid2name": {"ns:m.01m4hdv": "Dutronc au Casino"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) Dutronc au Casino))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.01m4hdv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059q4mp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059q4mp ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.059q4mp", "mid2name": {"ns:m.059q4mp": "Robert Hull Fleming Museum"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Robert Hull Fleming Museum))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.059q4mp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h2cw40)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h2cw40 ns:automotive.engine.fuels_used ?y .\n?y ns:base.skosbase.vocabulary_equivalent_topic.narrower_concept ?x .\n}\n", "TopicEntityMid": "m.0h2cw40", "mid2name": {"ns:m.0h2cw40": "Kia 2.4L 4 Cylinder 191 hp 181 ft-lbs"}, "SExpr_w_name": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.narrower_concept) (JOIN (R automotive.engine.fuels_used) Kia 2.4L 4 Cylinder 191 hp 181 ft-lbs))", "SExpr": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.narrower_concept) (JOIN (R automotive.engine.fuels_used) m.0h2cw40))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_r63z9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_r63z9 ns:time.holiday.featured_in_religions ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0_r63z9", "mid2name": {"ns:m.0_r63z9": "Visitation"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.holiday.featured_in_religions) Visitation))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.holiday.featured_in_religions) m.0_r63z9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xhmlw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xhmlw ns:fashion.weave.textiles_of_this_weave ?y .\n?y ns:base.skosbase.vocabulary_equivalent_topic.equivalent_concept ?x .\n}\n", "TopicEntityMid": "m.02xhmlw", "mid2name": {"ns:m.02xhmlw": "Pile"}, "SExpr_w_name": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.equivalent_concept) (JOIN (R fashion.weave.textiles_of_this_weave) Pile))", "SExpr": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.equivalent_concept) (JOIN (R fashion.weave.textiles_of_this_weave) m.02xhmlw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05wktm9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05wktm9 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.05wktm9", "mid2name": {"ns:m.05wktm9": "Carol C Mattusch"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Carol C Mattusch))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.05wktm9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbvx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbvx ns:medicine.medical_trial.phase ?y .\n?y ns:medicine.medical_trial_phase.medical_trials ?x .\n}\n", "TopicEntityMid": "m.03zbbvx", "mid2name": {"ns:m.03zbbvx": "Feasibility Study of Take-Home LAAM Medication \u2013 3"}, "SExpr_w_name": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) Feasibility Study of Take-Home LAAM Medication \u2013 3))", "SExpr": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) m.03zbbvx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbw_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbw_ ns:medicine.medical_trial.references ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.03zbbw_", "mid2name": {"ns:m.03zbbw_": "Postmenopausal Hormone Therapy in Unstable Angina"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R medicine.medical_trial.references) Postmenopausal Hormone Therapy in Unstable Angina))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R medicine.medical_trial.references) m.03zbbw_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04j4r74)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04j4r74 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.04j4r74", "mid2name": {"ns:m.04j4r74": "King Dragon"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) King Dragon))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.04j4r74))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z430m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z430m ns:organization.organization_scope.organizations_with_this_scope ?y .\n?y ns:dataworld.data_provider.datasets_provided ?x .\n}\n", "TopicEntityMid": "m.01z430m", "mid2name": {"ns:m.01z430m": "International"}, "SExpr_w_name": "(JOIN (R dataworld.data_provider.datasets_provided) (JOIN (R organization.organization_scope.organizations_with_this_scope) International))", "SExpr": "(JOIN (R dataworld.data_provider.datasets_provided) (JOIN (R organization.organization_scope.organizations_with_this_scope) m.01z430m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0403yxh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0403yxh ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.ecology.food_web_member.eaten_by ?x .\n}\n", "TopicEntityMid": "m.0403yxh", "mid2name": {"ns:m.0403yxh": "Braque Francais"}, "SExpr_w_name": "(JOIN (R base.ecology.food_web_member.eaten_by) (JOIN (R biology.organism_classification.higher_classification) Braque Francais))", "SExpr": "(JOIN (R base.ecology.food_web_member.eaten_by) (JOIN (R biology.organism_classification.higher_classification) m.0403yxh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rqbs2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rqbs2 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.02rqbs2", "mid2name": {"ns:m.02rqbs2": "The Shifting Sands"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) The Shifting Sands))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.02rqbs2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qkwhpm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qkwhpm ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.0qkwhpm", "mid2name": {"ns:m.0qkwhpm": "Buckner Glacier"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Buckner Glacier))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.0qkwhpm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f198)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f198 ns:astronomy.constellation.bordering_constellations_new ?y .\n?y ns:astronomy.constellation_bordering_relationship.constellations ?x .\n}\n", "TopicEntityMid": "m.01f198", "mid2name": {"ns:m.01f198": "Musca"}, "SExpr_w_name": "(JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN (R astronomy.constellation.bordering_constellations_new) Musca))", "SExpr": "(JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN (R astronomy.constellation.bordering_constellations_new) m.01f198))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.069w_t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.069w_t ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.069w_t", "mid2name": {"ns:m.069w_t": "D-flat major"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) D-flat major))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.069w_t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_fk14v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_fk14v ns:music.composition.composer ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0_fk14v", "mid2name": {"ns:m.0_fk14v": "Star Gazers Theme Song"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) Star Gazers Theme Song))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) m.0_fk14v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s8_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s8_7 ns:aviation.aircraft_model.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.01s8_7", "mid2name": {"ns:m.01s8_7": "Mikoyan-Gurevich I-250"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) Mikoyan-Gurevich I-250))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) m.01s8_7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0231j1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0231j1 ns:spaceflight.space_program.sponsor ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.0231j1", "mid2name": {"ns:m.0231j1": "Vostok programme"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R spaceflight.space_program.sponsor) Vostok programme))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R spaceflight.space_program.sponsor) m.0231j1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lj0p4d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lj0p4d ns:tv.tv_series_season.episodes ?y .\n?y ns:tv.tv_series_episode.series ?x .\n}\n", "TopicEntityMid": "m.0lj0p4d", "mid2name": {"ns:m.0lj0p4d": "Alarm f\u00fcr Cobra 11 \u2013 Die Autobahnpolizei - Season 27"}, "SExpr_w_name": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_series_season.episodes) Alarm f\u00fcr Cobra 11 \u2013 Die Autobahnpolizei - Season 27))", "SExpr": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_series_season.episodes) m.0lj0p4d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.065s739)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.065s739 ns:business.product_ingredient.used_in_products ?y .\n?y ns:business.consumer_product.brand ?x .\n}\n", "TopicEntityMid": "m.065s739", "mid2name": {"ns:m.065s739": "Sodium ascorbate and ascorbic acid"}, "SExpr_w_name": "(JOIN (R business.consumer_product.brand) (JOIN (R business.product_ingredient.used_in_products) Sodium ascorbate and ascorbic acid))", "SExpr": "(JOIN (R business.consumer_product.brand) (JOIN (R business.product_ingredient.used_in_products) m.065s739))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.05vz3zq", "mid2name": {"ns:m.05vz3zq": "Soviet Union"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Soviet Union))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.05vz3zq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06p92q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06p92q ns:biology.hybrid.parent_classifications ?y .\n?y ns:biology.hybrid_parentage.parent_sex ?x .\n}\n", "TopicEntityMid": "m.06p92q", "mid2name": {"ns:m.06p92q": "Zony"}, "SExpr_w_name": "(JOIN (R biology.hybrid_parentage.parent_sex) (JOIN (R biology.hybrid.parent_classifications) Zony))", "SExpr": "(JOIN (R biology.hybrid_parentage.parent_sex) (JOIN (R biology.hybrid.parent_classifications) m.06p92q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c036dw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c036dw ns:fictional_universe.fictional_object.composition ?y .\n?y ns:fictional_universe.fictional_substance.fictional_object ?x .\n}\n", "TopicEntityMid": "m.0c036dw", "mid2name": {"ns:m.0c036dw": "Primeval dart tube"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_substance.fictional_object) (JOIN (R fictional_universe.fictional_object.composition) Primeval dart tube))", "SExpr": "(JOIN (R fictional_universe.fictional_substance.fictional_object) (JOIN (R fictional_universe.fictional_object.composition) m.0c036dw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01njrf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01njrf ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "TopicEntityMid": "m.01njrf", "mid2name": {"ns:m.01njrf": "Head Start Program"}, "SExpr_w_name": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) Head Start Program))", "SExpr": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.01njrf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p89l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p89l ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.ecology.food_web_member.eaten_by ?x .\n}\n", "TopicEntityMid": "m.01p89l", "mid2name": {"ns:m.01p89l": "Sarplaninac"}, "SExpr_w_name": "(JOIN (R base.ecology.food_web_member.eaten_by) (JOIN (R biology.organism_classification.higher_classification) Sarplaninac))", "SExpr": "(JOIN (R base.ecology.food_web_member.eaten_by) (JOIN (R biology.organism_classification.higher_classification) m.01p89l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09tzp39)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09tzp39 ns:astronomy.telescope.housed_in ?y .\n?y ns:astronomy.astronomical_observatory.discoveries ?x .\n}\n", "TopicEntityMid": "m.09tzp39", "mid2name": {"ns:m.09tzp39": "60 inch telescope"}, "SExpr_w_name": "(JOIN (R astronomy.astronomical_observatory.discoveries) (JOIN (R astronomy.telescope.housed_in) 60 inch telescope))", "SExpr": "(JOIN (R astronomy.astronomical_observatory.discoveries) (JOIN (R astronomy.telescope.housed_in) m.09tzp39))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q2kj0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q2kj0 ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.03q2kj0", "mid2name": {"ns:m.03q2kj0": "Samsung i85"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) Samsung i85))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.03q2kj0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wmv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wmv ns:symbols.namesake.named_after ?y .\n?y ns:symbols.name_source.namesakes ?x .\n}\n", "TopicEntityMid": "m.01wmv", "mid2name": {"ns:m.01wmv": "Cetus"}, "SExpr_w_name": "(JOIN (R symbols.name_source.namesakes) (JOIN (R symbols.namesake.named_after) Cetus))", "SExpr": "(JOIN (R symbols.name_source.namesakes) (JOIN (R symbols.namesake.named_after) m.01wmv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hp22)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hp22 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01hp22", "mid2name": {"ns:m.01hp22": "Artistic gymnastics"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Artistic gymnastics))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01hp22))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m0sv0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m0sv0 ns:business.business_location.parent_company ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.03m0sv0", "mid2name": {"ns:m.03m0sv0": "Hollister Co., Miami International Mall"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R business.business_location.parent_company) Hollister Co., Miami International Mall))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R business.business_location.parent_company) m.03m0sv0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0403l2c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0403l2c ns:medicine.drug_administration_route.drug_formulations ?y .\n?y ns:medicine.drug_formulation.active_ingredient_moieties ?x .\n}\n", "TopicEntityMid": "m.0403l2c", "mid2name": {"ns:m.0403l2c": "Intravenous"}, "SExpr_w_name": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.drug_administration_route.drug_formulations) Intravenous))", "SExpr": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.drug_administration_route.drug_formulations) m.0403l2c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbxg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbxg ns:medicine.medical_trial.references ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.03zbbxg", "mid2name": {"ns:m.03zbbxg": "Methadone Effects on Zidovudine (ZDV, AZT) Disposition"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R medicine.medical_trial.references) Methadone Effects on Zidovudine (ZDV, AZT) Disposition))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R medicine.medical_trial.references) m.03zbbxg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qj557)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qj557 ns:book.publishing_company.books_published ?y .\n?y ns:book.book_edition.binding ?x .\n}\n", "TopicEntityMid": "m.05qj557", "mid2name": {"ns:m.05qj557": "Aldine"}, "SExpr_w_name": "(JOIN (R book.book_edition.binding) (JOIN (R book.publishing_company.books_published) Aldine))", "SExpr": "(JOIN (R book.book_edition.binding) (JOIN (R book.publishing_company.books_published) m.05qj557))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d1tc2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d1tc2 ns:medicine.drug_legal_status.country ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.04d1tc2", "mid2name": {"ns:m.04d1tc2": "Schedule 4 Prescription Only Medicine"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R medicine.drug_legal_status.country) Schedule 4 Prescription Only Medicine))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R medicine.drug_legal_status.country) m.04d1tc2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07f904m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07f904m ns:people.profession.people_with_this_profession ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.07f904m", "mid2name": {"ns:m.07f904m": "Health Educator"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R people.profession.people_with_this_profession) Health Educator))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R people.profession.people_with_this_profession) m.07f904m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01t8sr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01t8sr ns:location.location.containedby ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.01t8sr", "mid2name": {"ns:m.01t8sr": "Tennessee State University"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) Tennessee State University))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) m.01t8sr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0l0qhq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0l0qhq ns:music.composition.composer ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0l0qhq", "mid2name": {"ns:m.0l0qhq": "Keep It Comin'"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) Keep It Comin'))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) m.0l0qhq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04j3pf7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04j3pf7 ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\n}\n", "TopicEntityMid": "m.04j3pf7", "mid2name": {"ns:m.04j3pf7": "Vice Mayor of Half Moon Bay"}, "SExpr_w_name": "(JOIN (R government.government_position_held.office_holder) (JOIN (R government.government_office_or_title.office_holders) Vice Mayor of Half Moon Bay))", "SExpr": "(JOIN (R government.government_position_held.office_holder) (JOIN (R government.government_office_or_title.office_holders) m.04j3pf7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051zsrv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051zsrv ns:visual_art.artwork.artist ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.051zsrv", "mid2name": {"ns:m.051zsrv": "Play it by Trust"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R visual_art.artwork.artist) Play it by Trust))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R visual_art.artwork.artist) m.051zsrv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hl17)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hl17 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0hl17", "mid2name": {"ns:m.0hl17": "Oncology"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Oncology))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0hl17))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cl2sf0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cl2sf0 ns:business.issue.issuer ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.0cl2sf0", "mid2name": {"ns:m.0cl2sf0": "GRUPO TELEVISA S.A.-SER D Common Stock"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R business.issue.issuer) GRUPO TELEVISA S.A.-SER D Common Stock))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R business.issue.issuer) m.0cl2sf0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07kxft6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07kxft6 ns:tv.tv_series_season.episodes ?y .\n?y ns:tv.tv_series_episode.series ?x .\n}\n", "TopicEntityMid": "m.07kxft6", "mid2name": {"ns:m.07kxft6": "Newsnight Review - Season 2"}, "SExpr_w_name": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_series_season.episodes) Newsnight Review - Season 2))", "SExpr": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_series_season.episodes) m.07kxft6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n2zm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n2zm ns:user.techgnostic.default_domain.tv_series_serial.season ?y .\n?y ns:tv.tv_series_season.episodes ?x .\n}\n", "TopicEntityMid": "m.03n2zm", "mid2name": {"ns:m.03n2zm": "Survival"}, "SExpr_w_name": "(JOIN (R tv.tv_series_season.episodes) (JOIN (R user.techgnostic.default_domain.tv_series_serial.season) Survival))", "SExpr": "(JOIN (R tv.tv_series_season.episodes) (JOIN (R user.techgnostic.default_domain.tv_series_serial.season) m.03n2zm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0321lh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0321lh ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0321lh", "mid2name": {"ns:m.0321lh": "Iroquoian languages"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Iroquoian languages))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0321lh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cbp1r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cbp1r ns:people.ethnicity.geographic_distribution ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.0cbp1r", "mid2name": {"ns:m.0cbp1r": "Montaukett"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R people.ethnicity.geographic_distribution) Montaukett))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R people.ethnicity.geographic_distribution) m.0cbp1r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026q5xx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026q5xx ns:time.event.included_in_event ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.026q5xx", "mid2name": {"ns:m.026q5xx": "Badminton at the 2006 Asian Games"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.event.included_in_event) Badminton at the 2006 Asian Games))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R time.event.included_in_event) m.026q5xx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017l96)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017l96 ns:award.award_nominee.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.017l96", "mid2name": {"ns:m.017l96": "Capitol Records"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) Capitol Records))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) m.017l96))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crw5b5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crw5b5 ns:film.film.country ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.0crw5b5", "mid2name": {"ns:m.0crw5b5": "Punchinello and the Most Marvelous Gift"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R film.film.country) Punchinello and the Most Marvelous Gift))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R film.film.country) m.0crw5b5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05d1hzx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05d1hzx ns:symbols.heraldic_variation_of_the_field.coat_of_arms ?y .\n?y ns:symbols.heraldic_variation_of_the_field_color.tincture ?x .\n}\n", "TopicEntityMid": "m.05d1hzx", "mid2name": {"ns:m.05d1hzx": "Party per fess"}, "SExpr_w_name": "(JOIN (R symbols.heraldic_variation_of_the_field_color.tincture) (JOIN (R symbols.heraldic_variation_of_the_field.coat_of_arms) Party per fess))", "SExpr": "(JOIN (R symbols.heraldic_variation_of_the_field_color.tincture) (JOIN (R symbols.heraldic_variation_of_the_field.coat_of_arms) m.05d1hzx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.061c9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.061c9 ns:religion.religion.branched_into ?y .\n?y ns:religion.religion.places_of_worship_historical ?x .\n}\n", "TopicEntityMid": "m.061c9", "mid2name": {"ns:m.061c9": "Polytheism"}, "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religion.branched_into) Polytheism))", "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religion.branched_into) m.061c9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.076vvs5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.076vvs5 ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.076vvs5", "mid2name": {"ns:m.076vvs5": "Municipal Theatre of Santiago"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Municipal Theatre of Santiago))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.076vvs5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hhbr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hhbr ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0hhbr", "mid2name": {"ns:m.0hhbr": "Art Gallery"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Art Gallery))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0hhbr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rkv78)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rkv78 ns:computer.software.developer ?y .\n?y ns:computer.software_developer.software ?x .\n}\n", "TopicEntityMid": "m.09rkv78", "mid2name": {"ns:m.09rkv78": "Sinclair Spectrum Emulator"}, "SExpr_w_name": "(JOIN (R computer.software_developer.software) (JOIN (R computer.software.developer) Sinclair Spectrum Emulator))", "SExpr": "(JOIN (R computer.software_developer.software) (JOIN (R computer.software.developer) m.09rkv78))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q2nzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q2nzc ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.03q2nzc", "mid2name": {"ns:m.03q2nzc": "Kyocera Finecam S3"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) Kyocera Finecam S3))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.03q2nzc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ckw4ym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ckw4ym ns:business.issue.issuer ?y .\n?y ns:organization.organization.headquarters ?x .\n}\n", "TopicEntityMid": "m.0ckw4ym", "mid2name": {"ns:m.0ckw4ym": "BUALUANG SECURITIES PCL Common Stock"}, "SExpr_w_name": "(JOIN (R organization.organization.headquarters) (JOIN (R business.issue.issuer) BUALUANG SECURITIES PCL Common Stock))", "SExpr": "(JOIN (R organization.organization.headquarters) (JOIN (R business.issue.issuer) m.0ckw4ym))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g9pc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g9pc ns:biology.organism_classification.lower_classifications ?y .\n?y ns:user.jefft0.default_domain.virus_classification.child_classifications ?x .\n}\n", "TopicEntityMid": "m.0g9pc", "mid2name": {"ns:m.0g9pc": "Virus"}, "SExpr_w_name": "(JOIN (R user.jefft0.default_domain.virus_classification.child_classifications) (JOIN (R biology.organism_classification.lower_classifications) Virus))", "SExpr": "(JOIN (R user.jefft0.default_domain.virus_classification.child_classifications) (JOIN (R biology.organism_classification.lower_classifications) m.0g9pc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0334hh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0334hh ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0334hh", "mid2name": {"ns:m.0334hh": "Skirmisher"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Skirmisher))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0334hh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j59b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j59b ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0j59b", "mid2name": {"ns:m.0j59b": "Phoenician alphabet"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Phoenician alphabet))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0j59b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:base.inaugurations.inauguration_speaker.inauguration ?y .\n?y ns:time.event.instance_of_recurring_event ?x .\n}\n", "TopicEntityMid": "m.0157m", "mid2name": {"ns:m.0157m": "Bill Clinton"}, "SExpr_w_name": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) Bill Clinton))", "SExpr": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.0157m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04t5fyk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04t5fyk ns:book.author.works_written ?y .\n?y ns:book.written_work.original_language ?x .\n}\n", "TopicEntityMid": "m.04t5fyk", "mid2name": {"ns:m.04t5fyk": "Matthew Williamson"}, "SExpr_w_name": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) Matthew Williamson))", "SExpr": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) m.04t5fyk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k0rb6l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k0rb6l ns:astronomy.astronomical_observatory.discoveries ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n}\n", "TopicEntityMid": "m.0k0rb6l", "mid2name": {"ns:m.0k0rb6l": "GEODSS, Haleakala"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.astronomical_observatory.discoveries) GEODSS, Haleakala))", "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.astronomical_observatory.discoveries) m.0k0rb6l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lc0rk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lc0rk ns:automotive.generation.designer ?y .\n?y ns:automotive.make.model_s ?x .\n}\n", "TopicEntityMid": "m.02lc0rk", "mid2name": {"ns:m.02lc0rk": "1967-1970 Shelby GT500"}, "SExpr_w_name": "(JOIN (R automotive.make.model_s) (JOIN (R automotive.generation.designer) 1967-1970 Shelby GT500))", "SExpr": "(JOIN (R automotive.make.model_s) (JOIN (R automotive.generation.designer) m.02lc0rk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025whv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025whv ns:business.industry.companies ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n", "TopicEntityMid": "m.025whv", "mid2name": {"ns:m.025whv": "Pain management"}, "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R business.industry.companies) Pain management))", "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R business.industry.companies) m.025whv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0sgh_vw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0sgh_vw ns:music.music_video.music_video_subject ?y .\n?y ns:music.music_video_subject.subject_in_these_music_videos ?x .\n}\n", "TopicEntityMid": "m.0sgh_vw", "mid2name": {"ns:m.0sgh_vw": "I Am Not a Child of Despair"}, "SExpr_w_name": "(JOIN (R music.music_video_subject.subject_in_these_music_videos) (JOIN (R music.music_video.music_video_subject) I Am Not a Child of Despair))", "SExpr": "(JOIN (R music.music_video_subject.subject_in_these_music_videos) (JOIN (R music.music_video.music_video_subject) m.0sgh_vw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04mywh2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04mywh2 ns:time.event.included_in_event ?y .\n?y ns:time.event.includes_event ?x .\n}\n", "TopicEntityMid": "m.04mywh2", "mid2name": {"ns:m.04mywh2": "1982 FIFA World Cup Final"}, "SExpr_w_name": "(JOIN (R time.event.includes_event) (JOIN (R time.event.included_in_event) 1982 FIFA World Cup Final))", "SExpr": "(JOIN (R time.event.includes_event) (JOIN (R time.event.included_in_event) m.04mywh2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j_jy15)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j_jy15 ns:food.recipe.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0j_jy15", "mid2name": {"ns:m.0j_jy15": "Gimlet"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R food.recipe.author) Gimlet))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R food.recipe.author) m.0j_jy15))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z1jf2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z1jf2 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01z1jf2", "mid2name": {"ns:m.01z1jf2": "American food"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) American food))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01z1jf2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y942)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y942 ns:time.holiday.featured_in_religions ?y .\n?y ns:religion.religion.places_of_worship_historical ?x .\n}\n", "TopicEntityMid": "m.06y942", "mid2name": {"ns:m.06y942": "Fast of Esther"}, "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R time.holiday.featured_in_religions) Fast of Esther))", "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R time.holiday.featured_in_religions) m.06y942))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fsy3c1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fsy3c1 ns:music.artist.track ?y .\n?y ns:music.recording.tracks ?x .\n}\n", "TopicEntityMid": "m.0fsy3c1", "mid2name": {"ns:m.0fsy3c1": "The Hamptons"}, "SExpr_w_name": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) The Hamptons))", "SExpr": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) m.0fsy3c1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ky402)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ky402 ns:exhibitions.exhibition.produced_by ?y .\n?y ns:award.award_winner.awards_won ?x .\n}\n", "TopicEntityMid": "m.04ky402", "mid2name": {"ns:m.04ky402": "Exploring the North Atlantic: Traders, Scholars and Vikings"}, "SExpr_w_name": "(JOIN (R award.award_winner.awards_won) (JOIN (R exhibitions.exhibition.produced_by) Exploring the North Atlantic: Traders, Scholars and Vikings))", "SExpr": "(JOIN (R award.award_winner.awards_won) (JOIN (R exhibitions.exhibition.produced_by) m.04ky402))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fpp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fpp7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01fpp7", "mid2name": {"ns:m.01fpp7": "iPAQ"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) iPAQ))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01fpp7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dyxqc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dyxqc ns:broadcast.broadcast.area_served ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.0dyxqc", "mid2name": {"ns:m.0dyxqc": "KUKC-LP"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R broadcast.broadcast.area_served) KUKC-LP))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R broadcast.broadcast.area_served) m.0dyxqc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pcq52k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pcq52k ns:sports.defunct_sports_team.later_known_as ?y .\n?y ns:sports.sports_team.league ?x .\n}\n", "TopicEntityMid": "m.0pcq52k", "mid2name": {"ns:m.0pcq52k": "Tacoma Yankees"}, "SExpr_w_name": "(JOIN (R sports.sports_team.league) (JOIN (R sports.defunct_sports_team.later_known_as) Tacoma Yankees))", "SExpr": "(JOIN (R sports.sports_team.league) (JOIN (R sports.defunct_sports_team.later_known_as) m.0pcq52k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zrnb4z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zrnb4z ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0zrnb4z", "mid2name": {"ns:m.0zrnb4z": "Yuji Matsumoto"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Yuji Matsumoto))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0zrnb4z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09tc50)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09tc50 ns:fictional_universe.character_species.characters_of_this_species ?y .\n?y ns:user.duck1123.default_domain.adopted_character.adoptive_parents ?x .\n}\n", "TopicEntityMid": "m.09tc50", "mid2name": {"ns:m.09tc50": "Neyaphem"}, "SExpr_w_name": "(JOIN (R user.duck1123.default_domain.adopted_character.adoptive_parents) (JOIN (R fictional_universe.character_species.characters_of_this_species) Neyaphem))", "SExpr": "(JOIN (R user.duck1123.default_domain.adopted_character.adoptive_parents) (JOIN (R fictional_universe.character_species.characters_of_this_species) m.09tc50))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h22q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h22q ns:computer.programming_language.influenced_by ?y .\n?y ns:symbols.namesake.named_after ?x .\n}\n", "TopicEntityMid": "m.0h22q", "mid2name": {"ns:m.0h22q": "QuickBASIC"}, "SExpr_w_name": "(JOIN (R symbols.namesake.named_after) (JOIN (R computer.programming_language.influenced_by) QuickBASIC))", "SExpr": "(JOIN (R symbols.namesake.named_after) (JOIN (R computer.programming_language.influenced_by) m.0h22q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05wc1fv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05wc1fv ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.05wc1fv", "mid2name": {"ns:m.05wc1fv": "David Weyhe Smith"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) David Weyhe Smith))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.05wc1fv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c9xy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c9xy ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n", "TopicEntityMid": "m.05c9xy", "mid2name": {"ns:m.05c9xy": "Catbus"}, "SExpr_w_name": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) Catbus))", "SExpr": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.05c9xy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06qd3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06qd3 ns:location.country.administrative_divisions ?y .\n?y ns:olympics.olympic_host_city.olympics_hosted ?x .\n}\n", "TopicEntityMid": "m.06qd3", "mid2name": {"ns:m.06qd3": "South Korea"}, "SExpr_w_name": "(JOIN (R olympics.olympic_host_city.olympics_hosted) (JOIN (R location.country.administrative_divisions) South Korea))", "SExpr": "(JOIN (R olympics.olympic_host_city.olympics_hosted) (JOIN (R location.country.administrative_divisions) m.06qd3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cp76k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cp76k ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.0cp76k", "mid2name": {"ns:m.0cp76k": "Edward Berkowitz"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Edward Berkowitz))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.0cp76k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07wcxh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07wcxh ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.07wcxh", "mid2name": {"ns:m.07wcxh": "Moonglow"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Moonglow))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.07wcxh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qch2w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qch2w ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03qch2w", "mid2name": {"ns:m.03qch2w": "Pathogenic bacteria"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Pathogenic bacteria))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03qch2w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cc0nbl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cc0nbl ns:fictional_universe.event_in_fiction.included_by_these_events ?y .\n?y ns:dataworld.gardening_hint.split_to ?x .\n}\n", "TopicEntityMid": "m.0cc0nbl", "mid2name": {"ns:m.0cc0nbl": "Straton critically wounded"}, "SExpr_w_name": "(JOIN (R dataworld.gardening_hint.split_to) (JOIN (R fictional_universe.event_in_fiction.included_by_these_events) Straton critically wounded))", "SExpr": "(JOIN (R dataworld.gardening_hint.split_to) (JOIN (R fictional_universe.event_in_fiction.included_by_these_events) m.0cc0nbl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mq7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mq7 ns:user.techgnostic.default_domain.magazine_topic.periodical ?y .\n?y ns:book.journal.articles ?x .\n}\n", "TopicEntityMid": "m.06mq7", "mid2name": {"ns:m.06mq7": "Science"}, "SExpr_w_name": "(JOIN (R book.journal.articles) (JOIN (R user.techgnostic.default_domain.magazine_topic.periodical) Science))", "SExpr": "(JOIN (R book.journal.articles) (JOIN (R user.techgnostic.default_domain.magazine_topic.periodical) m.06mq7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m8dt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m8dt ns:government.governmental_body.body_this_is_a_component_of ?y .\n?y ns:base.ontologies.ontology_instance.equivalent_instances ?x .\n}\n", "TopicEntityMid": "m.03m8dt", "mid2name": {"ns:m.03m8dt": "United States District Court for the Northern District of California"}, "SExpr_w_name": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R government.governmental_body.body_this_is_a_component_of) United States District Court for the Northern District of California))", "SExpr": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R government.governmental_body.body_this_is_a_component_of) m.03m8dt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j2tqc3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j2tqc3 ns:law.invention.inventor ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0j2tqc3", "mid2name": {"ns:m.0j2tqc3": "Elastomer Spatial Light Modulators for EUV Lithography"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R law.invention.inventor) Elastomer Spatial Light Modulators for EUV Lithography))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R law.invention.inventor) m.0j2tqc3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05l2y3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05l2y3 ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.05l2y3", "mid2name": {"ns:m.05l2y3": "Butch Walker"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Butch Walker))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.05l2y3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bs0n7y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bs0n7y ns:military.military_unit.armed_force ?y .\n?y ns:government.government_agency.jurisdiction ?x .\n}\n", "TopicEntityMid": "m.0bs0n7y", "mid2name": {"ns:m.0bs0n7y": "20th Ohio Infantry"}, "SExpr_w_name": "(JOIN (R government.government_agency.jurisdiction) (JOIN (R military.military_unit.armed_force) 20th Ohio Infantry))", "SExpr": "(JOIN (R government.government_agency.jurisdiction) (JOIN (R military.military_unit.armed_force) m.0bs0n7y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pj48)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pj48 ns:education.educational_institution.radio_station ?y .\n?y ns:broadcast.radio_station.affiliations ?x .\n}\n", "TopicEntityMid": "m.01pj48", "mid2name": {"ns:m.01pj48": "University of Auckland"}, "SExpr_w_name": "(JOIN (R broadcast.radio_station.affiliations) (JOIN (R education.educational_institution.radio_station) University of Auckland))", "SExpr": "(JOIN (R broadcast.radio_station.affiliations) (JOIN (R education.educational_institution.radio_station) m.01pj48))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mx4px)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mx4px ns:music.artist.track_contributions ?y .\n?y ns:music.track_contribution.role ?x .\n}\n", "TopicEntityMid": "m.05mx4px", "mid2name": {"ns:m.05mx4px": "Dave Draves"}, "SExpr_w_name": "(JOIN (R music.track_contribution.role) (JOIN (R music.artist.track_contributions) Dave Draves))", "SExpr": "(JOIN (R music.track_contribution.role) (JOIN (R music.artist.track_contributions) m.05mx4px))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11bc1ggfg3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11bc1ggfg3 ns:internet.website_owner.websites_owned ?y .\n?y ns:internet.website.launched ?x .\n}\n", "TopicEntityMid": "g.11bc1ggfg3", "mid2name": {"ns:g.11bc1ggfg3": "Midnight Raver LLC"}, "SExpr_w_name": "(JOIN (R internet.website.launched) (JOIN (R internet.website_owner.websites_owned) Midnight Raver LLC))", "SExpr": "(JOIN (R internet.website.launched) (JOIN (R internet.website_owner.websites_owned) g.11bc1ggfg3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zxsbhr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zxsbhr ns:music.composition.composer ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0zxsbhr", "mid2name": {"ns:m.0zxsbhr": "Comin\u2019 Back"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) Comin\u2019 Back))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) m.0zxsbhr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04nfdz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04nfdz ns:music.composition.composer ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.04nfdz", "mid2name": {"ns:m.04nfdz": "(Just Like) Starting Over"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) (Just Like) Starting Over))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) m.04nfdz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0100td04)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0100td04 ns:book.periodical_publisher.periodicals_published ?y .\n?y ns:book.periodical_publisher_period.periodical ?x .\n}\n", "TopicEntityMid": "m.0100td04", "mid2name": {"ns:m.0100td04": "Investor's Business Daily"}, "SExpr_w_name": "(JOIN (R book.periodical_publisher_period.periodical) (JOIN (R book.periodical_publisher.periodicals_published) Investor's Business Daily))", "SExpr": "(JOIN (R book.periodical_publisher_period.periodical) (JOIN (R book.periodical_publisher.periodicals_published) m.0100td04))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.029m8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.029m8 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.029m8", "mid2name": {"ns:m.029m8": "Demon"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Demon))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.029m8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cpg05_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cpg05_ ns:fictional_universe.fictional_character.has_possessed ?y .\n?y ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.0cpg05_", "mid2name": {"ns:m.0cpg05_": "Niko"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_character.has_possessed) Niko))", "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_character.has_possessed) m.0cpg05_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11byb3d8nv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11byb3d8nv ns:tv.tv_director.episodes_directed ?y .\n?y ns:tv.tv_series_episode.series ?x .\n}\n", "TopicEntityMid": "g.11byb3d8nv", "mid2name": {"ns:g.11byb3d8nv": "Anthony Rich"}, "SExpr_w_name": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_director.episodes_directed) Anthony Rich))", "SExpr": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_director.episodes_directed) g.11byb3d8nv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:base.inaugurations.inauguration_speaker.inauguration ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02mjmr", "mid2name": {"ns:m.02mjmr": "Barack Obama"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) Barack Obama))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.02mjmr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hb2r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hb2r ns:base.activism.activism_issue.activists ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0hb2r", "mid2name": {"ns:m.0hb2r": "Breastfeeding"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R base.activism.activism_issue.activists) Breastfeeding))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R base.activism.activism_issue.activists) m.0hb2r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0z3wcrd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0z3wcrd ns:music.music_video_character.portrayed_in_music_videos ?y .\n?y ns:music.music_video_performance.music_video ?x .\n}\n", "TopicEntityMid": "m.0z3wcrd", "mid2name": {"ns:m.0z3wcrd": "eye"}, "SExpr_w_name": "(JOIN (R music.music_video_performance.music_video) (JOIN (R music.music_video_character.portrayed_in_music_videos) eye))", "SExpr": "(JOIN (R music.music_video_performance.music_video) (JOIN (R music.music_video_character.portrayed_in_music_videos) m.0z3wcrd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h7yv2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h7yv2 ns:aviation.iata_airline_designator.airline ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02h7yv2", "mid2name": {"ns:m.02h7yv2": "KE"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R aviation.iata_airline_designator.airline) KE))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R aviation.iata_airline_designator.airline) m.02h7yv2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.067gh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.067gh ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.067gh", "mid2name": {"ns:m.067gh": "PlayStation 3"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) PlayStation 3))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.067gh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.057b57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.057b57 ns:computer.file_format_genre.file_formats ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.057b57", "mid2name": {"ns:m.057b57": "Chemical file format"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.file_format_genre.file_formats) Chemical file format))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.file_format_genre.file_formats) m.057b57))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06kvkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06kvkh ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.06kvkh", "mid2name": {"ns:m.06kvkh": "F minor"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) F minor))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.06kvkh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tk2w7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tk2w7 ns:music.artist.track ?y .\n?y ns:music.recording.tracks ?x .\n}\n", "TopicEntityMid": "m.01tk2w7", "mid2name": {"ns:m.01tk2w7": "Khalil Chahine"}, "SExpr_w_name": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) Khalil Chahine))", "SExpr": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) m.01tk2w7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cp1841)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cp1841 ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.0cp1841", "mid2name": {"ns:m.0cp1841": "Road Runner Express"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Road Runner Express))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.0cp1841))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05y84y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05y84y ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05y84y", "mid2name": {"ns:m.05y84y": "Arthur Whitney"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Arthur Whitney))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.05y84y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0l3kg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0l3kg ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0l3kg", "mid2name": {"ns:m.0l3kg": "Lyric poetry"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Lyric poetry))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0l3kg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06908b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06908b ns:amusement_parks.amusement_park_area.parks ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.06908b", "mid2name": {"ns:m.06908b": "Liberty Square"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R amusement_parks.amusement_park_area.parks) Liberty Square))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R amusement_parks.amusement_park_area.parks) m.06908b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l3ln1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l3ln1 ns:biology.gene_ontology_group.aggregate_group ?y .\n?y ns:biology.gene_ontology_group.broader_group ?x .\n}\n", "TopicEntityMid": "m.02l3ln1", "mid2name": {"ns:m.02l3ln1": "R7 cell fate commitment"}, "SExpr_w_name": "(JOIN (R biology.gene_ontology_group.broader_group) (JOIN (R biology.gene_ontology_group.aggregate_group) R7 cell fate commitment))", "SExpr": "(JOIN (R biology.gene_ontology_group.broader_group) (JOIN (R biology.gene_ontology_group.aggregate_group) m.02l3ln1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ct2rq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ct2rq ns:biology.gene.chromosome ?y .\n?y ns:biology.chromosome.band ?x .\n}\n", "TopicEntityMid": "m.03ct2rq", "mid2name": {"ns:m.03ct2rq": "Heat shock protein 90kDa alpha (cytosolic), member A1"}, "SExpr_w_name": "(JOIN (R biology.chromosome.band) (JOIN (R biology.gene.chromosome) Heat shock protein 90kDa alpha (cytosolic), member A1))", "SExpr": "(JOIN (R biology.chromosome.band) (JOIN (R biology.gene.chromosome) m.03ct2rq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05hplyv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05hplyv ns:business.consumer_product.brand ?y .\n?y ns:business.brand.owner_s ?x .\n}\n", "TopicEntityMid": "m.05hplyv", "mid2name": {"ns:m.05hplyv": "Holiday Ball Barbie"}, "SExpr_w_name": "(JOIN (R business.brand.owner_s) (JOIN (R business.consumer_product.brand) Holiday Ball Barbie))", "SExpr": "(JOIN (R business.brand.owner_s) (JOIN (R business.consumer_product.brand) m.05hplyv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q3n90)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q3n90 ns:geography.lake.basin_countries ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.02q3n90", "mid2name": {"ns:m.02q3n90": "El Dorado Lake"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R geography.lake.basin_countries) El Dorado Lake))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R geography.lake.basin_countries) m.02q3n90))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hdqrd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hdqrd ns:automotive.generation.models ?y .\n?y ns:automotive.model.generations ?x .\n}\n", "TopicEntityMid": "m.04hdqrd", "mid2name": {"ns:m.04hdqrd": "Sixth Generation Pontiac Grand Prix"}, "SExpr_w_name": "(JOIN (R automotive.model.generations) (JOIN (R automotive.generation.models) Sixth Generation Pontiac Grand Prix))", "SExpr": "(JOIN (R automotive.model.generations) (JOIN (R automotive.generation.models) m.04hdqrd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q2l2c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q2l2c ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.03q2l2c", "mid2name": {"ns:m.03q2l2c": "Fujifilm FinePix A610"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) Fujifilm FinePix A610))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.03q2l2c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033xpj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033xpj ns:spaceflight.rocket.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.033xpj", "mid2name": {"ns:m.033xpj": "Zenit"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R spaceflight.rocket.manufacturer) Zenit))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R spaceflight.rocket.manufacturer) m.033xpj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09mtpb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09mtpb ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.09mtpb", "mid2name": {"ns:m.09mtpb": "Brighton Ski Resort"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Brighton Ski Resort))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.09mtpb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b1nd5m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b1nd5m ns:book.book_edition_series.part_of_series ?y .\n?y ns:book.book_edition_series.series_editor ?x .\n}\n", "TopicEntityMid": "m.0b1nd5m", "mid2name": {"ns:m.0b1nd5m": "Easy Series 24 Pack (Regular)"}, "SExpr_w_name": "(JOIN (R book.book_edition_series.series_editor) (JOIN (R book.book_edition_series.part_of_series) Easy Series 24 Pack (Regular)))", "SExpr": "(JOIN (R book.book_edition_series.series_editor) (JOIN (R book.book_edition_series.part_of_series) m.0b1nd5m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vxdgml)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vxdgml ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\n}\n", "TopicEntityMid": "m.0vxdgml", "mid2name": {"ns:m.0vxdgml": "Leader of the Opposition"}, "SExpr_w_name": "(JOIN (R government.government_position_held.office_holder) (JOIN (R government.government_office_or_title.office_holders) Leader of the Opposition))", "SExpr": "(JOIN (R government.government_position_held.office_holder) (JOIN (R government.government_office_or_title.office_holders) m.0vxdgml))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09p8d_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09p8d_ ns:education.school_mascot.school ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.09p8d_", "mid2name": {"ns:m.09p8d_": "Blizzard T. Husky"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R education.school_mascot.school) Blizzard T. Husky))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R education.school_mascot.school) m.09p8d_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08c_g8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08c_g8 ns:comic_books.comic_book_series.publisher ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.08c_g8", "mid2name": {"ns:m.08c_g8": "Green Lantern Corps: Recharge"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R comic_books.comic_book_series.publisher) Green Lantern Corps: Recharge))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R comic_books.comic_book_series.publisher) m.08c_g8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027jdk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027jdk4 ns:opera.opera_director.operas_directed ?y .\n?y ns:opera.opera_production.opera ?x .\n}\n", "TopicEntityMid": "m.027jdk4", "mid2name": {"ns:m.027jdk4": "Zhang Jigang"}, "SExpr_w_name": "(JOIN (R opera.opera_production.opera) (JOIN (R opera.opera_director.operas_directed) Zhang Jigang))", "SExpr": "(JOIN (R opera.opera_production.opera) (JOIN (R opera.opera_director.operas_directed) m.027jdk4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c46l73)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c46l73 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.0c46l73", "mid2name": {"ns:m.0c46l73": "Joan Rydon"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Joan Rydon))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.0c46l73))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b9rwq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b9rwq ns:fictional_universe.work_of_fiction.setting ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05b9rwq", "mid2name": {"ns:m.05b9rwq": "Mostly I'm Silent"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.work_of_fiction.setting) Mostly I'm Silent))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.work_of_fiction.setting) m.05b9rwq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n7fm9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n7fm9 ns:organization.organization.committees ?y .\n?y ns:organization.organization_committee.members ?x .\n}\n", "TopicEntityMid": "m.04n7fm9", "mid2name": {"ns:m.04n7fm9": "Solazyme"}, "SExpr_w_name": "(JOIN (R organization.organization_committee.members) (JOIN (R organization.organization.committees) Solazyme))", "SExpr": "(JOIN (R organization.organization_committee.members) (JOIN (R organization.organization.committees) m.04n7fm9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fk282)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fk282 ns:olympics.olympic_event.contested_as_demonstration_event ?y .\n?y ns:time.event.includes_event ?x .\n}\n", "TopicEntityMid": "m.04fk282", "mid2name": {"ns:m.04fk282": "Men's Volleyball"}, "SExpr_w_name": "(JOIN (R time.event.includes_event) (JOIN (R olympics.olympic_event.contested_as_demonstration_event) Men's Volleyball))", "SExpr": "(JOIN (R time.event.includes_event) (JOIN (R olympics.olympic_event.contested_as_demonstration_event) m.04fk282))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045b01m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045b01m ns:government.election_campaign.candidate ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.045b01m", "mid2name": {"ns:m.045b01m": "Matt Gonzalez vice-presidential campaign, 2008"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R government.election_campaign.candidate) Matt Gonzalez vice-presidential campaign, 2008))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R government.election_campaign.candidate) m.045b01m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0283d4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0283d4 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0283d4", "mid2name": {"ns:m.0283d4": "Eloquence"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Eloquence))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0283d4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0531b_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0531b_ ns:base.songsfromtv.song_performance.heard_in_tv_episode ?y .\n?y ns:tv.tv_series_episode.series ?x .\n}\n", "TopicEntityMid": "m.0531b_", "mid2name": {"ns:m.0531b_": "These Boots Are Made for Walkin'"}, "SExpr_w_name": "(JOIN (R tv.tv_series_episode.series) (JOIN (R base.songsfromtv.song_performance.heard_in_tv_episode) These Boots Are Made for Walkin'))", "SExpr": "(JOIN (R tv.tv_series_episode.series) (JOIN (R base.songsfromtv.song_performance.heard_in_tv_episode) m.0531b_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vyk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vyk ns:base.descriptive_names.names.descriptive_name ?y .\n?y ns:base.schemastaging.plural_form.gender ?x .\n}\n", "TopicEntityMid": "m.05vyk", "mid2name": {"ns:m.05vyk": "Pianist"}, "SExpr_w_name": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.descriptive_names.names.descriptive_name) Pianist))", "SExpr": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.descriptive_names.names.descriptive_name) m.05vyk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047csmy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047csmy ns:film.film.costume_design_by ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.047csmy", "mid2name": {"ns:m.047csmy": "Transformers: Revenge of the Fallen"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) Transformers: Revenge of the Fallen))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) m.047csmy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04kf_40)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04kf_40 ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.04kf_40", "mid2name": {"ns:m.04kf_40": "Lena Str\u00f6mb\u00e4ck"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Lena Str\u00f6mb\u00e4ck))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.04kf_40))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.064t9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.064t9 ns:base.webvideo.internet_video_genre.internet_video ?y .\n?y ns:base.webvideo.internet_video.performances ?x .\n}\n", "TopicEntityMid": "m.064t9", "mid2name": {"ns:m.064t9": "Pop music"}, "SExpr_w_name": "(JOIN (R base.webvideo.internet_video.performances) (JOIN (R base.webvideo.internet_video_genre.internet_video) Pop music))", "SExpr": "(JOIN (R base.webvideo.internet_video.performances) (JOIN (R base.webvideo.internet_video_genre.internet_video) m.064t9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z1bzt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z1bzt ns:business.industry.companies ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n", "TopicEntityMid": "m.01z1bzt", "mid2name": {"ns:m.01z1bzt": "Coffeehouse"}, "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R business.industry.companies) Coffeehouse))", "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R business.industry.companies) m.01z1bzt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ltfz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ltfz ns:computer.computer_processor.processor_family ?y .\n?y ns:computer.computer_processor.used_in_computers ?x .\n}\n", "TopicEntityMid": "m.03ltfz", "mid2name": {"ns:m.03ltfz": "MOS Technology 8502"}, "SExpr_w_name": "(JOIN (R computer.computer_processor.used_in_computers) (JOIN (R computer.computer_processor.processor_family) MOS Technology 8502))", "SExpr": "(JOIN (R computer.computer_processor.used_in_computers) (JOIN (R computer.computer_processor.processor_family) m.03ltfz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03dhpv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03dhpv ns:film.film.costume_design_by ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.03dhpv", "mid2name": {"ns:m.03dhpv": "Swiss Family Robinson"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) Swiss Family Robinson))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) m.03dhpv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s_c9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s_c9 ns:celebrities.celebrity.net_worth ?y .\n?y ns:measurement_unit.dated_money_value.currency ?x .\n}\n", "TopicEntityMid": "m.03s_c9", "mid2name": {"ns:m.03s_c9": "Theodore J. Forstmann"}, "SExpr_w_name": "(JOIN (R measurement_unit.dated_money_value.currency) (JOIN (R celebrities.celebrity.net_worth) Theodore J. Forstmann))", "SExpr": "(JOIN (R measurement_unit.dated_money_value.currency) (JOIN (R celebrities.celebrity.net_worth) m.03s_c9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cb9nbr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cb9nbr ns:fictional_universe.fictional_substance.fictional_object ?y .\n?y ns:fictional_universe.fictional_object.created_by ?x .\n}\n", "TopicEntityMid": "m.0cb9nbr", "mid2name": {"ns:m.0cb9nbr": "Dream-forged iron and bronze"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.created_by) (JOIN (R fictional_universe.fictional_substance.fictional_object) Dream-forged iron and bronze))", "SExpr": "(JOIN (R fictional_universe.fictional_object.created_by) (JOIN (R fictional_universe.fictional_substance.fictional_object) m.0cb9nbr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059mb4q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059mb4q ns:book.written_work.author ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.059mb4q", "mid2name": {"ns:m.059mb4q": "Summary and Analysis of the U.S. Government Bat Banding Program"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R book.written_work.author) Summary and Analysis of the U.S. Government Bat Banding Program))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R book.written_work.author) m.059mb4q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cwf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cwf_ ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.02cwf_", "mid2name": {"ns:m.02cwf_": "Shrine"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Shrine))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.02cwf_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_g3nx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_g3nx ns:protected_sites.site_listing_category.category_of ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05_g3nx", "mid2name": {"ns:m.05_g3nx": "UWH criteria i"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R protected_sites.site_listing_category.category_of) UWH criteria i))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R protected_sites.site_listing_category.category_of) m.05_g3nx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rgsf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rgsf_ ns:comic_books.comic_book_series.publisher ?y .\n?y ns:organization.club_interest.clubs ?x .\n}\n", "TopicEntityMid": "m.09rgsf_", "mid2name": {"ns:m.09rgsf_": "Longshot"}, "SExpr_w_name": "(JOIN (R organization.club_interest.clubs) (JOIN (R comic_books.comic_book_series.publisher) Longshot))", "SExpr": "(JOIN (R organization.club_interest.clubs) (JOIN (R comic_books.comic_book_series.publisher) m.09rgsf_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tyczg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tyczg ns:medicine.medical_trial.treatment_being_tested ?y .\n?y ns:base.bioventurist.bv_therapeutic.indication_or_disease ?x .\n}\n", "TopicEntityMid": "m.05tyczg", "mid2name": {"ns:m.05tyczg": "stage 2"}, "SExpr_w_name": "(JOIN (R base.bioventurist.bv_therapeutic.indication_or_disease) (JOIN (R medicine.medical_trial.treatment_being_tested) stage 2))", "SExpr": "(JOIN (R base.bioventurist.bv_therapeutic.indication_or_disease) (JOIN (R medicine.medical_trial.treatment_being_tested) m.05tyczg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b_tw43)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b_tw43 ns:fictional_universe.fictional_universe.organizations ?y .\n?y ns:military.military_unit.servicemembers ?x .\n}\n", "TopicEntityMid": "m.0b_tw43", "mid2name": {"ns:m.0b_tw43": "Thieves' World fictional shared universe"}, "SExpr_w_name": "(JOIN (R military.military_unit.servicemembers) (JOIN (R fictional_universe.fictional_universe.organizations) Thieves' World fictional shared universe))", "SExpr": "(JOIN (R military.military_unit.servicemembers) (JOIN (R fictional_universe.fictional_universe.organizations) m.0b_tw43))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09jcw8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09jcw8 ns:location.cn_autonomous_prefecture.designated_minority ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.09jcw8", "mid2name": {"ns:m.09jcw8": "Haibei Tibetan Autonomous Prefecture"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R location.cn_autonomous_prefecture.designated_minority) Haibei Tibetan Autonomous Prefecture))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R location.cn_autonomous_prefecture.designated_minority) m.09jcw8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bwlfq2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bwlfq2 ns:internet.website_owner.websites_owned ?y .\n?y ns:internet.website.category ?x .\n}\n", "TopicEntityMid": "m.0bwlfq2", "mid2name": {"ns:m.0bwlfq2": "Universal Uclick"}, "SExpr_w_name": "(JOIN (R internet.website.category) (JOIN (R internet.website_owner.websites_owned) Universal Uclick))", "SExpr": "(JOIN (R internet.website.category) (JOIN (R internet.website_owner.websites_owned) m.0bwlfq2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058ld_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058ld_ ns:astronomy.celestial_object.category ?y .\n?y ns:astronomy.celestial_object_category.objects ?x .\n}\n", "TopicEntityMid": "m.058ld_", "mid2name": {"ns:m.058ld_": "Epsilon Bo\u00f6tis"}, "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) Epsilon Bo\u00f6tis))", "SExpr": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) m.058ld_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08rypw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08rypw ns:government.legislative_session.legislature ?y .\n?y ns:government.governmental_body.jurisdiction ?x .\n}\n", "TopicEntityMid": "m.08rypw", "mid2name": {"ns:m.08rypw": "3rd Parliament of Upper Canada"}, "SExpr_w_name": "(JOIN (R government.governmental_body.jurisdiction) (JOIN (R government.legislative_session.legislature) 3rd Parliament of Upper Canada))", "SExpr": "(JOIN (R government.governmental_body.jurisdiction) (JOIN (R government.legislative_session.legislature) m.08rypw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.069gh5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.069gh5 ns:computer.programming_language.influenced_by ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.069gh5", "mid2name": {"ns:m.069gh5": "newLISP"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) newLISP))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) m.069gh5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r102g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r102g ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.02r102g", "mid2name": {"ns:m.02r102g": "Raton-Clayton volcanic field"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Raton-Clayton volcanic field))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.02r102g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgjd ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.02kwgjd", "mid2name": {"ns:m.02kwgjd": "Chromosome 8 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 8 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.02kwgjd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c7ffh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c7ffh ns:award.award_nominee.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.05c7ffh", "mid2name": {"ns:m.05c7ffh": "John P. Hampton"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) John P. Hampton))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) m.05c7ffh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gppxw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gppxw ns:computer.computer_peripheral.peripheral_class ?y .\n?y ns:base.ontologies.ontology_instance.equivalent_instances ?x .\n}\n", "TopicEntityMid": "m.05gppxw", "mid2name": {"ns:m.05gppxw": "Joydick"}, "SExpr_w_name": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R computer.computer_peripheral.peripheral_class) Joydick))", "SExpr": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R computer.computer_peripheral.peripheral_class) m.05gppxw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03lht)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03lht ns:royalty.royal_line.preceded_by ?y .\n?y ns:people.family.rise_to_prominence ?x .\n}\n", "TopicEntityMid": "m.03lht", "mid2name": {"ns:m.03lht": "House of Habsburg"}, "SExpr_w_name": "(JOIN (R people.family.rise_to_prominence) (JOIN (R royalty.royal_line.preceded_by) House of Habsburg))", "SExpr": "(JOIN (R people.family.rise_to_prominence) (JOIN (R royalty.royal_line.preceded_by) m.03lht))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050yvn4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050yvn4 ns:computer.operating_system.parent_os ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.050yvn4", "mid2name": {"ns:m.050yvn4": "Kubuntu 5.10"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.operating_system.parent_os) Kubuntu 5.10))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.operating_system.parent_os) m.050yvn4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.069fyzd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.069fyzd ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.069fyzd", "mid2name": {"ns:m.069fyzd": "The mother's recompense"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) The mother's recompense))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.069fyzd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c59y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c59y ns:organization.club_interest.clubs ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n", "TopicEntityMid": "m.0c59y", "mid2name": {"ns:m.0c59y": "Bourbon whiskey"}, "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R organization.club_interest.clubs) Bourbon whiskey))", "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R organization.club_interest.clubs) m.0c59y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078gly)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078gly ns:sports.boxing_weight_division.matches ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.078gly", "mid2name": {"ns:m.078gly": "Light middleweight"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R sports.boxing_weight_division.matches) Light middleweight))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R sports.boxing_weight_division.matches) m.078gly))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jhg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jhg ns:user.techgnostic.default_domain.magazine_topic.periodical ?y .\n?y ns:user.techgnostic.default_domain.newspaper.market_areas ?x .\n}\n", "TopicEntityMid": "m.05jhg", "mid2name": {"ns:m.05jhg": "News"}, "SExpr_w_name": "(JOIN (R user.techgnostic.default_domain.newspaper.market_areas) (JOIN (R user.techgnostic.default_domain.magazine_topic.periodical) News))", "SExpr": "(JOIN (R user.techgnostic.default_domain.newspaper.market_areas) (JOIN (R user.techgnostic.default_domain.magazine_topic.periodical) m.05jhg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j7q499)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j7q499 ns:education.academic_post_title.people_with_this_title ?y .\n?y ns:education.academic_post.institution ?x .\n}\n", "TopicEntityMid": "m.0j7q499", "mid2name": {"ns:m.0j7q499": "Resident in Preventive Medicine"}, "SExpr_w_name": "(JOIN (R education.academic_post.institution) (JOIN (R education.academic_post_title.people_with_this_title) Resident in Preventive Medicine))", "SExpr": "(JOIN (R education.academic_post.institution) (JOIN (R education.academic_post_title.people_with_this_title) m.0j7q499))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gjd0vp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gjd0vp ns:sports.sports_team.coaches ?y .\n?y ns:sports.sports_team_coach_tenure.coach ?x .\n}\n", "TopicEntityMid": "m.0gjd0vp", "mid2name": {"ns:m.0gjd0vp": "Arkansas\u2013Pine Bluff Golden Lions football"}, "SExpr_w_name": "(JOIN (R sports.sports_team_coach_tenure.coach) (JOIN (R sports.sports_team.coaches) Arkansas\u2013Pine Bluff Golden Lions football))", "SExpr": "(JOIN (R sports.sports_team_coach_tenure.coach) (JOIN (R sports.sports_team.coaches) m.0gjd0vp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_yxpr7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_yxpr7 ns:book.author.works_written ?y .\n?y ns:award.award_nominated_work.award_nominations ?x .\n}\n", "TopicEntityMid": "m.0_yxpr7", "mid2name": {"ns:m.0_yxpr7": "Lisa Hanawalt"}, "SExpr_w_name": "(JOIN (R award.award_nominated_work.award_nominations) (JOIN (R book.author.works_written) Lisa Hanawalt))", "SExpr": "(JOIN (R award.award_nominated_work.award_nominations) (JOIN (R book.author.works_written) m.0_yxpr7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05m_6jr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05m_6jr ns:book.periodical.language ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.05m_6jr", "mid2name": {"ns:m.05m_6jr": "Dom in svet"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R book.periodical.language) Dom in svet))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R book.periodical.language) m.05m_6jr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cbc6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cbc6 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0cbc6", "mid2name": {"ns:m.0cbc6": "Neanderthal"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Neanderthal))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0cbc6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015czt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015czt ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.015czt", "mid2name": {"ns:m.015czt": "Lieutenant"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Lieutenant))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.015czt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vl51z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vl51z ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0vl51z", "mid2name": {"ns:m.0vl51z": "Once Upon a Time"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Once Upon a Time))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0vl51z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06nk7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06nk7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.06nk7", "mid2name": {"ns:m.06nk7": "Syllabary"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Syllabary))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.06nk7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019d34)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019d34 ns:astronomy.constellation.bordering_constellations_new ?y .\n?y ns:astronomy.constellation_bordering_relationship.constellations ?x .\n}\n", "TopicEntityMid": "m.019d34", "mid2name": {"ns:m.019d34": "Norma"}, "SExpr_w_name": "(JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN (R astronomy.constellation.bordering_constellations_new) Norma))", "SExpr": "(JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN (R astronomy.constellation.bordering_constellations_new) m.019d34))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033zrqx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033zrqx ns:music.release.album ?y .\n?y ns:music.album.artist ?x .\n}\n", "TopicEntityMid": "m.033zrqx", "mid2name": {"ns:m.033zrqx": "And Gun"}, "SExpr_w_name": "(JOIN (R music.album.artist) (JOIN (R music.release.album) And Gun))", "SExpr": "(JOIN (R music.album.artist) (JOIN (R music.release.album) m.033zrqx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01147l69)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01147l69 ns:business.product_line.category ?y .\n?y ns:business.product_category.product_lines ?x .\n}\n", "TopicEntityMid": "m.01147l69", "mid2name": {"ns:m.01147l69": "Pollyanna"}, "SExpr_w_name": "(JOIN (R business.product_category.product_lines) (JOIN (R business.product_line.category) Pollyanna))", "SExpr": "(JOIN (R business.product_category.product_lines) (JOIN (R business.product_line.category) m.01147l69))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cnb192)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cnb192 ns:fictional_universe.fictional_object_destroyer.fictional_objects_destroyed ?y .\n?y ns:fictional_universe.fictional_object.composition ?x .\n}\n", "TopicEntityMid": "m.0cnb192", "mid2name": {"ns:m.0cnb192": "swordsmen"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.composition) (JOIN (R fictional_universe.fictional_object_destroyer.fictional_objects_destroyed) swordsmen))", "SExpr": "(JOIN (R fictional_universe.fictional_object.composition) (JOIN (R fictional_universe.fictional_object_destroyer.fictional_objects_destroyed) m.0cnb192))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0115mcz7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0115mcz7 ns:automotive.generation.models ?y .\n?y ns:automotive.model.predecessor ?x .\n}\n", "TopicEntityMid": "m.0115mcz7", "mid2name": {"ns:m.0115mcz7": "Ford Mondeo"}, "SExpr_w_name": "(JOIN (R automotive.model.predecessor) (JOIN (R automotive.generation.models) Ford Mondeo))", "SExpr": "(JOIN (R automotive.model.predecessor) (JOIN (R automotive.generation.models) m.0115mcz7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g1jf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g1jf ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0g1jf", "mid2name": {"ns:m.0g1jf": "Fraud"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Fraud))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0g1jf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bqwdc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bqwdc ns:aviation.aircraft_model.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.0bqwdc", "mid2name": {"ns:m.0bqwdc": "Bell ARH-70 Arapaho"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) Bell ARH-70 Arapaho))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) m.0bqwdc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04kp487)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04kp487 ns:skiing.ski_lift.ski_area ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.04kp487", "mid2name": {"ns:m.04kp487": "Snake Creek Express"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R skiing.ski_lift.ski_area) Snake Creek Express))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R skiing.ski_lift.ski_area) m.04kp487))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nd8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nd8 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01nd8", "mid2name": {"ns:m.01nd8": "Cardiology"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Cardiology))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01nd8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d2cxf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d2cxf ns:medicine.medical_trial.treatment_being_tested ?y .\n?y ns:medicine.medical_treatment.used_to_treat ?x .\n}\n", "TopicEntityMid": "m.04d2cxf", "mid2name": {"ns:m.04d2cxf": "Memantine in Systemic Lupus Erythematosus"}, "SExpr_w_name": "(JOIN (R medicine.medical_treatment.used_to_treat) (JOIN (R medicine.medical_trial.treatment_being_tested) Memantine in Systemic Lupus Erythematosus))", "SExpr": "(JOIN (R medicine.medical_treatment.used_to_treat) (JOIN (R medicine.medical_trial.treatment_being_tested) m.04d2cxf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.073hcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.073hcq ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.073hcq", "mid2name": {"ns:m.073hcq": "ZX Interface 2"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) ZX Interface 2))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.073hcq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j6t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j6t ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.01j6t", "mid2name": {"ns:m.01j6t": "Barry Goldwater"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Barry Goldwater))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.01j6t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_m24)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_m24 ns:religion.religious_text.religious_text_of ?y .\n?y ns:religion.religion.places_of_worship_historical ?x .\n}\n", "TopicEntityMid": "m.05_m24", "mid2name": {"ns:m.05_m24": "\u0100gama"}, "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religious_text.religious_text_of) \u0100gama))", "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religious_text.religious_text_of) m.05_m24))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rj0b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rj0b ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02rj0b", "mid2name": {"ns:m.02rj0b": "Strike"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Strike))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02rj0b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.092t__)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.092t__ ns:fictional_universe.fictional_character.character_created_by ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.092t__", "mid2name": {"ns:m.092t__": "Ursula"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R fictional_universe.fictional_character.character_created_by) Ursula))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R fictional_universe.fictional_character.character_created_by) m.092t__))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xjb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xjb ns:music.genre.artists ?y .\n?y ns:base.popstra.celebrity.bought ?x .\n}\n", "TopicEntityMid": "m.02xjb", "mid2name": {"ns:m.02xjb": "Freestyle music"}, "SExpr_w_name": "(JOIN (R base.popstra.celebrity.bought) (JOIN (R music.genre.artists) Freestyle music))", "SExpr": "(JOIN (R base.popstra.celebrity.bought) (JOIN (R music.genre.artists) m.02xjb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_rh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_rh ns:base.nobelprizes.nobel_subject_area.nobel_awards ?y .\n?y ns:base.nobelprizes.nobel_honor.nobel_prize_winner ?x .\n}\n", "TopicEntityMid": "m.04_rh", "mid2name": {"ns:m.04_rh": "Meson"}, "SExpr_w_name": "(JOIN (R base.nobelprizes.nobel_honor.nobel_prize_winner) (JOIN (R base.nobelprizes.nobel_subject_area.nobel_awards) Meson))", "SExpr": "(JOIN (R base.nobelprizes.nobel_honor.nobel_prize_winner) (JOIN (R base.nobelprizes.nobel_subject_area.nobel_awards) m.04_rh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ckl3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ckl3 ns:location.location.containedby ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.02ckl3", "mid2name": {"ns:m.02ckl3": "Edmund A. Walsh School of Foreign Service"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) Edmund A. Walsh School of Foreign Service))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) m.02ckl3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dnr7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dnr7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0dnr7", "mid2name": {"ns:m.0dnr7": "Textile"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Textile))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0dnr7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06m2j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06m2j ns:film.film.costume_design_by ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.06m2j", "mid2name": {"ns:m.06m2j": "Repo Man"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) Repo Man))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) m.06m2j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01cxh7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01cxh7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01cxh7", "mid2name": {"ns:m.01cxh7": "Transporter bridge"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Transporter bridge))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01cxh7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0679vth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0679vth ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0679vth", "mid2name": {"ns:m.0679vth": "Urban Acupuncture"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Urban Acupuncture))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.0679vth))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vshxf6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vshxf6 ns:computer.programming_language.influenced_by ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.0vshxf6", "mid2name": {"ns:m.0vshxf6": "BAIL"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) BAIL))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) m.0vshxf6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ffsxy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ffsxy ns:spaceflight.satellite.launch_vehicle ?y .\n?y ns:spaceflight.rocket.manufacturer ?x .\n}\n", "TopicEntityMid": "m.0ffsxy", "mid2name": {"ns:m.0ffsxy": "Genesis I"}, "SExpr_w_name": "(JOIN (R spaceflight.rocket.manufacturer) (JOIN (R spaceflight.satellite.launch_vehicle) Genesis I))", "SExpr": "(JOIN (R spaceflight.rocket.manufacturer) (JOIN (R spaceflight.satellite.launch_vehicle) m.0ffsxy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gzqg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gzqg ns:comic_books.comic_book_character.created_by ?y .\n?y ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n}\n", "TopicEntityMid": "m.04gzqg", "mid2name": {"ns:m.04gzqg": "Sue Dibny"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (JOIN (R comic_books.comic_book_character.created_by) Sue Dibny))", "SExpr": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (JOIN (R comic_books.comic_book_character.created_by) m.04gzqg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqstjh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqstjh ns:medicine.drug_formulation.active_ingredient_moieties ?y .\n?y ns:chemistry.chemical_element.atomic_mass ?x .\n}\n", "TopicEntityMid": "m.0hqstjh", "mid2name": {"ns:m.0hqstjh": "Phytolacca decandra, trifolium pratense, xanthoxylum fraxineum, arsenicum album, 12/30/12/30/12/30/12/30/30/12/3/30/3/30/30/30/3/30 liquid"}, "SExpr_w_name": "(JOIN (R chemistry.chemical_element.atomic_mass) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) Phytolacca decandra, trifolium pratense, xanthoxylum fraxineum, arsenicum album, 12/30/12/30/12/30/12/30/30/12/3/30/3/30/30/30/3/30 liquid))", "SExpr": "(JOIN (R chemistry.chemical_element.atomic_mass) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqstjh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwnz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwnz1 ns:biology.genomic_locus.annotation ?y .\n?y ns:biology.cytogenetic_band.chromosome ?x .\n}\n", "TopicEntityMid": "m.02kwnz1", "mid2name": {"ns:m.02kwnz1": "Locus for Human Cytogenetic Band 7q22.3"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.chromosome) (JOIN (R biology.genomic_locus.annotation) Locus for Human Cytogenetic Band 7q22.3))", "SExpr": "(JOIN (R biology.cytogenetic_band.chromosome) (JOIN (R biology.genomic_locus.annotation) m.02kwnz1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05v_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05v_l ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.05v_l", "mid2name": {"ns:m.05v_l": "Photon"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Photon))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.05v_l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bh9whb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bh9whb ns:music.composition.composer ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0bh9whb", "mid2name": {"ns:m.0bh9whb": "OMG"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) OMG))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) m.0bh9whb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07m61)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07m61 ns:astronomy.asteroid_group.asteroid_group_members ?y .\n?y ns:astronomy.astronomical_discovery.discoverer ?x .\n}\n", "TopicEntityMid": "m.07m61", "mid2name": {"ns:m.07m61": "Jupiter trojan"}, "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.discoverer) (JOIN (R astronomy.asteroid_group.asteroid_group_members) Jupiter trojan))", "SExpr": "(JOIN (R astronomy.astronomical_discovery.discoverer) (JOIN (R astronomy.asteroid_group.asteroid_group_members) m.07m61))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01g4b2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01g4b2 ns:royalty.system_of_nobility.titles ?y .\n?y ns:royalty.system_title_relationship.title ?x .\n}\n", "TopicEntityMid": "m.01g4b2", "mid2name": {"ns:m.01g4b2": "Ayyubid dynasty"}, "SExpr_w_name": "(JOIN (R royalty.system_title_relationship.title) (JOIN (R royalty.system_of_nobility.titles) Ayyubid dynasty))", "SExpr": "(JOIN (R royalty.system_title_relationship.title) (JOIN (R royalty.system_of_nobility.titles) m.01g4b2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04tl5yl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04tl5yl ns:dataworld.gardening_hint.split_to ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.04tl5yl", "mid2name": {"ns:m.04tl5yl": "bzip2"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R dataworld.gardening_hint.split_to) bzip2))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R dataworld.gardening_hint.split_to) m.04tl5yl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.092bf5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.092bf5 ns:religion.religion.places_of_worship_historical ?y .\n?y ns:religion.place_of_worship_historical_use.place_of_worship ?x .\n}\n", "TopicEntityMid": "m.092bf5", "mid2name": {"ns:m.092bf5": "Buddhism"}, "SExpr_w_name": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) Buddhism))", "SExpr": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) m.092bf5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dmxv5v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dmxv5v ns:music.record_label.releases ?y .\n?y ns:music.release.album ?x .\n}\n", "TopicEntityMid": "m.0dmxv5v", "mid2name": {"ns:m.0dmxv5v": "Projekt: Archive"}, "SExpr_w_name": "(JOIN (R music.release.album) (JOIN (R music.record_label.releases) Projekt: Archive))", "SExpr": "(JOIN (R music.release.album) (JOIN (R music.record_label.releases) m.0dmxv5v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tgm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tgm ns:religion.religion.places_of_worship_historical ?y .\n?y ns:religion.place_of_worship_historical_use.place_of_worship ?x .\n}\n", "TopicEntityMid": "m.05tgm", "mid2name": {"ns:m.05tgm": "Paganism"}, "SExpr_w_name": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) Paganism))", "SExpr": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) m.05tgm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02bgb6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02bgb6 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02bgb6", "mid2name": {"ns:m.02bgb6": "Hyundai Heavy Industries"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Hyundai Heavy Industries))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02bgb6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07nm95y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07nm95y ns:olympics.olympic_event.competitions ?y .\n?y ns:time.event.included_in_event ?x .\n}\n", "TopicEntityMid": "m.07nm95y", "mid2name": {"ns:m.07nm95y": "Men's Judo, Middleweight 78-86"}, "SExpr_w_name": "(JOIN (R time.event.included_in_event) (JOIN (R olympics.olympic_event.competitions) Men's Judo, Middleweight 78-86))", "SExpr": "(JOIN (R time.event.included_in_event) (JOIN (R olympics.olympic_event.competitions) m.07nm95y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pvs8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pvs8 ns:music.artist.track ?y .\n?y ns:music.recording.tracks ?x .\n}\n", "TopicEntityMid": "m.02pvs8", "mid2name": {"ns:m.02pvs8": "Neil Morrissey"}, "SExpr_w_name": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) Neil Morrissey))", "SExpr": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) m.02pvs8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dq_5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dq_5 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0dq_5", "mid2name": {"ns:m.0dq_5": "CEO"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) CEO))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0dq_5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06zqfv4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06zqfv4 ns:law.legal_case.judges ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.06zqfv4", "mid2name": {"ns:m.06zqfv4": "Estate of Carter v. Commissioner"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R law.legal_case.judges) Estate of Carter v. Commissioner))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R law.legal_case.judges) m.06zqfv4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02002f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02002f ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02002f", "mid2name": {"ns:m.02002f": "Sinhala Language"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Sinhala Language))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02002f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:book.author.works_written ?y .\n?y ns:book.written_work.original_language ?x .\n}\n", "TopicEntityMid": "m.04lg6", "mid2name": {"ns:m.04lg6": "Leonardo da Vinci"}, "SExpr_w_name": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) Leonardo da Vinci))", "SExpr": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) m.04lg6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gd6zgm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gd6zgm ns:food.dish.recipes ?y .\n?y ns:food.recipe.author ?x .\n}\n", "TopicEntityMid": "m.0gd6zgm", "mid2name": {"ns:m.0gd6zgm": "Transcontinental Condiment Violation"}, "SExpr_w_name": "(JOIN (R food.recipe.author) (JOIN (R food.dish.recipes) Transcontinental Condiment Violation))", "SExpr": "(JOIN (R food.recipe.author) (JOIN (R food.dish.recipes) m.0gd6zgm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rk0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rk0 ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?y .\n?y ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.03rk0", "mid2name": {"ns:m.03rk0": "India"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) India))", "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.03rk0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_1vdv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_1vdv ns:business.business_location.address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "TopicEntityMid": "m.01_1vdv", "mid2name": {"ns:m.01_1vdv": "Bajaritos"}, "SExpr_w_name": "(JOIN (R location.mailing_address.citytown) (JOIN (R business.business_location.address) Bajaritos))", "SExpr": "(JOIN (R location.mailing_address.citytown) (JOIN (R business.business_location.address) m.01_1vdv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03nns3v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03nns3v ns:language.language_dialect.language ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.03nns3v", "mid2name": {"ns:m.03nns3v": "Kentish dialect"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R language.language_dialect.language) Kentish dialect))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R language.language_dialect.language) m.03nns3v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ngkt48)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ngkt48 ns:geography.island_group.islands_in_group ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.0ngkt48", "mid2name": {"ns:m.0ngkt48": "Praia Sancho"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R geography.island_group.islands_in_group) Praia Sancho))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R geography.island_group.islands_in_group) m.0ngkt48))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lr0gz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lr0gz ns:biology.genomic_locus.annotation ?y .\n?y ns:biology.gene.chromosome ?x .\n}\n", "TopicEntityMid": "m.02lr0gz", "mid2name": {"ns:m.02lr0gz": "17 + [38272687,38274759]"}, "SExpr_w_name": "(JOIN (R biology.gene.chromosome) (JOIN (R biology.genomic_locus.annotation) 17 + [38272687,38274759]))", "SExpr": "(JOIN (R biology.gene.chromosome) (JOIN (R biology.genomic_locus.annotation) m.02lr0gz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dv5bxb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dv5bxb ns:music.album.primary_release ?y .\n?y ns:music.release.format ?x .\n}\n", "TopicEntityMid": "m.0dv5bxb", "mid2name": {"ns:m.0dv5bxb": "\u82b1\u6a23\u5c11\u5e74\u5c11\u5973"}, "SExpr_w_name": "(JOIN (R music.release.format) (JOIN (R music.album.primary_release) \u82b1\u6a23\u5c11\u5e74\u5c11\u5973))", "SExpr": "(JOIN (R music.release.format) (JOIN (R music.album.primary_release) m.0dv5bxb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mf0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mf0 ns:business.product_category.products ?y .\n?y ns:business.consumer_product.category ?x .\n}\n", "TopicEntityMid": "m.01mf0", "mid2name": {"ns:m.01mf0": "Software"}, "SExpr_w_name": "(JOIN (R business.consumer_product.category) (JOIN (R business.product_category.products) Software))", "SExpr": "(JOIN (R business.consumer_product.category) (JOIN (R business.product_category.products) m.01mf0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0brb4d7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0brb4d7 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.0brb4d7", "mid2name": {"ns:m.0brb4d7": "Peter S. Thaulad"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Peter S. Thaulad))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.0brb4d7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h6nlh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h6nlh ns:people.profession.people_with_this_profession ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.02h6nlh", "mid2name": {"ns:m.02h6nlh": "Swimming coach"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R people.profession.people_with_this_profession) Swimming coach))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R people.profession.people_with_this_profession) m.02h6nlh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01g4nb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01g4nb ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01g4nb", "mid2name": {"ns:m.01g4nb": "Court of Cassation"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Court of Cassation))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01g4nb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dlknf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dlknf ns:distilled_spirits.distillery.spirits ?y .\n?y ns:distilled_spirits.distilled_spirit.abv ?x .\n}\n", "TopicEntityMid": "m.0dlknf", "mid2name": {"ns:m.0dlknf": "Barton Brands"}, "SExpr_w_name": "(JOIN (R distilled_spirits.distilled_spirit.abv) (JOIN (R distilled_spirits.distillery.spirits) Barton Brands))", "SExpr": "(JOIN (R distilled_spirits.distilled_spirit.abv) (JOIN (R distilled_spirits.distillery.spirits) m.0dlknf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.057st8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.057st8 ns:astronomy.celestial_object.category ?y .\n?y ns:astronomy.celestial_object_category.objects ?x .\n}\n", "TopicEntityMid": "m.057st8", "mid2name": {"ns:m.057st8": "Iota Carinae"}, "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) Iota Carinae))", "SExpr": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) m.057st8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nqcqmp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nqcqmp ns:music.release.album ?y .\n?y ns:music.album.artist ?x .\n}\n", "TopicEntityMid": "m.0nqcqmp", "mid2name": {"ns:m.0nqcqmp": "(Disappointed Cloud) Anyway"}, "SExpr_w_name": "(JOIN (R music.album.artist) (JOIN (R music.release.album) (Disappointed Cloud) Anyway))", "SExpr": "(JOIN (R music.album.artist) (JOIN (R music.release.album) m.0nqcqmp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bsdc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bsdc ns:biology.genome.gene ?y .\n?y ns:base.aptamer.interactor.is_participant_in ?x .\n}\n", "TopicEntityMid": "m.0bsdc", "mid2name": {"ns:m.0bsdc": "Human genome"}, "SExpr_w_name": "(JOIN (R base.aptamer.interactor.is_participant_in) (JOIN (R biology.genome.gene) Human genome))", "SExpr": "(JOIN (R base.aptamer.interactor.is_participant_in) (JOIN (R biology.genome.gene) m.0bsdc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h07s2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h07s2 ns:medicine.medical_treatment.used_to_treat ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0h07s2", "mid2name": {"ns:m.0h07s2": "Ibutilide"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) Ibutilide))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) m.0h07s2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r4f56)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r4f56 ns:people.profession.people_with_this_profession ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.02r4f56", "mid2name": {"ns:m.02r4f56": "Basketball Official"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R people.profession.people_with_this_profession) Basketball Official))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R people.profession.people_with_this_profession) m.02r4f56))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04k9rd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04k9rd ns:law.patent_assignee.patents_assigned ?y .\n?y ns:law.us_patent.associated_inventions ?x .\n}\n", "TopicEntityMid": "m.04k9rd", "mid2name": {"ns:m.04k9rd": "Raggedy Ann"}, "SExpr_w_name": "(JOIN (R law.us_patent.associated_inventions) (JOIN (R law.patent_assignee.patents_assigned) Raggedy Ann))", "SExpr": "(JOIN (R law.us_patent.associated_inventions) (JOIN (R law.patent_assignee.patents_assigned) m.04k9rd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07yf2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07yf2 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.07yf2", "mid2name": {"ns:m.07yf2": "Virtual machine"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Virtual machine))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.07yf2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.024fy1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.024fy1 ns:spaceflight.space_agency.astronauts ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.024fy1", "mid2name": {"ns:m.024fy1": "CNES"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R spaceflight.space_agency.astronauts) CNES))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R spaceflight.space_agency.astronauts) m.024fy1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.029zr1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.029zr1 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.029zr1", "mid2name": {"ns:m.029zr1": "Quartzite"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Quartzite))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.029zr1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vh2_g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vh2_g ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.05vh2_g", "mid2name": {"ns:m.05vh2_g": "Lincoln Stein"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Lincoln Stein))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.05vh2_g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mzj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mzj_ ns:fictional_universe.school_in_fiction.students_graduates ?y .\n?y ns:fictional_universe.fictional_character.has_possessed ?x .\n}\n", "TopicEntityMid": "m.0mzj_", "mid2name": {"ns:m.0mzj_": "Military branch"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.has_possessed) (JOIN (R fictional_universe.school_in_fiction.students_graduates) Military branch))", "SExpr": "(JOIN (R fictional_universe.fictional_character.has_possessed) (JOIN (R fictional_universe.school_in_fiction.students_graduates) m.0mzj_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04p5r4x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04p5r4x ns:biology.breed_coloring.breeds ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.04p5r4x", "mid2name": {"ns:m.04p5r4x": "Yellow-gray"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_coloring.breeds) Yellow-gray))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_coloring.breeds) m.04p5r4x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.049hj89)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.049hj89 ns:aviation.aircraft_model.parent_aircraft_model ?y .\n?y ns:aviation.aircraft_model.manufacturer ?x .\n}\n", "TopicEntityMid": "m.049hj89", "mid2name": {"ns:m.049hj89": "Boeing 737-600"}, "SExpr_w_name": "(JOIN (R aviation.aircraft_model.manufacturer) (JOIN (R aviation.aircraft_model.parent_aircraft_model) Boeing 737-600))", "SExpr": "(JOIN (R aviation.aircraft_model.manufacturer) (JOIN (R aviation.aircraft_model.parent_aircraft_model) m.049hj89))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g25n5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g25n5 ns:book.written_work.part_of_series ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0g25n5", "mid2name": {"ns:m.0g25n5": "Engaging The Enemy"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.written_work.part_of_series) Engaging The Enemy))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.written_work.part_of_series) m.0g25n5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqwkyv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqwkyv ns:medicine.drug.active_moieties ?y .\n?y ns:chemistry.chemical_element.atomic_mass ?x .\n}\n", "TopicEntityMid": "m.0hqwkyv", "mid2name": {"ns:m.0hqwkyv": "Titanium/Zinc"}, "SExpr_w_name": "(JOIN (R chemistry.chemical_element.atomic_mass) (JOIN (R medicine.drug.active_moieties) Titanium/Zinc))", "SExpr": "(JOIN (R chemistry.chemical_element.atomic_mass) (JOIN (R medicine.drug.active_moieties) m.0hqwkyv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y7zqgv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y7zqgv ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0y7zqgv", "mid2name": {"ns:m.0y7zqgv": "Uncle Vanya"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Uncle Vanya))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0y7zqgv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04djz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04djz ns:astronomy.astronomical_observatory.discoveries ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n}\n", "TopicEntityMid": "m.04djz", "mid2name": {"ns:m.04djz": "Kitt Peak National Observatory"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.astronomical_observatory.discoveries) Kitt Peak National Observatory))", "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.astronomical_observatory.discoveries) m.04djz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y50btf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y50btf ns:fictional_universe.fictional_character.based_on ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.0y50btf", "mid2name": {"ns:m.0y50btf": "Samuel"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R fictional_universe.fictional_character.based_on) Samuel))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R fictional_universe.fictional_character.based_on) m.0y50btf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gm69)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gm69 ns:business.brand.owner_s ?y .\n?y ns:business.company_brand_relationship.company ?x .\n}\n", "TopicEntityMid": "m.01gm69", "mid2name": {"ns:m.01gm69": "G.I. Joe"}, "SExpr_w_name": "(JOIN (R business.company_brand_relationship.company) (JOIN (R business.brand.owner_s) G.I. Joe))", "SExpr": "(JOIN (R business.company_brand_relationship.company) (JOIN (R business.brand.owner_s) m.01gm69))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019j6f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019j6f ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.019j6f", "mid2name": {"ns:m.019j6f": "Antimalarial medication"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Antimalarial medication))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.019j6f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04cc7hh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04cc7hh ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.04cc7hh", "mid2name": {"ns:m.04cc7hh": "2005 Roessler \"Widdoes Vineyard\" Green Valley of Russian River Valley Pinot Noir"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) 2005 Roessler \"Widdoes Vineyard\" Green Valley of Russian River Valley Pinot Noir))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.04cc7hh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_j33)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_j33 ns:language.language_creator.languages_created ?y .\n?y ns:base.rosetta.languoid.languoid_class ?x .\n}\n", "TopicEntityMid": "m.03_j33", "mid2name": {"ns:m.03_j33": "Edgar de Wahl"}, "SExpr_w_name": "(JOIN (R base.rosetta.languoid.languoid_class) (JOIN (R language.language_creator.languages_created) Edgar de Wahl))", "SExpr": "(JOIN (R base.rosetta.languoid.languoid_class) (JOIN (R language.language_creator.languages_created) m.03_j33))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x5q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x5q ns:business.industry.companies ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n", "TopicEntityMid": "m.01x5q", "mid2name": {"ns:m.01x5q": "Ceramic"}, "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R business.industry.companies) Ceramic))", "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R business.industry.companies) m.01x5q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bxj80p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bxj80p ns:fictional_universe.fictional_character.has_possessed ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.0bxj80p", "mid2name": {"ns:m.0bxj80p": "Tempus"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R fictional_universe.fictional_character.has_possessed) Tempus))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R fictional_universe.fictional_character.has_possessed) m.0bxj80p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05ydwc5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05ydwc5 ns:book.author.works_written ?y .\n?y ns:book.written_work.original_language ?x .\n}\n", "TopicEntityMid": "m.05ydwc5", "mid2name": {"ns:m.05ydwc5": "Robert L. Snow"}, "SExpr_w_name": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) Robert L. Snow))", "SExpr": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) m.05ydwc5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04nrppr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04nrppr ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.species ?x .\n}\n", "TopicEntityMid": "m.04nrppr", "mid2name": {"ns:m.04nrppr": "Tug Mug"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.species) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Tug Mug))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.species) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.04nrppr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06jm_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06jm_r ns:martial_arts.martial_art.category ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.06jm_r", "mid2name": {"ns:m.06jm_r": "Bartitsu"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R martial_arts.martial_art.category) Bartitsu))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R martial_arts.martial_art.category) m.06jm_r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.087hd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.087hd ns:computer.computer_processor.manufacturers ?y .\n?y ns:cvg.computer_game_distribution_system.games_distributed ?x .\n}\n", "TopicEntityMid": "m.087hd", "mid2name": {"ns:m.087hd": "x86"}, "SExpr_w_name": "(JOIN (R cvg.computer_game_distribution_system.games_distributed) (JOIN (R computer.computer_processor.manufacturers) x86))", "SExpr": "(JOIN (R cvg.computer_game_distribution_system.games_distributed) (JOIN (R computer.computer_processor.manufacturers) m.087hd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0w_v9z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0w_v9z6 ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.0w_v9z6", "mid2name": {"ns:m.0w_v9z6": "The Dining Room"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) The Dining Room))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.0w_v9z6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jx39)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jx39 ns:language.language_family.languages ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.03jx39", "mid2name": {"ns:m.03jx39": "Balto-Slavic languages"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R language.language_family.languages) Balto-Slavic languages))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R language.language_family.languages) m.03jx39))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgh9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgh9 ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.02kwgh9", "mid2name": {"ns:m.02kwgh9": "Chromosome 3 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 3 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.02kwgh9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fndy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fndy ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01fndy", "mid2name": {"ns:m.01fndy": "Understanding"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Understanding))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01fndy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06z04)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06z04 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.06z04", "mid2name": {"ns:m.06z04": "Skin"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Skin))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.06z04))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04phl5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04phl5 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.04phl5", "mid2name": {"ns:m.04phl5": "Adobe ImageReady"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Adobe ImageReady))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.04phl5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jqtf6h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jqtf6h ns:tv.tv_rating.tv_episodes ?y .\n?y ns:tv.tv_series_episode.series ?x .\n}\n", "TopicEntityMid": "m.0jqtf6h", "mid2name": {"ns:m.0jqtf6h": "All"}, "SExpr_w_name": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_rating.tv_episodes) All))", "SExpr": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_rating.tv_episodes) m.0jqtf6h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010vj9jd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010vj9jd ns:music.composition.composer ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.010vj9jd", "mid2name": {"ns:m.010vj9jd": "The Yearning Loins"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) The Yearning Loins))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) m.010vj9jd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pl29g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pl29g ns:music.album.artist ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.01pl29g", "mid2name": {"ns:m.01pl29g": "She Took a Bullet Meant for Me"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R music.album.artist) She Took a Bullet Meant for Me))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R music.album.artist) m.01pl29g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbwc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbwc ns:medicine.medical_trial.phase ?y .\n?y ns:medicine.medical_trial_phase.medical_trials ?x .\n}\n", "TopicEntityMid": "m.03zbbwc", "mid2name": {"ns:m.03zbbwc": "Alendronate and/or Parathyroid Hormone for Osteoporosis"}, "SExpr_w_name": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) Alendronate and/or Parathyroid Hormone for Osteoporosis))", "SExpr": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) m.03zbbwc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gt3p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gt3p ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01gt3p", "mid2name": {"ns:m.01gt3p": "Windows Media Video"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Windows Media Video))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01gt3p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051js7z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051js7z ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.051js7z", "mid2name": {"ns:m.051js7z": "Lonely Planet China"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Lonely Planet China))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.051js7z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07k2d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07k2d ns:user.weel.default_domain.periodical.publisher ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.07k2d", "mid2name": {"ns:m.07k2d": "The New York Times"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R user.weel.default_domain.periodical.publisher) The New York Times))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R user.weel.default_domain.periodical.publisher) m.07k2d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddjy ns:film.film.costume_design_by ?y .\n?y ns:base.fictionaluniverse.fictional_spacecraft_designer.spacecraft_classes_designed ?x .\n}\n", "TopicEntityMid": "m.0ddjy", "mid2name": {"ns:m.0ddjy": "Return of the Jedi"}, "SExpr_w_name": "(JOIN (R base.fictionaluniverse.fictional_spacecraft_designer.spacecraft_classes_designed) (JOIN (R film.film.costume_design_by) Return of the Jedi))", "SExpr": "(JOIN (R base.fictionaluniverse.fictional_spacecraft_designer.spacecraft_classes_designed) (JOIN (R film.film.costume_design_by) m.0ddjy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ngs1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ngs1 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01ngs1", "mid2name": {"ns:m.01ngs1": "Refracting telescope"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Refracting telescope))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01ngs1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dgsq52)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dgsq52 ns:business.business_operation.industry ?y .\n?y ns:base.descriptive_names.names.descriptive_name ?x .\n}\n", "TopicEntityMid": "m.0dgsq52", "mid2name": {"ns:m.0dgsq52": "Ayala Land"}, "SExpr_w_name": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R business.business_operation.industry) Ayala Land))", "SExpr": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R business.business_operation.industry) m.0dgsq52))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06rrsy3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06rrsy3 ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n", "TopicEntityMid": "m.06rrsy3", "mid2name": {"ns:m.06rrsy3": "Akron Indians"}, "SExpr_w_name": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) Akron Indians))", "SExpr": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) m.06rrsy3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03c5y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03c5y ns:chess.chess_player.games_played ?y .\n?y ns:chess.chess_game_participation.color ?x .\n}\n", "TopicEntityMid": "m.03c5y", "mid2name": {"ns:m.03c5y": "Garry Kasparov"}, "SExpr_w_name": "(JOIN (R chess.chess_game_participation.color) (JOIN (R chess.chess_player.games_played) Garry Kasparov))", "SExpr": "(JOIN (R chess.chess_game_participation.color) (JOIN (R chess.chess_player.games_played) m.03c5y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fl35)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fl35 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0fl35", "mid2name": {"ns:m.0fl35": "Family"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Family))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0fl35))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01987_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01987_ ns:organization.organization_sector.organizations_in_this_sector ?y .\n?y ns:organization.organization.headquarters ?x .\n}\n", "TopicEntityMid": "m.01987_", "mid2name": {"ns:m.01987_": "Home automation"}, "SExpr_w_name": "(JOIN (R organization.organization.headquarters) (JOIN (R organization.organization_sector.organizations_in_this_sector) Home automation))", "SExpr": "(JOIN (R organization.organization.headquarters) (JOIN (R organization.organization_sector.organizations_in_this_sector) m.01987_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zhkmk7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zhkmk7 ns:music.composition.composer ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.0zhkmk7", "mid2name": {"ns:m.0zhkmk7": "Tulenliekki"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R music.composition.composer) Tulenliekki))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R music.composition.composer) m.0zhkmk7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hwp0r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hwp0r ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02hwp0r", "mid2name": {"ns:m.02hwp0r": "Manx Language"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Manx Language))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02hwp0r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fp_1y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fp_1y ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0fp_1y", "mid2name": {"ns:m.0fp_1y": "Visual Basic"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Visual Basic))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0fp_1y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f0ch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f0ch ns:base.cocktails.cocktail_garnish.cocktails_with_this_garnish ?y .\n?y ns:base.cocktails.cocktail.standard_drinkware ?x .\n}\n", "TopicEntityMid": "m.0f0ch", "mid2name": {"ns:m.0f0ch": "Cinnamon"}, "SExpr_w_name": "(JOIN (R base.cocktails.cocktail.standard_drinkware) (JOIN (R base.cocktails.cocktail_garnish.cocktails_with_this_garnish) Cinnamon))", "SExpr": "(JOIN (R base.cocktails.cocktail.standard_drinkware) (JOIN (R base.cocktails.cocktail_garnish.cocktails_with_this_garnish) m.0f0ch))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cbmq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cbmq ns:award.award_discipline.awards_in_this_discipline ?y .\n?y ns:award.award_category.category_of ?x .\n}\n", "TopicEntityMid": "m.0cbmq", "mid2name": {"ns:m.0cbmq": "Polish literature"}, "SExpr_w_name": "(JOIN (R award.award_category.category_of) (JOIN (R award.award_discipline.awards_in_this_discipline) Polish literature))", "SExpr": "(JOIN (R award.award_category.category_of) (JOIN (R award.award_discipline.awards_in_this_discipline) m.0cbmq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hdn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hdn7 ns:computer.file_format.extended_from ?y .\n?y ns:computer.file_format.format_creator ?x .\n}\n", "TopicEntityMid": "m.04hdn7", "mid2name": {"ns:m.04hdn7": "XBRL"}, "SExpr_w_name": "(JOIN (R computer.file_format.format_creator) (JOIN (R computer.file_format.extended_from) XBRL))", "SExpr": "(JOIN (R computer.file_format.format_creator) (JOIN (R computer.file_format.extended_from) m.04hdn7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042_gh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042_gh ns:education.grade_level.locations_used ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.042_gh", "mid2name": {"ns:m.042_gh": "Eleventh grade"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R education.grade_level.locations_used) Eleventh grade))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R education.grade_level.locations_used) m.042_gh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08rs8z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08rs8z ns:computer.web_browser_extension.works_on_web_browser ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.08rs8z", "mid2name": {"ns:m.08rs8z": "PithHelmet"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.web_browser_extension.works_on_web_browser) PithHelmet))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.web_browser_extension.works_on_web_browser) m.08rs8z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bj1xr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bj1xr ns:film.film.costume_design_by ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.0bj1xr", "mid2name": {"ns:m.0bj1xr": "Varsity Show"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) Varsity Show))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R film.film.costume_design_by) m.0bj1xr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01rhgl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01rhgl ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01rhgl", "mid2name": {"ns:m.01rhgl": "Experience"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Experience))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01rhgl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09kjmr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09kjmr6 ns:book.author.works_written ?y .\n?y ns:book.written_work.date_of_first_publication ?x .\n}\n", "TopicEntityMid": "m.09kjmr6", "mid2name": {"ns:m.09kjmr6": "Nicolae Unt\u0103rescu"}, "SExpr_w_name": "(JOIN (R book.written_work.date_of_first_publication) (JOIN (R book.author.works_written) Nicolae Unt\u0103rescu))", "SExpr": "(JOIN (R book.written_work.date_of_first_publication) (JOIN (R book.author.works_written) m.09kjmr6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j4t8qm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j4t8qm ns:business.brand.products ?y .\n?y ns:medicine.manufactured_drug_form.available_in ?x .\n}\n", "TopicEntityMid": "m.0j4t8qm", "mid2name": {"ns:m.0j4t8qm": "Amitiza"}, "SExpr_w_name": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R business.brand.products) Amitiza))", "SExpr": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R business.brand.products) m.0j4t8qm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cfkmq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cfkmq ns:visual_art.artwork.artist ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.05cfkmq", "mid2name": {"ns:m.05cfkmq": "Still Life with Beer Glass"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R visual_art.artwork.artist) Still Life with Beer Glass))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R visual_art.artwork.artist) m.05cfkmq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gld98)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gld98 ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.04gld98", "mid2name": {"ns:m.04gld98": "Carolina Goldrusher"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Carolina Goldrusher))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.04gld98))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05y1qyv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05y1qyv ns:engineering.signal_modulation_mode.parent_modulation ?y .\n?y ns:base.ontologies.ontology_instance.equivalent_instances ?x .\n}\n", "TopicEntityMid": "m.05y1qyv", "mid2name": {"ns:m.05y1qyv": "Vestigial-sideband modulation"}, "SExpr_w_name": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R engineering.signal_modulation_mode.parent_modulation) Vestigial-sideband modulation))", "SExpr": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) (JOIN (R engineering.signal_modulation_mode.parent_modulation) m.05y1qyv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j5c023)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j5c023 ns:people.person.profession ?y .\n?y ns:people.profession.people_with_this_profession ?x .\n}\n", "TopicEntityMid": "m.0j5c023", "mid2name": {"ns:m.0j5c023": "Michael I Mills"}, "SExpr_w_name": "(JOIN (R people.profession.people_with_this_profession) (JOIN (R people.person.profession) Michael I Mills))", "SExpr": "(JOIN (R people.profession.people_with_this_profession) (JOIN (R people.person.profession) m.0j5c023))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051lwsv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051lwsv ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "TopicEntityMid": "m.051lwsv", "mid2name": {"ns:m.051lwsv": "Killington/Pico Ski Resort Partners LLC"}, "SExpr_w_name": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) Killington/Pico Ski Resort Partners LLC))", "SExpr": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.051lwsv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c8wxp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c8wxp ns:religion.religion.places_of_worship_historical ?y .\n?y ns:religion.place_of_worship_historical_use.place_of_worship ?x .\n}\n", "TopicEntityMid": "m.0c8wxp", "mid2name": {"ns:m.0c8wxp": "Catholicism"}, "SExpr_w_name": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) Catholicism))", "SExpr": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) m.0c8wxp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07grj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07grj ns:religion.religion.deities ?y .\n?y ns:book.book_subject.works ?x .\n}\n", "TopicEntityMid": "m.07grj", "mid2name": {"ns:m.07grj": "Thelema"}, "SExpr_w_name": "(JOIN (R book.book_subject.works) (JOIN (R religion.religion.deities) Thelema))", "SExpr": "(JOIN (R book.book_subject.works) (JOIN (R religion.religion.deities) m.07grj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dcbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dcbz ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0dcbz", "mid2name": {"ns:m.0dcbz": "Pseudotsuga"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Pseudotsuga))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0dcbz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cr2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cr2 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02cr2", "mid2name": {"ns:m.02cr2": "Devil"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Devil))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02cr2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06wfzsb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06wfzsb ns:medicine.symptom.symptom_of ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.06wfzsb", "mid2name": {"ns:m.06wfzsb": "Excessive grooming"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.symptom.symptom_of) Excessive grooming))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.symptom.symptom_of) m.06wfzsb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jc_p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jc_p ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0jc_p", "mid2name": {"ns:m.0jc_p": "Orange"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Orange))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0jc_p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02y_93f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02y_93f ns:base.descriptive_names.names.descriptive_name ?y .\n?y ns:base.schemastaging.plural_form.gender ?x .\n}\n", "TopicEntityMid": "m.02y_93f", "mid2name": {"ns:m.02y_93f": "Surgeon"}, "SExpr_w_name": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.descriptive_names.names.descriptive_name) Surgeon))", "SExpr": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.descriptive_names.names.descriptive_name) m.02y_93f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g9q4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g9q4 ns:organization.organization.parent ?y .\n?y ns:organization.organization_relationship.parent ?x .\n}\n", "TopicEntityMid": "m.05g9q4", "mid2name": {"ns:m.05g9q4": "NCAA Division II"}, "SExpr_w_name": "(JOIN (R organization.organization_relationship.parent) (JOIN (R organization.organization.parent) NCAA Division II))", "SExpr": "(JOIN (R organization.organization_relationship.parent) (JOIN (R organization.organization.parent) m.05g9q4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p97 ns:computer.programming_language.dialects ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02p97", "mid2name": {"ns:m.02p97": "JavaScript"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.programming_language.dialects) JavaScript))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.programming_language.dialects) m.02p97))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_8z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_8z1 ns:government.legislative_session.legislature ?y .\n?y ns:book.book_subject.works ?x .\n}\n", "TopicEntityMid": "m.03_8z1", "mid2name": {"ns:m.03_8z1": "2nd New Zealand Parliament"}, "SExpr_w_name": "(JOIN (R book.book_subject.works) (JOIN (R government.legislative_session.legislature) 2nd New Zealand Parliament))", "SExpr": "(JOIN (R book.book_subject.works) (JOIN (R government.legislative_session.legislature) m.03_8z1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y44 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0y44", "mid2name": {"ns:m.0y44": "Ascorbic acid"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Ascorbic acid))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0y44))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bc1dq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bc1dq ns:time.recurring_event.instances ?y .\n?y ns:time.event.next_in_series ?x .\n}\n", "TopicEntityMid": "m.0bc1dq", "mid2name": {"ns:m.0bc1dq": "Iraqi Premier League"}, "SExpr_w_name": "(JOIN (R time.event.next_in_series) (JOIN (R time.recurring_event.instances) Iraqi Premier League))", "SExpr": "(JOIN (R time.event.next_in_series) (JOIN (R time.recurring_event.instances) m.0bc1dq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022p9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022p9 ns:comic_books.comic_book_letterer.comic_stories_lettered ?y .\n?y ns:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.022p9", "mid2name": {"ns:m.022p9": "Carl Barks"}, "SExpr_w_name": "(JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) (JOIN (R comic_books.comic_book_letterer.comic_stories_lettered) Carl Barks))", "SExpr": "(JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) (JOIN (R comic_books.comic_book_letterer.comic_stories_lettered) m.022p9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03tt2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03tt2 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.03tt2", "mid2name": {"ns:m.03tt2": "Iliad"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Iliad))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.03tt2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqsdxr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqsdxr ns:medicine.drug_formulation.active_ingredient_moieties ?y .\n?y ns:medicine.drug_ingredient.active_ingredient_of_formulation ?x .\n}\n", "TopicEntityMid": "m.0hqsdxr", "mid2name": {"ns:m.0hqsdxr": "Populus trichocarpa pollen 0.05 injectable solution"}, "SExpr_w_name": "(JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) Populus trichocarpa pollen 0.05 injectable solution))", "SExpr": "(JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqsdxr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03fwl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03fwl ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.03fwl", "mid2name": {"ns:m.03fwl": "Goat"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Goat))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.03fwl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xw9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xw9 ns:book.book_subject.works ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.01xw9", "mid2name": {"ns:m.01xw9": "Chinese food"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R book.book_subject.works) Chinese food))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R book.book_subject.works) m.01xw9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r4szq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r4szq ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.01r4szq", "mid2name": {"ns:m.01r4szq": "Count Basie Orchestra"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Count Basie Orchestra))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.01r4szq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051ss8h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051ss8h ns:book.written_work.author ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.051ss8h", "mid2name": {"ns:m.051ss8h": "Conservation Easements: An Introductory Review for Wyoming"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R book.written_work.author) Conservation Easements: An Introductory Review for Wyoming))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R book.written_work.author) m.051ss8h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qh3v8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qh3v8 ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.02qh3v8", "mid2name": {"ns:m.02qh3v8": "What Mattered Most"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) What Mattered Most))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.02qh3v8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wll)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wll ns:symbols.name_source.namesakes ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.01wll", "mid2name": {"ns:m.01wll": "Crux"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R symbols.name_source.namesakes) Crux))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R symbols.name_source.namesakes) m.01wll))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bm6b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bm6b ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0bm6b", "mid2name": {"ns:m.0bm6b": "Failure"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Failure))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0bm6b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgby)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgby ns:biology.genome_build.curator ?y .\n?y ns:dataworld.information_source.data_operations ?x .\n}\n", "TopicEntityMid": "m.02kwgby", "mid2name": {"ns:m.02kwgby": "Human Genome Build 36.2"}, "SExpr_w_name": "(JOIN (R dataworld.information_source.data_operations) (JOIN (R biology.genome_build.curator) Human Genome Build 36.2))", "SExpr": "(JOIN (R dataworld.information_source.data_operations) (JOIN (R biology.genome_build.curator) m.02kwgby))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_rzgcj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_rzgcj ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0_rzgcj", "mid2name": {"ns:m.0_rzgcj": "Hans-Joachim Ellerbrock"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Hans-Joachim Ellerbrock))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0_rzgcj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cydp2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cydp2 ns:base.descriptive_names.names.descriptive_name ?y .\n?y ns:base.schemastaging.plural_form.gender ?x .\n}\n", "TopicEntityMid": "m.05cydp2", "mid2name": {"ns:m.05cydp2": "King of Spain"}, "SExpr_w_name": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.descriptive_names.names.descriptive_name) King of Spain))", "SExpr": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.descriptive_names.names.descriptive_name) m.05cydp2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y9f4_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y9f4_ ns:music.recording.artist ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0y9f4_", "mid2name": {"ns:m.0y9f4_": "Everything a Man Could Need"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.recording.artist) Everything a Man Could Need))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.recording.artist) m.0y9f4_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042tkq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042tkq ns:business.employer.employees ?y .\n?y ns:business.employment_tenure.person ?x .\n}\n", "TopicEntityMid": "m.042tkq", "mid2name": {"ns:m.042tkq": "European Molecular Biology Laboratory"}, "SExpr_w_name": "(JOIN (R business.employment_tenure.person) (JOIN (R business.employer.employees) European Molecular Biology Laboratory))", "SExpr": "(JOIN (R business.employment_tenure.person) (JOIN (R business.employer.employees) m.042tkq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.1225dlhx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.1225dlhx ns:computer.file_format.genre ?y .\n?y ns:computer.file_format_genre.file_formats ?x .\n}\n", "TopicEntityMid": "g.1225dlhx", "mid2name": {"ns:g.1225dlhx": "Ogg Media"}, "SExpr_w_name": "(JOIN (R computer.file_format_genre.file_formats) (JOIN (R computer.file_format.genre) Ogg Media))", "SExpr": "(JOIN (R computer.file_format_genre.file_formats) (JOIN (R computer.file_format.genre) g.1225dlhx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052p7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052p7 ns:olympics.olympic_host_city.olympics_hosted ?y .\n?y ns:time.event.includes_event ?x .\n}\n", "TopicEntityMid": "m.052p7", "mid2name": {"ns:m.052p7": "Montreal"}, "SExpr_w_name": "(JOIN (R time.event.includes_event) (JOIN (R olympics.olympic_host_city.olympics_hosted) Montreal))", "SExpr": "(JOIN (R time.event.includes_event) (JOIN (R olympics.olympic_host_city.olympics_hosted) m.052p7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gvf0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gvf0 ns:fictional_universe.fictional_character.has_possessed ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0gvf0", "mid2name": {"ns:m.0gvf0": "Gollum"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.has_possessed) Gollum))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.has_possessed) m.0gvf0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hdtlh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hdtlh ns:sports.tournament_event.competitions ?y .\n?y ns:time.event.locations ?x .\n}\n", "TopicEntityMid": "m.04hdtlh", "mid2name": {"ns:m.04hdtlh": "Women's doubles"}, "SExpr_w_name": "(JOIN (R time.event.locations) (JOIN (R sports.tournament_event.competitions) Women's doubles))", "SExpr": "(JOIN (R time.event.locations) (JOIN (R sports.tournament_event.competitions) m.04hdtlh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_492)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_492 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01_492", "mid2name": {"ns:m.01_492": "Sydney Symphony Orchestra"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Sydney Symphony Orchestra))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01_492))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04564x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04564x ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.04564x", "mid2name": {"ns:m.04564x": "Shaded-pole motor"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Shaded-pole motor))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.04564x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mvxm5c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mvxm5c ns:travel.accommodation.features ?y .\n?y ns:organization.club_interest.clubs ?x .\n}\n", "TopicEntityMid": "m.0mvxm5c", "mid2name": {"ns:m.0mvxm5c": "Charleston Marriott Town Center"}, "SExpr_w_name": "(JOIN (R organization.club_interest.clubs) (JOIN (R travel.accommodation.features) Charleston Marriott Town Center))", "SExpr": "(JOIN (R organization.club_interest.clubs) (JOIN (R travel.accommodation.features) m.0mvxm5c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z96lp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z96lp ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.02z96lp", "mid2name": {"ns:m.02z96lp": "Speed Monster"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Speed Monster))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.02z96lp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083jv ns:biology.breed_coloring.breeds ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.083jv", "mid2name": {"ns:m.083jv": "White"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_coloring.breeds) White))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_coloring.breeds) m.083jv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hj_sv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hj_sv ns:protected_sites.park_system.member_parks ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.02hj_sv", "mid2name": {"ns:m.02hj_sv": "Canadian Provincial Parks"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R protected_sites.park_system.member_parks) Canadian Provincial Parks))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R protected_sites.park_system.member_parks) m.02hj_sv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k8z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k8z ns:user.robert.mobile_phones.product_brand.products ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0k8z", "mid2name": {"ns:m.0k8z": "Apple Inc."}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R user.robert.mobile_phones.product_brand.products) Apple Inc.))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R user.robert.mobile_phones.product_brand.products) m.0k8z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04x8h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04x8h ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.04x8h", "mid2name": {"ns:m.04x8h": "Mandriva Linux"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Mandriva Linux))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.04x8h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gg75tc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gg75tc ns:business.consumer_product.brand ?y .\n?y ns:digicams.digital_camera_manufacturer.cameras ?x .\n}\n", "TopicEntityMid": "m.0gg75tc", "mid2name": {"ns:m.0gg75tc": "Panasonic Lumix DMC-GF2"}, "SExpr_w_name": "(JOIN (R digicams.digital_camera_manufacturer.cameras) (JOIN (R business.consumer_product.brand) Panasonic Lumix DMC-GF2))", "SExpr": "(JOIN (R digicams.digital_camera_manufacturer.cameras) (JOIN (R business.consumer_product.brand) m.0gg75tc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p6sl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p6sl ns:american_football.football_conference.teams ?y .\n?y ns:sports.sports_team.league ?x .\n}\n", "TopicEntityMid": "m.02p6sl", "mid2name": {"ns:m.02p6sl": "Colonial Athletic Association"}, "SExpr_w_name": "(JOIN (R sports.sports_team.league) (JOIN (R american_football.football_conference.teams) Colonial Athletic Association))", "SExpr": "(JOIN (R sports.sports_team.league) (JOIN (R american_football.football_conference.teams) m.02p6sl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05llqc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05llqc ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.05llqc", "mid2name": {"ns:m.05llqc": "Corsham Court"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) Corsham Court))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.05llqc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r_334)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r_334 ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.01r_334", "mid2name": {"ns:m.01r_334": "Roy Jones Jr."}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Roy Jones Jr.))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.01r_334))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052trwk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052trwk ns:exhibitions.exhibition.curators ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.052trwk", "mid2name": {"ns:m.052trwk": "James McNeill Whistler"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R exhibitions.exhibition.curators) James McNeill Whistler))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R exhibitions.exhibition.curators) m.052trwk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v10824)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v10824 ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.0v10824", "mid2name": {"ns:m.0v10824": "The Ballad of Peter Pumpkinhead"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) The Ballad of Peter Pumpkinhead))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.0v10824))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d3jh_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d3jh_ ns:medicine.medical_trial.phase ?y .\n?y ns:medicine.medical_trial_phase.medical_trials ?x .\n}\n", "TopicEntityMid": "m.04d3jh_", "mid2name": {"ns:m.04d3jh_": "Valganciclovir (Valcyte) for Chronic Fatigue Syndrome Patients Who Have Elevated Antibody Titers Against Human Herpes Virus 6 (HHV-6)and Epstein-Barr Virus (EBV)"}, "SExpr_w_name": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) Valganciclovir (Valcyte) for Chronic Fatigue Syndrome Patients Who Have Elevated Antibody Titers Against Human Herpes Virus 6 (HHV-6)and Epstein-Barr Virus (EBV)))", "SExpr": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) m.04d3jh_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bxtry2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bxtry2 ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?y .\n?y ns:fictional_universe.character_occupation.characters_with_this_occupation ?x .\n}\n", "TopicEntityMid": "m.0bxtry2", "mid2name": {"ns:m.0bxtry2": "Bandara"}, "SExpr_w_name": "(JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Bandara))", "SExpr": "(JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.0bxtry2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05hqr30)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05hqr30 ns:business.product_line.products ?y .\n?y ns:business.consumer_product.brand ?x .\n}\n", "TopicEntityMid": "m.05hqr30", "mid2name": {"ns:m.05hqr30": "Hollywood Movie Star Collection"}, "SExpr_w_name": "(JOIN (R business.consumer_product.brand) (JOIN (R business.product_line.products) Hollywood Movie Star Collection))", "SExpr": "(JOIN (R business.consumer_product.brand) (JOIN (R business.product_line.products) m.05hqr30))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vs68yc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vs68yc ns:book.book_edition_series.part_of_series ?y .\n?y ns:book.book_edition_series.sub_series ?x .\n}\n", "TopicEntityMid": "m.0vs68yc", "mid2name": {"ns:m.0vs68yc": "Who\u2019s Who of Australian Women"}, "SExpr_w_name": "(JOIN (R book.book_edition_series.sub_series) (JOIN (R book.book_edition_series.part_of_series) Who\u2019s Who of Australian Women))", "SExpr": "(JOIN (R book.book_edition_series.sub_series) (JOIN (R book.book_edition_series.part_of_series) m.0vs68yc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.dialects ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02h40lc", "mid2name": {"ns:m.02h40lc": "English Language"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R language.human_language.dialects) English Language))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R language.human_language.dialects) m.02h40lc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cfykqq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cfykqq ns:fictional_universe.fictional_substance.fictional_object ?y .\n?y ns:fictional_universe.fictional_object.composition ?x .\n}\n", "TopicEntityMid": "m.0cfykqq", "mid2name": {"ns:m.0cfykqq": "laminated linen and leather"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.composition) (JOIN (R fictional_universe.fictional_substance.fictional_object) laminated linen and leather))", "SExpr": "(JOIN (R fictional_universe.fictional_object.composition) (JOIN (R fictional_universe.fictional_substance.fictional_object) m.0cfykqq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ffmj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ffmj ns:spaceflight.bipropellant_rocket_engine.engine_cycle ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.07ffmj", "mid2name": {"ns:m.07ffmj": "RD-170"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R spaceflight.bipropellant_rocket_engine.engine_cycle) RD-170))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R spaceflight.bipropellant_rocket_engine.engine_cycle) m.07ffmj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dmtp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dmtp ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0dmtp", "mid2name": {"ns:m.0dmtp": "Cisco Systems, Inc."}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Cisco Systems, Inc.))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.0dmtp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0220vcp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0220vcp ns:digicams.camera_image_ratio.cameras ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0220vcp", "mid2name": {"ns:m.0220vcp": "3:2"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R digicams.camera_image_ratio.cameras) 3:2))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R digicams.camera_image_ratio.cameras) m.0220vcp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h166)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h166 ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor ?x .\n}\n", "TopicEntityMid": "m.0h166", "mid2name": {"ns:m.0h166": "Helen of Troy"}, "SExpr_w_name": "(JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) (JOIN (R fictional_universe.fictional_character.gender) Helen of Troy))", "SExpr": "(JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) (JOIN (R fictional_universe.fictional_character.gender) m.0h166))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_19)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_19 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.07_19", "mid2name": {"ns:m.07_19": "Vietnamese food"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Vietnamese food))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.07_19))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wtm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wtm ns:computer.computer_processor.manufacturers ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.03wtm", "mid2name": {"ns:m.03wtm": "Intel 8088"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R computer.computer_processor.manufacturers) Intel 8088))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R computer.computer_processor.manufacturers) m.03wtm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.049hl1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.049hl1 ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.049hl1", "mid2name": {"ns:m.049hl1": "Anavel Gato"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Anavel Gato))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.049hl1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.095zt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.095zt ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.095zt", "mid2name": {"ns:m.095zt": "Cotton"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Cotton))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.095zt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0137k8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0137k8 ns:aviation.aircraft_model.manufacturer ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0137k8", "mid2name": {"ns:m.0137k8": "Boeing 737"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R aviation.aircraft_model.manufacturer) Boeing 737))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R aviation.aircraft_model.manufacturer) m.0137k8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09gjwxg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09gjwxg ns:computer.programming_language.influenced_by ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.09gjwxg", "mid2name": {"ns:m.09gjwxg": "SuperPascal"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) SuperPascal))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) m.09gjwxg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_r09)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_r09 ns:government.legislative_committee.subcommittee_of ?y .\n?y ns:business.employer.employees ?x .\n}\n", "TopicEntityMid": "m.07_r09", "mid2name": {"ns:m.07_r09": "United States Senate Foreign Relations Subcommittee on Africa and Global Health Policy"}, "SExpr_w_name": "(JOIN (R business.employer.employees) (JOIN (R government.legislative_committee.subcommittee_of) United States Senate Foreign Relations Subcommittee on Africa and Global Health Policy))", "SExpr": "(JOIN (R business.employer.employees) (JOIN (R government.legislative_committee.subcommittee_of) m.07_r09))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_xtjgq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_xtjgq ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.0_xtjgq", "mid2name": {"ns:m.0_xtjgq": "A...My Name Is Alice"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) A...My Name Is Alice))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.0_xtjgq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0blvg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0blvg ns:dataworld.gardening_hint.split_to ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0blvg", "mid2name": {"ns:m.0blvg": "Data mining"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R dataworld.gardening_hint.split_to) Data mining))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R dataworld.gardening_hint.split_to) m.0blvg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05p553)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05p553 ns:base.animemanga.anime_manga_genre.anime_manga_franchises ?y .\n?y ns:base.animemanga.anime_manga_franchise.genre ?x .\n}\n", "TopicEntityMid": "m.05p553", "mid2name": {"ns:m.05p553": "Comedy"}, "SExpr_w_name": "(JOIN (R base.animemanga.anime_manga_franchise.genre) (JOIN (R base.animemanga.anime_manga_genre.anime_manga_franchises) Comedy))", "SExpr": "(JOIN (R base.animemanga.anime_manga_franchise.genre) (JOIN (R base.animemanga.anime_manga_genre.anime_manga_franchises) m.05p553))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xq0k1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xq0k1 ns:base.ecology.food_web_member.eaten_by ?y .\n?y ns:base.ecology.food_web_member.symbiotic_with ?x .\n}\n", "TopicEntityMid": "m.01xq0k1", "mid2name": {"ns:m.01xq0k1": "Cattle"}, "SExpr_w_name": "(JOIN (R base.ecology.food_web_member.symbiotic_with) (JOIN (R base.ecology.food_web_member.eaten_by) Cattle))", "SExpr": "(JOIN (R base.ecology.food_web_member.symbiotic_with) (JOIN (R base.ecology.food_web_member.eaten_by) m.01xq0k1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgx ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.0jgx", "mid2name": {"ns:m.0jgx": "Armenia"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Armenia))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.0jgx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05srl9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05srl9z ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05srl9z", "mid2name": {"ns:m.05srl9z": "Gardener"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Gardener))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.05srl9z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mcc5t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mcc5t ns:royalty.order_of_chivalry.founders ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.03mcc5t", "mid2name": {"ns:m.03mcc5t": "Ordre du Croissant"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R royalty.order_of_chivalry.founders) Ordre du Croissant))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R royalty.order_of_chivalry.founders) m.03mcc5t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tjwzr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tjwzr ns:language.language_family.languages ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.05tjwzr", "mid2name": {"ns:m.05tjwzr": "Ge-Kaingang Group"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R language.language_family.languages) Ge-Kaingang Group))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R language.language_family.languages) m.05tjwzr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mtg_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mtg_ ns:music.artist.genre ?y .\n?y ns:music.composition.recordings ?x .\n}\n", "TopicEntityMid": "m.01mtg_", "mid2name": {"ns:m.01mtg_": "Mary Lou Williams"}, "SExpr_w_name": "(JOIN (R music.composition.recordings) (JOIN (R music.artist.genre) Mary Lou Williams))", "SExpr": "(JOIN (R music.composition.recordings) (JOIN (R music.artist.genre) m.01mtg_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.032mx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.032mx ns:dataworld.data_provider.datasets_provided ?y .\n?y ns:dataworld.information_source.authority ?x .\n}\n", "TopicEntityMid": "m.032mx", "mid2name": {"ns:m.032mx": "Food and Drug Administration"}, "SExpr_w_name": "(JOIN (R dataworld.information_source.authority) (JOIN (R dataworld.data_provider.datasets_provided) Food and Drug Administration))", "SExpr": "(JOIN (R dataworld.information_source.authority) (JOIN (R dataworld.data_provider.datasets_provided) m.032mx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_d4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_d4 ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.07_d4", "mid2name": {"ns:m.07_d4": "Vulgate"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Vulgate))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.07_d4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07nhyx3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07nhyx3 ns:food.recipe.author ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.07nhyx3", "mid2name": {"ns:m.07nhyx3": "Broccoli Raab Pasta"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R food.recipe.author) Broccoli Raab Pasta))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R food.recipe.author) m.07nhyx3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dpsdw3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dpsdw3 ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.0dpsdw3", "mid2name": {"ns:m.0dpsdw3": "Camo & Krooked"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Camo & Krooked))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.0dpsdw3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.1237vxbv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.1237vxbv ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "g.1237vxbv", "mid2name": {"ns:g.1237vxbv": "Bail Organa"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Bail Organa))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) g.1237vxbv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.024ksh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.024ksh ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.024ksh", "mid2name": {"ns:m.024ksh": "Jim Starlin"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Jim Starlin))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.024ksh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07x128)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07x128 ns:organization.organization.founders ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.07x128", "mid2name": {"ns:m.07x128": "Future Movement"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R organization.organization.founders) Future Movement))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R organization.organization.founders) m.07x128))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor ?x .\n}\n", "TopicEntityMid": "m.06bnz", "mid2name": {"ns:m.06bnz": "Russia"}, "SExpr_w_name": "(JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) (JOIN (R biology.breed_origin.breeds_originating_here) Russia))", "SExpr": "(JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) (JOIN (R biology.breed_origin.breeds_originating_here) m.06bnz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rqw2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rqw2 ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.09rqw2", "mid2name": {"ns:m.09rqw2": "Gregory Wright"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Gregory Wright))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.09rqw2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01drjr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01drjr ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01drjr", "mid2name": {"ns:m.01drjr": "Perseids"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Perseids))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01drjr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j4hd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j4hd ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01j4hd", "mid2name": {"ns:m.01j4hd": "Amnesia"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Amnesia))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01j4hd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bp7w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bp7w ns:visual_art.visual_art_form.artists ?y .\n?y ns:visual_art.visual_artist.art_series ?x .\n}\n", "TopicEntityMid": "m.0bp7w", "mid2name": {"ns:m.0bp7w": "Printmaking"}, "SExpr_w_name": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.visual_art_form.artists) Printmaking))", "SExpr": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.visual_art_form.artists) m.0bp7w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036n_g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036n_g ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.036n_g", "mid2name": {"ns:m.036n_g": "Agricultural economics"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Agricultural economics))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.036n_g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fc50)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fc50 ns:base.activism.activism_issue.activists ?y .\n?y ns:user.alexbl.congressional_voting_records.congressional_member.voted_on ?x .\n}\n", "TopicEntityMid": "m.01fc50", "mid2name": {"ns:m.01fc50": "Anti-war movement"}, "SExpr_w_name": "(JOIN (R user.alexbl.congressional_voting_records.congressional_member.voted_on) (JOIN (R base.activism.activism_issue.activists) Anti-war movement))", "SExpr": "(JOIN (R user.alexbl.congressional_voting_records.congressional_member.voted_on) (JOIN (R base.activism.activism_issue.activists) m.01fc50))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.038w_m8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.038w_m8 ns:music.release.album ?y .\n?y ns:music.album.artist ?x .\n}\n", "TopicEntityMid": "m.038w_m8", "mid2name": {"ns:m.038w_m8": "Live at the Electric Factory (Philadelphia, PA March 28, 2003)"}, "SExpr_w_name": "(JOIN (R music.album.artist) (JOIN (R music.release.album) Live at the Electric Factory (Philadelphia, PA March 28, 2003)))", "SExpr": "(JOIN (R music.album.artist) (JOIN (R music.release.album) m.038w_m8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2v0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2v0 ns:travel.travel_destination.climate ?y .\n?y ns:travel.travel_destination_monthly_climate.month ?x .\n}\n", "TopicEntityMid": "m.0f2v0", "mid2name": {"ns:m.0f2v0": "Miami"}, "SExpr_w_name": "(JOIN (R travel.travel_destination_monthly_climate.month) (JOIN (R travel.travel_destination.climate) Miami))", "SExpr": "(JOIN (R travel.travel_destination_monthly_climate.month) (JOIN (R travel.travel_destination.climate) m.0f2v0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08lszy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08lszy ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.08lszy", "mid2name": {"ns:m.08lszy": "Rho meson"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Rho meson))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.08lszy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lkky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lkky ns:royalty.royal_line.preceded_by ?y .\n?y ns:people.family.rise_to_prominence ?x .\n}\n", "TopicEntityMid": "m.01lkky", "mid2name": {"ns:m.01lkky": "House of Stuart"}, "SExpr_w_name": "(JOIN (R people.family.rise_to_prominence) (JOIN (R royalty.royal_line.preceded_by) House of Stuart))", "SExpr": "(JOIN (R people.family.rise_to_prominence) (JOIN (R royalty.royal_line.preceded_by) m.01lkky))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01zxdb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01zxdb ns:aviation.aircraft_model.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.01zxdb", "mid2name": {"ns:m.01zxdb": "A\u00e9rospatiale Gazelle"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) A\u00e9rospatiale Gazelle))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) m.01zxdb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03v09)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03v09 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03v09", "mid2name": {"ns:m.03v09": "Indo-European languages"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Indo-European languages))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03v09))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hlj2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hlj2 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0hlj2", "mid2name": {"ns:m.0hlj2": "Third Age"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Third Age))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0hlj2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010sd4y3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010sd4y3 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.010sd4y3", "mid2name": {"ns:m.010sd4y3": "Swift"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Swift))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.010sd4y3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051_nhv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051_nhv ns:music.composition.composer ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.051_nhv", "mid2name": {"ns:m.051_nhv": "Maddalena"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) Maddalena))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.composition.composer) m.051_nhv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014v6f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014v6f ns:base.popstra.celebrity.bought ?y .\n?y ns:base.popstra.product_choice.product ?x .\n}\n", "TopicEntityMid": "m.014v6f", "mid2name": {"ns:m.014v6f": "Cuba Gooding, Jr."}, "SExpr_w_name": "(JOIN (R base.popstra.product_choice.product) (JOIN (R base.popstra.celebrity.bought) Cuba Gooding, Jr.))", "SExpr": "(JOIN (R base.popstra.product_choice.product) (JOIN (R base.popstra.celebrity.bought) m.014v6f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qdf36b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qdf36b ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0qdf36b", "mid2name": {"ns:m.0qdf36b": "Love Sosa"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Love Sosa))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0qdf36b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hl6_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hl6_ ns:comic_books.comic_book_inker.comic_covers_inked ?y .\n?y ns:comic_books.comic_book_issue.cover_pencils ?x .\n}\n", "TopicEntityMid": "m.03hl6_", "mid2name": {"ns:m.03hl6_": "Joe Kubert"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.cover_pencils) (JOIN (R comic_books.comic_book_inker.comic_covers_inked) Joe Kubert))", "SExpr": "(JOIN (R comic_books.comic_book_issue.cover_pencils) (JOIN (R comic_books.comic_book_inker.comic_covers_inked) m.03hl6_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05q0g66)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05q0g66 ns:book.book_edition.binding ?y .\n?y ns:business.consumer_product.brand ?x .\n}\n", "TopicEntityMid": "m.05q0g66", "mid2name": {"ns:m.05q0g66": "The Goblin Wood"}, "SExpr_w_name": "(JOIN (R business.consumer_product.brand) (JOIN (R book.book_edition.binding) The Goblin Wood))", "SExpr": "(JOIN (R business.consumer_product.brand) (JOIN (R book.book_edition.binding) m.05q0g66))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08z7q1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08z7q1 ns:fictional_universe.fictional_character.character_created_by ?y .\n?y ns:comic_books.comic_book_inker.comic_covers_inked ?x .\n}\n", "TopicEntityMid": "m.08z7q1", "mid2name": {"ns:m.08z7q1": "Marv"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) (JOIN (R fictional_universe.fictional_character.character_created_by) Marv))", "SExpr": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) (JOIN (R fictional_universe.fictional_character.character_created_by) m.08z7q1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06sfvct)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06sfvct ns:book.translation.language ?y .\n?y ns:language.human_language.dialects ?x .\n}\n", "TopicEntityMid": "m.06sfvct", "mid2name": {"ns:m.06sfvct": "The slopes of Lebanon"}, "SExpr_w_name": "(JOIN (R language.human_language.dialects) (JOIN (R book.translation.language) The slopes of Lebanon))", "SExpr": "(JOIN (R language.human_language.dialects) (JOIN (R book.translation.language) m.06sfvct))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j4thnh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j4thnh ns:business.brand.products ?y .\n?y ns:medicine.manufactured_drug_form.available_in ?x .\n}\n", "TopicEntityMid": "m.0j4thnh", "mid2name": {"ns:m.0j4thnh": "Depakene"}, "SExpr_w_name": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R business.brand.products) Depakene))", "SExpr": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R business.brand.products) m.0j4thnh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05rhvq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05rhvq ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor ?x .\n}\n", "TopicEntityMid": "m.05rhvq", "mid2name": {"ns:m.05rhvq": "Makoto"}, "SExpr_w_name": "(JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) (JOIN (R fictional_universe.fictional_character.gender) Makoto))", "SExpr": "(JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) (JOIN (R fictional_universe.fictional_character.gender) m.05rhvq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kr43)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kr43 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.05kr43", "mid2name": {"ns:m.05kr43": "Rose Schneiderman"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Rose Schneiderman))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.05kr43))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058nt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058nt ns:fictional_universe.fictional_universe.organizations ?y .\n?y ns:comic_books.comic_book_character.created_by ?x .\n}\n", "TopicEntityMid": "m.058nt", "mid2name": {"ns:m.058nt": "Marvel Universe"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_character.created_by) (JOIN (R fictional_universe.fictional_universe.organizations) Marvel Universe))", "SExpr": "(JOIN (R comic_books.comic_book_character.created_by) (JOIN (R fictional_universe.fictional_universe.organizations) m.058nt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq_t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq_t ns:olympics.olympic_participating_country.athletes ?y .\n?y ns:olympics.olympic_athlete_affiliation.athlete ?x .\n}\n", "TopicEntityMid": "m.01bq_t", "mid2name": {"ns:m.01bq_t": "Gold Coast"}, "SExpr_w_name": "(JOIN (R olympics.olympic_athlete_affiliation.athlete) (JOIN (R olympics.olympic_participating_country.athletes) Gold Coast))", "SExpr": "(JOIN (R olympics.olympic_athlete_affiliation.athlete) (JOIN (R olympics.olympic_participating_country.athletes) m.01bq_t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gdk4q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gdk4q ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.04gdk4q", "mid2name": {"ns:m.04gdk4q": "James Hutcheson"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) James Hutcheson))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.04gdk4q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07xqdv4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07xqdv4 ns:architecture.destruction_method.structures_destroyed ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.07xqdv4", "mid2name": {"ns:m.07xqdv4": "Aeroelastic flutter"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R architecture.destruction_method.structures_destroyed) Aeroelastic flutter))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R architecture.destruction_method.structures_destroyed) m.07xqdv4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hfbcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hfbcq ns:music.album.artist ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.01hfbcq", "mid2name": {"ns:m.01hfbcq": "Elton John and Tim Rice's Aida"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R music.album.artist) Elton John and Tim Rice's Aida))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R music.album.artist) m.01hfbcq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01358j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01358j ns:dataworld.information_source.data_operations ?y .\n?y ns:dataworld.mass_data_operation.authority ?x .\n}\n", "TopicEntityMid": "m.01358j", "mid2name": {"ns:m.01358j": "National Center for Biotechnology Information"}, "SExpr_w_name": "(JOIN (R dataworld.mass_data_operation.authority) (JOIN (R dataworld.information_source.data_operations) National Center for Biotechnology Information))", "SExpr": "(JOIN (R dataworld.mass_data_operation.authority) (JOIN (R dataworld.information_source.data_operations) m.01358j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f2k5d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f2k5d ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n", "TopicEntityMid": "m.06f2k5d", "mid2name": {"ns:m.06f2k5d": "Tennessee Oilers"}, "SExpr_w_name": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) Tennessee Oilers))", "SExpr": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) m.06f2k5d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pgr5j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pgr5j ns:aviation.aircraft_model.manufacturer ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.02pgr5j", "mid2name": {"ns:m.02pgr5j": "KJ-2000"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) KJ-2000))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.aircraft_model.manufacturer) m.02pgr5j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zmvh1z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zmvh1z ns:opera.opera_recording.opera ?y .\n?y ns:music.composition.composer ?x .\n}\n", "TopicEntityMid": "m.0zmvh1z", "mid2name": {"ns:m.0zmvh1z": "Ad\u00e8s: The Tempest"}, "SExpr_w_name": "(JOIN (R music.composition.composer) (JOIN (R opera.opera_recording.opera) Ad\u00e8s: The Tempest))", "SExpr": "(JOIN (R music.composition.composer) (JOIN (R opera.opera_recording.opera) m.0zmvh1z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0168s_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0168s_ ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0168s_", "mid2name": {"ns:m.0168s_": "Safari"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Safari))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0168s_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_xsdt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_xsdt ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.02_xsdt", "mid2name": {"ns:m.02_xsdt": "2004 Rhys \"Alpine Vineyard\" Santa Cruz Mountains Estate Pinot Noir"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) 2004 Rhys \"Alpine Vineyard\" Santa Cruz Mountains Estate Pinot Noir))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.02_xsdt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kxxyml)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kxxyml ns:tv.tv_series_episode.series ?y .\n?y ns:tv.tv_program.filming_locations ?x .\n}\n", "TopicEntityMid": "m.0kxxyml", "mid2name": {"ns:m.0kxxyml": "Nut Cutters?"}, "SExpr_w_name": "(JOIN (R tv.tv_program.filming_locations) (JOIN (R tv.tv_series_episode.series) Nut Cutters?))", "SExpr": "(JOIN (R tv.tv_program.filming_locations) (JOIN (R tv.tv_series_episode.series) m.0kxxyml))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hlj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hlj_ ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0hlj_", "mid2name": {"ns:m.0hlj_": "Second Age"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Second Age))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0hlj_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d69h5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d69h5 ns:broadcast.genre.content ?y .\n?y ns:tv.tv_program.country_of_origin ?x .\n}\n", "TopicEntityMid": "m.03d69h5", "mid2name": {"ns:m.03d69h5": "Natural Sciences"}, "SExpr_w_name": "(JOIN (R tv.tv_program.country_of_origin) (JOIN (R broadcast.genre.content) Natural Sciences))", "SExpr": "(JOIN (R tv.tv_program.country_of_origin) (JOIN (R broadcast.genre.content) m.03d69h5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d075m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d075m ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0d075m", "mid2name": {"ns:m.0d075m": "Democratic Party"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Democratic Party))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0d075m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02s3gw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02s3gw ns:fictional_universe.fictional_universe.organizations ?y .\n?y ns:tv.tv_character.appeared_in_tv_program ?x .\n}\n", "TopicEntityMid": "m.02s3gw", "mid2name": {"ns:m.02s3gw": "Buffyverse"}, "SExpr_w_name": "(JOIN (R tv.tv_character.appeared_in_tv_program) (JOIN (R fictional_universe.fictional_universe.organizations) Buffyverse))", "SExpr": "(JOIN (R tv.tv_character.appeared_in_tv_program) (JOIN (R fictional_universe.fictional_universe.organizations) m.02s3gw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r8s3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r8s3 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01r8s3", "mid2name": {"ns:m.01r8s3": "Civil aviation"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Civil aviation))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01r8s3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqvml3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqvml3 ns:medicine.drug.active_moieties ?y .\n?y ns:chemistry.chemical_element.atomic_mass ?x .\n}\n", "TopicEntityMid": "m.0hqvml3", "mid2name": {"ns:m.0hqvml3": "Calcium ascorbate/Calcium threonate/Cholecalciferol/.alpha.-tocopherol/Folic acid/Pyridoxine/Calcium/Iron/Ferrous asparto glycinate/Doconexent/Icosapent/Linolenic acid"}, "SExpr_w_name": "(JOIN (R chemistry.chemical_element.atomic_mass) (JOIN (R medicine.drug.active_moieties) Calcium ascorbate/Calcium threonate/Cholecalciferol/.alpha.-tocopherol/Folic acid/Pyridoxine/Calcium/Iron/Ferrous asparto glycinate/Doconexent/Icosapent/Linolenic acid))", "SExpr": "(JOIN (R chemistry.chemical_element.atomic_mass) (JOIN (R medicine.drug.active_moieties) m.0hqvml3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dnw40)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dnw40 ns:music.performance_venue.concerts ?y .\n?y ns:music.concert.concert_tour ?x .\n}\n", "TopicEntityMid": "m.0dnw40", "mid2name": {"ns:m.0dnw40": "Cynthia Woods Mitchell Pavilion"}, "SExpr_w_name": "(JOIN (R music.concert.concert_tour) (JOIN (R music.performance_venue.concerts) Cynthia Woods Mitchell Pavilion))", "SExpr": "(JOIN (R music.concert.concert_tour) (JOIN (R music.performance_venue.concerts) m.0dnw40))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j9fdph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j9fdph ns:library.public_library.library_system ?y .\n?y ns:library.public_library_system.annual_circulation ?x .\n}\n", "TopicEntityMid": "m.0j9fdph", "mid2name": {"ns:m.0j9fdph": "Cuba Circulating Library Association Central Library"}, "SExpr_w_name": "(JOIN (R library.public_library_system.annual_circulation) (JOIN (R library.public_library.library_system) Cuba Circulating Library Association Central Library))", "SExpr": "(JOIN (R library.public_library_system.annual_circulation) (JOIN (R library.public_library.library_system) m.0j9fdph))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04x69r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04x69r ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.04x69r", "mid2name": {"ns:m.04x69r": "Andi Gutmans"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Andi Gutmans))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.04x69r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nbl92)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nbl92 ns:skiing.ski_lift.ski_area ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.05nbl92", "mid2name": {"ns:m.05nbl92": "Great Bear Express"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R skiing.ski_lift.ski_area) Great Bear Express))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R skiing.ski_lift.ski_area) m.05nbl92))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027w225)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027w225 ns:sports.mascot.team ?y .\n?y ns:sports.sports_team.league ?x .\n}\n", "TopicEntityMid": "m.027w225", "mid2name": {"ns:m.027w225": "Jazz Bear"}, "SExpr_w_name": "(JOIN (R sports.sports_team.league) (JOIN (R sports.mascot.team) Jazz Bear))", "SExpr": "(JOIN (R sports.sports_team.league) (JOIN (R sports.mascot.team) m.027w225))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g3w3h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g3w3h ns:visual_art.art_series.artworks ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0g3w3h", "mid2name": {"ns:m.0g3w3h": "The Roulin Family"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R visual_art.art_series.artworks) The Roulin Family))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R visual_art.art_series.artworks) m.0g3w3h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lm1px)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lm1px ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0lm1px", "mid2name": {"ns:m.0lm1px": "Tweeter and the Monkey Man"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Tweeter and the Monkey Man))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0lm1px))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0km5c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0km5c ns:base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor ?y .\n?y ns:symbols.namesake.named_after ?x .\n}\n", "TopicEntityMid": "m.0km5c", "mid2name": {"ns:m.0km5c": "German Shepherd"}, "SExpr_w_name": "(JOIN (R symbols.namesake.named_after) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) German Shepherd))", "SExpr": "(JOIN (R symbols.namesake.named_after) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.0km5c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pfly)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pfly ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01pfly", "mid2name": {"ns:m.01pfly": "Leeward Islands"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Leeward Islands))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01pfly))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qf11)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qf11 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.0qf11", "mid2name": {"ns:m.0qf11": "Rod Stewart"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Rod Stewart))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.0qf11))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07m5k4x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07m5k4x ns:organization.organization.place_founded ?y .\n?y ns:travel.travel_destination.climate ?x .\n}\n", "TopicEntityMid": "m.07m5k4x", "mid2name": {"ns:m.07m5k4x": "Soci\u00e9t\u00e9 Willebroeck"}, "SExpr_w_name": "(JOIN (R travel.travel_destination.climate) (JOIN (R organization.organization.place_founded) Soci\u00e9t\u00e9 Willebroeck))", "SExpr": "(JOIN (R travel.travel_destination.climate) (JOIN (R organization.organization.place_founded) m.07m5k4x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025t7ly)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025t7ly ns:religion.religion.is_part_of ?y .\n?y ns:religion.religion.places_of_worship_historical ?x .\n}\n", "TopicEntityMid": "m.025t7ly", "mid2name": {"ns:m.025t7ly": "Quakers"}, "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religion.is_part_of) Quakers))", "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religion.is_part_of) m.025t7ly))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02sdf6x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02sdf6x ns:biology.organism_classification_rank.higher_rank ?y .\n?y ns:biology.organism_classification_rank.lower_rank ?x .\n}\n", "TopicEntityMid": "m.02sdf6x", "mid2name": {"ns:m.02sdf6x": "Infraclass"}, "SExpr_w_name": "(JOIN (R biology.organism_classification_rank.lower_rank) (JOIN (R biology.organism_classification_rank.higher_rank) Infraclass))", "SExpr": "(JOIN (R biology.organism_classification_rank.lower_rank) (JOIN (R biology.organism_classification_rank.higher_rank) m.02sdf6x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q_5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q_5 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03q_5", "mid2name": {"ns:m.03q_5": "History of science"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) History of science))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03q_5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xzmc9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xzmc9 ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0xzmc9", "mid2name": {"ns:m.0xzmc9": "Beautiful"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Beautiful))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0xzmc9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fny)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fny ns:astronomy.celestial_object_category.objects ?y .\n?y ns:astronomy.astronomical_discovery.discoverer ?x .\n}\n", "TopicEntityMid": "m.05fny", "mid2name": {"ns:m.05fny": "Nebula"}, "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.discoverer) (JOIN (R astronomy.celestial_object_category.objects) Nebula))", "SExpr": "(JOIN (R astronomy.astronomical_discovery.discoverer) (JOIN (R astronomy.celestial_object_category.objects) m.05fny))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c1qd9d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c1qd9d ns:fictional_universe.character_powers.characters_with_this_ability ?y .\n?y ns:fictional_universe.fictional_character.has_possessed ?x .\n}\n", "TopicEntityMid": "m.0c1qd9d", "mid2name": {"ns:m.0c1qd9d": "create objects of all sorts temporarily"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.has_possessed) (JOIN (R fictional_universe.character_powers.characters_with_this_ability) create objects of all sorts temporarily))", "SExpr": "(JOIN (R fictional_universe.fictional_character.has_possessed) (JOIN (R fictional_universe.character_powers.characters_with_this_ability) m.0c1qd9d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0br9kd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0br9kd ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0br9kd", "mid2name": {"ns:m.0br9kd": "Demak Sultanate"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Demak Sultanate))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0br9kd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04mz42m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04mz42m ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.04mz42m", "mid2name": {"ns:m.04mz42m": "Baikonur Cosmodrome Site 45"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Baikonur Cosmodrome Site 45))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.04mz42m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012p0ddx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012p0ddx ns:location.location.containedby ?y .\n?y ns:olympics.olympic_host_city.olympics_hosted ?x .\n}\n", "TopicEntityMid": "m.012p0ddx", "mid2name": {"ns:m.012p0ddx": "Omni Atlanta Hotel at CNN Center"}, "SExpr_w_name": "(JOIN (R olympics.olympic_host_city.olympics_hosted) (JOIN (R location.location.containedby) Omni Atlanta Hotel at CNN Center))", "SExpr": "(JOIN (R olympics.olympic_host_city.olympics_hosted) (JOIN (R location.location.containedby) m.012p0ddx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0p8ywvy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0p8ywvy ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0p8ywvy", "mid2name": {"ns:m.0p8ywvy": "Rhythm'A'Ning"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) Rhythm'A'Ning))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.0p8ywvy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqrw3x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqrw3x ns:medicine.drug_formulation.active_ingredient_moieties ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.0hqrw3x", "mid2name": {"ns:m.0hqrw3x": "Scallop 50 injectable solution"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) Scallop 50 injectable solution))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqrw3x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0577s8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0577s8 ns:religion.belief.belief_of ?y .\n?y ns:religion.religion.branched_into ?x .\n}\n", "TopicEntityMid": "m.0577s8", "mid2name": {"ns:m.0577s8": "Three Treasures"}, "SExpr_w_name": "(JOIN (R religion.religion.branched_into) (JOIN (R religion.belief.belief_of) Three Treasures))", "SExpr": "(JOIN (R religion.religion.branched_into) (JOIN (R religion.belief.belief_of) m.0577s8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kk22b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kk22b ns:comic_books.comic_book_issue.cover_inks ?y .\n?y ns:comic_books.comic_book_inker.comic_covers_inked ?x .\n}\n", "TopicEntityMid": "m.05kk22b", "mid2name": {"ns:m.05kk22b": "Madman Atomic Comics #14"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) (JOIN (R comic_books.comic_book_issue.cover_inks) Madman Atomic Comics #14))", "SExpr": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) (JOIN (R comic_books.comic_book_issue.cover_inks) m.05kk22b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xrtql)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xrtql ns:computer.programming_language_designer.languages_designed ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.01xrtql", "mid2name": {"ns:m.01xrtql": "Jonathan A. Rees"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language_designer.languages_designed) Jonathan A. Rees))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language_designer.languages_designed) m.01xrtql))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11bcfcp37f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11bcfcp37f ns:aviation.airline.accidents ?y .\n?y ns:aviation.airliner_accident.flight_destination ?x .\n}\n", "TopicEntityMid": "g.11bcfcp37f", "mid2name": {"ns:g.11bcfcp37f": "Katanga Express"}, "SExpr_w_name": "(JOIN (R aviation.airliner_accident.flight_destination) (JOIN (R aviation.airline.accidents) Katanga Express))", "SExpr": "(JOIN (R aviation.airliner_accident.flight_destination) (JOIN (R aviation.airline.accidents) g.11bcfcp37f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03kb8c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03kb8c ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.03kb8c", "mid2name": {"ns:m.03kb8c": "Sarracenia"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Sarracenia))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.03kb8c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q2mc4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q2mc4 ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.03q2mc4", "mid2name": {"ns:m.03q2mc4": "Casio Exilim EX-Z750"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) Casio Exilim EX-Z750))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.03q2mc4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b_4m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b_4m ns:computer.computer_processor.manufacturers ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.09b_4m", "mid2name": {"ns:m.09b_4m": "Intel Core"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R computer.computer_processor.manufacturers) Intel Core))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R computer.computer_processor.manufacturers) m.09b_4m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ky6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ky6 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03ky6", "mid2name": {"ns:m.03ky6": "Hymn"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Hymn))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03ky6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j442n4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j442n4 ns:automotive.generation.predecessor ?y .\n?y ns:base.cars_refactor.generation.make ?x .\n}\n", "TopicEntityMid": "m.0j442n4", "mid2name": {"ns:m.0j442n4": "Ninth Generation Ford F-Series"}, "SExpr_w_name": "(JOIN (R base.cars_refactor.generation.make) (JOIN (R automotive.generation.predecessor) Ninth Generation Ford F-Series))", "SExpr": "(JOIN (R base.cars_refactor.generation.make) (JOIN (R automotive.generation.predecessor) m.0j442n4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ft3n6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ft3n6 ns:symbols.namesake.named_after ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.0ft3n6", "mid2name": {"ns:m.0ft3n6": "Burr Truss"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R symbols.namesake.named_after) Burr Truss))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R symbols.namesake.named_after) m.0ft3n6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09tzfp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09tzfp ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.09tzfp", "mid2name": {"ns:m.09tzfp": "MacBook Pro"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) MacBook Pro))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.09tzfp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05hcrh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05hcrh ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.05hcrh", "mid2name": {"ns:m.05hcrh": "C minor"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) C minor))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.05hcrh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02y9bw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02y9bw ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.child_classifications ?x .\n}\n", "TopicEntityMid": "m.02y9bw", "mid2name": {"ns:m.02y9bw": "Grenache"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.child_classifications) (JOIN (R biology.organism_classification.higher_classification) Grenache))", "SExpr": "(JOIN (R biology.organism_classification.child_classifications) (JOIN (R biology.organism_classification.higher_classification) m.02y9bw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_ngp3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_ngp3 ns:exhibitions.exhibition.subjects ?y .\n?y ns:base.services.antique_time_period.antique_stores ?x .\n}\n", "TopicEntityMid": "m.04_ngp3", "mid2name": {"ns:m.04_ngp3": "Counterpoint"}, "SExpr_w_name": "(JOIN (R base.services.antique_time_period.antique_stores) (JOIN (R exhibitions.exhibition.subjects) Counterpoint))", "SExpr": "(JOIN (R base.services.antique_time_period.antique_stores) (JOIN (R exhibitions.exhibition.subjects) m.04_ngp3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.084rd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.084rd ns:food.culinary_tool.used_in_recipes ?y .\n?y ns:food.recipe.author ?x .\n}\n", "TopicEntityMid": "m.084rd", "mid2name": {"ns:m.084rd": "Wok"}, "SExpr_w_name": "(JOIN (R food.recipe.author) (JOIN (R food.culinary_tool.used_in_recipes) Wok))", "SExpr": "(JOIN (R food.recipe.author) (JOIN (R food.culinary_tool.used_in_recipes) m.084rd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jvq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jvq ns:astronomy.celestial_object_category.objects ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n}\n", "TopicEntityMid": "m.0jvq", "mid2name": {"ns:m.0jvq": "Asteroid"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.celestial_object_category.objects) Asteroid))", "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.celestial_object_category.objects) m.0jvq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018q9p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018q9p ns:royalty.noble_title.holders ?y .\n?y ns:royalty.noble_title_tenure.noble_person ?x .\n}\n", "TopicEntityMid": "m.018q9p", "mid2name": {"ns:m.018q9p": "Prince of Asturias"}, "SExpr_w_name": "(JOIN (R royalty.noble_title_tenure.noble_person) (JOIN (R royalty.noble_title.holders) Prince of Asturias))", "SExpr": "(JOIN (R royalty.noble_title_tenure.noble_person) (JOIN (R royalty.noble_title.holders) m.018q9p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p_5jy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p_5jy ns:fictional_universe.fictional_character.character_created_by ?y .\n?y ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n}\n", "TopicEntityMid": "m.02p_5jy", "mid2name": {"ns:m.02p_5jy": "Hera"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (JOIN (R fictional_universe.fictional_character.character_created_by) Hera))", "SExpr": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (JOIN (R fictional_universe.fictional_character.character_created_by) m.02p_5jy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_vrv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_vrv ns:medicine.medical_treatment.used_to_treat ?y .\n?y ns:base.activism.activism_issue.activists ?x .\n}\n", "TopicEntityMid": "m.02_vrv", "mid2name": {"ns:m.02_vrv": "Protease inhibitor"}, "SExpr_w_name": "(JOIN (R base.activism.activism_issue.activists) (JOIN (R medicine.medical_treatment.used_to_treat) Protease inhibitor))", "SExpr": "(JOIN (R base.activism.activism_issue.activists) (JOIN (R medicine.medical_treatment.used_to_treat) m.02_vrv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07mx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07mx2 ns:music.composition.composer ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.07mx2", "mid2name": {"ns:m.07mx2": "The Star-Spangled Banner"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R music.composition.composer) The Star-Spangled Banner))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R music.composition.composer) m.07mx2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02nzw0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02nzw0 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02nzw0", "mid2name": {"ns:m.02nzw0": "Warehouse"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Warehouse))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02nzw0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gptwy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gptwy ns:religion.religion.organizations ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.05gptwy", "mid2name": {"ns:m.05gptwy": "Methodist"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R religion.religion.organizations) Methodist))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R religion.religion.organizations) m.05gptwy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nhldjr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nhldjr ns:location.location.time_zones ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0nhldjr", "mid2name": {"ns:m.0nhldjr": "Tahlequah Municipal Airport"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R location.location.time_zones) Tahlequah Municipal Airport))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R location.location.time_zones) m.0nhldjr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.1211jmwc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.1211jmwc ns:fictional_universe.fictional_character.character_created_by ?y .\n?y ns:comic_books.comic_book_inker.comic_covers_inked ?x .\n}\n", "TopicEntityMid": "g.1211jmwc", "mid2name": {"ns:g.1211jmwc": "Super-Soldier"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) (JOIN (R fictional_universe.fictional_character.character_created_by) Super-Soldier))", "SExpr": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) (JOIN (R fictional_universe.fictional_character.character_created_by) g.1211jmwc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gr7gz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gr7gz ns:location.location.containedby ?y .\n?y ns:location.location.geolocation ?x .\n}\n", "TopicEntityMid": "m.03gr7gz", "mid2name": {"ns:m.03gr7gz": "Bay Terrace"}, "SExpr_w_name": "(JOIN (R location.location.geolocation) (JOIN (R location.location.containedby) Bay Terrace))", "SExpr": "(JOIN (R location.location.geolocation) (JOIN (R location.location.containedby) m.03gr7gz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07893ng)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07893ng ns:music.engineer.releases_engineered ?y .\n?y ns:music.release.album ?x .\n}\n", "TopicEntityMid": "m.07893ng", "mid2name": {"ns:m.07893ng": "Dean Watson"}, "SExpr_w_name": "(JOIN (R music.release.album) (JOIN (R music.engineer.releases_engineered) Dean Watson))", "SExpr": "(JOIN (R music.release.album) (JOIN (R music.engineer.releases_engineered) m.07893ng))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dm00)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dm00 ns:base.americancomedy.comedy_genre.comedians_in_this_genre ?y .\n?y ns:celebrities.celebrity.net_worth ?x .\n}\n", "TopicEntityMid": "m.0dm00", "mid2name": {"ns:m.0dm00": "Sketch comedy"}, "SExpr_w_name": "(JOIN (R celebrities.celebrity.net_worth) (JOIN (R base.americancomedy.comedy_genre.comedians_in_this_genre) Sketch comedy))", "SExpr": "(JOIN (R celebrities.celebrity.net_worth) (JOIN (R base.americancomedy.comedy_genre.comedians_in_this_genre) m.0dm00))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03c9rmq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03c9rmq ns:book.periodical.subjects ?y .\n?y ns:government.political_ideology.political_parties ?x .\n}\n", "TopicEntityMid": "m.03c9rmq", "mid2name": {"ns:m.03c9rmq": "Vanguard"}, "SExpr_w_name": "(JOIN (R government.political_ideology.political_parties) (JOIN (R book.periodical.subjects) Vanguard))", "SExpr": "(JOIN (R government.political_ideology.political_parties) (JOIN (R book.periodical.subjects) m.03c9rmq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.069gcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.069gcq ns:organization.organization.geographic_scope ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.069gcq", "mid2name": {"ns:m.069gcq": "People's Monarchist Party"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R organization.organization.geographic_scope) People's Monarchist Party))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R organization.organization.geographic_scope) m.069gcq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgm7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgm7 ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.02kwgm7", "mid2name": {"ns:m.02kwgm7": "Chromosome 21 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 21 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.02kwgm7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bj4jxm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bj4jxm ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0bj4jxm", "mid2name": {"ns:m.0bj4jxm": "Review of Leonardo's Mountain of Clams and the Diet of Worms by Jim Walker"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Review of Leonardo's Mountain of Clams and the Diet of Worms by Jim Walker))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0bj4jxm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qvd94)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qvd94 ns:astronomy.astronomical_discovery_technique.astronomical_discoveries_by_this_method ?y .\n?y ns:astronomy.astronomical_discovery.status ?x .\n}\n", "TopicEntityMid": "m.02qvd94", "mid2name": {"ns:m.02qvd94": "Doppler spectroscopy (radial velocity)"}, "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.status) (JOIN (R astronomy.astronomical_discovery_technique.astronomical_discoveries_by_this_method) Doppler spectroscopy (radial velocity)))", "SExpr": "(JOIN (R astronomy.astronomical_discovery.status) (JOIN (R astronomy.astronomical_discovery_technique.astronomical_discoveries_by_this_method) m.02qvd94))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ktd7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ktd7 ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.03ktd7", "mid2name": {"ns:m.03ktd7": "Taskmaster"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Taskmaster))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.03ktd7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j217jm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j217jm ns:music.music_video_character.portrayed_in_music_videos ?y .\n?y ns:music.music_video_performance.music_video ?x .\n}\n", "TopicEntityMid": "m.0j217jm", "mid2name": {"ns:m.0j217jm": "Baby"}, "SExpr_w_name": "(JOIN (R music.music_video_performance.music_video) (JOIN (R music.music_video_character.portrayed_in_music_videos) Baby))", "SExpr": "(JOIN (R music.music_video_performance.music_video) (JOIN (R music.music_video_character.portrayed_in_music_videos) m.0j217jm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yyw0s8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yyw0s8 ns:people.person.gender ?y .\n?y ns:base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor ?x .\n}\n", "TopicEntityMid": "m.0yyw0s8", "mid2name": {"ns:m.0yyw0s8": "Elizabeth Hamilton"}, "SExpr_w_name": "(JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) (JOIN (R people.person.gender) Elizabeth Hamilton))", "SExpr": "(JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) (JOIN (R people.person.gender) m.0yyw0s8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w92)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w92 ns:award.award_nominee.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.01w92", "mid2name": {"ns:m.01w92": "Channel 4"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) Channel 4))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) m.01w92))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qm1zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qm1zq ns:award.award_nominee.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.02qm1zq", "mid2name": {"ns:m.02qm1zq": "Tennessee Lady Volunteers basketball"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) Tennessee Lady Volunteers basketball))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) m.02qm1zq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vpwz5q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vpwz5q ns:spaceflight.rocket.manufacturer ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n", "TopicEntityMid": "m.0vpwz5q", "mid2name": {"ns:m.0vpwz5q": "Pegasus II"}, "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R spaceflight.rocket.manufacturer) Pegasus II))", "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R spaceflight.rocket.manufacturer) m.0vpwz5q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0t8pkd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0t8pkd ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0t8pkd", "mid2name": {"ns:m.0t8pkd": "Six Underground (Sneak's Kicker mix)"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Six Underground (Sneak's Kicker mix)))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.0t8pkd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dgvrll)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dgvrll ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.0dgvrll", "mid2name": {"ns:m.0dgvrll": "Sharon P. Holland"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Sharon P. Holland))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.0dgvrll))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.068p_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.068p_ ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.068p_", "mid2name": {"ns:m.068p_": "Poliomyelitis"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Poliomyelitis))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.068p_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0942mh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0942mh ns:religion.religious_text.religious_text_of ?y .\n?y ns:religion.religion.places_of_worship_historical ?x .\n}\n", "TopicEntityMid": "m.0942mh", "mid2name": {"ns:m.0942mh": "Pearl of Great Price"}, "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religious_text.religious_text_of) Pearl of Great Price))", "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) (JOIN (R religion.religious_text.religious_text_of) m.0942mh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yp337r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yp337r ns:aviation.aircraft.model ?y .\n?y ns:aviation.aircraft_model.aircraft ?x .\n}\n", "TopicEntityMid": "m.0yp337r", "mid2name": {"ns:m.0yp337r": "Black Cat"}, "SExpr_w_name": "(JOIN (R aviation.aircraft_model.aircraft) (JOIN (R aviation.aircraft.model) Black Cat))", "SExpr": "(JOIN (R aviation.aircraft_model.aircraft) (JOIN (R aviation.aircraft.model) m.0yp337r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c97 ns:base.inaugurations.inauguration_speaker.inauguration ?y .\n?y ns:time.event.instance_of_recurring_event ?x .\n}\n", "TopicEntityMid": "m.06c97", "mid2name": {"ns:m.06c97": "Richard Nixon"}, "SExpr_w_name": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) Richard Nixon))", "SExpr": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.06c97))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gtt2xr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gtt2xr ns:business.product_line.parent_product_line ?y .\n?y ns:business.brand.products ?x .\n}\n", "TopicEntityMid": "m.0gtt2xr", "mid2name": {"ns:m.0gtt2xr": "Samsung Galaxy Mini"}, "SExpr_w_name": "(JOIN (R business.brand.products) (JOIN (R business.product_line.parent_product_line) Samsung Galaxy Mini))", "SExpr": "(JOIN (R business.brand.products) (JOIN (R business.product_line.parent_product_line) m.0gtt2xr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04j3f8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04j3f8b ns:medicine.medical_trial_sponsor.trials_sponsored ?y .\n?y ns:medicine.medical_trial.design ?x .\n}\n", "TopicEntityMid": "m.04j3f8b", "mid2name": {"ns:m.04j3f8b": "Pharmacia & Upjohn"}, "SExpr_w_name": "(JOIN (R medicine.medical_trial.design) (JOIN (R medicine.medical_trial_sponsor.trials_sponsored) Pharmacia & Upjohn))", "SExpr": "(JOIN (R medicine.medical_trial.design) (JOIN (R medicine.medical_trial_sponsor.trials_sponsored) m.04j3f8b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ws9_1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ws9_1 ns:wine.fruit_source.wines ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.02ws9_1", "mid2name": {"ns:m.02ws9_1": "Purchased Grapes"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R wine.fruit_source.wines) Purchased Grapes))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R wine.fruit_source.wines) m.02ws9_1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01663r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01663r ns:people.profession.people_with_this_profession ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.01663r", "mid2name": {"ns:m.01663r": "Vibraphonist"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.profession.people_with_this_profession) Vibraphonist))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.profession.people_with_this_profession) m.01663r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06ngmy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06ngmy ns:astronomy.asteroid_family.founding_asteroid_family_member ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n}\n", "TopicEntityMid": "m.06ngmy", "mid2name": {"ns:m.06ngmy": "Pallas family"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.asteroid_family.founding_asteroid_family_member) Pallas family))", "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.asteroid_family.founding_asteroid_family_member) m.06ngmy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09vj4c0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09vj4c0 ns:food.recipe.author ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.09vj4c0", "mid2name": {"ns:m.09vj4c0": "Spicy Cauliflower with Anchovy"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R food.recipe.author) Spicy Cauliflower with Anchovy))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R food.recipe.author) m.09vj4c0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqy9bw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqy9bw ns:medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect ?y .\n?y ns:medicine.drug.active_moieties ?x .\n}\n", "TopicEntityMid": "m.0hqy9bw", "mid2name": {"ns:m.0hqy9bw": "Increased Platelet Production"}, "SExpr_w_name": "(JOIN (R medicine.drug.active_moieties) (JOIN (R medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect) Increased Platelet Production))", "SExpr": "(JOIN (R medicine.drug.active_moieties) (JOIN (R medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect) m.0hqy9bw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gktsd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gktsd ns:fictional_universe.work_of_fiction.setting ?y .\n?y ns:fictional_universe.fictional_setting.works_set_here ?x .\n}\n", "TopicEntityMid": "m.05gktsd", "mid2name": {"ns:m.05gktsd": "Come On Get Happy"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.works_set_here) (JOIN (R fictional_universe.work_of_fiction.setting) Come On Get Happy))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.works_set_here) (JOIN (R fictional_universe.work_of_fiction.setting) m.05gktsd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0z3w0g3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0z3w0g3 ns:medicine.routed_drug.marketed_formulations ?y .\n?y ns:medicine.drug_formulation.active_ingredient_moieties ?x .\n}\n", "TopicEntityMid": "m.0z3w0g3", "mid2name": {"ns:m.0z3w0g3": "Ceftaroline Fosamil Intravenous"}, "SExpr_w_name": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.routed_drug.marketed_formulations) Ceftaroline Fosamil Intravenous))", "SExpr": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.routed_drug.marketed_formulations) m.0z3w0g3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p48sl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p48sl ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02p48sl", "mid2name": {"ns:m.02p48sl": "Comparative politics"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Comparative politics))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02p48sl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x2810)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x2810 ns:music.artist.genre ?y .\n?y ns:base.webvideo.internet_video_genre.internet_video ?x .\n}\n", "TopicEntityMid": "m.01x2810", "mid2name": {"ns:m.01x2810": "James Ford"}, "SExpr_w_name": "(JOIN (R base.webvideo.internet_video_genre.internet_video) (JOIN (R music.artist.genre) James Ford))", "SExpr": "(JOIN (R base.webvideo.internet_video_genre.internet_video) (JOIN (R music.artist.genre) m.01x2810))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d7ccq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d7ccq ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.03d7ccq", "mid2name": {"ns:m.03d7ccq": "Vandenberg AFB Space Launch Complex 2"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Vandenberg AFB Space Launch Complex 2))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.03d7ccq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dcjp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dcjp ns:computer.software.license ?y .\n?y ns:computer.software_license.version_of ?x .\n}\n", "TopicEntityMid": "m.04dcjp", "mid2name": {"ns:m.04dcjp": "Conkeror"}, "SExpr_w_name": "(JOIN (R computer.software_license.version_of) (JOIN (R computer.software.license) Conkeror))", "SExpr": "(JOIN (R computer.software_license.version_of) (JOIN (R computer.software.license) m.04dcjp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r5gpq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r5gpq ns:automotive.make.model_s ?y .\n?y ns:automotive.model.generations ?x .\n}\n", "TopicEntityMid": "m.02r5gpq", "mid2name": {"ns:m.02r5gpq": "Chrysler"}, "SExpr_w_name": "(JOIN (R automotive.model.generations) (JOIN (R automotive.make.model_s) Chrysler))", "SExpr": "(JOIN (R automotive.model.generations) (JOIN (R automotive.make.model_s) m.02r5gpq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026ybsw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026ybsw ns:transportation.road.highway_system ?y .\n?y ns:transportation.highway_system.highways ?x .\n}\n", "TopicEntityMid": "m.026ybsw", "mid2name": {"ns:m.026ybsw": "A5 autoroute"}, "SExpr_w_name": "(JOIN (R transportation.highway_system.highways) (JOIN (R transportation.road.highway_system) A5 autoroute))", "SExpr": "(JOIN (R transportation.highway_system.highways) (JOIN (R transportation.road.highway_system) m.026ybsw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05k17c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05k17c ns:fictional_universe.character_occupation.characters_with_this_occupation ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.05k17c", "mid2name": {"ns:m.05k17c": "Dean"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) Dean))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) m.05k17c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010vrfjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010vrfjd ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.010vrfjd", "mid2name": {"ns:m.010vrfjd": "Beni Mellal Airport"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) Beni Mellal Airport))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.010vrfjd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.064l2zh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.064l2zh ns:film.film.country ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.064l2zh", "mid2name": {"ns:m.064l2zh": "Santa Fe"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R film.film.country) Santa Fe))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R film.film.country) m.064l2zh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014l6l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014l6l ns:tv.tv_program.filming_locations ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.014l6l", "mid2name": {"ns:m.014l6l": "Jeopardy!"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R tv.tv_program.filming_locations) Jeopardy!))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R tv.tv_program.filming_locations) m.014l6l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03v6t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03v6t ns:location.location.containedby ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.03v6t", "mid2name": {"ns:m.03v6t": "Iowa State University"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) Iowa State University))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) m.03v6t))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hvwhc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hvwhc ns:aviation.aircraft_designer.aircraft_models_designed ?y .\n?y ns:aviation.aircraft_model.comparable_aircraft ?x .\n}\n", "TopicEntityMid": "m.02hvwhc", "mid2name": {"ns:m.02hvwhc": "Vladimir Gribovski"}, "SExpr_w_name": "(JOIN (R aviation.aircraft_model.comparable_aircraft) (JOIN (R aviation.aircraft_designer.aircraft_models_designed) Vladimir Gribovski))", "SExpr": "(JOIN (R aviation.aircraft_model.comparable_aircraft) (JOIN (R aviation.aircraft_designer.aircraft_models_designed) m.02hvwhc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cc0cp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cc0cp ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.03cc0cp", "mid2name": {"ns:m.03cc0cp": "Morro Alto"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) Morro Alto))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.03cc0cp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02whhvc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02whhvc ns:base.wikipedia_infobox.video_game.developer ?y .\n?y ns:award.award_nominee.award_nominations ?x .\n}\n", "TopicEntityMid": "m.02whhvc", "mid2name": {"ns:m.02whhvc": "Boogie"}, "SExpr_w_name": "(JOIN (R award.award_nominee.award_nominations) (JOIN (R base.wikipedia_infobox.video_game.developer) Boogie))", "SExpr": "(JOIN (R award.award_nominee.award_nominations) (JOIN (R base.wikipedia_infobox.video_game.developer) m.02whhvc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078ffw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078ffw ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.078ffw", "mid2name": {"ns:m.078ffw": "Harry Potter literary series"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) Harry Potter literary series))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.078ffw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0211s8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0211s8 ns:computer.software.license ?y .\n?y ns:computer.software_license.version_of ?x .\n}\n", "TopicEntityMid": "m.0211s8", "mid2name": {"ns:m.0211s8": "Midgard"}, "SExpr_w_name": "(JOIN (R computer.software_license.version_of) (JOIN (R computer.software.license) Midgard))", "SExpr": "(JOIN (R computer.software_license.version_of) (JOIN (R computer.software.license) m.0211s8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026zwbp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026zwbp ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.026zwbp", "mid2name": {"ns:m.026zwbp": "Ekoji Buddhist Temple"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Ekoji Buddhist Temple))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.026zwbp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d77ry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d77ry ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0d77ry", "mid2name": {"ns:m.0d77ry": "Society Islands"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Society Islands))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0d77ry))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04058p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04058p ns:internet.website.category ?y .\n?y ns:internet.website_category.sites ?x .\n}\n", "TopicEntityMid": "m.04058p", "mid2name": {"ns:m.04058p": "Podcast"}, "SExpr_w_name": "(JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) Podcast))", "SExpr": "(JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.04058p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07qkc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07qkc ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.07qkc", "mid2name": {"ns:m.07qkc": "Transsexualism"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Transsexualism))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.07qkc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bsdpr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bsdpr ns:computer.computer.processor ?y .\n?y ns:computer.computer_processor.processor_family ?x .\n}\n", "TopicEntityMid": "m.0bsdpr", "mid2name": {"ns:m.0bsdpr": "Macintosh Quadra 605"}, "SExpr_w_name": "(JOIN (R computer.computer_processor.processor_family) (JOIN (R computer.computer.processor) Macintosh Quadra 605))", "SExpr": "(JOIN (R computer.computer_processor.processor_family) (JOIN (R computer.computer.processor) m.0bsdpr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nk5b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nk5b ns:digicams.camera_sensor_manufacturer.cameras ?y .\n?y ns:business.consumer_product.brand ?x .\n}\n", "TopicEntityMid": "m.0nk5b", "mid2name": {"ns:m.0nk5b": "Panasonic Corporation"}, "SExpr_w_name": "(JOIN (R business.consumer_product.brand) (JOIN (R digicams.camera_sensor_manufacturer.cameras) Panasonic Corporation))", "SExpr": "(JOIN (R business.consumer_product.brand) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.0nk5b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pdy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pdy ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.07pdy", "mid2name": {"ns:m.07pdy": "Theseus"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Theseus))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.07pdy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b7_mm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b7_mm ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n", "TopicEntityMid": "m.0b7_mm", "mid2name": {"ns:m.0b7_mm": "Malaysia national cricket team"}, "SExpr_w_name": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) Malaysia national cricket team))", "SExpr": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) m.0b7_mm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04wdjp2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04wdjp2 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.04wdjp2", "mid2name": {"ns:m.04wdjp2": "Love takes wing"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Love takes wing))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.04wdjp2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bp2y5h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bp2y5h ns:dataworld.gardening_hint.split_to ?y .\n?y ns:base.skosbase.skos_concept.in_scheme ?x .\n}\n", "TopicEntityMid": "m.0bp2y5h", "mid2name": {"ns:m.0bp2y5h": "Pediatric cardiology"}, "SExpr_w_name": "(JOIN (R base.skosbase.skos_concept.in_scheme) (JOIN (R dataworld.gardening_hint.split_to) Pediatric cardiology))", "SExpr": "(JOIN (R base.skosbase.skos_concept.in_scheme) (JOIN (R dataworld.gardening_hint.split_to) m.0bp2y5h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h2c1ll)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h2c1ll ns:comic_books.comic_book_issue.previous_issue ?y .\n?y ns:comic_books.comic_book_issue.editor ?x .\n}\n", "TopicEntityMid": "m.0h2c1ll", "mid2name": {"ns:m.0h2c1ll": "X-Men #29"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.editor) (JOIN (R comic_books.comic_book_issue.previous_issue) X-Men #29))", "SExpr": "(JOIN (R comic_books.comic_book_issue.editor) (JOIN (R comic_books.comic_book_issue.previous_issue) m.0h2c1ll))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.021ympy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.021ympy ns:dataworld.information_source.data_operations ?y .\n?y ns:dataworld.mass_data_operation.authority ?x .\n}\n", "TopicEntityMid": "m.021ympy", "mid2name": {"ns:m.021ympy": "Freebase"}, "SExpr_w_name": "(JOIN (R dataworld.mass_data_operation.authority) (JOIN (R dataworld.information_source.data_operations) Freebase))", "SExpr": "(JOIN (R dataworld.mass_data_operation.authority) (JOIN (R dataworld.information_source.data_operations) m.021ympy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03l_xg7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03l_xg7 ns:business.shopping_center.owner ?y .\n?y ns:dataworld.information_source.data_operations ?x .\n}\n", "TopicEntityMid": "m.03l_xg7", "mid2name": {"ns:m.03l_xg7": "Apple Blossom Mall"}, "SExpr_w_name": "(JOIN (R dataworld.information_source.data_operations) (JOIN (R business.shopping_center.owner) Apple Blossom Mall))", "SExpr": "(JOIN (R dataworld.information_source.data_operations) (JOIN (R business.shopping_center.owner) m.03l_xg7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gpzyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gpzyc ns:government.government_agency.jurisdiction ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.04gpzyc", "mid2name": {"ns:m.04gpzyc": "Ukraine Ministry of Foreign Affairs"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R government.government_agency.jurisdiction) Ukraine Ministry of Foreign Affairs))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R government.government_agency.jurisdiction) m.04gpzyc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rxr8x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rxr8x ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.09rxr8x", "mid2name": {"ns:m.09rxr8x": "Blasphemy"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) Blasphemy))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.09rxr8x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.076ydym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.076ydym ns:user.pak21.default_domain.fictional_family_member.family ?y .\n?y ns:people.family.country ?x .\n}\n", "TopicEntityMid": "m.076ydym", "mid2name": {"ns:m.076ydym": "Ginny Weasley"}, "SExpr_w_name": "(JOIN (R people.family.country) (JOIN (R user.pak21.default_domain.fictional_family_member.family) Ginny Weasley))", "SExpr": "(JOIN (R people.family.country) (JOIN (R user.pak21.default_domain.fictional_family_member.family) m.076ydym))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lts4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lts4 ns:medicine.medical_treatment.used_to_treat ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02lts4", "mid2name": {"ns:m.02lts4": "Mirtazapine"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) Mirtazapine))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) m.02lts4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05rs5x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05rs5x ns:cvg.cvg_genre.games ?y .\n?y ns:base.animemanga.anime_manga_franchise.anime_title ?x .\n}\n", "TopicEntityMid": "m.05rs5x", "mid2name": {"ns:m.05rs5x": "Sex and nudity in video games"}, "SExpr_w_name": "(JOIN (R base.animemanga.anime_manga_franchise.anime_title) (JOIN (R cvg.cvg_genre.games) Sex and nudity in video games))", "SExpr": "(JOIN (R base.animemanga.anime_manga_franchise.anime_title) (JOIN (R cvg.cvg_genre.games) m.05rs5x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02dz6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02dz6q ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02dz6q", "mid2name": {"ns:m.02dz6q": "Soy milk"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Soy milk))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02dz6q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03yx5_g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03yx5_g ns:government.election_campaign.candidate ?y .\n?y ns:government.politician.party ?x .\n}\n", "TopicEntityMid": "m.03yx5_g", "mid2name": {"ns:m.03yx5_g": "Cage-Barile for Assembly 2008"}, "SExpr_w_name": "(JOIN (R government.politician.party) (JOIN (R government.election_campaign.candidate) Cage-Barile for Assembly 2008))", "SExpr": "(JOIN (R government.politician.party) (JOIN (R government.election_campaign.candidate) m.03yx5_g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ncyj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ncyj ns:religion.belief.belief_of ?y .\n?y ns:religion.religion.includes ?x .\n}\n", "TopicEntityMid": "m.03ncyj", "mid2name": {"ns:m.03ncyj": "Irresistible grace"}, "SExpr_w_name": "(JOIN (R religion.religion.includes) (JOIN (R religion.belief.belief_of) Irresistible grace))", "SExpr": "(JOIN (R religion.religion.includes) (JOIN (R religion.belief.belief_of) m.03ncyj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04c_f9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04c_f9k ns:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.04c_f9k", "mid2name": {"ns:m.04c_f9k": "Chapter Six: Husbands and Wives"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) Chapter Six: Husbands and Wives))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) m.04c_f9k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07xc_j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07xc_j ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.07xc_j", "mid2name": {"ns:m.07xc_j": "Cultural geography"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Cultural geography))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.07xc_j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qzjhb3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qzjhb3 ns:book.book_edition_series.sub_series ?y .\n?y ns:book.book_edition.openlibrary_id ?x .\n}\n", "TopicEntityMid": "m.0qzjhb3", "mid2name": {"ns:m.0qzjhb3": "Japanese propaganda : selected readings"}, "SExpr_w_name": "(JOIN (R book.book_edition.openlibrary_id) (JOIN (R book.book_edition_series.sub_series) Japanese propaganda : selected readings))", "SExpr": "(JOIN (R book.book_edition.openlibrary_id) (JOIN (R book.book_edition_series.sub_series) m.0qzjhb3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k23c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k23c ns:internet.website_category.sites ?y .\n?y ns:computer.software.developer ?x .\n}\n", "TopicEntityMid": "m.0k23c", "mid2name": {"ns:m.0k23c": "Content management system"}, "SExpr_w_name": "(JOIN (R computer.software.developer) (JOIN (R internet.website_category.sites) Content management system))", "SExpr": "(JOIN (R computer.software.developer) (JOIN (R internet.website_category.sites) m.0k23c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_7fmf1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_7fmf1 ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.0_7fmf1", "mid2name": {"ns:m.0_7fmf1": "Martha Stewart Living: Potato Pierogies"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) Martha Stewart Living: Potato Pierogies))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.0_7fmf1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039bz5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039bz5 ns:fictional_universe.fictional_universe.organizations ?y .\n?y ns:fictional_universe.fictional_organization.members ?x .\n}\n", "TopicEntityMid": "m.039bz5", "mid2name": {"ns:m.039bz5": "Stargate"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_organization.members) (JOIN (R fictional_universe.fictional_universe.organizations) Stargate))", "SExpr": "(JOIN (R fictional_universe.fictional_organization.members) (JOIN (R fictional_universe.fictional_universe.organizations) m.039bz5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xpj0zh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xpj0zh ns:book.author.works_written ?y .\n?y ns:book.written_work.date_of_first_publication ?x .\n}\n", "TopicEntityMid": "m.0xpj0zh", "mid2name": {"ns:m.0xpj0zh": "Paul Laune"}, "SExpr_w_name": "(JOIN (R book.written_work.date_of_first_publication) (JOIN (R book.author.works_written) Paul Laune))", "SExpr": "(JOIN (R book.written_work.date_of_first_publication) (JOIN (R book.author.works_written) m.0xpj0zh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09v3f6j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09v3f6j ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.09v3f6j", "mid2name": {"ns:m.09v3f6j": "Big Switch"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) Big Switch))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.09v3f6j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yjfd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yjfd ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01yjfd", "mid2name": {"ns:m.01yjfd": "Japanese architecture"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Japanese architecture))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01yjfd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gl5_3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gl5_3 ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.03gl5_3", "mid2name": {"ns:m.03gl5_3": "2005 Bourassa Napa Valley Zinfandel"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) 2005 Bourassa Napa Valley Zinfandel))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.03gl5_3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hj0cmb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hj0cmb ns:book.publication.contents ?y .\n?y ns:book.contents.work ?x .\n}\n", "TopicEntityMid": "m.0hj0cmb", "mid2name": {"ns:m.0hj0cmb": "The Magazine of Fantasy and Science Fiction, June 1954"}, "SExpr_w_name": "(JOIN (R book.contents.work) (JOIN (R book.publication.contents) The Magazine of Fantasy and Science Fiction, June 1954))", "SExpr": "(JOIN (R book.contents.work) (JOIN (R book.publication.contents) m.0hj0cmb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051y3r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051y3r ns:education.educational_degree.people_with_this_degree ?y .\n?y ns:education.education.institution ?x .\n}\n", "TopicEntityMid": "m.051y3r", "mid2name": {"ns:m.051y3r": "Postgraduate Certificate in Education"}, "SExpr_w_name": "(JOIN (R education.education.institution) (JOIN (R education.educational_degree.people_with_this_degree) Postgraduate Certificate in Education))", "SExpr": "(JOIN (R education.education.institution) (JOIN (R education.educational_degree.people_with_this_degree) m.051y3r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06vvwm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06vvwm ns:time.recurring_event.instances ?y .\n?y ns:time.event.next_in_series ?x .\n}\n", "TopicEntityMid": "m.06vvwm", "mid2name": {"ns:m.06vvwm": "\u00darvalsdeild"}, "SExpr_w_name": "(JOIN (R time.event.next_in_series) (JOIN (R time.recurring_event.instances) \u00darvalsdeild))", "SExpr": "(JOIN (R time.event.next_in_series) (JOIN (R time.recurring_event.instances) m.06vvwm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cqlyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cqlyc ns:internet.api.protocols ?y .\n?y ns:internet.protocol.api ?x .\n}\n", "TopicEntityMid": "m.03cqlyc", "mid2name": {"ns:m.03cqlyc": "OpenSocial"}, "SExpr_w_name": "(JOIN (R internet.protocol.api) (JOIN (R internet.api.protocols) OpenSocial))", "SExpr": "(JOIN (R internet.protocol.api) (JOIN (R internet.api.protocols) m.03cqlyc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgqx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgqx ns:base.schemastaging.context_name.plural ?y .\n?y ns:base.schemastaging.plural_form.gender ?x .\n}\n", "TopicEntityMid": "m.0cgqx", "mid2name": {"ns:m.0cgqx": "Speaker of the United States House of Representatives"}, "SExpr_w_name": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.schemastaging.context_name.plural) Speaker of the United States House of Representatives))", "SExpr": "(JOIN (R base.schemastaging.plural_form.gender) (JOIN (R base.schemastaging.context_name.plural) m.0cgqx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k_xh0p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k_xh0p ns:education.school_mascot.school ?y .\n?y ns:location.location.geolocation ?x .\n}\n", "TopicEntityMid": "m.0k_xh0p", "mid2name": {"ns:m.0k_xh0p": "Alma Heights Eagle"}, "SExpr_w_name": "(JOIN (R location.location.geolocation) (JOIN (R education.school_mascot.school) Alma Heights Eagle))", "SExpr": "(JOIN (R location.location.geolocation) (JOIN (R education.school_mascot.school) m.0k_xh0p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cz6dr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cz6dr ns:music.composition.composer ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0cz6dr", "mid2name": {"ns:m.0cz6dr": "Mama Said"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) Mama Said))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.composition.composer) m.0cz6dr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09xp_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09xp_ ns:symbols.name_source.namesakes ?y .\n?y ns:symbols.namesake.named_after ?x .\n}\n", "TopicEntityMid": "m.09xp_", "mid2name": {"ns:m.09xp_": "Cricket"}, "SExpr_w_name": "(JOIN (R symbols.namesake.named_after) (JOIN (R symbols.name_source.namesakes) Cricket))", "SExpr": "(JOIN (R symbols.namesake.named_after) (JOIN (R symbols.name_source.namesakes) m.09xp_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nhc9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nhc9 ns:law.invention.inventor ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.01nhc9", "mid2name": {"ns:m.01nhc9": "Reflecting telescope"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R law.invention.inventor) Reflecting telescope))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R law.invention.inventor) m.01nhc9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018pq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018pq1 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.018pq1", "mid2name": {"ns:m.018pq1": "David McClelland"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) David McClelland))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.018pq1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xrf_0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xrf_0 ns:digicams.camera_sensor_manufacturer.cameras ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.01xrf_0", "mid2name": {"ns:m.01xrf_0": "Unknown"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R digicams.camera_sensor_manufacturer.cameras) Unknown))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.01xrf_0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0frq6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0frq6 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0frq6", "mid2name": {"ns:m.0frq6": "Pork"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Pork))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0frq6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047qnf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047qnf ns:medicine.medical_treatment.used_to_treat ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.047qnf", "mid2name": {"ns:m.047qnf": "Physical medicine and rehabilitation"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) Physical medicine and rehabilitation))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) m.047qnf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012_7htx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012_7htx ns:music.featured_artist.recordings ?y .\n?y ns:music.recording.artist ?x .\n}\n", "TopicEntityMid": "m.012_7htx", "mid2name": {"ns:m.012_7htx": "Cilla Caine"}, "SExpr_w_name": "(JOIN (R music.recording.artist) (JOIN (R music.featured_artist.recordings) Cilla Caine))", "SExpr": "(JOIN (R music.recording.artist) (JOIN (R music.featured_artist.recordings) m.012_7htx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbwj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbwj ns:medicine.medical_trial.references ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.03zbbwj", "mid2name": {"ns:m.03zbbwj": "Oral Collagen for Rheumatoid Arthritis"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R medicine.medical_trial.references) Oral Collagen for Rheumatoid Arthritis))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R medicine.medical_trial.references) m.03zbbwj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bm186)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bm186 ns:medicine.transmission_route.infections_that_travel_this_way ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05bm186", "mid2name": {"ns:m.05bm186": "Direct contact transmission"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.transmission_route.infections_that_travel_this_way) Direct contact transmission))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.transmission_route.infections_that_travel_this_way) m.05bm186))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dc5_q2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dc5_q2 ns:medicine.disease.medical_specialties ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0dc5_q2", "mid2name": {"ns:m.0dc5_q2": "Phthirus pubis infestation"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.disease.medical_specialties) Phthirus pubis infestation))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.disease.medical_specialties) m.0dc5_q2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027vj2v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027vj2v ns:chemistry.chemical_element.atomic_mass ?y .\n?y ns:chemistry.atomic_mass.mass ?x .\n}\n", "TopicEntityMid": "m.027vj2v", "mid2name": {"ns:m.027vj2v": "Aluminium"}, "SExpr_w_name": "(JOIN (R chemistry.atomic_mass.mass) (JOIN (R chemistry.chemical_element.atomic_mass) Aluminium))", "SExpr": "(JOIN (R chemistry.atomic_mass.mass) (JOIN (R chemistry.chemical_element.atomic_mass) m.027vj2v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rktx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rktx2 ns:computer.software.developer ?y .\n?y ns:computer.software_developer.software ?x .\n}\n", "TopicEntityMid": "m.09rktx2", "mid2name": {"ns:m.09rktx2": "DreamSpec"}, "SExpr_w_name": "(JOIN (R computer.software_developer.software) (JOIN (R computer.software.developer) DreamSpec))", "SExpr": "(JOIN (R computer.software_developer.software) (JOIN (R computer.software.developer) m.09rktx2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hl_t5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hl_t5 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.07hl_t5", "mid2name": {"ns:m.07hl_t5": "Restri\u015fti"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Restri\u015fti))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.07hl_t5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dm8rvg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dm8rvg ns:music.artist.track ?y .\n?y ns:music.recording.tracks ?x .\n}\n", "TopicEntityMid": "m.0dm8rvg", "mid2name": {"ns:m.0dm8rvg": "The Globetrotters"}, "SExpr_w_name": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) The Globetrotters))", "SExpr": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) m.0dm8rvg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d987)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d987 ns:meteorology.tropical_cyclone_season.strongest_storm ?y .\n?y ns:meteorology.tropical_cyclone.affected_areas ?x .\n}\n", "TopicEntityMid": "m.03d987", "mid2name": {"ns:m.03d987": "1990 Atlantic hurricane season"}, "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone.affected_areas) (JOIN (R meteorology.tropical_cyclone_season.strongest_storm) 1990 Atlantic hurricane season))", "SExpr": "(JOIN (R meteorology.tropical_cyclone.affected_areas) (JOIN (R meteorology.tropical_cyclone_season.strongest_storm) m.03d987))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b22w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b22w ns:base.inaugurations.inauguration_speaker.inauguration ?y .\n?y ns:time.event.instance_of_recurring_event ?x .\n}\n", "TopicEntityMid": "m.0b22w", "mid2name": {"ns:m.0b22w": "James A. Garfield"}, "SExpr_w_name": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) James A. Garfield))", "SExpr": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.0b22w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jzhl0l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jzhl0l ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.0jzhl0l", "mid2name": {"ns:m.0jzhl0l": "Sunday in the Park With George (2006 London revival cast)"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) Sunday in the Park With George (2006 London revival cast)))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominated_work.award_nominations) m.0jzhl0l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ds2k1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ds2k1 ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.0ds2k1", "mid2name": {"ns:m.0ds2k1": "Cape Canaveral Air Force Station Space Launch Complex 17"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Cape Canaveral Air Force Station Space Launch Complex 17))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.0ds2k1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ksfst3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ksfst3 ns:music.artist.track_contributions ?y .\n?y ns:music.track_contribution.track ?x .\n}\n", "TopicEntityMid": "m.0ksfst3", "mid2name": {"ns:m.0ksfst3": "Ian Parsons"}, "SExpr_w_name": "(JOIN (R music.track_contribution.track) (JOIN (R music.artist.track_contributions) Ian Parsons))", "SExpr": "(JOIN (R music.track_contribution.track) (JOIN (R music.artist.track_contributions) m.0ksfst3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07s80tw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07s80tw ns:broadcast.radio_station.format ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.07s80tw", "mid2name": {"ns:m.07s80tw": "KZUW"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R broadcast.radio_station.format) KZUW))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R broadcast.radio_station.format) m.07s80tw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062z8_z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062z8_z ns:boats.ship_designer.ship_classes_designed ?y .\n?y ns:boats.ship_class.designer ?x .\n}\n", "TopicEntityMid": "m.062z8_z", "mid2name": {"ns:m.062z8_z": "Chris Mitchell"}, "SExpr_w_name": "(JOIN (R boats.ship_class.designer) (JOIN (R boats.ship_designer.ship_classes_designed) Chris Mitchell))", "SExpr": "(JOIN (R boats.ship_class.designer) (JOIN (R boats.ship_designer.ship_classes_designed) m.062z8_z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01260hf3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01260hf3 ns:internet.website.parent_web_property ?y .\n?y ns:internet.website.category ?x .\n}\n", "TopicEntityMid": "m.01260hf3", "mid2name": {"ns:m.01260hf3": "London Control Tower Sim"}, "SExpr_w_name": "(JOIN (R internet.website.category) (JOIN (R internet.website.parent_web_property) London Control Tower Sim))", "SExpr": "(JOIN (R internet.website.category) (JOIN (R internet.website.parent_web_property) m.01260hf3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0987lf0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0987lf0 ns:education.school_magazine.school ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.0987lf0", "mid2name": {"ns:m.0987lf0": "Stonyhurst Magazine"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R education.school_magazine.school) Stonyhurst Magazine))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R education.school_magazine.school) m.0987lf0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03y7v76)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03y7v76 ns:astronomy.asteroid.member_of_asteroid_group ?y .\n?y ns:astronomy.asteroid_group.asteroid_group_members ?x .\n}\n", "TopicEntityMid": "m.03y7v76", "mid2name": {"ns:m.03y7v76": "7769 Okuni"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid_group.asteroid_group_members) (JOIN (R astronomy.asteroid.member_of_asteroid_group) 7769 Okuni))", "SExpr": "(JOIN (R astronomy.asteroid_group.asteroid_group_members) (JOIN (R astronomy.asteroid.member_of_asteroid_group) m.03y7v76))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01zslg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01zslg ns:law.constitutional_amendment_proposer.constitutional_amendments_proposed ?y .\n?y ns:time.holiday_category.holidays ?x .\n}\n", "TopicEntityMid": "m.01zslg", "mid2name": {"ns:m.01zslg": "John Lubbock, 1st Baron Avebury"}, "SExpr_w_name": "(JOIN (R time.holiday_category.holidays) (JOIN (R law.constitutional_amendment_proposer.constitutional_amendments_proposed) John Lubbock, 1st Baron Avebury))", "SExpr": "(JOIN (R time.holiday_category.holidays) (JOIN (R law.constitutional_amendment_proposer.constitutional_amendments_proposed) m.01zslg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0lqhz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0lqhz ns:fictional_universe.event_in_fiction.included_by_these_events ?y .\n?y ns:fictional_universe.event_in_fiction.includes_events ?x .\n}\n", "TopicEntityMid": "m.0c0lqhz", "mid2name": {"ns:m.0c0lqhz": "Creation of the Stepsons"}, "SExpr_w_name": "(JOIN (R fictional_universe.event_in_fiction.includes_events) (JOIN (R fictional_universe.event_in_fiction.included_by_these_events) Creation of the Stepsons))", "SExpr": "(JOIN (R fictional_universe.event_in_fiction.includes_events) (JOIN (R fictional_universe.event_in_fiction.included_by_these_events) m.0c0lqhz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09gm6w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09gm6w ns:people.ethnicity.people ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.09gm6w", "mid2name": {"ns:m.09gm6w": "Afro-Filipino"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R people.ethnicity.people) Afro-Filipino))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R people.ethnicity.people) m.09gm6w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02211by)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02211by ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02211by", "mid2name": {"ns:m.02211by": "Chief Technology Officer"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Chief Technology Officer))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02211by))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0z6qhwq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0z6qhwq ns:business.product_line.category ?y .\n?y ns:business.product_category.product_lines ?x .\n}\n", "TopicEntityMid": "m.0z6qhwq", "mid2name": {"ns:m.0z6qhwq": "Elixir"}, "SExpr_w_name": "(JOIN (R business.product_category.product_lines) (JOIN (R business.product_line.category) Elixir))", "SExpr": "(JOIN (R business.product_category.product_lines) (JOIN (R business.product_line.category) m.0z6qhwq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ztrc1l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ztrc1l ns:business.product_line.parent_product_line ?y .\n?y ns:interests.collection_category.collectors ?x .\n}\n", "TopicEntityMid": "m.0ztrc1l", "mid2name": {"ns:m.0ztrc1l": "Roseville Artcraft"}, "SExpr_w_name": "(JOIN (R interests.collection_category.collectors) (JOIN (R business.product_line.parent_product_line) Roseville Artcraft))", "SExpr": "(JOIN (R interests.collection_category.collectors) (JOIN (R business.product_line.parent_product_line) m.0ztrc1l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0mf6j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0mf6j ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0c0mf6j", "mid2name": {"ns:m.0c0mf6j": "Enock Molefe"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Enock Molefe))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0c0mf6j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xlvv5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xlvv5 ns:spaceflight.bipropellant_rocket_engine.engine_cycle ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02xlvv5", "mid2name": {"ns:m.02xlvv5": "RD-171"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R spaceflight.bipropellant_rocket_engine.engine_cycle) RD-171))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R spaceflight.bipropellant_rocket_engine.engine_cycle) m.02xlvv5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03yxftc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03yxftc ns:government.election.primaries ?y .\n?y ns:government.election.campaigns ?x .\n}\n", "TopicEntityMid": "m.03yxftc", "mid2name": {"ns:m.03yxftc": "California\u2019s 4th congressional district election, 2008"}, "SExpr_w_name": "(JOIN (R government.election.campaigns) (JOIN (R government.election.primaries) California\u2019s 4th congressional district election, 2008))", "SExpr": "(JOIN (R government.election.campaigns) (JOIN (R government.election.primaries) m.03yxftc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09bcm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09bcm ns:astronomy.celestial_object.category ?y .\n?y ns:astronomy.celestial_object_category.objects ?x .\n}\n", "TopicEntityMid": "m.09bcm", "mid2name": {"ns:m.09bcm": "Venus"}, "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) Venus))", "SExpr": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) m.09bcm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q1f4l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q1f4l ns:visual_art.art_period_movement.associated_artists ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.02q1f4l", "mid2name": {"ns:m.02q1f4l": "Florentine painting"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R visual_art.art_period_movement.associated_artists) Florentine painting))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R visual_art.art_period_movement.associated_artists) m.02q1f4l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rv_gb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rv_gb ns:music.composition.composer ?y .\n?y ns:music.artist.origin ?x .\n}\n", "TopicEntityMid": "m.02rv_gb", "mid2name": {"ns:m.02rv_gb": "The Greek Passion"}, "SExpr_w_name": "(JOIN (R music.artist.origin) (JOIN (R music.composition.composer) The Greek Passion))", "SExpr": "(JOIN (R music.artist.origin) (JOIN (R music.composition.composer) m.02rv_gb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01rd7k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01rd7k ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.aubreymaturin.species.mentioned_in ?x .\n}\n", "TopicEntityMid": "m.01rd7k", "mid2name": {"ns:m.01rd7k": "Wild turkey"}, "SExpr_w_name": "(JOIN (R base.aubreymaturin.species.mentioned_in) (JOIN (R biology.organism_classification.higher_classification) Wild turkey))", "SExpr": "(JOIN (R base.aubreymaturin.species.mentioned_in) (JOIN (R biology.organism_classification.higher_classification) m.01rd7k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03f6x70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03f6x70 ns:music.artist.track ?y .\n?y ns:music.recording.artist ?x .\n}\n", "TopicEntityMid": "m.03f6x70", "mid2name": {"ns:m.03f6x70": "Sepalot"}, "SExpr_w_name": "(JOIN (R music.recording.artist) (JOIN (R music.artist.track) Sepalot))", "SExpr": "(JOIN (R music.recording.artist) (JOIN (R music.artist.track) m.03f6x70))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027l8g3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027l8g3 ns:sports.sports_team.roster ?y .\n?y ns:sports.sports_team_roster.player ?x .\n}\n", "TopicEntityMid": "m.027l8g3", "mid2name": {"ns:m.027l8g3": "Cincinnati Bengals"}, "SExpr_w_name": "(JOIN (R sports.sports_team_roster.player) (JOIN (R sports.sports_team.roster) Cincinnati Bengals))", "SExpr": "(JOIN (R sports.sports_team_roster.player) (JOIN (R sports.sports_team.roster) m.027l8g3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.046jry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.046jry ns:book.magazine_genre.magazines_in_this_genre ?y .\n?y ns:book.magazine.place_of_publication ?x .\n}\n", "TopicEntityMid": "m.046jry", "mid2name": {"ns:m.046jry": "Street press"}, "SExpr_w_name": "(JOIN (R book.magazine.place_of_publication) (JOIN (R book.magazine_genre.magazines_in_this_genre) Street press))", "SExpr": "(JOIN (R book.magazine.place_of_publication) (JOIN (R book.magazine_genre.magazines_in_this_genre) m.046jry))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.089hpt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.089hpt ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.089hpt", "mid2name": {"ns:m.089hpt": "Newport-class tank landing ship\""}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Newport-class tank landing ship\"))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.089hpt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0wfhp5p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0wfhp5p ns:location.location.containedby ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.0wfhp5p", "mid2name": {"ns:m.0wfhp5p": "Riley Towers II"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) Riley Towers II))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) m.0wfhp5p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qkrdx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qkrdx ns:opera.opera_director.operas_directed ?y .\n?y ns:opera.opera_production.opera ?x .\n}\n", "TopicEntityMid": "m.03qkrdx", "mid2name": {"ns:m.03qkrdx": "Katie Mitchell"}, "SExpr_w_name": "(JOIN (R opera.opera_production.opera) (JOIN (R opera.opera_director.operas_directed) Katie Mitchell))", "SExpr": "(JOIN (R opera.opera_production.opera) (JOIN (R opera.opera_director.operas_directed) m.03qkrdx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02yx78)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02yx78 ns:aviation.icao_airline_designator.airline ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.02yx78", "mid2name": {"ns:m.02yx78": "DAT"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.icao_airline_designator.airline) DAT))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R aviation.icao_airline_designator.airline) m.02yx78))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034q4v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034q4v ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.034q4v", "mid2name": {"ns:m.034q4v": "Yellowjacket"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Yellowjacket))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.034q4v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqv3wh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqv3wh ns:medicine.drug_formulation.active_ingredient_moieties ?y .\n?y ns:chemistry.chemical_element.atomic_mass ?x .\n}\n", "TopicEntityMid": "m.0hqv3wh", "mid2name": {"ns:m.0hqv3wh": "Tribasic calcium phosphate - matricaria recutita - arabica coffee bean 0.000214/0.000214/0.000214 pellet"}, "SExpr_w_name": "(JOIN (R chemistry.chemical_element.atomic_mass) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) Tribasic calcium phosphate - matricaria recutita - arabica coffee bean 0.000214/0.000214/0.000214 pellet))", "SExpr": "(JOIN (R chemistry.chemical_element.atomic_mass) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqv3wh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c93tt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c93tt ns:architecture.architecture_firm.projects ?y .\n?y ns:award.award_winner.awards_won ?x .\n}\n", "TopicEntityMid": "m.05c93tt", "mid2name": {"ns:m.05c93tt": "Michael Hopkins Architects"}, "SExpr_w_name": "(JOIN (R award.award_winner.awards_won) (JOIN (R architecture.architecture_firm.projects) Michael Hopkins Architects))", "SExpr": "(JOIN (R award.award_winner.awards_won) (JOIN (R architecture.architecture_firm.projects) m.05c93tt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qrc67)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qrc67 ns:visual_art.visual_art_medium.artworks ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03qrc67", "mid2name": {"ns:m.03qrc67": "Wood panel"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R visual_art.visual_art_medium.artworks) Wood panel))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R visual_art.visual_art_medium.artworks) m.03qrc67))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03c_441)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03c_441 ns:business.business_operation.industry ?y .\n?y ns:business.product_category.product_lines ?x .\n}\n", "TopicEntityMid": "m.03c_441", "mid2name": {"ns:m.03c_441": "Chemical Automatics Design Bureau"}, "SExpr_w_name": "(JOIN (R business.product_category.product_lines) (JOIN (R business.business_operation.industry) Chemical Automatics Design Bureau))", "SExpr": "(JOIN (R business.product_category.product_lines) (JOIN (R business.business_operation.industry) m.03c_441))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j5c2s1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j5c2s1 ns:law.inventor.inventions ?y .\n?y ns:law.invention.inventor ?x .\n}\n", "TopicEntityMid": "m.0j5c2s1", "mid2name": {"ns:m.0j5c2s1": "Xiao Lin Li"}, "SExpr_w_name": "(JOIN (R law.invention.inventor) (JOIN (R law.inventor.inventions) Xiao Lin Li))", "SExpr": "(JOIN (R law.invention.inventor) (JOIN (R law.inventor.inventions) m.0j5c2s1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cs_nly)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cs_nly ns:engineering.engine.category ?y .\n?y ns:engineering.engine_category.engines ?x .\n}\n", "TopicEntityMid": "m.0cs_nly", "mid2name": {"ns:m.0cs_nly": "Lycoming O-320-A1A"}, "SExpr_w_name": "(JOIN (R engineering.engine_category.engines) (JOIN (R engineering.engine.category) Lycoming O-320-A1A))", "SExpr": "(JOIN (R engineering.engine_category.engines) (JOIN (R engineering.engine.category) m.0cs_nly))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hjb_9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hjb_9 ns:computer.programming_language.language_paradigms ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03hjb_9", "mid2name": {"ns:m.03hjb_9": "Lazy ML"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.programming_language.language_paradigms) Lazy ML))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.programming_language.language_paradigms) m.03hjb_9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qjrr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qjrr ns:computer.programming_language_paradigm.languages ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.0qjrr", "mid2name": {"ns:m.0qjrr": "Generic programming"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language_paradigm.languages) Generic programming))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language_paradigm.languages) m.0qjrr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0641x3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0641x3 ns:computer.programming_language.influenced_by ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.0641x3", "mid2name": {"ns:m.0641x3": "Standard ML of New Jersey"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) Standard ML of New Jersey))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) m.0641x3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:base.petbreeds.dog_breed.cities_where_this_dog_is_popular ?x .\n}\n", "TopicEntityMid": "m.0f8l9c", "mid2name": {"ns:m.0f8l9c": "France"}, "SExpr_w_name": "(JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) (JOIN (R biology.breed_origin.breeds_originating_here) France))", "SExpr": "(JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) (JOIN (R biology.breed_origin.breeds_originating_here) m.0f8l9c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01qxvh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01qxvh ns:base.animemanga.anime_manga_genre.anime_manga_franchises ?y .\n?y ns:base.animemanga.anime_manga_franchise.genre ?x .\n}\n", "TopicEntityMid": "m.01qxvh", "mid2name": {"ns:m.01qxvh": "Romance novel"}, "SExpr_w_name": "(JOIN (R base.animemanga.anime_manga_franchise.genre) (JOIN (R base.animemanga.anime_manga_genre.anime_manga_franchises) Romance novel))", "SExpr": "(JOIN (R base.animemanga.anime_manga_franchise.genre) (JOIN (R base.animemanga.anime_manga_genre.anime_manga_franchises) m.01qxvh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_lcrx4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_lcrx4 ns:computer.programming_language.influenced_by ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.0_lcrx4", "mid2name": {"ns:m.0_lcrx4": "Kotlin"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) Kotlin))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) m.0_lcrx4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01sjth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01sjth ns:automotive.make.model_s ?y .\n?y ns:automotive.model.predecessor ?x .\n}\n", "TopicEntityMid": "m.01sjth", "mid2name": {"ns:m.01sjth": "Daewoo"}, "SExpr_w_name": "(JOIN (R automotive.model.predecessor) (JOIN (R automotive.make.model_s) Daewoo))", "SExpr": "(JOIN (R automotive.model.predecessor) (JOIN (R automotive.make.model_s) m.01sjth))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n94b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n94b ns:people.ethnicity.geographic_distribution ?y .\n?y ns:location.country.administrative_divisions ?x .\n}\n", "TopicEntityMid": "m.01n94b", "mid2name": {"ns:m.01n94b": "Slovaks"}, "SExpr_w_name": "(JOIN (R location.country.administrative_divisions) (JOIN (R people.ethnicity.geographic_distribution) Slovaks))", "SExpr": "(JOIN (R location.country.administrative_divisions) (JOIN (R people.ethnicity.geographic_distribution) m.01n94b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xrg58)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xrg58 ns:digicams.camera_iso.cameras ?y .\n?y ns:business.consumer_product.brand ?x .\n}\n", "TopicEntityMid": "m.01xrg58", "mid2name": {"ns:m.01xrg58": "800"}, "SExpr_w_name": "(JOIN (R business.consumer_product.brand) (JOIN (R digicams.camera_iso.cameras) 800))", "SExpr": "(JOIN (R business.consumer_product.brand) (JOIN (R digicams.camera_iso.cameras) m.01xrg58))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hj_s_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hj_s_ ns:protected_sites.park_system.member_parks ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.02hj_s_", "mid2name": {"ns:m.02hj_s_": "Canadian National Parks"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R protected_sites.park_system.member_parks) Canadian National Parks))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R protected_sites.park_system.member_parks) m.02hj_s_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bzs9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bzs9 ns:location.location.containedby ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.01bzs9", "mid2name": {"ns:m.01bzs9": "University of Leeds"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) University of Leeds))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R location.location.containedby) m.01bzs9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cj25l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cj25l ns:language.language_creator.languages_created ?y .\n?y ns:language.conlang.date_created ?x .\n}\n", "TopicEntityMid": "m.0cj25l", "mid2name": {"ns:m.0cj25l": "Fran\u00e7ois Sudre"}, "SExpr_w_name": "(JOIN (R language.conlang.date_created) (JOIN (R language.language_creator.languages_created) Fran\u00e7ois Sudre))", "SExpr": "(JOIN (R language.conlang.date_created) (JOIN (R language.language_creator.languages_created) m.0cj25l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0184k_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0184k_ ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0184k_", "mid2name": {"ns:m.0184k_": "Man of La Mancha"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Man of La Mancha))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0184k_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbyd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbyd ns:medicine.medical_trial.phase ?y .\n?y ns:medicine.medical_trial_phase.medical_trials ?x .\n}\n", "TopicEntityMid": "m.03zbbyd", "mid2name": {"ns:m.03zbbyd": "A Phase III Study to Evaluate the Safety and Efficacy of Ganciclovir (Dihydroxypropoxymethyl Guanine [DHPG]) Treatment of Symptomatic Central Nervous System (CNS) Congenital Cytomegalovirus (CMV) Infections."}, "SExpr_w_name": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) A Phase III Study to Evaluate the Safety and Efficacy of Ganciclovir (Dihydroxypropoxymethyl Guanine [DHPG]) Treatment of Symptomatic Central Nervous System (CNS) Congenital Cytomegalovirus (CMV) Infections.))", "SExpr": "(JOIN (R medicine.medical_trial_phase.medical_trials) (JOIN (R medicine.medical_trial.phase) m.03zbbyd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0712k5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0712k5 ns:comic_books.comic_book_series.publisher ?y .\n?y ns:book.publishing_company.books_published ?x .\n}\n", "TopicEntityMid": "m.0712k5", "mid2name": {"ns:m.0712k5": "Give Me Liberty"}, "SExpr_w_name": "(JOIN (R book.publishing_company.books_published) (JOIN (R comic_books.comic_book_series.publisher) Give Me Liberty))", "SExpr": "(JOIN (R book.publishing_company.books_published) (JOIN (R comic_books.comic_book_series.publisher) m.0712k5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09xcm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09xcm ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.09xcm", "mid2name": {"ns:m.09xcm": "John Philip Sousa"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) John Philip Sousa))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.09xcm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.065p9vp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.065p9vp ns:exhibitions.exhibition_curator.exhibitions_curated ?y .\n?y ns:exhibitions.exhibition.curators ?x .\n}\n", "TopicEntityMid": "m.065p9vp", "mid2name": {"ns:m.065p9vp": "Gretchen A. Hirschauer"}, "SExpr_w_name": "(JOIN (R exhibitions.exhibition.curators) (JOIN (R exhibitions.exhibition_curator.exhibitions_curated) Gretchen A. Hirschauer))", "SExpr": "(JOIN (R exhibitions.exhibition.curators) (JOIN (R exhibitions.exhibition_curator.exhibitions_curated) m.065p9vp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04t4fy2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04t4fy2 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.04t4fy2", "mid2name": {"ns:m.04t4fy2": "The x-files"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) The x-files))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.04t4fy2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qhqyt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qhqyt ns:royalty.chivalric_rank.opposite_gender_equivalent ?y .\n?y ns:royalty.chivalric_rank_gender_equivalence.rank ?x .\n}\n", "TopicEntityMid": "m.02qhqyt", "mid2name": {"ns:m.02qhqyt": "Knight Commander"}, "SExpr_w_name": "(JOIN (R royalty.chivalric_rank_gender_equivalence.rank) (JOIN (R royalty.chivalric_rank.opposite_gender_equivalent) Knight Commander))", "SExpr": "(JOIN (R royalty.chivalric_rank_gender_equivalence.rank) (JOIN (R royalty.chivalric_rank.opposite_gender_equivalent) m.02qhqyt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04t1h6h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04t1h6h ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.04t1h6h", "mid2name": {"ns:m.04t1h6h": "The lost mind"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) The lost mind))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.04t1h6h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j8qj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j8qj ns:film.film.country ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.01j8qj", "mid2name": {"ns:m.01j8qj": "Cocksucker Blues"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R film.film.country) Cocksucker Blues))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R film.film.country) m.01j8qj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01921y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01921y ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01921y", "mid2name": {"ns:m.01921y": "Ningxia"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Ningxia))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01921y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.048knd8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.048knd8 ns:book.book_subject.musical_compositions_about_this_topic ?y .\n?y ns:music.composition.composer ?x .\n}\n", "TopicEntityMid": "m.048knd8", "mid2name": {"ns:m.048knd8": "Repression"}, "SExpr_w_name": "(JOIN (R music.composition.composer) (JOIN (R book.book_subject.musical_compositions_about_this_topic) Repression))", "SExpr": "(JOIN (R music.composition.composer) (JOIN (R book.book_subject.musical_compositions_about_this_topic) m.048knd8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j2163g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j2163g ns:music.music_video_director.music_videos_directed ?y .\n?y ns:music.music_video.artist ?x .\n}\n", "TopicEntityMid": "m.0j2163g", "mid2name": {"ns:m.0j2163g": "Mike Mansfield"}, "SExpr_w_name": "(JOIN (R music.music_video.artist) (JOIN (R music.music_video_director.music_videos_directed) Mike Mansfield))", "SExpr": "(JOIN (R music.music_video.artist) (JOIN (R music.music_video_director.music_videos_directed) m.0j2163g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011tyq8q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011tyq8q ns:business.business_location.address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "TopicEntityMid": "m.011tyq8q", "mid2name": {"ns:m.011tyq8q": "Esszimmer"}, "SExpr_w_name": "(JOIN (R location.mailing_address.citytown) (JOIN (R business.business_location.address) Esszimmer))", "SExpr": "(JOIN (R location.mailing_address.citytown) (JOIN (R business.business_location.address) m.011tyq8q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7x ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:base.petbreeds.dog_breed.cities_where_this_dog_is_popular ?x .\n}\n", "TopicEntityMid": "m.0h7x", "mid2name": {"ns:m.0h7x": "Austria"}, "SExpr_w_name": "(JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) (JOIN (R biology.breed_origin.breeds_originating_here) Austria))", "SExpr": "(JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) (JOIN (R biology.breed_origin.breeds_originating_here) m.0h7x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.021_rz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.021_rz ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.021_rz", "mid2name": {"ns:m.021_rz": "W. V. D. Hodge"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) W. V. D. Hodge))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.021_rz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c44msd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c44msd ns:time.event.included_in_event ?y .\n?y ns:base.tournaments.tournament.rounds ?x .\n}\n", "TopicEntityMid": "m.0c44msd", "mid2name": {"ns:m.0c44msd": "2010 FIFA World Cup Group C - USA ./. ALG"}, "SExpr_w_name": "(JOIN (R base.tournaments.tournament.rounds) (JOIN (R time.event.included_in_event) 2010 FIFA World Cup Group C - USA ./. ALG))", "SExpr": "(JOIN (R base.tournaments.tournament.rounds) (JOIN (R time.event.included_in_event) m.0c44msd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09qx9m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09qx9m ns:protected_sites.natural_or_cultural_site_designation.listing_agency ?y .\n?y ns:organization.organization.parent ?x .\n}\n", "TopicEntityMid": "m.09qx9m", "mid2name": {"ns:m.09qx9m": "National Landscape Conservation System"}, "SExpr_w_name": "(JOIN (R organization.organization.parent) (JOIN (R protected_sites.natural_or_cultural_site_designation.listing_agency) National Landscape Conservation System))", "SExpr": "(JOIN (R organization.organization.parent) (JOIN (R protected_sites.natural_or_cultural_site_designation.listing_agency) m.09qx9m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dzsff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dzsff ns:music.composition.composer ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.04dzsff", "mid2name": {"ns:m.04dzsff": "Wide Open Spaces"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R music.composition.composer) Wide Open Spaces))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R music.composition.composer) m.04dzsff))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059_xgm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059_xgm ns:food.dish.cuisine ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.059_xgm", "mid2name": {"ns:m.059_xgm": "Cuccidati"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R food.dish.cuisine) Cuccidati))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R food.dish.cuisine) m.059_xgm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02372m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02372m ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.02372m", "mid2name": {"ns:m.02372m": "Greenpoint"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) Greenpoint))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.02372m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07tczt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07tczt ns:spaceflight.bipropellant_rocket_engine.engine_cycle ?y .\n?y ns:spaceflight.rocket_engine_cycle.rocket_engines ?x .\n}\n", "TopicEntityMid": "m.07tczt", "mid2name": {"ns:m.07tczt": "RS-27A"}, "SExpr_w_name": "(JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) (JOIN (R spaceflight.bipropellant_rocket_engine.engine_cycle) RS-27A))", "SExpr": "(JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) (JOIN (R spaceflight.bipropellant_rocket_engine.engine_cycle) m.07tczt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vgy2x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vgy2x ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.05vgy2x", "mid2name": {"ns:m.05vgy2x": "William T. Rowe"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) William T. Rowe))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.05vgy2x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q22dq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q22dq ns:education.grade_level.locations_used ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.02q22dq", "mid2name": {"ns:m.02q22dq": "Year Seven"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R education.grade_level.locations_used) Year Seven))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R education.grade_level.locations_used) m.02q22dq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08b2_l3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08b2_l3 ns:book.author.contributing_author_to ?y .\n?y ns:book.book_edition.book ?x .\n}\n", "TopicEntityMid": "m.08b2_l3", "mid2name": {"ns:m.08b2_l3": "Reinhard Laube"}, "SExpr_w_name": "(JOIN (R book.book_edition.book) (JOIN (R book.author.contributing_author_to) Reinhard Laube))", "SExpr": "(JOIN (R book.book_edition.book) (JOIN (R book.author.contributing_author_to) m.08b2_l3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047k6md)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047k6md ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.047k6md", "mid2name": {"ns:m.047k6md": "Worker at Rearden Steel Character"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Worker at Rearden Steel Character))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.047k6md))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07bgp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07bgp ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.07bgp", "mid2name": {"ns:m.07bgp": "Sheep"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.higher_classification) Sheep))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.higher_classification) m.07bgp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pm0z5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pm0z5 ns:business.consumer_product.company ?y .\n?y ns:business.company_product_relationship.company ?x .\n}\n", "TopicEntityMid": "m.02pm0z5", "mid2name": {"ns:m.02pm0z5": "Pentax K110D"}, "SExpr_w_name": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) Pentax K110D))", "SExpr": "(JOIN (R business.company_product_relationship.company) (JOIN (R business.consumer_product.company) m.02pm0z5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01knz8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01knz8 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.01knz8", "mid2name": {"ns:m.01knz8": "Adele Goldberg"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Adele Goldberg))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.01knz8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.024xs5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.024xs5 ns:user.robert.us_congress.us_representative.committee_memberships ?y .\n?y ns:user.robert.us_congress.house_committee.chairperson ?x .\n}\n", "TopicEntityMid": "m.024xs5", "mid2name": {"ns:m.024xs5": "Susan Davis"}, "SExpr_w_name": "(JOIN (R user.robert.us_congress.house_committee.chairperson) (JOIN (R user.robert.us_congress.us_representative.committee_memberships) Susan Davis))", "SExpr": "(JOIN (R user.robert.us_congress.house_committee.chairperson) (JOIN (R user.robert.us_congress.us_representative.committee_memberships) m.024xs5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027sz65)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027sz65 ns:sports.sports_team.colors ?y .\n?y ns:biology.breed_coloring.breeds ?x .\n}\n", "TopicEntityMid": "m.027sz65", "mid2name": {"ns:m.027sz65": "Middle Tennessee Blue Raiders football"}, "SExpr_w_name": "(JOIN (R biology.breed_coloring.breeds) (JOIN (R sports.sports_team.colors) Middle Tennessee Blue Raiders football))", "SExpr": "(JOIN (R biology.breed_coloring.breeds) (JOIN (R sports.sports_team.colors) m.027sz65))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027ktwc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027ktwc ns:astronomy.asteroid_family.founding_asteroid_family_member ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n}\n", "TopicEntityMid": "m.027ktwc", "mid2name": {"ns:m.027ktwc": "Nysa family"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.asteroid_family.founding_asteroid_family_member) Nysa family))", "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.asteroid_family.founding_asteroid_family_member) m.027ktwc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05301)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05301 ns:religion.religion.places_of_worship_historical ?y .\n?y ns:religion.place_of_worship_historical_use.place_of_worship ?x .\n}\n", "TopicEntityMid": "m.05301", "mid2name": {"ns:m.05301": "Mahayana"}, "SExpr_w_name": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) Mahayana))", "SExpr": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) m.05301))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03kr44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03kr44 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03kr44", "mid2name": {"ns:m.03kr44": "Midday Meal Scheme"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Midday Meal Scheme))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03kr44))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j4tb1q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j4tb1q ns:business.brand.products ?y .\n?y ns:medicine.manufactured_drug_form.available_in ?x .\n}\n", "TopicEntityMid": "m.0j4tb1q", "mid2name": {"ns:m.0j4tb1q": "Tofranil"}, "SExpr_w_name": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R business.brand.products) Tofranil))", "SExpr": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R business.brand.products) m.0j4tb1q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p8vvc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p8vvc ns:government.governmental_body.body_this_is_a_component_of ?y .\n?y ns:government.governmental_body.jurisdiction ?x .\n}\n", "TopicEntityMid": "m.02p8vvc", "mid2name": {"ns:m.02p8vvc": "South Dakota House of Representatives"}, "SExpr_w_name": "(JOIN (R government.governmental_body.jurisdiction) (JOIN (R government.governmental_body.body_this_is_a_component_of) South Dakota House of Representatives))", "SExpr": "(JOIN (R government.governmental_body.jurisdiction) (JOIN (R government.governmental_body.body_this_is_a_component_of) m.02p8vvc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wszg3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wszg3 ns:fictional_universe.character_occupation.characters_with_this_occupation ?y .\n?y ns:base.animemanga.anime_manga_franchise.genre ?x .\n}\n", "TopicEntityMid": "m.02wszg3", "mid2name": {"ns:m.02wszg3": "Thief"}, "SExpr_w_name": "(JOIN (R base.animemanga.anime_manga_franchise.genre) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) Thief))", "SExpr": "(JOIN (R base.animemanga.anime_manga_franchise.genre) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) m.02wszg3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_v8m4q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_v8m4q ns:automotive.model_year.make ?y .\n?y ns:automotive.make.model_s ?x .\n}\n", "TopicEntityMid": "m.0_v8m4q", "mid2name": {"ns:m.0_v8m4q": "2014 Ford Focus"}, "SExpr_w_name": "(JOIN (R automotive.make.model_s) (JOIN (R automotive.model_year.make) 2014 Ford Focus))", "SExpr": "(JOIN (R automotive.make.model_s) (JOIN (R automotive.model_year.make) m.0_v8m4q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2yp6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2yp6 ns:martial_arts.martial_arts_organization.martial_arts ?y .\n?y ns:martial_arts.martial_art.category ?x .\n}\n", "TopicEntityMid": "m.0f2yp6", "mid2name": {"ns:m.0f2yp6": "Song Moo Kwan"}, "SExpr_w_name": "(JOIN (R martial_arts.martial_art.category) (JOIN (R martial_arts.martial_arts_organization.martial_arts) Song Moo Kwan))", "SExpr": "(JOIN (R martial_arts.martial_art.category) (JOIN (R martial_arts.martial_arts_organization.martial_arts) m.0f2yp6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gwmrf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gwmrf ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\n}\n", "TopicEntityMid": "m.04gwmrf", "mid2name": {"ns:m.04gwmrf": "Mayor of Chino Hills"}, "SExpr_w_name": "(JOIN (R government.government_position_held.office_holder) (JOIN (R government.government_office_or_title.office_holders) Mayor of Chino Hills))", "SExpr": "(JOIN (R government.government_position_held.office_holder) (JOIN (R government.government_office_or_title.office_holders) m.04gwmrf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gk0z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gk0z ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.0gk0z", "mid2name": {"ns:m.0gk0z": "Cardamom"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Cardamom))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.0gk0z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xj6f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xj6f ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01xj6f", "mid2name": {"ns:m.01xj6f": "Babesiosis"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Babesiosis))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01xj6f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h6kr_v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h6kr_v ns:people.profession.people_with_this_profession ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.0h6kr_v", "mid2name": {"ns:m.0h6kr_v": "Production Department Manager"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R people.profession.people_with_this_profession) Production Department Manager))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R people.profession.people_with_this_profession) m.0h6kr_v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07w4bj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07w4bj ns:location.location.containedby ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.07w4bj", "mid2name": {"ns:m.07w4bj": "200 Vesey Street"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) 200 Vesey Street))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R location.location.containedby) m.07w4bj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h2n7tg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h2n7tg ns:computer.computer.compatible_oses ?y .\n?y ns:computer.os_compatibility.operating_system ?x .\n}\n", "TopicEntityMid": "m.0h2n7tg", "mid2name": {"ns:m.0h2n7tg": "Lenovo Thinkpad Edge 11"}, "SExpr_w_name": "(JOIN (R computer.os_compatibility.operating_system) (JOIN (R computer.computer.compatible_oses) Lenovo Thinkpad Edge 11))", "SExpr": "(JOIN (R computer.os_compatibility.operating_system) (JOIN (R computer.computer.compatible_oses) m.0h2n7tg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039cp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039cp ns:martial_arts.martial_art_category.martial_arts ?y .\n?y ns:martial_arts.martial_art.category ?x .\n}\n", "TopicEntityMid": "m.039cp", "mid2name": {"ns:m.039cp": "Grappling"}, "SExpr_w_name": "(JOIN (R martial_arts.martial_art.category) (JOIN (R martial_arts.martial_art_category.martial_arts) Grappling))", "SExpr": "(JOIN (R martial_arts.martial_art.category) (JOIN (R martial_arts.martial_art_category.martial_arts) m.039cp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018q21l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018q21l ns:music.recording.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.018q21l", "mid2name": {"ns:m.018q21l": "Puss'n Boots"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) Puss'n Boots))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.recording.artist) m.018q21l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wtqd4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wtqd4 ns:base.technologyofdoing.knowledge_worker_practice.parent_practice ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02wtqd4", "mid2name": {"ns:m.02wtqd4": "Open source"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R base.technologyofdoing.knowledge_worker_practice.parent_practice) Open source))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R base.technologyofdoing.knowledge_worker_practice.parent_practice) m.02wtqd4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q7fgl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q7fgl ns:people.person.place_of_birth ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.03q7fgl", "mid2name": {"ns:m.03q7fgl": "John Beech"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R people.person.place_of_birth) John Beech))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R people.person.place_of_birth) m.03q7fgl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g_y_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g_y_r ns:projects.project.participants ?y .\n?y ns:projects.project_participation.participant ?x .\n}\n", "TopicEntityMid": "m.05g_y_r", "mid2name": {"ns:m.05g_y_r": "Design of the Rolls-Royce Olympus"}, "SExpr_w_name": "(JOIN (R projects.project_participation.participant) (JOIN (R projects.project.participants) Design of the Rolls-Royce Olympus))", "SExpr": "(JOIN (R projects.project_participation.participant) (JOIN (R projects.project.participants) m.05g_y_r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v7n_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v7n_ ns:sports.boxing_weight_division.matches ?y .\n?y ns:time.event.locations ?x .\n}\n", "TopicEntityMid": "m.04v7n_", "mid2name": {"ns:m.04v7n_": "Light heavyweight"}, "SExpr_w_name": "(JOIN (R time.event.locations) (JOIN (R sports.boxing_weight_division.matches) Light heavyweight))", "SExpr": "(JOIN (R time.event.locations) (JOIN (R sports.boxing_weight_division.matches) m.04v7n_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09n9r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09n9r3 ns:government.governmental_body.jurisdiction ?y .\n?y ns:biology.breed_origin.breeds_originating_here ?x .\n}\n", "TopicEntityMid": "m.09n9r3", "mid2name": {"ns:m.09n9r3": "Supreme Court of Cassation"}, "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R government.governmental_body.jurisdiction) Supreme Court of Cassation))", "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) (JOIN (R government.governmental_body.jurisdiction) m.09n9r3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c4xv3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c4xv3 ns:medicine.symptom.symptom_of ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.06c4xv3", "mid2name": {"ns:m.06c4xv3": "Poor wound healing"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.symptom.symptom_of) Poor wound healing))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.symptom.symptom_of) m.06c4xv3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05sq_nf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05sq_nf ns:business.brand.products ?y .\n?y ns:medicine.manufactured_drug_form.available_in ?x .\n}\n", "TopicEntityMid": "m.05sq_nf", "mid2name": {"ns:m.05sq_nf": "Forteo"}, "SExpr_w_name": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R business.brand.products) Forteo))", "SExpr": "(JOIN (R medicine.manufactured_drug_form.available_in) (JOIN (R business.brand.products) m.05sq_nf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0898v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0898v ns:computer.computer_processor.manufacturers ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0898v", "mid2name": {"ns:m.0898v": "Zilog Z80"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.computer_processor.manufacturers) Zilog Z80))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.computer_processor.manufacturers) m.0898v))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ggcc9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ggcc9 ns:music.genre.artists ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.04ggcc9", "mid2name": {"ns:m.04ggcc9": "Regional Mexican"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.genre.artists) Regional Mexican))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.genre.artists) m.04ggcc9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqyz4m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqyz4m ns:medicine.drug_class.drugs ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0hqyz4m", "mid2name": {"ns:m.0hqyz4m": "Dihydrofolate Reductase Inhibitor Antibacterial"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.drug_class.drugs) Dihydrofolate Reductase Inhibitor Antibacterial))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.drug_class.drugs) m.0hqyz4m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k7zm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k7zm ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02k7zm", "mid2name": {"ns:m.02k7zm": "Yeniseian languages"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Yeniseian languages))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02k7zm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02nf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02nf_ ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02nf_", "mid2name": {"ns:m.02nf_": "Email"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Email))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02nf_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jdmv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jdmv ns:business.business_operation.industry ?y .\n?y ns:base.descriptive_names.names.descriptive_name ?x .\n}\n", "TopicEntityMid": "m.05jdmv", "mid2name": {"ns:m.05jdmv": "BL Publishing"}, "SExpr_w_name": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R business.business_operation.industry) BL Publishing))", "SExpr": "(JOIN (R base.descriptive_names.names.descriptive_name) (JOIN (R business.business_operation.industry) m.05jdmv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j0xd8g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j0xd8g ns:zoos.zoo_exhibit.species ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.0j0xd8g", "mid2name": {"ns:m.0j0xd8g": "White-Tip Reef Shark"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R zoos.zoo_exhibit.species) White-Tip Reef Shark))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R zoos.zoo_exhibit.species) m.0j0xd8g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0116tdt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0116tdt3 ns:base.lightweight.profession.specialization ?y .\n?y ns:people.profession.people_with_this_profession ?x .\n}\n", "TopicEntityMid": "m.0116tdt3", "mid2name": {"ns:m.0116tdt3": "Food and Beverage Serving and Related Workers"}, "SExpr_w_name": "(JOIN (R people.profession.people_with_this_profession) (JOIN (R base.lightweight.profession.specialization) Food and Beverage Serving and Related Workers))", "SExpr": "(JOIN (R people.profession.people_with_this_profession) (JOIN (R base.lightweight.profession.specialization) m.0116tdt3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hd3gl7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hd3gl7 ns:law.invention.inventor ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0hd3gl7", "mid2name": {"ns:m.0hd3gl7": "An assay system that uses estrogen receptor (ER) intramolecular folding as a sensor for distinguishing agonists and antagonists in living animals"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R law.invention.inventor) An assay system that uses estrogen receptor (ER) intramolecular folding as a sensor for distinguishing agonists and antagonists in living animals))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R law.invention.inventor) m.0hd3gl7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047y05g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047y05g ns:fictional_universe.fictional_character.quotations ?y .\n?y ns:award.ranked_item.appears_in_ranked_lists ?x .\n}\n", "TopicEntityMid": "m.047y05g", "mid2name": {"ns:m.047y05g": "Osgood Fielding III"}, "SExpr_w_name": "(JOIN (R award.ranked_item.appears_in_ranked_lists) (JOIN (R fictional_universe.fictional_character.quotations) Osgood Fielding III))", "SExpr": "(JOIN (R award.ranked_item.appears_in_ranked_lists) (JOIN (R fictional_universe.fictional_character.quotations) m.047y05g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0q6r984)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0q6r984 ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.0q6r984", "mid2name": {"ns:m.0q6r984": "Krewella"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Krewella))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.0q6r984))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fzyg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fzyg ns:award.hall_of_fame_discipline.halls_of_fame ?y .\n?y ns:location.location.geolocation ?x .\n}\n", "TopicEntityMid": "m.0fzyg", "mid2name": {"ns:m.0fzyg": "Aviation"}, "SExpr_w_name": "(JOIN (R location.location.geolocation) (JOIN (R award.hall_of_fame_discipline.halls_of_fame) Aviation))", "SExpr": "(JOIN (R location.location.geolocation) (JOIN (R award.hall_of_fame_discipline.halls_of_fame) m.0fzyg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0clv4sk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0clv4sk ns:base.militaryinfiction.recurring_event_in_fiction.instances ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0clv4sk", "mid2name": {"ns:m.0clv4sk": "Wizard Wars"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R base.militaryinfiction.recurring_event_in_fiction.instances) Wizard Wars))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R base.militaryinfiction.recurring_event_in_fiction.instances) m.0clv4sk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bhsw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bhsw ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.06bhsw", "mid2name": {"ns:m.06bhsw": "D minor"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) D minor))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.06bhsw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02nxqmh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02nxqmh ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02nxqmh", "mid2name": {"ns:m.02nxqmh": "Painter"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Painter))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02nxqmh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddwt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddwt ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0ddwt", "mid2name": {"ns:m.0ddwt": "Insomnia"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Insomnia))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0ddwt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022clc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022clc ns:organization.organization.legal_structure ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.022clc", "mid2name": {"ns:m.022clc": "Public Interest Registry"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R organization.organization.legal_structure) Public Interest Registry))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R organization.organization.legal_structure) m.022clc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rqp63)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rqp63 ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.02rqp63", "mid2name": {"ns:m.02rqp63": "Krotz Springs Bridge"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Krotz Springs Bridge))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.02rqp63))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kbj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kbj ns:language.conlang.created_by ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.01kbj", "mid2name": {"ns:m.01kbj": "Basic English"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R language.conlang.created_by) Basic English))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R language.conlang.created_by) m.01kbj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05w1v62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05w1v62 ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.05w1v62", "mid2name": {"ns:m.05w1v62": "Antony Johnston"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Antony Johnston))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.05w1v62))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03k9_p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03k9_p ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.03k9_p", "mid2name": {"ns:m.03k9_p": "Utricularia"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Utricularia))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.03k9_p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b7zx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b7zx2 ns:royalty.royal_line.preceded_by ?y .\n?y ns:people.family.members ?x .\n}\n", "TopicEntityMid": "m.0b7zx2", "mid2name": {"ns:m.0b7zx2": "House of Nassau-Weilburg"}, "SExpr_w_name": "(JOIN (R people.family.members) (JOIN (R royalty.royal_line.preceded_by) House of Nassau-Weilburg))", "SExpr": "(JOIN (R people.family.members) (JOIN (R royalty.royal_line.preceded_by) m.0b7zx2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0290ktf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0290ktf ns:computer.computer.key_designers ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0290ktf", "mid2name": {"ns:m.0290ktf": "Tinkertoy Tic-Tac-Toe Computer"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R computer.computer.key_designers) Tinkertoy Tic-Tac-Toe Computer))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R computer.computer.key_designers) m.0290ktf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07rxhhc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07rxhhc ns:fictional_universe.fictional_setting.works_set_here ?y .\n?y ns:tv.tv_program.languages ?x .\n}\n", "TopicEntityMid": "m.07rxhhc", "mid2name": {"ns:m.07rxhhc": "William McKinley High School"}, "SExpr_w_name": "(JOIN (R tv.tv_program.languages) (JOIN (R fictional_universe.fictional_setting.works_set_here) William McKinley High School))", "SExpr": "(JOIN (R tv.tv_program.languages) (JOIN (R fictional_universe.fictional_setting.works_set_here) m.07rxhhc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c00_q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c00_q ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0c00_q", "mid2name": {"ns:m.0c00_q": "Human"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Human))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.0c00_q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07mgkz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07mgkz ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n", "TopicEntityMid": "m.07mgkz", "mid2name": {"ns:m.07mgkz": "Cayman Islands national cricket team"}, "SExpr_w_name": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) Cayman Islands national cricket team))", "SExpr": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) m.07mgkz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cvh0bz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cvh0bz ns:book.publication.contents ?y .\n?y ns:book.contents.work ?x .\n}\n", "TopicEntityMid": "m.0cvh0bz", "mid2name": {"ns:m.0cvh0bz": "Amazon Review"}, "SExpr_w_name": "(JOIN (R book.contents.work) (JOIN (R book.publication.contents) Amazon Review))", "SExpr": "(JOIN (R book.contents.work) (JOIN (R book.publication.contents) m.0cvh0bz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q9f50)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q9f50 ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.02q9f50", "mid2name": {"ns:m.02q9f50": "A Keg Full of Dynamite"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) A Keg Full of Dynamite))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.02q9f50))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g9nbxz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g9nbxz ns:music.group_member.artists_supported ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.0g9nbxz", "mid2name": {"ns:m.0g9nbxz": "DJ Ras Cue"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.group_member.artists_supported) DJ Ras Cue))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.group_member.artists_supported) m.0g9nbxz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cl3b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cl3b ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.0cl3b", "mid2name": {"ns:m.0cl3b": "Rye"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Rye))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.0cl3b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01y4xf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01y4xf ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.01y4xf", "mid2name": {"ns:m.01y4xf": "Coriander"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Coriander))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.01y4xf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ns1z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ns1z ns:award.award_category.winners ?y .\n?y ns:award.award_honor.award_winner ?x .\n}\n", "TopicEntityMid": "m.01ns1z", "mid2name": {"ns:m.01ns1z": "Ted Lindsay Award"}, "SExpr_w_name": "(JOIN (R award.award_honor.award_winner) (JOIN (R award.award_category.winners) Ted Lindsay Award))", "SExpr": "(JOIN (R award.award_honor.award_winner) (JOIN (R award.award_category.winners) m.01ns1z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06x4c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06x4c ns:base.cocktails.cocktail_garnish.cocktails_with_this_garnish ?y .\n?y ns:base.cocktails.cocktail.standard_drinkware ?x .\n}\n", "TopicEntityMid": "m.06x4c", "mid2name": {"ns:m.06x4c": "Sugar"}, "SExpr_w_name": "(JOIN (R base.cocktails.cocktail.standard_drinkware) (JOIN (R base.cocktails.cocktail_garnish.cocktails_with_this_garnish) Sugar))", "SExpr": "(JOIN (R base.cocktails.cocktail.standard_drinkware) (JOIN (R base.cocktails.cocktail_garnish.cocktails_with_this_garnish) m.06x4c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gndbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gndbz ns:base.skosbase.vocabulary_equivalent_topic.narrower_concept ?y .\n?y ns:base.skosbase.skos_concept.broader ?x .\n}\n", "TopicEntityMid": "m.0gndbz", "mid2name": {"ns:m.0gndbz": "Beef brain"}, "SExpr_w_name": "(JOIN (R base.skosbase.skos_concept.broader) (JOIN (R base.skosbase.vocabulary_equivalent_topic.narrower_concept) Beef brain))", "SExpr": "(JOIN (R base.skosbase.skos_concept.broader) (JOIN (R base.skosbase.vocabulary_equivalent_topic.narrower_concept) m.0gndbz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06msq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06msq ns:visual_art.visual_art_form.artists ?y .\n?y ns:visual_art.visual_artist.art_series ?x .\n}\n", "TopicEntityMid": "m.06msq", "mid2name": {"ns:m.06msq": "Sculpture"}, "SExpr_w_name": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.visual_art_form.artists) Sculpture))", "SExpr": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.visual_art_form.artists) m.06msq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0wfxzh9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0wfxzh9 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0wfxzh9", "mid2name": {"ns:m.0wfxzh9": "Kounotori 4"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Kounotori 4))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0wfxzh9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cdqb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cdqb ns:book.author.works_written ?y .\n?y ns:book.written_work.original_language ?x .\n}\n", "TopicEntityMid": "m.02cdqb", "mid2name": {"ns:m.02cdqb": "Ricky Ponting"}, "SExpr_w_name": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) Ricky Ponting))", "SExpr": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) m.02cdqb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v0kzm7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v0kzm7 ns:book.book_edition.binding ?y .\n?y ns:award.award_discipline.awards_in_this_discipline ?x .\n}\n", "TopicEntityMid": "m.0v0kzm7", "mid2name": {"ns:m.0v0kzm7": "Maestro Orpheus and the World Clock"}, "SExpr_w_name": "(JOIN (R award.award_discipline.awards_in_this_discipline) (JOIN (R book.book_edition.binding) Maestro Orpheus and the World Clock))", "SExpr": "(JOIN (R award.award_discipline.awards_in_this_discipline) (JOIN (R book.book_edition.binding) m.0v0kzm7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01d5g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01d5g ns:comic_books.comic_book_character.created_by ?y .\n?y ns:comic_books.comic_book_inker.comic_covers_inked ?x .\n}\n", "TopicEntityMid": "m.01d5g", "mid2name": {"ns:m.01d5g": "Bruce Wayne"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) (JOIN (R comic_books.comic_book_character.created_by) Bruce Wayne))", "SExpr": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) (JOIN (R comic_books.comic_book_character.created_by) m.01d5g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qdw44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qdw44 ns:music.album.artist ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.02qdw44", "mid2name": {"ns:m.02qdw44": "Once Upon a Christmas: The Original Story"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R music.album.artist) Once Upon a Christmas: The Original Story))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R music.album.artist) m.02qdw44))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h27q8w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h27q8w ns:digicams.camera_iso.cameras ?y .\n?y ns:business.consumer_product.brand ?x .\n}\n", "TopicEntityMid": "m.0h27q8w", "mid2name": {"ns:m.0h27q8w": "2500"}, "SExpr_w_name": "(JOIN (R business.consumer_product.brand) (JOIN (R digicams.camera_iso.cameras) 2500))", "SExpr": "(JOIN (R business.consumer_product.brand) (JOIN (R digicams.camera_iso.cameras) m.0h27q8w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02x2t29)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02x2t29 ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.02x2t29", "mid2name": {"ns:m.02x2t29": "Town Brook"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Town Brook))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.02x2t29))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ckfl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ckfl9 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03ckfl9", "mid2name": {"ns:m.03ckfl9": "Experimental music"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Experimental music))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03ckfl9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03f0z_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03f0z_r ns:music.artist.track ?y .\n?y ns:music.recording.artist ?x .\n}\n", "TopicEntityMid": "m.03f0z_r", "mid2name": {"ns:m.03f0z_r": "Elphomega"}, "SExpr_w_name": "(JOIN (R music.recording.artist) (JOIN (R music.artist.track) Elphomega))", "SExpr": "(JOIN (R music.recording.artist) (JOIN (R music.artist.track) m.03f0z_r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgjv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgjv ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.02kwgjv", "mid2name": {"ns:m.02kwgjv": "Chromosome 10 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 10 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.02kwgjv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02prj6h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02prj6h ns:computer.programming_language.influenced_by ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.02prj6h", "mid2name": {"ns:m.02prj6h": "Qi"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) Qi))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) m.02prj6h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r51lh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r51lh ns:amusement_parks.amusement_park_area.parks ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.02r51lh", "mid2name": {"ns:m.02r51lh": "Grizzly Peak"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R amusement_parks.amusement_park_area.parks) Grizzly Peak))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R amusement_parks.amusement_park_area.parks) m.02r51lh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01314940)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01314940 ns:travel.guidebook_series.guidebooks ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.01314940", "mid2name": {"ns:m.01314940": "Travel"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R travel.guidebook_series.guidebooks) Travel))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R travel.guidebook_series.guidebooks) m.01314940))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ypbnq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ypbnq ns:comic_books.comic_book_colorist.comic_stories_colored ?y .\n?y ns:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.03ypbnq", "mid2name": {"ns:m.03ypbnq": "Morry Hollowell"}, "SExpr_w_name": "(JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) (JOIN (R comic_books.comic_book_colorist.comic_stories_colored) Morry Hollowell))", "SExpr": "(JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) (JOIN (R comic_books.comic_book_colorist.comic_stories_colored) m.03ypbnq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h4lt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h4lt3 ns:digicams.camera_compressed_format.cameras ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.03h4lt3", "mid2name": {"ns:m.03h4lt3": "JPEG (EXIF 2.21)"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R digicams.camera_compressed_format.cameras) JPEG (EXIF 2.21)))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R digicams.camera_compressed_format.cameras) m.03h4lt3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hcxy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hcxy ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.03hcxy", "mid2name": {"ns:m.03hcxy": "Marriott World Trade Center"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) Marriott World Trade Center))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.03hcxy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030scwl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030scwl ns:fictional_universe.work_of_fiction.setting ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.030scwl", "mid2name": {"ns:m.030scwl": "The Legend of the Batman - Who He is, and How he Came to Be"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R fictional_universe.work_of_fiction.setting) The Legend of the Batman - Who He is, and How he Came to Be))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R fictional_universe.work_of_fiction.setting) m.030scwl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03999ct)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03999ct ns:music.release.album ?y .\n?y ns:music.album.artist ?x .\n}\n", "TopicEntityMid": "m.03999ct", "mid2name": {"ns:m.03999ct": "Very Together"}, "SExpr_w_name": "(JOIN (R music.album.artist) (JOIN (R music.release.album) Very Together))", "SExpr": "(JOIN (R music.album.artist) (JOIN (R music.release.album) m.03999ct))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zk5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zk5 ns:royalty.royal_line.preceded_by ?y .\n?y ns:royalty.royal_line.succeeded_by ?x .\n}\n", "TopicEntityMid": "m.0zk5", "mid2name": {"ns:m.0zk5": "House of Ascania"}, "SExpr_w_name": "(JOIN (R royalty.royal_line.succeeded_by) (JOIN (R royalty.royal_line.preceded_by) House of Ascania))", "SExpr": "(JOIN (R royalty.royal_line.succeeded_by) (JOIN (R royalty.royal_line.preceded_by) m.0zk5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05h3gxh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05h3gxh ns:base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam ?y .\n?y ns:award.award_winner.awards_won ?x .\n}\n", "TopicEntityMid": "m.05h3gxh", "mid2name": {"ns:m.05h3gxh": "My Charmer"}, "SExpr_w_name": "(JOIN (R award.award_winner.awards_won) (JOIN (R base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam) My Charmer))", "SExpr": "(JOIN (R award.award_winner.awards_won) (JOIN (R base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam) m.05h3gxh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z81)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z81 ns:computer.programming_language.dialects ?y .\n?y ns:computer.programming_language.language_paradigms ?x .\n}\n", "TopicEntityMid": "m.02z81", "mid2name": {"ns:m.02z81": "Forth"}, "SExpr_w_name": "(JOIN (R computer.programming_language.language_paradigms) (JOIN (R computer.programming_language.dialects) Forth))", "SExpr": "(JOIN (R computer.programming_language.language_paradigms) (JOIN (R computer.programming_language.dialects) m.02z81))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wcyf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wcyf ns:fictional_universe.fictional_universe.literary_series_set_here ?y .\n?y ns:book.literary_series.author_s ?x .\n}\n", "TopicEntityMid": "m.02wcyf", "mid2name": {"ns:m.02wcyf": "Alaga\u00ebsia"}, "SExpr_w_name": "(JOIN (R book.literary_series.author_s) (JOIN (R fictional_universe.fictional_universe.literary_series_set_here) Alaga\u00ebsia))", "SExpr": "(JOIN (R book.literary_series.author_s) (JOIN (R fictional_universe.fictional_universe.literary_series_set_here) m.02wcyf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gb7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gb7 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.04gb7", "mid2name": {"ns:m.04gb7": "Law"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Law))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.04gb7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xm0m9r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xm0m9r ns:automotive.make.model_s ?y .\n?y ns:automotive.model.generations ?x .\n}\n", "TopicEntityMid": "m.0xm0m9r", "mid2name": {"ns:m.0xm0m9r": "Chevrolet"}, "SExpr_w_name": "(JOIN (R automotive.model.generations) (JOIN (R automotive.make.model_s) Chevrolet))", "SExpr": "(JOIN (R automotive.model.generations) (JOIN (R automotive.make.model_s) m.0xm0m9r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hmz0g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hmz0g ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.01hmz0g", "mid2name": {"ns:m.01hmz0g": "Love You Live"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) Love You Live))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.01hmz0g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n9nl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n9nl ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.04n9nl", "mid2name": {"ns:m.04n9nl": "Prince Kael'thas"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Prince Kael'thas))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.04n9nl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0css1zh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0css1zh ns:book.illustrator.book_edition_covers ?y .\n?y ns:book.book_edition.binding ?x .\n}\n", "TopicEntityMid": "m.0css1zh", "mid2name": {"ns:m.0css1zh": "Tom Hallman"}, "SExpr_w_name": "(JOIN (R book.book_edition.binding) (JOIN (R book.illustrator.book_edition_covers) Tom Hallman))", "SExpr": "(JOIN (R book.book_edition.binding) (JOIN (R book.illustrator.book_edition_covers) m.0css1zh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08788c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08788c ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.08788c", "mid2name": {"ns:m.08788c": "David Burliuk"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) David Burliuk))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.08788c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y98c69)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y98c69 ns:tv.sequence_of_tv_episode_segments.segments ?y .\n?y ns:base.webvideo.internet_video.performances ?x .\n}\n", "TopicEntityMid": "m.0y98c69", "mid2name": {"ns:m.0y98c69": "Childrens Hospital (web series)"}, "SExpr_w_name": "(JOIN (R base.webvideo.internet_video.performances) (JOIN (R tv.sequence_of_tv_episode_segments.segments) Childrens Hospital (web series)))", "SExpr": "(JOIN (R base.webvideo.internet_video.performances) (JOIN (R tv.sequence_of_tv_episode_segments.segments) m.0y98c69))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.093bc4h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.093bc4h ns:physics.hadron.composition ?y .\n?y ns:physics.subatomic_particle_composition.particle ?x .\n}\n", "TopicEntityMid": "m.093bc4h", "mid2name": {"ns:m.093bc4h": "\u0394\u207b"}, "SExpr_w_name": "(JOIN (R physics.subatomic_particle_composition.particle) (JOIN (R physics.hadron.composition) \u0394\u207b))", "SExpr": "(JOIN (R physics.subatomic_particle_composition.particle) (JOIN (R physics.hadron.composition) m.093bc4h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06my8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06my8 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.06my8", "mid2name": {"ns:m.06my8": "Stamp collecting"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Stamp collecting))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.06my8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04932y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04932y ns:comic_books.comic_book_series.publisher ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.04932y", "mid2name": {"ns:m.04932y": "Gunsmith Cats"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R comic_books.comic_book_series.publisher) Gunsmith Cats))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R comic_books.comic_book_series.publisher) m.04932y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.040_1kv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.040_1kv ns:comic_books.comic_book_fictional_universe.characters_primarily_appearing_in_this_universe ?y .\n?y ns:comic_books.comic_book_character.created_by ?x .\n}\n", "TopicEntityMid": "m.040_1kv", "mid2name": {"ns:m.040_1kv": "Liefeld Universe"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_character.created_by) (JOIN (R comic_books.comic_book_fictional_universe.characters_primarily_appearing_in_this_universe) Liefeld Universe))", "SExpr": "(JOIN (R comic_books.comic_book_character.created_by) (JOIN (R comic_books.comic_book_fictional_universe.characters_primarily_appearing_in_this_universe) m.040_1kv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k9b2h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k9b2h ns:internet.api.site ?y .\n?y ns:base.infection.computer_crime_victim.viral_software_attack ?x .\n}\n", "TopicEntityMid": "m.02k9b2h", "mid2name": {"ns:m.02k9b2h": "Developers.facebook.com"}, "SExpr_w_name": "(JOIN (R base.infection.computer_crime_victim.viral_software_attack) (JOIN (R internet.api.site) Developers.facebook.com))", "SExpr": "(JOIN (R base.infection.computer_crime_victim.viral_software_attack) (JOIN (R internet.api.site) m.02k9b2h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09jy7m5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09jy7m5 ns:fictional_universe.fictional_setting.fictional_characters_born_here ?y .\n?y ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.09jy7m5", "mid2name": {"ns:m.09jy7m5": "New Heather"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.fictional_characters_born_here) New Heather))", "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) (JOIN (R fictional_universe.fictional_setting.fictional_characters_born_here) m.09jy7m5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0295r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0295r ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0295r", "mid2name": {"ns:m.0295r": "Danish Language"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Danish Language))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0295r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqtwz_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqtwz_ ns:medicine.drug_formulation.active_ingredient_moieties ?y .\n?y ns:medicine.medical_treatment.used_to_treat ?x .\n}\n", "TopicEntityMid": "m.0hqtwz_", "mid2name": {"ns:m.0hqtwz_": "Tolterodine tartrate 4 extended release capsule"}, "SExpr_w_name": "(JOIN (R medicine.medical_treatment.used_to_treat) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) Tolterodine tartrate 4 extended release capsule))", "SExpr": "(JOIN (R medicine.medical_treatment.used_to_treat) (JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqtwz_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.080b77k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.080b77k ns:engineering.engine.category ?y .\n?y ns:base.engineeringdraft.manufactured_component_category.meronyms ?x .\n}\n", "TopicEntityMid": "m.080b77k", "mid2name": {"ns:m.080b77k": "Beardmore 160 hp"}, "SExpr_w_name": "(JOIN (R base.engineeringdraft.manufactured_component_category.meronyms) (JOIN (R engineering.engine.category) Beardmore 160 hp))", "SExpr": "(JOIN (R base.engineeringdraft.manufactured_component_category.meronyms) (JOIN (R engineering.engine.category) m.080b77k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.029r4b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.029r4b ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.029r4b", "mid2name": {"ns:m.029r4b": "Private Lives"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Private Lives))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.029r4b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.080k2rj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.080k2rj ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.080k2rj", "mid2name": {"ns:m.080k2rj": "Horror comics"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Horror comics))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.080k2rj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042_bx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042_bx ns:education.grade_level.locations_used ?y .\n?y ns:base.csafarms.area_served.farms ?x .\n}\n", "TopicEntityMid": "m.042_bx", "mid2name": {"ns:m.042_bx": "Second grade"}, "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R education.grade_level.locations_used) Second grade))", "SExpr": "(JOIN (R base.csafarms.area_served.farms) (JOIN (R education.grade_level.locations_used) m.042_bx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dt6rc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dt6rc ns:comic_books.comic_book_letterer.comic_stories_lettered ?y .\n?y ns:fictional_universe.work_of_fiction.setting ?x .\n}\n", "TopicEntityMid": "m.0dt6rc", "mid2name": {"ns:m.0dt6rc": "Sheldon Moldoff"}, "SExpr_w_name": "(JOIN (R fictional_universe.work_of_fiction.setting) (JOIN (R comic_books.comic_book_letterer.comic_stories_lettered) Sheldon Moldoff))", "SExpr": "(JOIN (R fictional_universe.work_of_fiction.setting) (JOIN (R comic_books.comic_book_letterer.comic_stories_lettered) m.0dt6rc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06vwtty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06vwtty ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.06vwtty", "mid2name": {"ns:m.06vwtty": "Eva Schloss"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Eva Schloss))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.06vwtty))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02c1x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02c1x ns:symbols.name_source.namesakes ?y .\n?y ns:boats.ship.ship_builder ?x .\n}\n", "TopicEntityMid": "m.02c1x", "mid2name": {"ns:m.02c1x": "Dorado"}, "SExpr_w_name": "(JOIN (R boats.ship.ship_builder) (JOIN (R symbols.name_source.namesakes) Dorado))", "SExpr": "(JOIN (R boats.ship.ship_builder) (JOIN (R symbols.name_source.namesakes) m.02c1x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033z4p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033z4p ns:computer.computer_processor.used_in_computers ?y .\n?y ns:computer.computer.compatible_oses ?x .\n}\n", "TopicEntityMid": "m.033z4p", "mid2name": {"ns:m.033z4p": "R800"}, "SExpr_w_name": "(JOIN (R computer.computer.compatible_oses) (JOIN (R computer.computer_processor.used_in_computers) R800))", "SExpr": "(JOIN (R computer.computer.compatible_oses) (JOIN (R computer.computer_processor.used_in_computers) m.033z4p))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dd903)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dd903 ns:architecture.building_complex.complex_function ?y .\n?y ns:travel.accommodation_feature.accommodation_with_this_feature ?x .\n}\n", "TopicEntityMid": "m.0dd903", "mid2name": {"ns:m.0dd903": "Marina Bay Sands"}, "SExpr_w_name": "(JOIN (R travel.accommodation_feature.accommodation_with_this_feature) (JOIN (R architecture.building_complex.complex_function) Marina Bay Sands))", "SExpr": "(JOIN (R travel.accommodation_feature.accommodation_with_this_feature) (JOIN (R architecture.building_complex.complex_function) m.0dd903))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0blj4pc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0blj4pc ns:book.interview.interviewee ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0blj4pc", "mid2name": {"ns:m.0blj4pc": "Stephen Jay Gould: Understanding Evolution"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.interview.interviewee) Stephen Jay Gould: Understanding Evolution))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.interview.interviewee) m.0blj4pc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0clmf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0clmf ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0clmf", "mid2name": {"ns:m.0clmf": "Radio telescope"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Radio telescope))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0clmf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ch9f9g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ch9f9g ns:ice_hockey.hockey_division.teams ?y .\n?y ns:sports.sports_team.league ?x .\n}\n", "TopicEntityMid": "m.0ch9f9g", "mid2name": {"ns:m.0ch9f9g": "East Division"}, "SExpr_w_name": "(JOIN (R sports.sports_team.league) (JOIN (R ice_hockey.hockey_division.teams) East Division))", "SExpr": "(JOIN (R sports.sports_team.league) (JOIN (R ice_hockey.hockey_division.teams) m.0ch9f9g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0166b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0166b ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.0166b", "mid2name": {"ns:m.0166b": "Bosnia and Herzegovina"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Bosnia and Herzegovina))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.0166b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06t_m3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06t_m3 ns:fictional_universe.character_occupation.characters_with_this_occupation ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.06t_m3", "mid2name": {"ns:m.06t_m3": "Gofer"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) Gofer))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) m.06t_m3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rltk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rltk ns:tv.tv_program.filming_locations ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.02rltk", "mid2name": {"ns:m.02rltk": "American Gladiators"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R tv.tv_program.filming_locations) American Gladiators))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R tv.tv_program.filming_locations) m.02rltk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015r7d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015r7d ns:book.author.works_written ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.015r7d", "mid2name": {"ns:m.015r7d": "E. Nesbit"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R book.author.works_written) E. Nesbit))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R book.author.works_written) m.015r7d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n4k90b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n4k90b ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0n4k90b", "mid2name": {"ns:m.0n4k90b": "Wally Berger"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Wally Berger))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0n4k90b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06jv6fc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06jv6fc ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.06jv6fc", "mid2name": {"ns:m.06jv6fc": "The Bauer thesis examined"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) The Bauer thesis examined))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.06jv6fc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lkm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lkm ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0lkm", "mid2name": {"ns:m.0lkm": "April"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) April))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0lkm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gg5ss4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gg5ss4 ns:spaceflight.space_agency.astronauts ?y .\n?y ns:biology.pedigreed_animal.breed ?x .\n}\n", "TopicEntityMid": "m.0gg5ss4", "mid2name": {"ns:m.0gg5ss4": "Ministry of General Machine Building"}, "SExpr_w_name": "(JOIN (R biology.pedigreed_animal.breed) (JOIN (R spaceflight.space_agency.astronauts) Ministry of General Machine Building))", "SExpr": "(JOIN (R biology.pedigreed_animal.breed) (JOIN (R spaceflight.space_agency.astronauts) m.0gg5ss4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_l3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_l3 ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.027_l3", "mid2name": {"ns:m.027_l3": "Salvia officinalis"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.higher_classification) Salvia officinalis))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.higher_classification) m.027_l3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058vrl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058vrl ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.058vrl", "mid2name": {"ns:m.058vrl": "Yellow tea"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Yellow tea))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.058vrl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03y05ty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03y05ty ns:medicine.infectious_disease.vector ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.03y05ty", "mid2name": {"ns:m.03y05ty": "Bubonic plague"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R medicine.infectious_disease.vector) Bubonic plague))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R medicine.infectious_disease.vector) m.03y05ty))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fkfkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fkfkh ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.01fkfkh", "mid2name": {"ns:m.01fkfkh": "Music as a Weapon II"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) Music as a Weapon II))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.01fkfkh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nblxz8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nblxz8 ns:business.consumer_product.category ?y .\n?y ns:business.product_category.products ?x .\n}\n", "TopicEntityMid": "m.0nblxz8", "mid2name": {"ns:m.0nblxz8": "IKEA PS 2012 9\" Bowl"}, "SExpr_w_name": "(JOIN (R business.product_category.products) (JOIN (R business.consumer_product.category) IKEA PS 2012 9\" Bowl))", "SExpr": "(JOIN (R business.product_category.products) (JOIN (R business.consumer_product.category) m.0nblxz8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mtpmm5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mtpmm5 ns:education.school_mascot.school ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.0mtpmm5", "mid2name": {"ns:m.0mtpmm5": "Green terror Green terror"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R education.school_mascot.school) Green terror Green terror))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R education.school_mascot.school) m.0mtpmm5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m8231)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m8231 ns:music.album.artist ?y .\n?y ns:music.group_member.membership ?x .\n}\n", "TopicEntityMid": "m.03m8231", "mid2name": {"ns:m.03m8231": "Lancashire Hustler"}, "SExpr_w_name": "(JOIN (R music.group_member.membership) (JOIN (R music.album.artist) Lancashire Hustler))", "SExpr": "(JOIN (R music.group_member.membership) (JOIN (R music.album.artist) m.03m8231))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jzmgpp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jzmgpp ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0jzmgpp", "mid2name": {"ns:m.0jzmgpp": "Trilby"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Trilby))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0jzmgpp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq9m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq9m ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01bq9m", "mid2name": {"ns:m.01bq9m": "Voskhod programme"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Voskhod programme))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01bq9m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dxskc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dxskc ns:book.illustrator.book_edition_covers ?y .\n?y ns:book.book_edition.binding ?x .\n}\n", "TopicEntityMid": "m.04dxskc", "mid2name": {"ns:m.04dxskc": "Ervin Serrano"}, "SExpr_w_name": "(JOIN (R book.book_edition.binding) (JOIN (R book.illustrator.book_edition_covers) Ervin Serrano))", "SExpr": "(JOIN (R book.book_edition.binding) (JOIN (R book.illustrator.book_edition_covers) m.04dxskc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.065yt2y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.065yt2y ns:music.group_member.membership ?y .\n?y ns:music.group_membership.group ?x .\n}\n", "TopicEntityMid": "m.065yt2y", "mid2name": {"ns:m.065yt2y": "Barry Devlin"}, "SExpr_w_name": "(JOIN (R music.group_membership.group) (JOIN (R music.group_member.membership) Barry Devlin))", "SExpr": "(JOIN (R music.group_membership.group) (JOIN (R music.group_member.membership) m.065yt2y))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k335)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k335 ns:base.engineeringdraft.manufactured_component_category.meronyms ?y .\n?y ns:base.engineeringdraft.manufactured_component_category.holonyms ?x .\n}\n", "TopicEntityMid": "m.0k335", "mid2name": {"ns:m.0k335": "Electric motor"}, "SExpr_w_name": "(JOIN (R base.engineeringdraft.manufactured_component_category.holonyms) (JOIN (R base.engineeringdraft.manufactured_component_category.meronyms) Electric motor))", "SExpr": "(JOIN (R base.engineeringdraft.manufactured_component_category.holonyms) (JOIN (R base.engineeringdraft.manufactured_component_category.meronyms) m.0k335))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_h36d6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_h36d6 ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0_h36d6", "mid2name": {"ns:m.0_h36d6": "Edgar Quintero"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Edgar Quintero))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.0_h36d6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pv3dj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pv3dj ns:astronomy.astronomical_observatory.discoveries ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n}\n", "TopicEntityMid": "m.02pv3dj", "mid2name": {"ns:m.02pv3dj": "Landessternwarte Heidelberg-K\u00f6nigstuhl"}, "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.astronomical_observatory.discoveries) Landessternwarte Heidelberg-K\u00f6nigstuhl))", "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (JOIN (R astronomy.astronomical_observatory.discoveries) m.02pv3dj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012nwrt8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012nwrt8 ns:visual_art.artwork.artist ?y .\n?y ns:visual_art.visual_artist.art_series ?x .\n}\n", "TopicEntityMid": "m.012nwrt8", "mid2name": {"ns:m.012nwrt8": "The Piano Body"}, "SExpr_w_name": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.artwork.artist) The Piano Body))", "SExpr": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.artwork.artist) m.012nwrt8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027cwjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027cwjd ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.027cwjd", "mid2name": {"ns:m.027cwjd": "Eshkol Regional Council"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Eshkol Regional Council))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.027cwjd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.places_of_worship_historical ?y .\n?y ns:religion.place_of_worship_historical_use.place_of_worship ?x .\n}\n", "TopicEntityMid": "m.0flw86", "mid2name": {"ns:m.0flw86": "Islam"}, "SExpr_w_name": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) Islam))", "SExpr": "(JOIN (R religion.place_of_worship_historical_use.place_of_worship) (JOIN (R religion.religion.places_of_worship_historical) m.0flw86))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jy5g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jy5g ns:medicine.medical_treatment.used_to_treat ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.04jy5g", "mid2name": {"ns:m.04jy5g": "Sulfasalazine"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) Sulfasalazine))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) m.04jy5g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09x374)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09x374 ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.09x374", "mid2name": {"ns:m.09x374": "Boiled egg"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Boiled egg))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.09x374))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r0x0g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r0x0g ns:music.voice.singers ?y .\n?y ns:base.popstra.celebrity.bought ?x .\n}\n", "TopicEntityMid": "m.02r0x0g", "mid2name": {"ns:m.02r0x0g": "Lyric coloratura soprano"}, "SExpr_w_name": "(JOIN (R base.popstra.celebrity.bought) (JOIN (R music.voice.singers) Lyric coloratura soprano))", "SExpr": "(JOIN (R base.popstra.celebrity.bought) (JOIN (R music.voice.singers) m.02r0x0g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07dk60)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07dk60 ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.07dk60", "mid2name": {"ns:m.07dk60": "Antonio Pappano"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Antonio Pappano))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.07dk60))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04vbvlp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04vbvlp ns:book.book_edition.book ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.04vbvlp", "mid2name": {"ns:m.04vbvlp": "The heart of the matter"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) The heart of the matter))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) m.04vbvlp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025s_q_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025s_q_ ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.025s_q_", "mid2name": {"ns:m.025s_q_": "Panic disorder"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Panic disorder))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.025s_q_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vx8vgb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vx8vgb ns:book.book.editions ?y .\n?y ns:book.book_edition.isbn ?x .\n}\n", "TopicEntityMid": "m.0vx8vgb", "mid2name": {"ns:m.0vx8vgb": "Lucian. Volume 5"}, "SExpr_w_name": "(JOIN (R book.book_edition.isbn) (JOIN (R book.book.editions) Lucian. Volume 5))", "SExpr": "(JOIN (R book.book_edition.isbn) (JOIN (R book.book.editions) m.0vx8vgb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015lz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015lz1 ns:music.genre.artists ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.015lz1", "mid2name": {"ns:m.015lz1": "Singing"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.genre.artists) Singing))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.genre.artists) m.015lz1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dmwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dmwg ns:book.poetic_verse_form.poems_of_this_form ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.0dmwg", "mid2name": {"ns:m.0dmwg": "Tercet"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.poetic_verse_form.poems_of_this_form) Tercet))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.poetic_verse_form.poems_of_this_form) m.0dmwg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rt17f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rt17f ns:biology.pedigreed_animal.breed ?y .\n?y ns:biology.animal_breed.examples ?x .\n}\n", "TopicEntityMid": "m.09rt17f", "mid2name": {"ns:m.09rt17f": "Matford Vic"}, "SExpr_w_name": "(JOIN (R biology.animal_breed.examples) (JOIN (R biology.pedigreed_animal.breed) Matford Vic))", "SExpr": "(JOIN (R biology.animal_breed.examples) (JOIN (R biology.pedigreed_animal.breed) m.09rt17f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mk6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mk6 ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n", "TopicEntityMid": "m.01mk6", "mid2name": {"ns:m.01mk6": "Czechoslovakia"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Czechoslovakia))", "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.01mk6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017rf8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017rf8 ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.017rf8", "mid2name": {"ns:m.017rf8": "Techno-thriller"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Techno-thriller))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.017rf8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058s_5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058s_5 ns:book.author.works_written ?y .\n?y ns:book.book.editions ?x .\n}\n", "TopicEntityMid": "m.058s_5", "mid2name": {"ns:m.058s_5": "Government of South Africa"}, "SExpr_w_name": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) Government of South Africa))", "SExpr": "(JOIN (R book.book.editions) (JOIN (R book.author.works_written) m.058s_5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dlt3j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dlt3j ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0dlt3j", "mid2name": {"ns:m.0dlt3j": "Sony Alpha"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Sony Alpha))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0dlt3j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03tmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03tmr ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.03tmr", "mid2name": {"ns:m.03tmr": "Ice Hockey"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Ice Hockey))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.03tmr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0489v9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0489v9k ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.0489v9k", "mid2name": {"ns:m.0489v9k": "Malibu Beach"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Malibu Beach))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.0489v9k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k1j4k_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k1j4k_ ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0k1j4k_", "mid2name": {"ns:m.0k1j4k_": "Hal Luftig"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Hal Luftig))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0k1j4k_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l4bp1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l4bp1 ns:biology.gene_group.gene ?y .\n?y ns:biology.gene_group_membership.evidence ?x .\n}\n", "TopicEntityMid": "m.02l4bp1", "mid2name": {"ns:m.02l4bp1": "citrate transporter activity"}, "SExpr_w_name": "(JOIN (R biology.gene_group_membership.evidence) (JOIN (R biology.gene_group.gene) citrate transporter activity))", "SExpr": "(JOIN (R biology.gene_group_membership.evidence) (JOIN (R biology.gene_group.gene) m.02l4bp1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hv23g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hv23g ns:food.beer_style.bjcp_style_category ?y .\n?y ns:food.beer_style_category.styles ?x .\n}\n", "TopicEntityMid": "m.02hv23g", "mid2name": {"ns:m.02hv23g": "Wood-Aged Beer"}, "SExpr_w_name": "(JOIN (R food.beer_style_category.styles) (JOIN (R food.beer_style.bjcp_style_category) Wood-Aged Beer))", "SExpr": "(JOIN (R food.beer_style_category.styles) (JOIN (R food.beer_style.bjcp_style_category) m.02hv23g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l1rzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l1rzp ns:automotive.generation.designer ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.02l1rzp", "mid2name": {"ns:m.02l1rzp": "1961-1964 Studebaker Avanti"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R automotive.generation.designer) 1961-1964 Studebaker Avanti))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R automotive.generation.designer) m.02l1rzp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011cjfqd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011cjfqd ns:business.product_line.category ?y .\n?y ns:business.product_category.product_lines ?x .\n}\n", "TopicEntityMid": "m.011cjfqd", "mid2name": {"ns:m.011cjfqd": "Sugar-free Haystack"}, "SExpr_w_name": "(JOIN (R business.product_category.product_lines) (JOIN (R business.product_line.category) Sugar-free Haystack))", "SExpr": "(JOIN (R business.product_category.product_lines) (JOIN (R business.product_line.category) m.011cjfqd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwghj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwghj ns:biology.chromosome.band ?y .\n?y ns:biology.cytogenetic_band.locus ?x .\n}\n", "TopicEntityMid": "m.02kwghj", "mid2name": {"ns:m.02kwghj": "Chromosome 4 (human)"}, "SExpr_w_name": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) Chromosome 4 (human)))", "SExpr": "(JOIN (R biology.cytogenetic_band.locus) (JOIN (R biology.chromosome.band) m.02kwghj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crdtyf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crdtyf ns:book.author.works_written ?y .\n?y ns:book.written_work.original_language ?x .\n}\n", "TopicEntityMid": "m.0crdtyf", "mid2name": {"ns:m.0crdtyf": "Dejan Stojanovi\u0107"}, "SExpr_w_name": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) Dejan Stojanovi\u0107))", "SExpr": "(JOIN (R book.written_work.original_language) (JOIN (R book.author.works_written) m.0crdtyf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pllk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pllk ns:boats.ship_class.ships_in_class ?y .\n?y ns:boats.ship.owners ?x .\n}\n", "TopicEntityMid": "m.01pllk", "mid2name": {"ns:m.01pllk": "Maxi yacht"}, "SExpr_w_name": "(JOIN (R boats.ship.owners) (JOIN (R boats.ship_class.ships_in_class) Maxi yacht))", "SExpr": "(JOIN (R boats.ship.owners) (JOIN (R boats.ship_class.ships_in_class) m.01pllk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018z5l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018z5l ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.018z5l", "mid2name": {"ns:m.018z5l": "Mikoyan-Gurevich MiG-15"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Mikoyan-Gurevich MiG-15))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.018z5l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07sgg90)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07sgg90 ns:fictional_universe.fictional_universe.organizations ?y .\n?y ns:fictional_universe.fictional_setting.works_set_here ?x .\n}\n", "TopicEntityMid": "m.07sgg90", "mid2name": {"ns:m.07sgg90": "Glee Universe"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.works_set_here) (JOIN (R fictional_universe.fictional_universe.organizations) Glee Universe))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.works_set_here) (JOIN (R fictional_universe.fictional_universe.organizations) m.07sgg90))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0115gxy5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0115gxy5 ns:base.lightweight.beer_hop.hops_similar ?y .\n?y ns:base.lightweight.beer_hop.origin ?x .\n}\n", "TopicEntityMid": "m.0115gxy5", "mid2name": {"ns:m.0115gxy5": "Hallertauer Mittelfr\u00fch"}, "SExpr_w_name": "(JOIN (R base.lightweight.beer_hop.origin) (JOIN (R base.lightweight.beer_hop.hops_similar) Hallertauer Mittelfr\u00fch))", "SExpr": "(JOIN (R base.lightweight.beer_hop.origin) (JOIN (R base.lightweight.beer_hop.hops_similar) m.0115gxy5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025y54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025y54 ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.025y54", "mid2name": {"ns:m.025y54": "David Puttnam"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) David Puttnam))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.025y54))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047kv5f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047kv5f ns:aviation.iata_airline_designator.airline ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.047kv5f", "mid2name": {"ns:m.047kv5f": "JQ"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R aviation.iata_airline_designator.airline) JQ))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R aviation.iata_airline_designator.airline) m.047kv5f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01rlc0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01rlc0 ns:royalty.royal_line.preceded_by ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.01rlc0", "mid2name": {"ns:m.01rlc0": "Hyderabad State"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R royalty.royal_line.preceded_by) Hyderabad State))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R royalty.royal_line.preceded_by) m.01rlc0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05rw82)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05rw82 ns:geology.geological_formation.formed_during_period ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05rw82", "mid2name": {"ns:m.05rw82": "Santana Formation"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R geology.geological_formation.formed_during_period) Santana Formation))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R geology.geological_formation.formed_during_period) m.05rw82))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02km6c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02km6c ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02km6c", "mid2name": {"ns:m.02km6c": "Cuban food"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Cuban food))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02km6c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011w3r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011w3r ns:medicine.medical_treatment.used_to_treat ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.011w3r", "mid2name": {"ns:m.011w3r": "Fentanyl"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) Fentanyl))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) m.011w3r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j216zp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j216zp ns:music.music_video_choreographer.music_videos_choreographed ?y .\n?y ns:music.music_video.artist ?x .\n}\n", "TopicEntityMid": "m.0j216zp", "mid2name": {"ns:m.0j216zp": "Stephanie Gluck"}, "SExpr_w_name": "(JOIN (R music.music_video.artist) (JOIN (R music.music_video_choreographer.music_videos_choreographed) Stephanie Gluck))", "SExpr": "(JOIN (R music.music_video.artist) (JOIN (R music.music_video_choreographer.music_videos_choreographed) m.0j216zp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052f7k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052f7k ns:location.location.containedby ?y .\n?y ns:base.litcentral.focal_location.species_habitat_relationships ?x .\n}\n", "TopicEntityMid": "m.052f7k", "mid2name": {"ns:m.052f7k": "Pyramid Mountain"}, "SExpr_w_name": "(JOIN (R base.litcentral.focal_location.species_habitat_relationships) (JOIN (R location.location.containedby) Pyramid Mountain))", "SExpr": "(JOIN (R base.litcentral.focal_location.species_habitat_relationships) (JOIN (R location.location.containedby) m.052f7k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_2ld)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_2ld ns:organization.club.areas_of_interest ?y .\n?y ns:business.brand.owner_s ?x .\n}\n", "TopicEntityMid": "m.01_2ld", "mid2name": {"ns:m.01_2ld": "Dogbert's New Ruling Class"}, "SExpr_w_name": "(JOIN (R business.brand.owner_s) (JOIN (R organization.club.areas_of_interest) Dogbert's New Ruling Class))", "SExpr": "(JOIN (R business.brand.owner_s) (JOIN (R organization.club.areas_of_interest) m.01_2ld))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0wrhcgb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0wrhcgb ns:travel.accommodation.features ?y .\n?y ns:travel.accommodation_feature.accommodation_with_this_feature ?x .\n}\n", "TopicEntityMid": "m.0wrhcgb", "mid2name": {"ns:m.0wrhcgb": "Courtyard Fresno"}, "SExpr_w_name": "(JOIN (R travel.accommodation_feature.accommodation_with_this_feature) (JOIN (R travel.accommodation.features) Courtyard Fresno))", "SExpr": "(JOIN (R travel.accommodation_feature.accommodation_with_this_feature) (JOIN (R travel.accommodation.features) m.0wrhcgb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kdkwc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kdkwc ns:computer.programming_language_designer.languages_designed ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.02kdkwc", "mid2name": {"ns:m.02kdkwc": "Leo Geurts"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language_designer.languages_designed) Leo Geurts))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language_designer.languages_designed) m.02kdkwc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kk2qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kk2qy ns:cvg.cvg_developer.games_developed ?y .\n?y ns:cvg.computer_videogame.cvg_genre ?x .\n}\n", "TopicEntityMid": "m.05kk2qy", "mid2name": {"ns:m.05kk2qy": "NoPayPOKER"}, "SExpr_w_name": "(JOIN (R cvg.computer_videogame.cvg_genre) (JOIN (R cvg.cvg_developer.games_developed) NoPayPOKER))", "SExpr": "(JOIN (R cvg.computer_videogame.cvg_genre) (JOIN (R cvg.cvg_developer.games_developed) m.05kk2qy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qbn8c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qbn8c ns:business.industry.companies ?y .\n?y ns:business.business_operation.industry ?x .\n}\n", "TopicEntityMid": "m.03qbn8c", "mid2name": {"ns:m.03qbn8c": "Direct Life, Health, and Medical Insurance Carriers"}, "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R business.industry.companies) Direct Life, Health, and Medical Insurance Carriers))", "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R business.industry.companies) m.03qbn8c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bxj80x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bxj80x ns:base.folklore.mythology.location_of_origin ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0bxj80x", "mid2name": {"ns:m.0bxj80x": "Beyond Sanctuary Series"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R base.folklore.mythology.location_of_origin) Beyond Sanctuary Series))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R base.folklore.mythology.location_of_origin) m.0bxj80x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0myxcx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0myxcx0 ns:travel.accommodation.features ?y .\n?y ns:organization.club_interest.clubs ?x .\n}\n", "TopicEntityMid": "m.0myxcx0", "mid2name": {"ns:m.0myxcx0": "JW Marriott Hotel Quito"}, "SExpr_w_name": "(JOIN (R organization.club_interest.clubs) (JOIN (R travel.accommodation.features) JW Marriott Hotel Quito))", "SExpr": "(JOIN (R organization.club_interest.clubs) (JOIN (R travel.accommodation.features) m.0myxcx0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.03_3d", "mid2name": {"ns:m.03_3d": "Japan"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Japan))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.03_3d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02crn_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02crn_ ns:wine.wine_region.wines ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.02crn_", "mid2name": {"ns:m.02crn_": "Vinho Verde"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R wine.wine_region.wines) Vinho Verde))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R wine.wine_region.wines) m.02crn_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0czc60b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0czc60b ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.0czc60b", "mid2name": {"ns:m.0czc60b": "Super Macho Man"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Super Macho Man))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0czc60b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vrn33)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vrn33 ns:medicine.drug_class.drugs ?y .\n?y ns:medicine.drug.active_moieties ?x .\n}\n", "TopicEntityMid": "m.02vrn33", "mid2name": {"ns:m.02vrn33": "Histone deacetylase inhibitor"}, "SExpr_w_name": "(JOIN (R medicine.drug.active_moieties) (JOIN (R medicine.drug_class.drugs) Histone deacetylase inhibitor))", "SExpr": "(JOIN (R medicine.drug.active_moieties) (JOIN (R medicine.drug_class.drugs) m.02vrn33))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qghf1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qghf1 ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02qghf1", "mid2name": {"ns:m.02qghf1": "Capetian House of Anjou"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Capetian House of Anjou))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.02qghf1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04g75m_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04g75m_ ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\n}\n", "TopicEntityMid": "m.04g75m_", "mid2name": {"ns:m.04g75m_": "Mayor of Beverly Hills"}, "SExpr_w_name": "(JOIN (R government.government_position_held.office_holder) (JOIN (R government.government_office_or_title.office_holders) Mayor of Beverly Hills))", "SExpr": "(JOIN (R government.government_position_held.office_holder) (JOIN (R government.government_office_or_title.office_holders) m.04g75m_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kth5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kth5 ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.01kth5", "mid2name": {"ns:m.01kth5": "Principal Snyder"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Principal Snyder))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.01kth5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01m8r10)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01m8r10 ns:music.album.artist ?y .\n?y ns:music.artist.genre ?x .\n}\n", "TopicEntityMid": "m.01m8r10", "mid2name": {"ns:m.01m8r10": "World Without Tears"}, "SExpr_w_name": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) World Without Tears))", "SExpr": "(JOIN (R music.artist.genre) (JOIN (R music.album.artist) m.01m8r10))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04kcx2j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04kcx2j ns:fictional_universe.work_of_fiction.setting ?y .\n?y ns:fictional_universe.fictional_setting.works_set_here ?x .\n}\n", "TopicEntityMid": "m.04kcx2j", "mid2name": {"ns:m.04kcx2j": "Judge Dredd: Mutie Block (Part 1)"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.works_set_here) (JOIN (R fictional_universe.work_of_fiction.setting) Judge Dredd: Mutie Block (Part 1)))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.works_set_here) (JOIN (R fictional_universe.work_of_fiction.setting) m.04kcx2j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09_wr5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09_wr5 ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.09_wr5", "mid2name": {"ns:m.09_wr5": "Mount Konocti"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) Mount Konocti))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.09_wr5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c74)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c74 ns:location.country.administrative_divisions ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.05c74", "mid2name": {"ns:m.05c74": "Nicaragua"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.country.administrative_divisions) Nicaragua))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.country.administrative_divisions) m.05c74))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0171yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0171yy ns:music.performance_venue.concerts ?y .\n?y ns:award.award_nominated_work.award_nominations ?x .\n}\n", "TopicEntityMid": "m.0171yy", "mid2name": {"ns:m.0171yy": "Finsbury Park"}, "SExpr_w_name": "(JOIN (R award.award_nominated_work.award_nominations) (JOIN (R music.performance_venue.concerts) Finsbury Park))", "SExpr": "(JOIN (R award.award_nominated_work.award_nominations) (JOIN (R music.performance_venue.concerts) m.0171yy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08z_2r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08z_2r ns:fictional_universe.fictional_character.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.08z_2r", "mid2name": {"ns:m.08z_2r": "Marcus Junius Brutus"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) Marcus Junius Brutus))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R fictional_universe.fictional_character.gender) m.08z_2r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04yk_w5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04yk_w5 ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.04yk_w5", "mid2name": {"ns:m.04yk_w5": "W.W. Cargill"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) W.W. Cargill))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.04yk_w5))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016jsf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016jsf ns:computer.software.license ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.016jsf", "mid2name": {"ns:m.016jsf": "Windows 3.0"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.software.license) Windows 3.0))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.software.license) m.016jsf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04g3blk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04g3blk ns:medicine.hospital.address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "TopicEntityMid": "m.04g3blk", "mid2name": {"ns:m.04g3blk": "Collingsworth General Hospital"}, "SExpr_w_name": "(JOIN (R location.mailing_address.citytown) (JOIN (R medicine.hospital.address) Collingsworth General Hospital))", "SExpr": "(JOIN (R location.mailing_address.citytown) (JOIN (R medicine.hospital.address) m.04g3blk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.041rx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.041rx ns:fictional_universe.ethnicity_in_fiction.characters_of_this_ethnicity ?y .\n?y ns:comic_books.comic_book_character.created_by ?x .\n}\n", "TopicEntityMid": "m.041rx", "mid2name": {"ns:m.041rx": "Jewish people"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_character.created_by) (JOIN (R fictional_universe.ethnicity_in_fiction.characters_of_this_ethnicity) Jewish people))", "SExpr": "(JOIN (R comic_books.comic_book_character.created_by) (JOIN (R fictional_universe.ethnicity_in_fiction.characters_of_this_ethnicity) m.041rx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d19j3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d19j3 ns:fashion.garment.specialization_of ?y .\n?y ns:base.skosbase.vocabulary_equivalent_topic.equivalent_concept ?x .\n}\n", "TopicEntityMid": "m.0d19j3", "mid2name": {"ns:m.0d19j3": "Denim skirt"}, "SExpr_w_name": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.equivalent_concept) (JOIN (R fashion.garment.specialization_of) Denim skirt))", "SExpr": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.equivalent_concept) (JOIN (R fashion.garment.specialization_of) m.0d19j3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d36zh9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d36zh9 ns:education.department.institution ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.0d36zh9", "mid2name": {"ns:m.0d36zh9": "Faculty of Mathematical, Physical, and Natural Sciences, University of Catania"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R education.department.institution) Faculty of Mathematical, Physical, and Natural Sciences, University of Catania))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R education.department.institution) m.0d36zh9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tzg_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tzg_ ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01tzg_", "mid2name": {"ns:m.01tzg_": "National Council"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) National Council))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01tzg_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jbwv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jbwv ns:automotive.model.predecessor ?y .\n?y ns:automotive.model.automotive_class ?x .\n}\n", "TopicEntityMid": "m.03jbwv", "mid2name": {"ns:m.03jbwv": "Plymouth Caravelle"}, "SExpr_w_name": "(JOIN (R automotive.model.automotive_class) (JOIN (R automotive.model.predecessor) Plymouth Caravelle))", "SExpr": "(JOIN (R automotive.model.automotive_class) (JOIN (R automotive.model.predecessor) m.03jbwv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.057sh8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.057sh8 ns:astronomy.celestial_object.category ?y .\n?y ns:astronomy.celestial_object_category.objects ?x .\n}\n", "TopicEntityMid": "m.057sh8", "mid2name": {"ns:m.057sh8": "Theta Centauri"}, "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) Theta Centauri))", "SExpr": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) m.057sh8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05w000)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05w000 ns:automotive.generation.models ?y .\n?y ns:automotive.model.generations ?x .\n}\n", "TopicEntityMid": "m.05w000", "mid2name": {"ns:m.05w000": "Mercedes-Benz W169"}, "SExpr_w_name": "(JOIN (R automotive.model.generations) (JOIN (R automotive.generation.models) Mercedes-Benz W169))", "SExpr": "(JOIN (R automotive.model.generations) (JOIN (R automotive.generation.models) m.05w000))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06n8j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06n8j ns:olympics.olympic_host_city.olympics_hosted ?y .\n?y ns:time.event.instance_of_recurring_event ?x .\n}\n", "TopicEntityMid": "m.06n8j", "mid2name": {"ns:m.06n8j": "Sarajevo"}, "SExpr_w_name": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R olympics.olympic_host_city.olympics_hosted) Sarajevo))", "SExpr": "(JOIN (R time.event.instance_of_recurring_event) (JOIN (R olympics.olympic_host_city.olympics_hosted) m.06n8j))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05335)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05335 ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.05335", "mid2name": {"ns:m.05335": "The Muppets"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) The Muppets))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.05335))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019f07)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019f07 ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.019f07", "mid2name": {"ns:m.019f07": "Bah\u00e1'\u00ed House of Worship"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Bah\u00e1'\u00ed House of Worship))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.019f07))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fw9d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fw9d ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0fw9d", "mid2name": {"ns:m.0fw9d": "Fig"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Fig))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0fw9d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:base.csafarms.area_served.farms ?y .\n?y ns:organization.organization.founders ?x .\n}\n", "TopicEntityMid": "m.09c7w0", "mid2name": {"ns:m.09c7w0": "United States of America"}, "SExpr_w_name": "(JOIN (R organization.organization.founders) (JOIN (R base.csafarms.area_served.farms) United States of America))", "SExpr": "(JOIN (R organization.organization.founders) (JOIN (R base.csafarms.area_served.farms) m.09c7w0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qdk18)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qdk18 ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.05qdk18", "mid2name": {"ns:m.05qdk18": "Elizabeth Vaughan"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) Elizabeth Vaughan))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.05qdk18))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gkg825)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gkg825 ns:visual_art.art_series.artworks ?y .\n?y ns:visual_art.artwork.artist ?x .\n}\n", "TopicEntityMid": "m.0gkg825", "mid2name": {"ns:m.0gkg825": "History of Maine Labor Mural"}, "SExpr_w_name": "(JOIN (R visual_art.artwork.artist) (JOIN (R visual_art.art_series.artworks) History of Maine Labor Mural))", "SExpr": "(JOIN (R visual_art.artwork.artist) (JOIN (R visual_art.art_series.artworks) m.0gkg825))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ydqbx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ydqbx ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.04ydqbx", "mid2name": {"ns:m.04ydqbx": "Tokyo Dome City Attractions"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Tokyo Dome City Attractions))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.04ydqbx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h4skz0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h4skz0 ns:people.person.gender ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0h4skz0", "mid2name": {"ns:m.0h4skz0": "Chuck Alston"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) Chuck Alston))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R people.person.gender) m.0h4skz0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09k248)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09k248 ns:food.culinary_tool.used_in_recipes ?y .\n?y ns:food.recipe.author ?x .\n}\n", "TopicEntityMid": "m.09k248", "mid2name": {"ns:m.09k248": "Silpat"}, "SExpr_w_name": "(JOIN (R food.recipe.author) (JOIN (R food.culinary_tool.used_in_recipes) Silpat))", "SExpr": "(JOIN (R food.recipe.author) (JOIN (R food.culinary_tool.used_in_recipes) m.09k248))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0256dr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0256dr6 ns:meteorology.tropical_cyclone_category.Beaufort_scale ?y .\n?y ns:meteorology.beaufort_wind_force.tropical_cyclone_categories ?x .\n}\n", "TopicEntityMid": "m.0256dr6", "mid2name": {"ns:m.0256dr6": "Very Severe Cyclonic Storm (IMD)"}, "SExpr_w_name": "(JOIN (R meteorology.beaufort_wind_force.tropical_cyclone_categories) (JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) Very Severe Cyclonic Storm (IMD)))", "SExpr": "(JOIN (R meteorology.beaufort_wind_force.tropical_cyclone_categories) (JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) m.0256dr6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h3dnrc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h3dnrc ns:music.music_video.artist ?y .\n?y ns:base.popstra.celebrity.infidelity_participant ?x .\n}\n", "TopicEntityMid": "m.0h3dnrc", "mid2name": {"ns:m.0h3dnrc": "Russian Roulette"}, "SExpr_w_name": "(JOIN (R base.popstra.celebrity.infidelity_participant) (JOIN (R music.music_video.artist) Russian Roulette))", "SExpr": "(JOIN (R base.popstra.celebrity.infidelity_participant) (JOIN (R music.music_video.artist) m.0h3dnrc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jzqz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jzqz ns:physics.particle.antiparticle ?y .\n?y ns:physics.particle_antiparticle.particle ?x .\n}\n", "TopicEntityMid": "m.01jzqz", "mid2name": {"ns:m.01jzqz": "Up quark"}, "SExpr_w_name": "(JOIN (R physics.particle_antiparticle.particle) (JOIN (R physics.particle.antiparticle) Up quark))", "SExpr": "(JOIN (R physics.particle_antiparticle.particle) (JOIN (R physics.particle.antiparticle) m.01jzqz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.063hnt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.063hnt ns:music.composition.composer ?y .\n?y ns:music.artist.track ?x .\n}\n", "TopicEntityMid": "m.063hnt", "mid2name": {"ns:m.063hnt": "Singin' in the Rain"}, "SExpr_w_name": "(JOIN (R music.artist.track) (JOIN (R music.composition.composer) Singin' in the Rain))", "SExpr": "(JOIN (R music.artist.track) (JOIN (R music.composition.composer) m.063hnt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r4w ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.animal_breed.examples ?x .\n}\n", "TopicEntityMid": "m.05r4w", "mid2name": {"ns:m.05r4w": "Portugal"}, "SExpr_w_name": "(JOIN (R biology.animal_breed.examples) (JOIN (R biology.breed_origin.breeds_originating_here) Portugal))", "SExpr": "(JOIN (R biology.animal_breed.examples) (JOIN (R biology.breed_origin.breeds_originating_here) m.05r4w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h2z_k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h2z_k ns:book.periodical.first_issue_date ?y .\n?y ns:book.periodical_publication_date.date ?x .\n}\n", "TopicEntityMid": "m.03h2z_k", "mid2name": {"ns:m.03h2z_k": "Il Progresso Italo-Americano"}, "SExpr_w_name": "(JOIN (R book.periodical_publication_date.date) (JOIN (R book.periodical.first_issue_date) Il Progresso Italo-Americano))", "SExpr": "(JOIN (R book.periodical_publication_date.date) (JOIN (R book.periodical.first_issue_date) m.03h2z_k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vgkd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vgkd ns:base.americancomedy.comedy_genre.comedians_in_this_genre ?y .\n?y ns:base.popstra.celebrity.infidelity_participant ?x .\n}\n", "TopicEntityMid": "m.0vgkd", "mid2name": {"ns:m.0vgkd": "Black comedy"}, "SExpr_w_name": "(JOIN (R base.popstra.celebrity.infidelity_participant) (JOIN (R base.americancomedy.comedy_genre.comedians_in_this_genre) Black comedy))", "SExpr": "(JOIN (R base.popstra.celebrity.infidelity_participant) (JOIN (R base.americancomedy.comedy_genre.comedians_in_this_genre) m.0vgkd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_3qd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_3qd ns:music.artist.genre ?y .\n?y ns:base.webvideo.internet_video_genre.internet_video ?x .\n}\n", "TopicEntityMid": "m.07_3qd", "mid2name": {"ns:m.07_3qd": "Graham Gouldman"}, "SExpr_w_name": "(JOIN (R base.webvideo.internet_video_genre.internet_video) (JOIN (R music.artist.genre) Graham Gouldman))", "SExpr": "(JOIN (R base.webvideo.internet_video_genre.internet_video) (JOIN (R music.artist.genre) m.07_3qd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wxtgw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wxtgw ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02wxtgw", "mid2name": {"ns:m.02wxtgw": "Android"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Android))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02wxtgw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kws53)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kws53 ns:biology.cytogenetic_band.chromosome ?y .\n?y ns:biology.chromosome.band ?x .\n}\n", "TopicEntityMid": "m.02kws53", "mid2name": {"ns:m.02kws53": "Human Cytogenetic Band 12p12.2"}, "SExpr_w_name": "(JOIN (R biology.chromosome.band) (JOIN (R biology.cytogenetic_band.chromosome) Human Cytogenetic Band 12p12.2))", "SExpr": "(JOIN (R biology.chromosome.band) (JOIN (R biology.cytogenetic_band.chromosome) m.02kws53))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02bssm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02bssm ns:computer.software.license ?y .\n?y ns:organization.organization_sector.organizations_in_this_sector ?x .\n}\n", "TopicEntityMid": "m.02bssm", "mid2name": {"ns:m.02bssm": "System Software 6"}, "SExpr_w_name": "(JOIN (R organization.organization_sector.organizations_in_this_sector) (JOIN (R computer.software.license) System Software 6))", "SExpr": "(JOIN (R organization.organization_sector.organizations_in_this_sector) (JOIN (R computer.software.license) m.02bssm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07s0lm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07s0lm ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.characters ?x .\n}\n", "TopicEntityMid": "m.07s0lm", "mid2name": {"ns:m.07s0lm": "Princess Aura"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.characters) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Princess Aura))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.characters) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.07s0lm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.063spf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.063spf ns:government.governmental_body.jurisdiction ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.063spf", "mid2name": {"ns:m.063spf": "Magistrates' Court of Victoria"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R government.governmental_body.jurisdiction) Magistrates' Court of Victoria))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R government.governmental_body.jurisdiction) m.063spf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dz_x9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dz_x9 ns:geography.geographical_feature_category.subcategory_of ?y .\n?y ns:geography.geographical_feature_category.subcategories ?x .\n}\n", "TopicEntityMid": "m.0dz_x9", "mid2name": {"ns:m.0dz_x9": "Glacier cave"}, "SExpr_w_name": "(JOIN (R geography.geographical_feature_category.subcategories) (JOIN (R geography.geographical_feature_category.subcategory_of) Glacier cave))", "SExpr": "(JOIN (R geography.geographical_feature_category.subcategories) (JOIN (R geography.geographical_feature_category.subcategory_of) m.0dz_x9))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r5c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r5c ns:music.genre.artists ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.05r5c", "mid2name": {"ns:m.05r5c": "Piano"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R music.genre.artists) Piano))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R music.genre.artists) m.05r5c))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01b7h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01b7h8 ns:tv.tv_program.filming_locations ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.01b7h8", "mid2name": {"ns:m.01b7h8": "American Idol"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R tv.tv_program.filming_locations) American Idol))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R tv.tv_program.filming_locations) m.01b7h8))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l7pjl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l7pjl ns:biology.gene_group.gene ?y .\n?y ns:biology.gene_group_membership.evidence ?x .\n}\n", "TopicEntityMid": "m.02l7pjl", "mid2name": {"ns:m.02l7pjl": "positive regulation of caspase activity"}, "SExpr_w_name": "(JOIN (R biology.gene_group_membership.evidence) (JOIN (R biology.gene_group.gene) positive regulation of caspase activity))", "SExpr": "(JOIN (R biology.gene_group_membership.evidence) (JOIN (R biology.gene_group.gene) m.02l7pjl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09zp0z3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09zp0z3 ns:symbols.namesake.named_after ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.09zp0z3", "mid2name": {"ns:m.09zp0z3": "M. Anderson"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R symbols.namesake.named_after) M. Anderson))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R symbols.namesake.named_after) m.09zp0z3))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07sbkfb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07sbkfb ns:computer.programming_language.dialects ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.07sbkfb", "mid2name": {"ns:m.07sbkfb": "Java"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.programming_language.dialects) Java))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R computer.programming_language.dialects) m.07sbkfb))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gtdhp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gtdhp ns:royalty.royal_line.preceded_by ?y .\n?y ns:people.family.members ?x .\n}\n", "TopicEntityMid": "m.04gtdhp", "mid2name": {"ns:m.04gtdhp": "House of Braganza-Saxe-Coburg and Gotha"}, "SExpr_w_name": "(JOIN (R people.family.members) (JOIN (R royalty.royal_line.preceded_by) House of Braganza-Saxe-Coburg and Gotha))", "SExpr": "(JOIN (R people.family.members) (JOIN (R royalty.royal_line.preceded_by) m.04gtdhp))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n30b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n30b ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.governmental_body ?x .\n}\n", "TopicEntityMid": "m.01n30b", "mid2name": {"ns:m.01n30b": "Member of the Scottish Parliament"}, "SExpr_w_name": "(JOIN (R government.government_position_held.governmental_body) (JOIN (R government.government_office_or_title.office_holders) Member of the Scottish Parliament))", "SExpr": "(JOIN (R government.government_position_held.governmental_body) (JOIN (R government.government_office_or_title.office_holders) m.01n30b))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06gf7_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06gf7_ ns:tv.tv_writer.tv_segments_written ?y .\n?y ns:tv.tv_episode_segment.performances ?x .\n}\n", "TopicEntityMid": "m.06gf7_", "mid2name": {"ns:m.06gf7_": "Savage Steve Holland"}, "SExpr_w_name": "(JOIN (R tv.tv_episode_segment.performances) (JOIN (R tv.tv_writer.tv_segments_written) Savage Steve Holland))", "SExpr": "(JOIN (R tv.tv_episode_segment.performances) (JOIN (R tv.tv_writer.tv_segments_written) m.06gf7_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pkk0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pkk0 ns:visual_art.visual_art_form.artists ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.01pkk0", "mid2name": {"ns:m.01pkk0": "Bas-relief"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R visual_art.visual_art_form.artists) Bas-relief))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R visual_art.visual_art_form.artists) m.01pkk0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qqm6x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qqm6x ns:internet.website.category ?y .\n?y ns:user.techgnostic.default_domain.magazine_topic.periodical ?x .\n}\n", "TopicEntityMid": "m.03qqm6x", "mid2name": {"ns:m.03qqm6x": "www.stern.de"}, "SExpr_w_name": "(JOIN (R user.techgnostic.default_domain.magazine_topic.periodical) (JOIN (R internet.website.category) www.stern.de))", "SExpr": "(JOIN (R user.techgnostic.default_domain.magazine_topic.periodical) (JOIN (R internet.website.category) m.03qqm6x))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqwttk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqwttk ns:medicine.drug_ingredient.active_ingredient_of_formulation ?y .\n?y ns:medicine.drug_formulation.active_ingredient_moieties ?x .\n}\n", "TopicEntityMid": "m.0hqwttk", "mid2name": {"ns:m.0hqwttk": "Agathosma betulina leaf"}, "SExpr_w_name": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) Agathosma betulina leaf))", "SExpr": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) (JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) m.0hqwttk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h_4m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h_4m ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03h_4m", "mid2name": {"ns:m.03h_4m": "Cylinder"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Cylinder))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03h_4m))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vt_nm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vt_nm ns:medicine.disease.includes_diseases ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.07vt_nm", "mid2name": {"ns:m.07vt_nm": "Facial nerve disorders"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.disease.includes_diseases) Facial nerve disorders))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.disease.includes_diseases) m.07vt_nm))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zdf79d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zdf79d ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.0zdf79d", "mid2name": {"ns:m.0zdf79d": "How to Make Friends and then Kill Them"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) How to Make Friends and then Kill Them))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.0zdf79d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04j55j0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04j55j0 ns:organization.organization_sector.organizations_in_this_sector ?y .\n?y ns:award.award_honor.award ?x .\n}\n", "TopicEntityMid": "m.04j55j0", "mid2name": {"ns:m.04j55j0": "Audio Production"}, "SExpr_w_name": "(JOIN (R award.award_honor.award) (JOIN (R organization.organization_sector.organizations_in_this_sector) Audio Production))", "SExpr": "(JOIN (R award.award_honor.award) (JOIN (R organization.organization_sector.organizations_in_this_sector) m.04j55j0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vp_8z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vp_8z ns:book.author.works_written ?y .\n?y ns:book.book.characters ?x .\n}\n", "TopicEntityMid": "m.02vp_8z", "mid2name": {"ns:m.02vp_8z": "David Anthony Kraft"}, "SExpr_w_name": "(JOIN (R book.book.characters) (JOIN (R book.author.works_written) David Anthony Kraft))", "SExpr": "(JOIN (R book.book.characters) (JOIN (R book.author.works_written) m.02vp_8z))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0375_h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0375_h ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.characters ?x .\n}\n", "TopicEntityMid": "m.0375_h", "mid2name": {"ns:m.0375_h": "Mary Russell"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.characters) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Mary Russell))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.characters) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0375_h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hlv1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hlv1 ns:business.consumer_product.brand ?y .\n?y ns:automotive.make.model_s ?x .\n}\n", "TopicEntityMid": "m.03hlv1", "mid2name": {"ns:m.03hlv1": "Buick LaCrosse"}, "SExpr_w_name": "(JOIN (R automotive.make.model_s) (JOIN (R business.consumer_product.brand) Buick LaCrosse))", "SExpr": "(JOIN (R automotive.make.model_s) (JOIN (R business.consumer_product.brand) m.03hlv1))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036vg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036vg6 ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.036vg6", "mid2name": {"ns:m.036vg6": "Wrestling"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Wrestling))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.036vg6))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05zlw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05zlw ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.rank ?x .\n}\n", "TopicEntityMid": "m.05zlw", "mid2name": {"ns:m.05zlw": "Passenger pigeon"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) Passenger pigeon))", "SExpr": "(JOIN (R biology.organism_classification.rank) (JOIN (R biology.organism_classification.higher_classification) m.05zlw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0m3j_6f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0m3j_6f ns:government.election_poll.election ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.0m3j_6f", "mid2name": {"ns:m.0m3j_6f": "Rasmussen, 2012 presidential election, 2012-08-13"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R government.election_poll.election) Rasmussen, 2012 presidential election, 2012-08-13))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R government.election_poll.election) m.0m3j_6f))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.072qz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.072qz ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.072qz", "mid2name": {"ns:m.072qz": "Sukkot"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Sukkot))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.072qz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ncy_1d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ncy_1d ns:computer.operating_system_developer.operating_systems_developed ?y .\n?y ns:computer.operating_system.parent_os ?x .\n}\n", "TopicEntityMid": "m.0ncy_1d", "mid2name": {"ns:m.0ncy_1d": "Peter Wagner"}, "SExpr_w_name": "(JOIN (R computer.operating_system.parent_os) (JOIN (R computer.operating_system_developer.operating_systems_developed) Peter Wagner))", "SExpr": "(JOIN (R computer.operating_system.parent_os) (JOIN (R computer.operating_system_developer.operating_systems_developed) m.0ncy_1d))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jgz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jgz ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03jgz", "mid2name": {"ns:m.03jgz": "Historian"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Historian))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03jgz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xc6w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xc6w ns:medicine.medical_treatment.used_to_treat ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.01xc6w", "mid2name": {"ns:m.01xc6w": "Digitoxin"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) Digitoxin))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R medicine.medical_treatment.used_to_treat) m.01xc6w))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hlvc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hlvc ns:royalty.system_of_nobility.titles ?y .\n?y ns:royalty.system_title_relationship.title ?x .\n}\n", "TopicEntityMid": "m.01hlvc", "mid2name": {"ns:m.01hlvc": "Kingdom of Hawaii"}, "SExpr_w_name": "(JOIN (R royalty.system_title_relationship.title) (JOIN (R royalty.system_of_nobility.titles) Kingdom of Hawaii))", "SExpr": "(JOIN (R royalty.system_title_relationship.title) (JOIN (R royalty.system_of_nobility.titles) m.01hlvc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0blzr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0blzr ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0blzr", "mid2name": {"ns:m.0blzr": "Barbed wire"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Barbed wire))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0blzr))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0290nk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0290nk ns:astronomy.asteroid_group.asteroid_group_members ?y .\n?y ns:astronomy.astronomical_discovery.discoverer ?x .\n}\n", "TopicEntityMid": "m.0290nk", "mid2name": {"ns:m.0290nk": "Amor asteroid"}, "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.discoverer) (JOIN (R astronomy.asteroid_group.asteroid_group_members) Amor asteroid))", "SExpr": "(JOIN (R astronomy.astronomical_discovery.discoverer) (JOIN (R astronomy.asteroid_group.asteroid_group_members) m.0290nk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07s33k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07s33k ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.07s33k", "mid2name": {"ns:m.07s33k": "Submarine Voyage"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Submarine Voyage))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.07s33k))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wj5lk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wj5lk ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.03wj5lk", "mid2name": {"ns:m.03wj5lk": "Chicago Symphony Chorus"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Chicago Symphony Chorus))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.03wj5lk))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07v882)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07v882 ns:biology.organism_classification.higher_classification ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.07v882", "mid2name": {"ns:m.07v882": "Staphylococcus epidermidis"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.higher_classification) Staphylococcus epidermidis))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R biology.organism_classification.higher_classification) m.07v882))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02649zv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02649zv ns:fictional_universe.fictional_object.featured_in_fictional_universe ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n", "TopicEntityMid": "m.02649zv", "mid2name": {"ns:m.02649zv": "Cloak of invisibility"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_object.featured_in_fictional_universe) Cloak of invisibility))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R fictional_universe.fictional_object.featured_in_fictional_universe) m.02649zv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09dv82l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09dv82l ns:automotive.generation.models ?y .\n?y ns:automotive.model.generations ?x .\n}\n", "TopicEntityMid": "m.09dv82l", "mid2name": {"ns:m.09dv82l": "Ford Fiesta Mark VI"}, "SExpr_w_name": "(JOIN (R automotive.model.generations) (JOIN (R automotive.generation.models) Ford Fiesta Mark VI))", "SExpr": "(JOIN (R automotive.model.generations) (JOIN (R automotive.generation.models) m.09dv82l))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gllvhx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gllvhx ns:geography.geographical_feature_category.features ?y .\n?y ns:geography.lake.basin_countries ?x .\n}\n", "TopicEntityMid": "m.0gllvhx", "mid2name": {"ns:m.0gllvhx": "Cirque lake"}, "SExpr_w_name": "(JOIN (R geography.lake.basin_countries) (JOIN (R geography.geographical_feature_category.features) Cirque lake))", "SExpr": "(JOIN (R geography.lake.basin_countries) (JOIN (R geography.geographical_feature_category.features) m.0gllvhx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wcnw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wcnw ns:meteorology.tropical_cyclone.category ?y .\n?y ns:meteorology.tropical_cyclone_category.Beaufort_scale ?x .\n}\n", "TopicEntityMid": "m.03wcnw", "mid2name": {"ns:m.03wcnw": "Hurricane Gloria"}, "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) (JOIN (R meteorology.tropical_cyclone.category) Hurricane Gloria))", "SExpr": "(JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) (JOIN (R meteorology.tropical_cyclone.category) m.03wcnw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0426yt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0426yt ns:visual_art.visual_art_form.artists ?y .\n?y ns:visual_art.visual_artist.art_series ?x .\n}\n", "TopicEntityMid": "m.0426yt", "mid2name": {"ns:m.0426yt": "Concept art"}, "SExpr_w_name": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.visual_art_form.artists) Concept art))", "SExpr": "(JOIN (R visual_art.visual_artist.art_series) (JOIN (R visual_art.visual_art_form.artists) m.0426yt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0q03_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0q03_ ns:engineering.engine_category.engines ?y .\n?y ns:award.award_winning_work.awards_won ?x .\n}\n", "TopicEntityMid": "m.0q03_", "mid2name": {"ns:m.0q03_": "Turbofan"}, "SExpr_w_name": "(JOIN (R award.award_winning_work.awards_won) (JOIN (R engineering.engine_category.engines) Turbofan))", "SExpr": "(JOIN (R award.award_winning_work.awards_won) (JOIN (R engineering.engine_category.engines) m.0q03_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01htfz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01htfz ns:comic_books.comic_book_character.created_by ?y .\n?y ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n}\n", "TopicEntityMid": "m.01htfz", "mid2name": {"ns:m.01htfz": "Ororo Munroe / Storm"}, "SExpr_w_name": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (JOIN (R comic_books.comic_book_character.created_by) Ororo Munroe / Storm))", "SExpr": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (JOIN (R comic_books.comic_book_character.created_by) m.01htfz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.064hyyh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.064hyyh ns:business.business_operation.industry ?y .\n?y ns:food.wine_style.wines ?x .\n}\n", "TopicEntityMid": "m.064hyyh", "mid2name": {"ns:m.064hyyh": "Grupo Sogevinus SGPS SA"}, "SExpr_w_name": "(JOIN (R food.wine_style.wines) (JOIN (R business.business_operation.industry) Grupo Sogevinus SGPS SA))", "SExpr": "(JOIN (R food.wine_style.wines) (JOIN (R business.business_operation.industry) m.064hyyh))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.028dfg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.028dfg ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.028dfg", "mid2name": {"ns:m.028dfg": "Geriatrics"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Geriatrics))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.028dfg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0129l8g7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0129l8g7 ns:business.consumer_product.brand ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n", "TopicEntityMid": "m.0129l8g7", "mid2name": {"ns:m.0129l8g7": "Host Analytics EPM Suite"}, "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R business.consumer_product.brand) Host Analytics EPM Suite))", "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R business.consumer_product.brand) m.0129l8g7))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kdmy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kdmy ns:computer.computer_processor.manufacturers ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.01kdmy", "mid2name": {"ns:m.01kdmy": "x86-64"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R computer.computer_processor.manufacturers) x86-64))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R computer.computer_processor.manufacturers) m.01kdmy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zvtv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zvtv ns:interests.collection_category.parent_category ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.02zvtv", "mid2name": {"ns:m.02zvtv": "Gumball machine"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R interests.collection_category.parent_category) Gumball machine))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R interests.collection_category.parent_category) m.02zvtv))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02nqg65)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02nqg65 ns:digicams.camera_iso.cameras ?y .\n?y ns:business.consumer_product.company ?x .\n}\n", "TopicEntityMid": "m.02nqg65", "mid2name": {"ns:m.02nqg65": "High ISO Auto"}, "SExpr_w_name": "(JOIN (R business.consumer_product.company) (JOIN (R digicams.camera_iso.cameras) High ISO Auto))", "SExpr": "(JOIN (R business.consumer_product.company) (JOIN (R digicams.camera_iso.cameras) m.02nqg65))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.028y50h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.028y50h ns:book.book_edition.book ?y .\n?y ns:book.written_work.author ?x .\n}\n", "TopicEntityMid": "m.028y50h", "mid2name": {"ns:m.028y50h": "The Gates of Rome"}, "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) The Gates of Rome))", "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.book_edition.book) m.028y50h))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwndd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwndd ns:biology.cytogenetic_band.chromosome ?y .\n?y ns:biology.chromosome.band ?x .\n}\n", "TopicEntityMid": "m.02kwndd", "mid2name": {"ns:m.02kwndd": "Human Cytogenetic Band 6q26"}, "SExpr_w_name": "(JOIN (R biology.chromosome.band) (JOIN (R biology.cytogenetic_band.chromosome) Human Cytogenetic Band 6q26))", "SExpr": "(JOIN (R biology.chromosome.band) (JOIN (R biology.cytogenetic_band.chromosome) m.02kwndd))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c3fk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c3fk4 ns:book.written_work.author ?y .\n?y ns:book.author.works_written ?x .\n}\n", "TopicEntityMid": "m.05c3fk4", "mid2name": {"ns:m.05c3fk4": "Easy Money"}, "SExpr_w_name": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) Easy Money))", "SExpr": "(JOIN (R book.author.works_written) (JOIN (R book.written_work.author) m.05c3fk4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q21kx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q21kx ns:religion.religion.founding_figures ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.02q21kx", "mid2name": {"ns:m.02q21kx": "World Mission Society Church of God"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R religion.religion.founding_figures) World Mission Society Church of God))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R religion.religion.founding_figures) m.02q21kx))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0djy52r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0djy52r ns:medicine.disease.includes_diseases ?y .\n?y ns:medicine.infectious_disease.vector ?x .\n}\n", "TopicEntityMid": "m.0djy52r", "mid2name": {"ns:m.0djy52r": "Blood disorder"}, "SExpr_w_name": "(JOIN (R medicine.infectious_disease.vector) (JOIN (R medicine.disease.includes_diseases) Blood disorder))", "SExpr": "(JOIN (R medicine.infectious_disease.vector) (JOIN (R medicine.disease.includes_diseases) m.0djy52r))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04q8pyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04q8pyc ns:biology.organism_classification.higher_classification ?y .\n?y ns:biology.organism_classification.child_classifications ?x .\n}\n", "TopicEntityMid": "m.04q8pyc", "mid2name": {"ns:m.04q8pyc": "Catarratto"}, "SExpr_w_name": "(JOIN (R biology.organism_classification.child_classifications) (JOIN (R biology.organism_classification.higher_classification) Catarratto))", "SExpr": "(JOIN (R biology.organism_classification.child_classifications) (JOIN (R biology.organism_classification.higher_classification) m.04q8pyc))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pnvq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pnvq ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.03pnvq", "mid2name": {"ns:m.03pnvq": "Shueisha"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Shueisha))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.03pnvq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01cprt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01cprt ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01cprt", "mid2name": {"ns:m.01cprt": "Frequency-division multiple access"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Frequency-division multiple access))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01cprt))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mwy0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mwy0 ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.species ?x .\n}\n", "TopicEntityMid": "m.02mwy0", "mid2name": {"ns:m.02mwy0": "Donatello"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.species) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Donatello))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.species) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.02mwy0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017grj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017grj ns:location.location.containedby ?y .\n?y ns:user.faye.default_domain.travel_destination.restaurants ?x .\n}\n", "TopicEntityMid": "m.017grj", "mid2name": {"ns:m.017grj": "Candlestick Park"}, "SExpr_w_name": "(JOIN (R user.faye.default_domain.travel_destination.restaurants) (JOIN (R location.location.containedby) Candlestick Park))", "SExpr": "(JOIN (R user.faye.default_domain.travel_destination.restaurants) (JOIN (R location.location.containedby) m.017grj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07shq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07shq ns:law.constitutional_amendment.constitution ?y .\n?y ns:law.constitution.country ?x .\n}\n", "TopicEntityMid": "m.07shq", "mid2name": {"ns:m.07shq": "Second Amendment to the United States Constitution"}, "SExpr_w_name": "(JOIN (R law.constitution.country) (JOIN (R law.constitutional_amendment.constitution) Second Amendment to the United States Constitution))", "SExpr": "(JOIN (R law.constitution.country) (JOIN (R law.constitutional_amendment.constitution) m.07shq))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01y2jnj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01y2jnj ns:geography.glacier_status.glaciers_of_this_status ?y .\n?y ns:base.schemastaging.context_name.pronunciation ?x .\n}\n", "TopicEntityMid": "m.01y2jnj", "mid2name": {"ns:m.01y2jnj": "Retreating"}, "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R geography.glacier_status.glaciers_of_this_status) Retreating))", "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) (JOIN (R geography.glacier_status.glaciers_of_this_status) m.01y2jnj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xll_4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xll_4 ns:location.location.containedby ?y .\n?y ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n", "TopicEntityMid": "m.01xll_4", "mid2name": {"ns:m.01xll_4": "James D. and Alice Butler House"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) James D. and Alice Butler House))", "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) (JOIN (R location.location.containedby) m.01xll_4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vn0c97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vn0c97 ns:education.field_of_study.students_majoring ?y .\n?y ns:education.education.institution ?x .\n}\n", "TopicEntityMid": "m.0vn0c97", "mid2name": {"ns:m.0vn0c97": "General Internal Medicine"}, "SExpr_w_name": "(JOIN (R education.education.institution) (JOIN (R education.field_of_study.students_majoring) General Internal Medicine))", "SExpr": "(JOIN (R education.education.institution) (JOIN (R education.field_of_study.students_majoring) m.0vn0c97))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fq0kgf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fq0kgf ns:computer.computer_processor.used_in_computers ?y .\n?y ns:computer.computer.compatible_oses ?x .\n}\n", "TopicEntityMid": "m.0fq0kgf", "mid2name": {"ns:m.0fq0kgf": "ARM Cortex-A8"}, "SExpr_w_name": "(JOIN (R computer.computer.compatible_oses) (JOIN (R computer.computer_processor.used_in_computers) ARM Cortex-A8))", "SExpr": "(JOIN (R computer.computer.compatible_oses) (JOIN (R computer.computer_processor.used_in_computers) m.0fq0kgf))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014_w4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014_w4 ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.characters ?x .\n}\n", "TopicEntityMid": "m.014_w4", "mid2name": {"ns:m.014_w4": "Dr. Watson"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.characters) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Dr. Watson))", "SExpr": "(JOIN (R fictional_universe.fictional_universe.characters) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.014_w4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06p5g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06p5g ns:astronomy.star_system.dwarf_planets ?y .\n?y ns:astronomy.astronomical_discovery.status ?x .\n}\n", "TopicEntityMid": "m.06p5g", "mid2name": {"ns:m.06p5g": "Solar System"}, "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.status) (JOIN (R astronomy.star_system.dwarf_planets) Solar System))", "SExpr": "(JOIN (R astronomy.astronomical_discovery.status) (JOIN (R astronomy.star_system.dwarf_planets) m.06p5g))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wlz7_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wlz7_ ns:comic_books.comic_book_story_arc.spanning ?y .\n?y ns:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?x .\n}\n", "TopicEntityMid": "m.02wlz7_", "mid2name": {"ns:m.02wlz7_": "Spore"}, "SExpr_w_name": "(JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) (JOIN (R comic_books.comic_book_story_arc.spanning) Spore))", "SExpr": "(JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) (JOIN (R comic_books.comic_book_story_arc.spanning) m.02wlz7_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08ybdz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08ybdz ns:astronomy.celestial_object_category.subcategory_of ?y .\n?y ns:astronomy.celestial_object_category.objects ?x .\n}\n", "TopicEntityMid": "m.08ybdz", "mid2name": {"ns:m.08ybdz": "Interacting galaxy"}, "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object_category.subcategory_of) Interacting galaxy))", "SExpr": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object_category.subcategory_of) m.08ybdz))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09v7gjw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09v7gjw ns:biology.animal_owner.animals_owned ?y .\n?y ns:biology.animal_ownership.animal ?x .\n}\n", "TopicEntityMid": "m.09v7gjw", "mid2name": {"ns:m.09v7gjw": "John Scott-Ellis, 9th Baron Howard de Walden"}, "SExpr_w_name": "(JOIN (R biology.animal_ownership.animal) (JOIN (R biology.animal_owner.animals_owned) John Scott-Ellis, 9th Baron Howard de Walden))", "SExpr": "(JOIN (R biology.animal_ownership.animal) (JOIN (R biology.animal_owner.animals_owned) m.09v7gjw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hgl6sj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hgl6sj ns:location.location.containedby ?y .\n?y ns:location.location.contains ?x .\n}\n", "TopicEntityMid": "m.0hgl6sj", "mid2name": {"ns:m.0hgl6sj": "Yichun Mingyueshan Airport"}, "SExpr_w_name": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) Yichun Mingyueshan Airport))", "SExpr": "(JOIN (R location.location.contains) (JOIN (R location.location.containedby) m.0hgl6sj))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011j6ntg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011j6ntg ns:music.artist.genre ?y .\n?y ns:music.genre.artists ?x .\n}\n", "TopicEntityMid": "m.011j6ntg", "mid2name": {"ns:m.011j6ntg": "Steve Blevins"}, "SExpr_w_name": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) Steve Blevins))", "SExpr": "(JOIN (R music.genre.artists) (JOIN (R music.artist.genre) m.011j6ntg))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01k159)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01k159 ns:computer.programming_language.influenced_by ?y .\n?y ns:computer.programming_language.dialects ?x .\n}\n", "TopicEntityMid": "m.01k159", "mid2name": {"ns:m.01k159": "Modula-3"}, "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) Modula-3))", "SExpr": "(JOIN (R computer.programming_language.dialects) (JOIN (R computer.programming_language.influenced_by) m.01k159))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010p_7n0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010p_7n0 ns:book.short_story.characters ?y .\n?y ns:fictional_universe.fictional_character.character_created_by ?x .\n}\n", "TopicEntityMid": "m.010p_7n0", "mid2name": {"ns:m.010p_7n0": "How Kid Brady Assisted a Damsel in Distress"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.character_created_by) (JOIN (R book.short_story.characters) How Kid Brady Assisted a Damsel in Distress))", "SExpr": "(JOIN (R fictional_universe.fictional_character.character_created_by) (JOIN (R book.short_story.characters) m.010p_7n0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j0z3z4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j0z3z4 ns:zoos.zoo_exhibit.species ?y .\n?y ns:base.animal_synopses.animal_synopsis.speed ?x .\n}\n", "TopicEntityMid": "m.0j0z3z4", "mid2name": {"ns:m.0j0z3z4": "Tasmanian Devils"}, "SExpr_w_name": "(JOIN (R base.animal_synopses.animal_synopsis.speed) (JOIN (R zoos.zoo_exhibit.species) Tasmanian Devils))", "SExpr": "(JOIN (R base.animal_synopses.animal_synopsis.speed) (JOIN (R zoos.zoo_exhibit.species) m.0j0z3z4))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rjsp0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rjsp0 ns:education.student_radio_station.school ?y .\n?y ns:location.location.containedby ?x .\n}\n", "TopicEntityMid": "m.09rjsp0", "mid2name": {"ns:m.09rjsp0": "C101.5"}, "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R education.student_radio_station.school) C101.5))", "SExpr": "(JOIN (R location.location.containedby) (JOIN (R education.student_radio_station.school) m.09rjsp0))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01352_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01352_ ns:award.award_nominee.award_nominations ?y .\n?y ns:award.award_nomination.award ?x .\n}\n", "TopicEntityMid": "m.01352_", "mid2name": {"ns:m.01352_": "Brazil national football team"}, "SExpr_w_name": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) Brazil national football team))", "SExpr": "(JOIN (R award.award_nomination.award) (JOIN (R award.award_nominee.award_nominations) m.01352_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jg1q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jg1q ns:royalty.royal_line.preceded_by ?y .\n?y ns:people.family.rise_to_prominence ?x .\n}\n", "TopicEntityMid": "m.0jg1q", "mid2name": {"ns:m.0jg1q": "House of Orange-Nassau"}, "SExpr_w_name": "(JOIN (R people.family.rise_to_prominence) (JOIN (R royalty.royal_line.preceded_by) House of Orange-Nassau))", "SExpr": "(JOIN (R people.family.rise_to_prominence) (JOIN (R royalty.royal_line.preceded_by) m.0jg1q))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f1jy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f1jy ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.01f1jy", "mid2name": {"ns:m.01f1jy": "1972 Winter Olympics"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) 1972 Winter Olympics))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.01f1jy))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d0zq_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d0zq_ ns:fictional_universe.fictional_universe.characters ?y .\n?y ns:fictional_universe.fictional_character.gender ?x .\n}\n", "TopicEntityMid": "m.0d0zq_", "mid2name": {"ns:m.0d0zq_": "Middleverse"}, "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.gender) (JOIN (R fictional_universe.fictional_universe.characters) Middleverse))", "SExpr": "(JOIN (R fictional_universe.fictional_character.gender) (JOIN (R fictional_universe.fictional_universe.characters) m.0d0zq_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qblsl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qblsl ns:business.industry.companies ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n", "TopicEntityMid": "m.03qblsl", "mid2name": {"ns:m.03qblsl": "Confectionery and Nut Stores"}, "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R business.industry.companies) Confectionery and Nut Stores))", "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R business.industry.companies) m.03qblsl))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qtzt_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qtzt_ ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.02qtzt_", "mid2name": {"ns:m.02qtzt_": "Fujimi Shobo"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Fujimi Shobo))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.02qtzt_))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02np26)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02np26 ns:astronomy.celestial_object.category ?y .\n?y ns:astronomy.celestial_object_category.objects ?x .\n}\n", "TopicEntityMid": "m.02np26", "mid2name": {"ns:m.02np26": "Alnilam"}, "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) Alnilam))", "SExpr": "(JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object.category) m.02np26))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036wsw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036wsw ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n", "TopicEntityMid": "m.036wsw", "mid2name": {"ns:m.036wsw": "Roman Catholic Archdiocese of Chicago"}, "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Roman Catholic Archdiocese of Chicago))", "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.036wsw))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jsr8n2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jsr8n2 ns:comic_books.comic_book_series.created_by ?y .\n?y ns:people.person.gender ?x .\n}\n", "TopicEntityMid": "m.0jsr8n2", "mid2name": {"ns:m.0jsr8n2": "Jacky's Diary"}, "SExpr_w_name": "(JOIN (R people.person.gender) (JOIN (R comic_books.comic_book_series.created_by) Jacky's Diary))", "SExpr": "(JOIN (R people.person.gender) (JOIN (R comic_books.comic_book_series.created_by) m.0jsr8n2))"}, {"sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0csfb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0csfb ns:base.schemastaging.context_name.pronunciation ?y .\n?y ns:base.schemastaging.pronunciation.yomigana ?x .\n}\n", "TopicEntityMid": "m.0csfb", "mid2name": {"ns:m.0csfb": "Contrail"}, "SExpr_w_name": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) Contrail))", "SExpr": "(JOIN (R base.schemastaging.pronunciation.yomigana) (JOIN (R base.schemastaging.context_name.pronunciation) m.0csfb))"}]