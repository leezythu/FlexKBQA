[
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09gwyd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09gwyd ns:comic_books.comic_book_series.publisher ?y .\n?y ns:organization.club_interest.clubs ?x .\n?y ns:people.person.gender ns:m.02zsn .\n?y ns:organization.organization.date_founded ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.09gwyd",
        "mid2name": {
            "ns:m.09gwyd": "Civil War",
            "ns:m.02zsn": "Female"
        },
        "SExpr_w_name": "(JOIN (R organization.club_interest.clubs) (ARGMAX (AND (JOIN people.person.gender Femalesn) (JOIN (R comic_books.comic_book_series.publisher) Civil War)) organization.organization.date_founded))",
        "SExpr": "(JOIN (R organization.club_interest.clubs) (ARGMAX (AND (JOIN people.person.gender m.02zsn) (JOIN (R comic_books.comic_book_series.publisher) m.09gwyd)) organization.organization.date_founded))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04djz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04djz ns:astronomy.astronomical_observatory.discoveries ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n?y ns:astronomy.astronomical_discovery.discoverer ns:m.03bc_l .\n?y ns:astronomy.astronomical_discovery.discovery_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.04djz",
        "mid2name": {
            "ns:m.04djz": "Kitt Peak National Observatory",
            "ns:m.03bc_l": "Carl W. Hergenrother"
        },
        "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (ARGMAX (AND (JOIN astronomy.astronomical_discovery.discoverer Carl W. Hergenrother) (JOIN (R astronomy.astronomical_observatory.discoveries) Kitt Peak National Observatory)) astronomy.astronomical_discovery.discovery_date))",
        "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) (ARGMAX (AND (JOIN astronomy.astronomical_discovery.discoverer m.03bc_l) (JOIN (R astronomy.astronomical_observatory.discoveries) m.04djz)) astronomy.astronomical_discovery.discovery_date))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zc4v66)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zc4v66 ns:award.award_winning_work.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n?y ns:award.award_honor.award_winner ns:m.0fph74l .\n?y ns:award.award_honor.year ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.0zc4v66",
        "mid2name": {
            "ns:m.0zc4v66": "Chekhov Lizardbrain",
            "ns:m.0fph74l": "James Sugg"
        },
        "SExpr_w_name": "(JOIN (R award.award_honor.award) (ARGMAX (AND (JOIN award.award_honor.award_winner James Sugg) (JOIN (R award.award_winning_work.awards_won) Chekhov Lizardbrain)) award.award_honor.year))",
        "SExpr": "(JOIN (R award.award_honor.award) (ARGMAX (AND (JOIN award.award_honor.award_winner m.0fph74l) (JOIN (R award.award_winning_work.awards_won) m.0zc4v66)) award.award_honor.year))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012br316)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012br316 ns:automotive.trim_level.model_year ?y .\n?y ns:automotive.model_year.previous_model_year ?x .\n?y ns:automotive.model_year.make ns:m.0xm0m9r .\n?y ns:automotive.model_year.year ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.012br316",
        "mid2name": {
            "ns:m.012br316": "Chevy Spark LS",
            "ns:m.0xm0m9r": "Chevrolet"
        },
        "SExpr_w_name": "(JOIN (R automotive.model_year.previous_model_year) (ARGMAX (AND (JOIN automotive.model_year.make Chevrolet) (JOIN (R automotive.trim_level.model_year) Chevy Spark LS)) automotive.model_year.year))",
        "SExpr": "(JOIN (R automotive.model_year.previous_model_year) (ARGMAX (AND (JOIN automotive.model_year.make m.0xm0m9r) (JOIN (R automotive.trim_level.model_year) m.012br316)) automotive.model_year.year))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.029j_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.029j_ ns:cvg.computer_game_distribution_system.games_distributed ?y .\n?y ns:cvg.game_version.rating ?x .\n?y ns:cvg.game_version.developer ns:m.09rmwl8 .\n?y ns:cvg.game_version.release_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.029j_",
        "mid2name": {
            "ns:m.029j_": "DVD",
            "ns:m.09rmwl8": "Neutron Games"
        },
        "SExpr_w_name": "(JOIN (R cvg.game_version.rating) (ARGMAX (AND (JOIN cvg.game_version.developer Neutron Games) (JOIN (R cvg.computer_game_distribution_system.games_distributed) DVD)) cvg.game_version.release_date))",
        "SExpr": "(JOIN (R cvg.game_version.rating) (ARGMAX (AND (JOIN cvg.game_version.developer m.09rmwl8) (JOIN (R cvg.computer_game_distribution_system.games_distributed) m.029j_)) cvg.game_version.release_date))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bcz8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bcz8b ns:biology.pedigreed_animal.breed ?y .\n?y ns:base.petbreeds.dog_breed.cities_where_this_dog_is_popular ?x .\n?y ns:biology.animal_breed.examples ns:m.02qkhwh .\n?y ns:base.petbreeds.dog_breed.apartment_friendly ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.0bcz8b",
        "mid2name": {
            "ns:m.0bcz8b": "Millie",
            "ns:m.02qkhwh": "Felicity's Diamond Jim"
        },
        "SExpr_w_name": "(JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) (ARGMAX (AND (JOIN biology.animal_breed.examples Felicity's Diamond Jim) (JOIN (R biology.pedigreed_animal.breed) Millie)) base.petbreeds.dog_breed.apartment_friendly))",
        "SExpr": "(JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) (ARGMAX (AND (JOIN biology.animal_breed.examples m.02qkhwh) (JOIN (R biology.pedigreed_animal.breed) m.0bcz8b)) base.petbreeds.dog_breed.apartment_friendly))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06q07)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06q07 ns:base.filmcameras.camera_manufacturer.cameras_manufactured ?y .\n?y ns:base.filmcameras.camera.camera_series ?x .\n?y ns:base.filmcameras.camera.lens_mount ns:m.0c00bf4 .\n?y ns:base.filmcameras.camera.autofocus ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.06q07",
        "mid2name": {
            "ns:m.06q07": "Sony Corporation",
            "ns:m.0c00bf4": "Sony E-mount"
        },
        "SExpr_w_name": "(JOIN (R base.filmcameras.camera.camera_series) (ARGMAX (AND (JOIN base.filmcameras.camera.lens_mount Sony E-mount) (JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) Sony Corporation)) base.filmcameras.camera.autofocus))",
        "SExpr": "(JOIN (R base.filmcameras.camera.camera_series) (ARGMAX (AND (JOIN base.filmcameras.camera.lens_mount m.0c00bf4) (JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) m.06q07)) base.filmcameras.camera.autofocus))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04mk532)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04mk532 ns:biology.breed_coloring.breeds ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n?y ns:biology.animal_breed.breed_of ns:m.0bt9lr .\n?y ns:base.petbreeds.dog_breed.hunting_dog ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.04mk532",
        "mid2name": {
            "ns:m.04mk532": "Redtick",
            "ns:m.0bt9lr": "Dog"
        },
        "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (ARGMAX (AND (JOIN biology.animal_breed.breed_of Dog) (JOIN (R biology.breed_coloring.breeds) Redtick)) base.petbreeds.dog_breed.hunting_dog))",
        "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (ARGMAX (AND (JOIN biology.animal_breed.breed_of m.0bt9lr) (JOIN (R biology.breed_coloring.breeds) m.04mk532)) base.petbreeds.dog_breed.hunting_dog))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.122t1brx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.122t1brx ns:opera.librettist.libretti ?y .\n?y ns:music.composition.composer ?x .\n?y ns:music.composition.recordings ns:m.024d35b .\n?y ns:music.composition.date_of_first_performance ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "g.122t1brx",
        "mid2name": {
            "ns:g.122t1brx": "Karl Haffner",
            "ns:m.024d35b": "Die Fledermaus"
        },
        "SExpr_w_name": "(JOIN (R music.composition.composer) (ARGMAX (AND (JOIN music.composition.recordings Die Fledermaus) (JOIN (R opera.librettist.libretti) Karl Haffner)) music.composition.date_of_first_performance))",
        "SExpr": "(JOIN (R music.composition.composer) (ARGMAX (AND (JOIN music.composition.recordings m.024d35b) (JOIN (R opera.librettist.libretti) g.122t1brx)) music.composition.date_of_first_performance))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h9ytmq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h9ytmq ns:medicine.fda_otc_monograph_part.drugs_regulated ?y .\n?y ns:business.consumer_product.category ?x .\n?y ns:medicine.manufactured_drug_form.available_in ns:m.09c7w0 .\n?y ns:medicine.manufactured_drug_form.label_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.0h9ytmq",
        "mid2name": {
            "ns:m.0h9ytmq": "FDA OTC monograph part 355",
            "ns:m.09c7w0": "United States of America"
        },
        "SExpr_w_name": "(JOIN (R business.consumer_product.category) (ARGMAX (AND (JOIN medicine.manufactured_drug_form.available_in United States of America) (JOIN (R medicine.fda_otc_monograph_part.drugs_regulated) FDA OTC monograph part 355)) medicine.manufactured_drug_form.label_date))",
        "SExpr": "(JOIN (R business.consumer_product.category) (ARGMAX (AND (JOIN medicine.manufactured_drug_form.available_in m.09c7w0) (JOIN (R medicine.fda_otc_monograph_part.drugs_regulated) m.0h9ytmq)) medicine.manufactured_drug_form.label_date))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rkv3_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rkv3_ ns:computer.software_developer.software ?y .\n?y ns:computer.software.developer ?x .\n?y ns:computer.software.languages_used ns:m.01t6b .\n?y ns:computer.software.latest_release_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.09rkv3_",
        "mid2name": {
            "ns:m.09rkv3_": "Björn Giesler",
            "ns:m.01t6b": "C"
        },
        "SExpr_w_name": "(JOIN (R computer.software.developer) (ARGMAX (AND (JOIN computer.software.languages_used C) (JOIN (R computer.software_developer.software) Björn Giesler)) computer.software.latest_release_date))",
        "SExpr": "(JOIN (R computer.software.developer) (ARGMAX (AND (JOIN computer.software.languages_used m.01t6b) (JOIN (R computer.software_developer.software) m.09rkv3_)) computer.software.latest_release_date))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j3g8jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j3g8jv ns:religion.religious_leadership_title.leaders ?y .\n?y ns:religion.religious_organization_leadership.leader ?x .\n?y ns:religion.religious_organization_leadership.organization ns:m.016h7t .\n?y ns:religion.religious_organization_leadership.start_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.0j3g8jv",
        "mid2name": {
            "ns:m.0j3g8jv": "Dean of Kilkenny",
            "ns:m.016h7t": "Church of Ireland"
        },
        "SExpr_w_name": "(JOIN (R religion.religious_organization_leadership.leader) (ARGMAX (AND (JOIN religion.religious_organization_leadership.organization Church of Ireland) (JOIN (R religion.religious_leadership_title.leaders) Dean of Kilkenny)) religion.religious_organization_leadership.start_date))",
        "SExpr": "(JOIN (R religion.religious_organization_leadership.leader) (ARGMAX (AND (JOIN religion.religious_organization_leadership.organization m.016h7t) (JOIN (R religion.religious_leadership_title.leaders) m.0j3g8jv)) religion.religious_organization_leadership.start_date))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03yxftc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03yxftc ns:government.election.primaries ?y .\n?y ns:government.election.campaigns ?x .\n?y ns:government.election.district ns:m.0c9j_w .\n?y ns:government.election.election_year ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.03yxftc",
        "mid2name": {
            "ns:m.03yxftc": "California’s 4th congressional district election, 2008",
            "ns:m.0c9j_w": "California’s 4th congressional district"
        },
        "SExpr_w_name": "(JOIN (R government.election.campaigns) (ARGMAX (AND (JOIN government.election.district California’s 4th congressional district) (JOIN (R government.election.primaries) California’s 4th congressional district election, 2008)) government.election.election_year))",
        "SExpr": "(JOIN (R government.election.campaigns) (ARGMAX (AND (JOIN government.election.district m.0c9j_w) (JOIN (R government.election.primaries) m.03yxftc)) government.election.election_year))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r_nf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r_nf ns:organization.organization.place_founded ?y .\n?y ns:olympics.olympic_bidding_city.olympics_bid_on ?x .\n?y ns:olympics.olympic_host_city.olympics_hosted ns:m.018ctl .\n?y ns:user.brendan.default_domain.top_architectural_city.structure_count ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.05r_nf",
        "mid2name": {
            "ns:m.05r_nf": "Jim Pattison Group",
            "ns:m.018ctl": "2010 Winter Olympics"
        },
        "SExpr_w_name": "(JOIN (R olympics.olympic_bidding_city.olympics_bid_on) (ARGMAX (AND (JOIN olympics.olympic_host_city.olympics_hosted 2010 Winter Olympics) (JOIN (R organization.organization.place_founded) Jim Pattison Group)) user.brendan.default_domain.top_architectural_city.structure_count))",
        "SExpr": "(JOIN (R olympics.olympic_bidding_city.olympics_bid_on) (ARGMAX (AND (JOIN olympics.olympic_host_city.olympics_hosted m.018ctl) (JOIN (R organization.organization.place_founded) m.05r_nf)) user.brendan.default_domain.top_architectural_city.structure_count))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04g361m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04g361m ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.01q24l .\n?y ns:government.government_position_held.to ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.04g361m",
        "mid2name": {
            "ns:m.04g361m": "Arcadia City Council Member",
            "ns:m.01q24l": "Councillor"
        },
        "SExpr_w_name": "(JOIN (R government.government_position_held.office_holder) (ARGMAX (AND (JOIN government.government_position_held.basic_title Councillor) (JOIN (R government.government_office_or_title.office_holders) Arcadia City Council Member)) government.government_position_held.to))",
        "SExpr": "(JOIN (R government.government_position_held.office_holder) (ARGMAX (AND (JOIN government.government_position_held.basic_title m.01q24l) (JOIN (R government.government_office_or_title.office_holders) m.04g361m)) government.government_position_held.to))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwlk0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwlk0 ns:biology.cytogenetic_band.chromosome ?y .\n?y ns:biology.chromosome.band ?x .\n?y ns:biology.chromosome.gene ns:m.021mrmc .\n?y ns:biology.chromosome.identifier ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.02kwlk0",
        "mid2name": {
            "ns:m.02kwlk0": "Human Cytogenetic Band 4q31.21",
            "ns:m.021mrmc": "glutamate receptor, ionotropic, delta 2"
        },
        "SExpr_w_name": "(JOIN (R biology.chromosome.band) (ARGMAX (AND (JOIN biology.chromosome.gene glutamate receptor, ionotropic, delta 2) (JOIN (R biology.cytogenetic_band.chromosome) Human Cytogenetic Band 4q31.21)) biology.chromosome.identifier))",
        "SExpr": "(JOIN (R biology.chromosome.band) (ARGMAX (AND (JOIN biology.chromosome.gene m.021mrmc) (JOIN (R biology.cytogenetic_band.chromosome) m.02kwlk0)) biology.chromosome.identifier))"
    }
]