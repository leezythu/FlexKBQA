[
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025sdhl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025sdhl ns:broadcast.tv_channel.network ?y .\n?y ns:award.award_nominee.award_nominations ?x .\n?x ns:award.award_nomination.award ns:m.0y4ynpz .\n?y ns:organization.organization.date_founded ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.025sdhl",
        "mid2name": {
            "ns:m.025sdhl": "Fox Sports South",
            "ns:m.0y4ynpz": "Sports Emmy Award for Outstanding Technical Team Remote"
        },
        "SExpr_w_name": "(AND (JOIN award.award_nomination.award Sports Emmy Award for Outstanding Technical Team Remote) (JOIN (R award.award_nominee.award_nominations) (ARGMAX (JOIN (R broadcast.tv_channel.network) Fox Sports South) organization.organization.date_founded)))",
        "SExpr": "(AND (JOIN award.award_nomination.award m.0y4ynpz) (JOIN (R award.award_nominee.award_nominations) (ARGMAX (JOIN (R broadcast.tv_channel.network) m.025sdhl) organization.organization.date_founded)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d38m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d38m ns:book.book_subject.works ?y .\n?y ns:book.book.editions ?x .\n?x ns:book.book_edition.binding ns:m.023rr3 .\n?y ns:book.written_work.date_of_first_publication ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.0d38m",
        "mid2name": {
            "ns:m.0d38m": "Marathon",
            "ns:m.023rr3": "Hardcover"
        },
        "SExpr_w_name": "(AND (JOIN book.book_edition.binding Hardcover) (JOIN (R book.book.editions) (ARGMAX (JOIN (R book.book_subject.works) Marathon) book.written_work.date_of_first_publication)))",
        "SExpr": "(AND (JOIN book.book_edition.binding m.023rr3) (JOIN (R book.book.editions) (ARGMAX (JOIN (R book.book_subject.works) m.0d38m) book.written_work.date_of_first_publication)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r4w ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.animal_breed.examples ?x .\n?x ns:biology.pedigreed_animal.breed ns:m.02_jdw .\n?y ns:base.petbreeds.dog_breed.apartment_friendly ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.05r4w",
        "mid2name": {
            "ns:m.05r4w": "Portugal",
            "ns:m.02_jdw": "Portuguese Water Dog"
        },
        "SExpr_w_name": "(AND (JOIN biology.pedigreed_animal.breed Portuguese Water Dog) (JOIN (R biology.animal_breed.examples) (ARGMAX (JOIN (R biology.breed_origin.breeds_originating_here) Portugal) base.petbreeds.dog_breed.apartment_friendly)))",
        "SExpr": "(AND (JOIN biology.pedigreed_animal.breed m.02_jdw) (JOIN (R biology.animal_breed.examples) (ARGMAX (JOIN (R biology.breed_origin.breeds_originating_here) m.05r4w) base.petbreeds.dog_breed.apartment_friendly)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0693t2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0693t2 ns:language.human_language.writing_system ?y .\n?y ns:base.ontologies.ontology_instance.equivalent_instances ?x .\n?x ns:base.ontologies.ontology_instance_mapping.ontology ns:m.04dm2p_ .\n?y ns:language.language_writing_system.used_from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.0693t2",
        "mid2name": {
            "ns:m.0693t2": "Arcaicam Esperantom",
            "ns:m.04dm2p_": "OpenCyc"
        },
        "SExpr_w_name": "(AND (JOIN base.ontologies.ontology_instance_mapping.ontology OpenCyc) (JOIN (R base.ontologies.ontology_instance.equivalent_instances) (ARGMAX (JOIN (R language.human_language.writing_system) Arcaicam Esperantom) language.language_writing_system.used_from)))",
        "SExpr": "(AND (JOIN base.ontologies.ontology_instance_mapping.ontology m.04dm2p_) (JOIN (R base.ontologies.ontology_instance.equivalent_instances) (ARGMAX (JOIN (R language.human_language.writing_system) m.0693t2) language.language_writing_system.used_from)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01l1_d2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01l1_d2 ns:music.album.artist ?y .\n?y ns:music.artist.track ?x .\n?x ns:music.recording.artist ns:m.03c61y .\n?y ns:people.person.date_of_birth ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.01l1_d2",
        "mid2name": {
            "ns:m.01l1_d2": "The Calling: Celebrating Sarah Vaughan",
            "ns:m.03c61y": "Dianne Reeves"
        },
        "SExpr_w_name": "(AND (JOIN music.recording.artist Dianne Reeves) (JOIN (R music.artist.track) (ARGMAX (JOIN (R music.album.artist) The Calling: Celebrating Sarah Vaughan) people.person.date_of_birth)))",
        "SExpr": "(AND (JOIN music.recording.artist m.03c61y) (JOIN (R music.artist.track) (ARGMAX (JOIN (R music.album.artist) m.01l1_d2) people.person.date_of_birth)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lh_1v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lh_1v ns:biology.genomic_locus.annotation ?y .\n?y ns:biology.gene.chromosome ?x .\n?x ns:biology.chromosome.band ns:m.02kww_3 .\n?y ns:biology.gene.ncbi_id ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.02lh_1v",
        "mid2name": {
            "ns:m.02lh_1v": "19 - [232042,242434]",
            "ns:m.02kww_3": "Human Cytogenetic Band 19q13.12"
        },
        "SExpr_w_name": "(AND (JOIN biology.chromosome.band Human Cytogenetic Band 19q13.12) (JOIN (R biology.gene.chromosome) (ARGMAX (JOIN (R biology.genomic_locus.annotation) 19 - [232042,242434]) biology.gene.ncbi_id)))",
        "SExpr": "(AND (JOIN biology.chromosome.band m.02kww_3) (JOIN (R biology.gene.chromosome) (ARGMAX (JOIN (R biology.genomic_locus.annotation) m.02lh_1v) biology.gene.ncbi_id)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047q349)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047q349 ns:astronomy.astronomical_observatory.discoveries ?y .\n?y ns:astronomy.asteroid.member_of_asteroid_group ?x .\n?x ns:astronomy.asteroid_group.asteroid_group_members ns:m.0f5d_m .\n?y ns:astronomy.astronomical_discovery.discovery_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.047q349",
        "mid2name": {
            "ns:m.047q349": "Sears Tower – Harvard Observatory",
            "ns:m.0f5d_m": "1971 Hagihara"
        },
        "SExpr_w_name": "(AND (JOIN astronomy.asteroid_group.asteroid_group_members 1971 Hagihara) (JOIN (R astronomy.asteroid.member_of_asteroid_group) (ARGMAX (JOIN (R astronomy.astronomical_observatory.discoveries) Sears Tower – Harvard Observatory) astronomy.astronomical_discovery.discovery_date)))",
        "SExpr": "(AND (JOIN astronomy.asteroid_group.asteroid_group_members m.0f5d_m) (JOIN (R astronomy.asteroid.member_of_asteroid_group) (ARGMAX (JOIN (R astronomy.astronomical_observatory.discoveries) m.047q349) astronomy.astronomical_discovery.discovery_date)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.088yk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.088yk ns:automotive.model.generations ?y .\n?y ns:automotive.model.make ?x .\n?x ns:automotive.make.model_s ns:m.026znxp .\n?y ns:automotive.generation.generation_number ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.088yk",
        "mid2name": {
            "ns:m.088yk": "Datsun/Nissan Z-car",
            "ns:m.026znxp": "Datsun 200B"
        },
        "SExpr_w_name": "(AND (JOIN automotive.make.model_s Datsun 200B) (JOIN (R automotive.model.make) (ARGMAX (JOIN (R automotive.model.generations) Datsun/Nissan Z-car) automotive.generation.generation_number)))",
        "SExpr": "(AND (JOIN automotive.make.model_s m.026znxp) (JOIN (R automotive.model.make) (ARGMAX (JOIN (R automotive.model.generations) m.088yk) automotive.generation.generation_number)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ky49m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ky49m ns:exhibitions.exhibition.produced_by ?y .\n?y ns:award.award_winner.awards_won ?x .\n?x ns:award.award_honor.award ns:m.0b8f_cf .\n?y ns:user.maxim75.default_domain.dbpedia_import.geocode_checked ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.04ky49m",
        "mid2name": {
            "ns:m.04ky49m": "The Suitcase Man: Sculpture by Uri Dushy",
            "ns:m.0b8f_cf": "National Jewish Book Award for Visual Arts"
        },
        "SExpr_w_name": "(AND (JOIN award.award_honor.award National Jewish Book Award for Visual Arts) (JOIN (R award.award_winner.awards_won) (ARGMAX (JOIN (R exhibitions.exhibition.produced_by) The Suitcase Man: Sculpture by Uri Dushy) user.maxim75.default_domain.dbpedia_import.geocode_checked)))",
        "SExpr": "(AND (JOIN award.award_honor.award m.0b8f_cf) (JOIN (R award.award_winner.awards_won) (ARGMAX (JOIN (R exhibitions.exhibition.produced_by) m.04ky49m) user.maxim75.default_domain.dbpedia_import.geocode_checked)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058n_m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058n_m ns:comic_books.comic_book_character.created_by ?y .\n?y ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n?x ns:fictional_universe.work_of_fiction.setting ns:m.06nk67 .\n?y ns:people.deceased_person.date_of_death ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.058n_m",
        "mid2name": {
            "ns:m.058n_m": "Winter Soldier",
            "ns:m.06nk67": "X-Mansion"
        },
        "SExpr_w_name": "(AND (JOIN fictional_universe.work_of_fiction.setting X-Mansion) (JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (ARGMAX (JOIN (R comic_books.comic_book_character.created_by) Winter Soldier) people.deceased_person.date_of_death)))",
        "SExpr": "(AND (JOIN fictional_universe.work_of_fiction.setting m.06nk67) (JOIN (R comic_books.comic_book_penciler.comic_books_penciled) (ARGMAX (JOIN (R comic_books.comic_book_character.created_by) m.058n_m) people.deceased_person.date_of_death)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030p0hl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030p0hl ns:tv.tv_rating.tv_episodes ?y .\n?y ns:tv.tv_series_episode.series ?x .\n?x ns:base.animemanga.manga_title.characters ns:m.01m2gl .\n?y ns:tv.tv_series_episode.air_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.030p0hl",
        "mid2name": {
            "ns:m.030p0hl": "TV Y7 FV",
            "ns:m.01m2gl": "Sailor Pluto"
        },
        "SExpr_w_name": "(AND (JOIN base.animemanga.manga_title.characters Sailor Pluto) (JOIN (R tv.tv_series_episode.series) (ARGMAX (JOIN (R tv.tv_rating.tv_episodes) TV Y7 FV) tv.tv_series_episode.air_date)))",
        "SExpr": "(AND (JOIN base.animemanga.manga_title.characters m.01m2gl) (JOIN (R tv.tv_series_episode.series) (ARGMAX (JOIN (R tv.tv_rating.tv_episodes) m.030p0hl) tv.tv_series_episode.air_date)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d414)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d414 ns:meteorology.tropical_cyclone_season.strongest_storm ?y .\n?y ns:meteorology.tropical_cyclone.category ?x .\n?x ns:meteorology.tropical_cyclone_category.Beaufort_scale ns:m.01xs1n6 .\n?y ns:meteorology.tropical_cyclone.dissipated ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.03d414",
        "mid2name": {
            "ns:m.03d414": "1985 Atlantic hurricane season",
            "ns:m.01xs1n6": "Beaufort force 12"
        },
        "SExpr_w_name": "(AND (JOIN meteorology.tropical_cyclone_category.Beaufort_scale Beaufort force 12) (JOIN (R meteorology.tropical_cyclone.category) (ARGMAX (JOIN (R meteorology.tropical_cyclone_season.strongest_storm) 1985 Atlantic hurricane season) meteorology.tropical_cyclone.dissipated)))",
        "SExpr": "(AND (JOIN meteorology.tropical_cyclone_category.Beaufort_scale m.01xs1n6) (JOIN (R meteorology.tropical_cyclone.category) (ARGMAX (JOIN (R meteorology.tropical_cyclone_season.strongest_storm) m.03d414) meteorology.tropical_cyclone.dissipated)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nbyvr5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nbyvr5 ns:comic_books.comic_book_issue.next_issue ?y .\n?y ns:comic_books.comic_book_issue.part_of_series ?x .\n?x ns:comic_books.comic_book_series.issues ns:m.0nbyvnf .\n?y ns:comic_books.comic_book_issue.date_of_publication ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.0nbyvr5",
        "mid2name": {
            "ns:m.0nbyvr5": "Comet Man #5",
            "ns:m.0nbyvnf": "Comet Man #1"
        },
        "SExpr_w_name": "(AND (JOIN comic_books.comic_book_series.issues Comet Man #1) (JOIN (R comic_books.comic_book_issue.part_of_series) (ARGMAX (JOIN (R comic_books.comic_book_issue.next_issue) Comet Man #5) comic_books.comic_book_issue.date_of_publication)))",
        "SExpr": "(AND (JOIN comic_books.comic_book_series.issues m.0nbyvnf) (JOIN (R comic_books.comic_book_issue.part_of_series) (ARGMAX (JOIN (R comic_books.comic_book_issue.next_issue) m.0nbyvr5) comic_books.comic_book_issue.date_of_publication)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.021ympy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.021ympy ns:dataworld.information_source.data_operations ?y .\n?y ns:dataworld.mass_data_operation.authority ?x .\n?x ns:dataworld.provenance.data_operation ns:m.0gl6dmv .\n?y ns:dataworld.mass_data_operation.ended_operation ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.021ympy",
        "mid2name": {
            "ns:m.021ympy": "Freebase",
            "ns:m.0gl6dmv": "Internal review queue merges"
        },
        "SExpr_w_name": "(AND (JOIN dataworld.provenance.data_operation Internal review queue merges) (JOIN (R dataworld.mass_data_operation.authority) (ARGMAX (JOIN (R dataworld.information_source.data_operations) Freebase) dataworld.mass_data_operation.ended_operation)))",
        "SExpr": "(AND (JOIN dataworld.provenance.data_operation m.0gl6dmv) (JOIN (R dataworld.mass_data_operation.authority) (ARGMAX (JOIN (R dataworld.information_source.data_operations) m.021ympy) dataworld.mass_data_operation.ended_operation)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mnk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mnk ns:user.robert.mobile_phones.product_brand.products ?y .\n?y ns:computer.computer.compatible_oses ?x .\n?x ns:computer.os_compatibility.computer ns:m.0gfj5p7 .\n?y ns:user.robert.mobile_phones.mobile_phone.released ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.03mnk",
        "mid2name": {
            "ns:m.03mnk": "Hewlett-Packard",
            "ns:m.0gfj5p7": "HP Veer"
        },
        "SExpr_w_name": "(AND (JOIN computer.os_compatibility.computer HP Veer) (JOIN (R computer.computer.compatible_oses) (ARGMAX (JOIN (R user.robert.mobile_phones.product_brand.products) Hewlett-Packard) user.robert.mobile_phones.mobile_phone.released)))",
        "SExpr": "(AND (JOIN computer.os_compatibility.computer m.0gfj5p7) (JOIN (R computer.computer.compatible_oses) (ARGMAX (JOIN (R user.robert.mobile_phones.product_brand.products) m.03mnk) user.robert.mobile_phones.mobile_phone.released)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gkk4wr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gkk4wr ns:law.patent_assignee.patents_assigned ?y .\n?y ns:law.us_patent.associated_inventions ?x .\n?x ns:symbols.namesake.named_after ns:m.0gjpq .\n?y ns:law.us_patent.issue_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.0gkk4wr",
        "mid2name": {
            "ns:m.0gkk4wr": "The Board of Trustees of the Leland Stanford Junior University",
            "ns:m.0gjpq": "Larry Page"
        },
        "SExpr_w_name": "(AND (JOIN symbols.namesake.named_after Larry Page) (JOIN (R law.us_patent.associated_inventions) (ARGMAX (JOIN (R law.patent_assignee.patents_assigned) The Board of Trustees of the Leland Stanford Junior University) law.us_patent.issue_date)))",
        "SExpr": "(AND (JOIN symbols.namesake.named_after m.0gjpq) (JOIN (R law.us_patent.associated_inventions) (ARGMAX (JOIN (R law.patent_assignee.patents_assigned) m.0gkk4wr) law.us_patent.issue_date)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03c71d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03c71d ns:sports.boxing_weight_division.matches ?y .\n?y ns:time.event.locations ?x .\n?x ns:music.performance_venue.concerts ns:m.0n_5rg6 .\n?y ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.03c71d",
        "mid2name": {
            "ns:m.03c71d": "Featherweight",
            "ns:m.0n_5rg6": "12.12.12: The Concert for Sandy Relief"
        },
        "SExpr_w_name": "(AND (JOIN music.performance_venue.concerts 12.12.12: The Concert for Sandy Relief) (JOIN (R time.event.locations) (ARGMAX (JOIN (R sports.boxing_weight_division.matches) Featherweight) time.event.end_date)))",
        "SExpr": "(AND (JOIN music.performance_venue.concerts m.0n_5rg6) (JOIN (R time.event.locations) (ARGMAX (JOIN (R sports.boxing_weight_division.matches) m.03c71d) time.event.end_date)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wsb25)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wsb25 ns:wine.wine_color.wines ?y .\n?y ns:wine.wine.wine_style ?x .\n?x ns:food.wine_style.grape_varieties ns:m.0cc86j0 .\n?y ns:wine.wine.vintage ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.02wsb25",
        "mid2name": {
            "ns:m.02wsb25": "White Wine",
            "ns:m.0cc86j0": "Falanghina"
        },
        "SExpr_w_name": "(AND (JOIN food.wine_style.grape_varieties Falanghina) (JOIN (R wine.wine.wine_style) (ARGMAX (JOIN (R wine.wine_color.wines) White Wine) wine.wine.vintage)))",
        "SExpr": "(AND (JOIN food.wine_style.grape_varieties m.0cc86j0) (JOIN (R wine.wine.wine_style) (ARGMAX (JOIN (R wine.wine_color.wines) m.02wsb25) wine.wine.vintage)))"
    },
    {
        "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_41)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_41 ns:base.disaster2.train_accident_cause.train_accidents_caused_this_way ?y .\n?y ns:base.crime.crime.resulting_convictions ?x .\n?x ns:base.crime.criminal_conviction.convicted_person ns:m.05b96h1 .\n?y ns:time.event.start_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "TopicEntityMid": "m.02_41",
        "mid2name": {
            "ns:m.02_41": "Fire",
            "ns:m.05b96h1": "Kim Dae-han"
        },
        "SExpr_w_name": "(AND (JOIN base.crime.criminal_conviction.convicted_person Kim Dae-han) (JOIN (R base.crime.crime.resulting_convictions) (ARGMAX (JOIN (R base.disaster2.train_accident_cause.train_accidents_caused_this_way) Fire) time.event.start_date)))",
        "SExpr": "(AND (JOIN base.crime.criminal_conviction.convicted_person m.05b96h1) (JOIN (R base.crime.crime.resulting_convictions) (ARGMAX (JOIN (R base.disaster2.train_accident_cause.train_accidents_caused_this_way) m.02_41) time.event.start_date)))"
    }
]