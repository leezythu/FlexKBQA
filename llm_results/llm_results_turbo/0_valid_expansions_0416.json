{
    "0": {
        "generations": "What is the fermentation base for Booker's distilled spirit?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.046gsrg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.046gsrg ns:distilled_spirits.distilled_spirit.fermentation_base ?x .\n}\n",
            "TopicEntityMid": "m.046gsrg",
            "mid2name": {
                "ns:m.046gsrg": "Booker's"
            },
            "SExpr_w_name": "(JOIN (R distilled_spirits.distilled_spirit.fermentation_base) Booker's)",
            "SExpr": "(JOIN (R distilled_spirits.distilled_spirit.fermentation_base) m.046gsrg)"
        }
    },
    "1": {
        "generations": "who won the primary election for california's 35th state senate district in 2008?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03yxf3t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03yxf3t ns:government.election.primaries ?x .\n}\n",
            "TopicEntityMid": "m.03yxf3t",
            "mid2name": {
                "ns:m.03yxf3t": "California\u2019s 35th State Senate district election, 2008"
            },
            "SExpr_w_name": "(JOIN (R government.election.primaries) California\u2019s 35th State Senate district election, 2008)",
            "SExpr": "(JOIN (R government.election.primaries) m.03yxf3t)"
        }
    },
    "2": {
        "generations": "What category of tropical cyclone is associated with Beaufort force 9?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xs1np)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xs1np ns:meteorology.beaufort_wind_force.tropical_cyclone_categories ?x .\n}\n",
            "TopicEntityMid": "m.01xs1np",
            "mid2name": {
                "ns:m.01xs1np": "Beaufort force 9"
            },
            "SExpr_w_name": "(JOIN (R meteorology.beaufort_wind_force.tropical_cyclone_categories) Beaufort force 9)",
            "SExpr": "(JOIN (R meteorology.beaufort_wind_force.tropical_cyclone_categories) m.01xs1np)"
        }
    },
    "3": {
        "generations": "What songs did Marion Hutton perform?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0302f0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0302f0 ns:music.artist.track ?x .\n}\n",
            "TopicEntityMid": "m.0302f0",
            "mid2name": {
                "ns:m.0302f0": "Marion Hutton"
            },
            "SExpr_w_name": "(JOIN (R music.artist.track) Marion Hutton)",
            "SExpr": "(JOIN (R music.artist.track) m.0302f0)"
        }
    },
    "4": {
        "generations": "who is the author of the book series \"Fire in Winter\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qc2w4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qc2w4 ns:book.literary_series.author_s ?x .\n}\n",
            "TopicEntityMid": "m.05qc2w4",
            "mid2name": {
                "ns:m.05qc2w4": "Fire in Winter"
            },
            "SExpr_w_name": "(JOIN (R book.literary_series.author_s) Fire in Winter)",
            "SExpr": "(JOIN (R book.literary_series.author_s) m.05qc2w4)"
        }
    },
    "5": {
        "generations": "What cameras are manufactured by Nikon Corporation?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pmfw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pmfw ns:base.filmcameras.camera_manufacturer.cameras_manufactured ?x .\n}\n",
            "TopicEntityMid": "m.03pmfw",
            "mid2name": {
                "ns:m.03pmfw": "Nikon Corporation"
            },
            "SExpr_w_name": "(JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) Nikon Corporation)",
            "SExpr": "(JOIN (R base.filmcameras.camera_manufacturer.cameras_manufactured) m.03pmfw)"
        }
    },
    "6": {
        "generations": "what was agnes moorehead's gender?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01csrl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01csrl ns:people.person.gender ?x .\n}\n",
            "TopicEntityMid": "m.01csrl",
            "mid2name": {
                "ns:m.01csrl": "Agnes Moorehead"
            },
            "SExpr_w_name": "(JOIN (R people.person.gender) Agnes Moorehead)",
            "SExpr": "(JOIN (R people.person.gender) m.01csrl)"
        }
    },
    "7": {
        "generations": "What years was the Plymouth Satellite produced as a muscle car?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.077z_8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.077z_8 ns:base.musclecars.muscle_car.model_years ?x .\n}\n",
            "TopicEntityMid": "m.077z_8",
            "mid2name": {
                "ns:m.077z_8": "Plymouth Satellite"
            },
            "SExpr_w_name": "(JOIN (R base.musclecars.muscle_car.model_years) Plymouth Satellite)",
            "SExpr": "(JOIN (R base.musclecars.muscle_car.model_years) m.077z_8)"
        }
    },
    "8": {
        "generations": "What is the patent number for the method of fabricating an electrostatic ultrasonic transducer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j3lngp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j3lngp ns:law.us_patent.associated_inventions ?x .\n}\n",
            "TopicEntityMid": "m.0j3lngp",
            "mid2name": {
                "ns:m.0j3lngp": "Method of fabricating an electrostatic ultrasonic transducer: U.S. Patent No. 6,004,832"
            },
            "SExpr_w_name": "(JOIN (R law.us_patent.associated_inventions) Method of fabricating an electrostatic ultrasonic transducer: U.S. Patent No. 6,004,832)",
            "SExpr": "(JOIN (R law.us_patent.associated_inventions) m.0j3lngp)"
        }
    },
    "9": {
        "generations": "What category does StopFinder belong to on the internet?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gd48j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gd48j ns:internet.website.category ?x .\n}\n",
            "TopicEntityMid": "m.04gd48j",
            "mid2name": {
                "ns:m.04gd48j": "StopFinder"
            },
            "SExpr_w_name": "(JOIN (R internet.website.category) StopFinder)",
            "SExpr": "(JOIN (R internet.website.category) m.04gd48j)"
        }
    },
    "10": {
        "generations": "What type of paint is used in encaustic art?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bszv6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bszv6 ns:visual_art.visual_art_medium.artworks ?x .\n}\n",
            "TopicEntityMid": "m.05bszv6",
            "mid2name": {
                "ns:m.05bszv6": "Encaustic paint"
            },
            "SExpr_w_name": "(JOIN (R visual_art.visual_art_medium.artworks) Encaustic paint)",
            "SExpr": "(JOIN (R visual_art.visual_art_medium.artworks) m.05bszv6)"
        }
    },
    "11": {
        "generations": "Where is the Griffith Observatory located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_4ml)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_4ml ns:location.location.containedby ?x .\n}\n",
            "TopicEntityMid": "m.02_4ml",
            "mid2name": {
                "ns:m.02_4ml": "Griffith Observatory"
            },
            "SExpr_w_name": "(JOIN (R location.location.containedby) Griffith Observatory)",
            "SExpr": "(JOIN (R location.location.containedby) m.02_4ml)"
        }
    },
    "12": {
        "generations": "What category was Tropical Storm Grace?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.080nh43)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.080nh43 ns:meteorology.tropical_cyclone.category ?x .\n}\n",
            "TopicEntityMid": "m.080nh43",
            "mid2name": {
                "ns:m.080nh43": "Tropical Storm Grace"
            },
            "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone.category) Tropical Storm Grace)",
            "SExpr": "(JOIN (R meteorology.tropical_cyclone.category) m.080nh43)"
        }
    },
    "13": {
        "generations": "who created the death star in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f325)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f325 ns:fictional_universe.fictional_object.created_by ?x .\n}\n",
            "TopicEntityMid": "m.0f325",
            "mid2name": {
                "ns:m.0f325": "Death Star"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.created_by) Death Star)",
            "SExpr": "(JOIN (R fictional_universe.fictional_object.created_by) m.0f325)"
        }
    },
    "14": {
        "generations": "where is the headquarters of stanford cancer institute located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_754t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_754t ns:organization.organization.headquarters ?x .\n}\n",
            "TopicEntityMid": "m.04_754t",
            "mid2name": {
                "ns:m.04_754t": "Stanford Cancer Institute"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.headquarters) Stanford Cancer Institute)",
            "SExpr": "(JOIN (R organization.organization.headquarters) m.04_754t)"
        }
    },
    "15": {
        "generations": "What discoveries were made at the Vienna Observatory?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08k4xy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08k4xy ns:astronomy.astronomical_observatory.discoveries ?x .\n}\n",
            "TopicEntityMid": "m.08k4xy",
            "mid2name": {
                "ns:m.08k4xy": "Vienna Observatory"
            },
            "SExpr_w_name": "(JOIN (R astronomy.astronomical_observatory.discoveries) Vienna Observatory)",
            "SExpr": "(JOIN (R astronomy.astronomical_observatory.discoveries) m.08k4xy)"
        }
    },
    "16": {
        "generations": "What type of album is \"Single\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014k0b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014k0b ns:music.release.album ?x .\n}\n",
            "TopicEntityMid": "m.014k0b",
            "mid2name": {
                "ns:m.014k0b": "Single"
            },
            "SExpr_w_name": "(JOIN (R music.release.album) Single)",
            "SExpr": "(JOIN (R music.release.album) m.014k0b)"
        }
    },
    "17": {
        "generations": "Which armed force was the 4th Regiment Kentucky Volunteer Infantry a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rmjm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rmjm ns:military.military_unit.armed_force ?x .\n}\n",
            "TopicEntityMid": "m.09rmjm",
            "mid2name": {
                "ns:m.09rmjm": "4th Regiment Kentucky Volunteer Infantry"
            },
            "SExpr_w_name": "(JOIN (R military.military_unit.armed_force) 4th Regiment Kentucky Volunteer Infantry)",
            "SExpr": "(JOIN (R military.military_unit.armed_force) m.09rmjm)"
        }
    },
    "18": {
        "generations": "What was the PPP's standing in the 2012 presidential election on June 27th, 2012?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0m3k6d6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0m3k6d6 ns:government.election_poll.election ?x .\n}\n",
            "TopicEntityMid": "m.0m3k6d6",
            "mid2name": {
                "ns:m.0m3k6d6": "PPP (D), 2012 presidential election, 2012-06-27"
            },
            "SExpr_w_name": "(JOIN (R government.election_poll.election) PPP (D), 2012 presidential election, 2012-06-27)",
            "SExpr": "(JOIN (R government.election_poll.election) m.0m3k6d6)"
        }
    },
    "19": {
        "generations": "What is DECtape?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mfzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mfzw ns:computer.computer_peripheral.peripheral_class ?x .\n}\n",
            "TopicEntityMid": "m.03mfzw",
            "mid2name": {
                "ns:m.03mfzw": "DECtape"
            },
            "SExpr_w_name": "(JOIN (R computer.computer_peripheral.peripheral_class) DECtape)",
            "SExpr": "(JOIN (R computer.computer_peripheral.peripheral_class) m.03mfzw)"
        }
    },
    "20": {
        "generations": "What is the higher classification of the Croatian Sheepdog?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025_s6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025_s6d ns:biology.organism_classification.higher_classification ?x .\n}\n",
            "TopicEntityMid": "m.025_s6d",
            "mid2name": {
                "ns:m.025_s6d": "Croatian Sheepdog"
            },
            "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) Croatian Sheepdog)",
            "SExpr": "(JOIN (R biology.organism_classification.higher_classification) m.025_s6d)"
        }
    },
    "21": {
        "generations": "What type of accommodation has an executive desk?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bj661w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bj661w ns:travel.accommodation_feature.accommodation_with_this_feature ?x .\n}\n",
            "TopicEntityMid": "m.0bj661w",
            "mid2name": {
                "ns:m.0bj661w": "Executive Desk"
            },
            "SExpr_w_name": "(JOIN (R travel.accommodation_feature.accommodation_with_this_feature) Executive Desk)",
            "SExpr": "(JOIN (R travel.accommodation_feature.accommodation_with_this_feature) m.0bj661w)"
        }
    },
    "22": {
        "generations": "what books has the walt disney company written?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b3v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b3v ns:book.author.works_written ?x .\n}\n",
            "TopicEntityMid": "m.09b3v",
            "mid2name": {
                "ns:m.09b3v": "The Walt Disney Company"
            },
            "SExpr_w_name": "(JOIN (R book.author.works_written) The Walt Disney Company)",
            "SExpr": "(JOIN (R book.author.works_written) m.09b3v)"
        }
    },
    "23": {
        "generations": "What language family does Yoruba Language belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01zycf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01zycf ns:language.human_language.language_family ?x .\n}\n",
            "TopicEntityMid": "m.01zycf",
            "mid2name": {
                "ns:m.01zycf": "Yoruba Language"
            },
            "SExpr_w_name": "(JOIN (R language.human_language.language_family) Yoruba Language)",
            "SExpr": "(JOIN (R language.human_language.language_family) m.01zycf)"
        }
    },
    "24": {
        "generations": "What conflicts was the Egyptian 25th Brigade involved in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kfrs94)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kfrs94 ns:military.military_resource.conflicts ?x .\n}\n",
            "TopicEntityMid": "m.0kfrs94",
            "mid2name": {
                "ns:m.0kfrs94": "Egyptian 25th Brigade"
            },
            "SExpr_w_name": "(JOIN (R military.military_resource.conflicts) Egyptian 25th Brigade)",
            "SExpr": "(JOIN (R military.military_resource.conflicts) m.0kfrs94)"
        }
    },
    "25": {
        "generations": "Which country classifies Schedule 8 Controlled Drug as a controlled substance?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d1kll)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d1kll ns:medicine.drug_legal_status.country ?x .\n}\n",
            "TopicEntityMid": "m.04d1kll",
            "mid2name": {
                "ns:m.04d1kll": "Schedule 8 Controlled Drug"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_legal_status.country) Schedule 8 Controlled Drug)",
            "SExpr": "(JOIN (R medicine.drug_legal_status.country) m.04d1kll)"
        }
    },
    "26": {
        "generations": "In what language is the Dutch version of Big Brother broadcasted?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07cf8hy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07cf8hy ns:tv.tv_program.languages ?x .\n}\n",
            "TopicEntityMid": "m.07cf8hy",
            "mid2name": {
                "ns:m.07cf8hy": "Big Brother (NL)"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program.languages) Big Brother (NL))",
            "SExpr": "(JOIN (R tv.tv_program.languages) m.07cf8hy)"
        }
    },
    "27": {
        "generations": "How do you pronounce \"muscle weakness\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0927l7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0927l7 ns:base.schemastaging.context_name.pronunciation ?x .\n}\n",
            "TopicEntityMid": "m.0927l7",
            "mid2name": {
                "ns:m.0927l7": "Muscle weakness"
            },
            "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) Muscle weakness)",
            "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) m.0927l7)"
        }
    },
    "28": {
        "generations": "Who is the artist of the album \"Too Bright\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0120wf_3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0120wf_3 ns:music.album.artist ?x .\n}\n",
            "TopicEntityMid": "m.0120wf_3",
            "mid2name": {
                "ns:m.0120wf_3": "Too Bright"
            },
            "SExpr_w_name": "(JOIN (R music.album.artist) Too Bright)",
            "SExpr": "(JOIN (R music.album.artist) m.0120wf_3)"
        }
    },
    "29": {
        "generations": "In which fictional universes does Ishi Nakamura appear?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gghrt7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gghrt7 ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n",
            "TopicEntityMid": "m.0gghrt7",
            "mid2name": {
                "ns:m.0gghrt7": "Ishi Nakamura"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Ishi Nakamura)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0gghrt7)"
        }
    },
    "30": {
        "generations": "What brand is the Barbie Doll modeled after Marilyn Monroe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05h15kz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05h15kz ns:business.consumer_product.brand ?x .\n}\n",
            "TopicEntityMid": "m.05h15kz",
            "mid2name": {
                "ns:m.05h15kz": "Barbie Doll as Marilyn Monroe"
            },
            "SExpr_w_name": "(JOIN (R business.consumer_product.brand) Barbie Doll as Marilyn Monroe)",
            "SExpr": "(JOIN (R business.consumer_product.brand) m.05h15kz)"
        }
    },
    "31": {
        "generations": "when is the next ashes tournament?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0m9m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0m9m ns:time.recurring_event.instances ?x .\n}\n",
            "TopicEntityMid": "m.0m9m",
            "mid2name": {
                "ns:m.0m9m": "The Ashes"
            },
            "SExpr_w_name": "(JOIN (R time.recurring_event.instances) The Ashes)",
            "SExpr": "(JOIN (R time.recurring_event.instances) m.0m9m)"
        }
    },
    "32": {
        "generations": "What award nominations did Love's Labours Lost receive?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zdd7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zdd7h6 ns:award.award_nominated_work.award_nominations ?x .\n}\n",
            "TopicEntityMid": "m.0zdd7h6",
            "mid2name": {
                "ns:m.0zdd7h6": "Love's Labours Lost"
            },
            "SExpr_w_name": "(JOIN (R award.award_nominated_work.award_nominations) Love's Labours Lost)",
            "SExpr": "(JOIN (R award.award_nominated_work.award_nominations) m.0zdd7h6)"
        }
    },
    "33": {
        "generations": "What disease is being studied in the medical trial \"Role of Antibodies in Cognitive Dysfunction in Patients With Systemic Lupus Erythematosus\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dhj52)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dhj52 ns:medicine.medical_trial.diseases ?x .\n}\n",
            "TopicEntityMid": "m.04dhj52",
            "mid2name": {
                "ns:m.04dhj52": "Role of Antibodies in Cognitive Dysfunction in Patients With Systemic Lupus Erythematosus"
            },
            "SExpr_w_name": "(JOIN (R medicine.medical_trial.diseases) Role of Antibodies in Cognitive Dysfunction in Patients With Systemic Lupus Erythematosus)",
            "SExpr": "(JOIN (R medicine.medical_trial.diseases) m.04dhj52)"
        }
    },
    "34": {
        "generations": "What league does the Portugal national football team belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rqxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rqxc ns:sports.sports_team.league ?x .\n}\n",
            "TopicEntityMid": "m.02rqxc",
            "mid2name": {
                "ns:m.02rqxc": "Portugal national football team"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team.league) Portugal national football team)",
            "SExpr": "(JOIN (R sports.sports_team.league) m.02rqxc)"
        }
    },
    "35": {
        "generations": "Who wrote the book High Moon?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0b063)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0b063 ns:book.written_work.author ?x .\n}\n",
            "TopicEntityMid": "m.0c0b063",
            "mid2name": {
                "ns:m.0c0b063": "High Moon"
            },
            "SExpr_w_name": "(JOIN (R book.written_work.author) High Moon)",
            "SExpr": "(JOIN (R book.written_work.author) m.0c0b063)"
        }
    },
    "36": {
        "generations": "where was the ukrainian greek catholic church founded?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cd38)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cd38 ns:organization.organization.place_founded ?x .\n}\n",
            "TopicEntityMid": "m.02cd38",
            "mid2name": {
                "ns:m.02cd38": "Ukrainian Greek Catholic Church"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.place_founded) Ukrainian Greek Catholic Church)",
            "SExpr": "(JOIN (R organization.organization.place_founded) m.02cd38)"
        }
    },
    "37": {
        "generations": "What is the band of the Y chromosome in humans?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgmp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgmp ns:biology.chromosome.band ?x .\n}\n",
            "TopicEntityMid": "m.02kwgmp",
            "mid2name": {
                "ns:m.02kwgmp": "Chromosome Y (human)"
            },
            "SExpr_w_name": "(JOIN (R biology.chromosome.band) Chromosome Y (human))",
            "SExpr": "(JOIN (R biology.chromosome.band) m.02kwgmp)"
        }
    },
    "38": {
        "generations": "What is the parent material class of aluminum alloy 2024?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04mkrtb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04mkrtb ns:engineering.material.parent_material_class ?x .\n}\n",
            "TopicEntityMid": "m.04mkrtb",
            "mid2name": {
                "ns:m.04mkrtb": "Aluminum Alloy 2024"
            },
            "SExpr_w_name": "(JOIN (R engineering.material.parent_material_class) Aluminum Alloy 2024)",
            "SExpr": "(JOIN (R engineering.material.parent_material_class) m.04mkrtb)"
        }
    },
    "39": {
        "generations": "Which areas were affected by Hurricane Audrey?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cb0_2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cb0_2 ns:meteorology.tropical_cyclone.affected_areas ?x .\n}\n",
            "TopicEntityMid": "m.0cb0_2",
            "mid2name": {
                "ns:m.0cb0_2": "Hurricane Audrey"
            },
            "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone.affected_areas) Hurricane Audrey)",
            "SExpr": "(JOIN (R meteorology.tropical_cyclone.affected_areas) m.0cb0_2)"
        }
    },
    "40": {
        "generations": "who were the associated artists of the international gothic art movement?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fg2w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fg2w ns:visual_art.art_period_movement.associated_artists ?x .\n}\n",
            "TopicEntityMid": "m.01fg2w",
            "mid2name": {
                "ns:m.01fg2w": "International Gothic"
            },
            "SExpr_w_name": "(JOIN (R visual_art.art_period_movement.associated_artists) International Gothic)",
            "SExpr": "(JOIN (R visual_art.art_period_movement.associated_artists) m.01fg2w)"
        }
    },
    "41": {
        "generations": "Who is the artist of the recording \"Tjaldva\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0114bp6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0114bp6z ns:music.recording.artist ?x .\n}\n",
            "TopicEntityMid": "m.0114bp6z",
            "mid2name": {
                "ns:m.0114bp6z": "Tjaldva"
            },
            "SExpr_w_name": "(JOIN (R music.recording.artist) Tjaldva)",
            "SExpr": "(JOIN (R music.recording.artist) m.0114bp6z)"
        }
    },
    "42": {
        "generations": "What type of hops are similar to Centennial in lightweight beer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0115clqx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0115clqx ns:base.lightweight.beer_hop.hops_similar ?x .\n}\n",
            "TopicEntityMid": "m.0115clqx",
            "mid2name": {
                "ns:m.0115clqx": "Centennial"
            },
            "SExpr_w_name": "(JOIN (R base.lightweight.beer_hop.hops_similar) Centennial)",
            "SExpr": "(JOIN (R base.lightweight.beer_hop.hops_similar) m.0115clqx)"
        }
    },
    "43": {
        "generations": "What TV show has an episode called \"Are You Decent?\"",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0125hnw3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0125hnw3 ns:tv.tv_episode_segment.episodes ?x .\n}\n",
            "TopicEntityMid": "m.0125hnw3",
            "mid2name": {
                "ns:m.0125hnw3": "Are You Decent?"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_episode_segment.episodes) Are You Decent?)",
            "SExpr": "(JOIN (R tv.tv_episode_segment.episodes) m.0125hnw3)"
        }
    },
    "44": {
        "generations": "What area does WDFX-TV broadcast to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cbwrz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cbwrz ns:broadcast.broadcast.area_served ?x .\n}\n",
            "TopicEntityMid": "m.0cbwrz",
            "mid2name": {
                "ns:m.0cbwrz": "WDFX-TV"
            },
            "SExpr_w_name": "(JOIN (R broadcast.broadcast.area_served) WDFX-TV)",
            "SExpr": "(JOIN (R broadcast.broadcast.area_served) m.0cbwrz)"
        }
    },
    "45": {
        "generations": "What dishes can be made with white rum as an ingredient?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05n1hyb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05n1hyb ns:food.ingredient.dishes ?x .\n}\n",
            "TopicEntityMid": "m.05n1hyb",
            "mid2name": {
                "ns:m.05n1hyb": "White Rum"
            },
            "SExpr_w_name": "(JOIN (R food.ingredient.dishes) White Rum)",
            "SExpr": "(JOIN (R food.ingredient.dishes) m.05n1hyb)"
        }
    },
    "46": {
        "generations": "What clubs are interested in Scotland?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06q1r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06q1r ns:organization.club_interest.clubs ?x .\n}\n",
            "TopicEntityMid": "m.06q1r",
            "mid2name": {
                "ns:m.06q1r": "Scotland"
            },
            "SExpr_w_name": "(JOIN (R organization.club_interest.clubs) Scotland)",
            "SExpr": "(JOIN (R organization.club_interest.clubs) m.06q1r)"
        }
    },
    "47": {
        "generations": "Who are some artists in the Bollywood music genre?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01chg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01chg ns:music.genre.artists ?x .\n}\n",
            "TopicEntityMid": "m.01chg",
            "mid2name": {
                "ns:m.01chg": "Bollywood"
            },
            "SExpr_w_name": "(JOIN (R music.genre.artists) Bollywood)",
            "SExpr": "(JOIN (R music.genre.artists) m.01chg)"
        }
    },
    "48": {
        "generations": "Who founded Gallup organization?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dhqxv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dhqxv ns:organization.organization.founders ?x .\n}\n",
            "TopicEntityMid": "m.0dhqxv",
            "mid2name": {
                "ns:m.0dhqxv": "Gallup"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.founders) Gallup)",
            "SExpr": "(JOIN (R organization.organization.founders) m.0dhqxv)"
        }
    },
    "49": {
        "generations": "What is the book Cheo Chai-Hiang, thoughts and processes: rethinking the Singapore river about?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09357p4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09357p4 ns:book.book_edition.book ?x .\n}\n",
            "TopicEntityMid": "m.09357p4",
            "mid2name": {
                "ns:m.09357p4": "Cheo Chai-Hiang, thoughts and processes: rethinking the Singapore river"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition.book) Cheo Chai-Hiang, thoughts and processes: rethinking the Singapore river)",
            "SExpr": "(JOIN (R book.book_edition.book) m.09357p4)"
        }
    },
    "50": {
        "generations": "What is the gender of Staffer #6 in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y8bz82)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y8bz82 ns:fictional_universe.fictional_character.gender ?x .\n}\n",
            "TopicEntityMid": "m.0y8bz82",
            "mid2name": {
                "ns:m.0y8bz82": "Staffer #6"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.gender) Staffer #6)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.gender) m.0y8bz82)"
        }
    },
    "51": {
        "generations": "who owns the brand Adderall?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_ggb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_ggb ns:business.brand.owner_s ?x .\n}\n",
            "TopicEntityMid": "m.02_ggb",
            "mid2name": {
                "ns:m.02_ggb": "Adderall"
            },
            "SExpr_w_name": "(JOIN (R business.brand.owner_s) Adderall)",
            "SExpr": "(JOIN (R business.brand.owner_s) m.02_ggb)"
        }
    },
    "52": {
        "generations": "What is the name of the API for Digg?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hz97f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hz97f ns:internet.api.site ?x .\n}\n",
            "TopicEntityMid": "m.02hz97f",
            "mid2name": {
                "ns:m.02hz97f": "Digg API"
            },
            "SExpr_w_name": "(JOIN (R internet.api.site) Digg API)",
            "SExpr": "(JOIN (R internet.api.site) m.02hz97f)"
        }
    },
    "53": {
        "generations": "Which amusement park has the ride called Tempest?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j8pqdb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j8pqdb ns:amusement_parks.ride.park ?x .\n}\n",
            "TopicEntityMid": "m.0j8pqdb",
            "mid2name": {
                "ns:m.0j8pqdb": "Tempest"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.ride.park) Tempest)",
            "SExpr": "(JOIN (R amusement_parks.ride.park) m.0j8pqdb)"
        }
    },
    "54": {
        "generations": "What movie was costume designed by 1941?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04t6fk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04t6fk ns:film.film.costume_design_by ?x .\n}\n",
            "TopicEntityMid": "m.04t6fk",
            "mid2name": {
                "ns:m.04t6fk": "1941"
            },
            "SExpr_w_name": "(JOIN (R film.film.costume_design_by) 1941)",
            "SExpr": "(JOIN (R film.film.costume_design_by) m.04t6fk)"
        }
    },
    "55": {
        "generations": "who created the language Sindarin?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g3cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g3cc ns:language.conlang.created_by ?x .\n}\n",
            "TopicEntityMid": "m.0g3cc",
            "mid2name": {
                "ns:m.0g3cc": "Sindarin"
            },
            "SExpr_w_name": "(JOIN (R language.conlang.created_by) Sindarin)",
            "SExpr": "(JOIN (R language.conlang.created_by) m.0g3cc)"
        }
    },
    "56": {
        "generations": "What characters are in the fictional universe of Millennium?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ngkhkg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ngkhkg ns:fictional_universe.fictional_universe.characters ?x .\n}\n",
            "TopicEntityMid": "m.0ngkhkg",
            "mid2name": {
                "ns:m.0ngkhkg": "Millennium"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.characters) Millennium)",
            "SExpr": "(JOIN (R fictional_universe.fictional_universe.characters) m.0ngkhkg)"
        }
    },
    "57": {
        "generations": "What books are about vegetarian food?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_lq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_lq ns:book.book_subject.works ?x .\n}\n",
            "TopicEntityMid": "m.07_lq",
            "mid2name": {
                "ns:m.07_lq": "Vegetarian food"
            },
            "SExpr_w_name": "(JOIN (R book.book_subject.works) Vegetarian food)",
            "SExpr": "(JOIN (R book.book_subject.works) m.07_lq)"
        }
    },
    "58": {
        "generations": "Which cameras have an ISO of 3200?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xrg4v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xrg4v ns:digicams.camera_iso.cameras ?x .\n}\n",
            "TopicEntityMid": "m.01xrg4v",
            "mid2name": {
                "ns:m.01xrg4v": "3200"
            },
            "SExpr_w_name": "(JOIN (R digicams.camera_iso.cameras) 3200)",
            "SExpr": "(JOIN (R digicams.camera_iso.cameras) m.01xrg4v)"
        }
    },
    "59": {
        "generations": "what are some historical places of worship for anglicanism?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n2g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n2g ns:religion.religion.places_of_worship_historical ?x .\n}\n",
            "TopicEntityMid": "m.0n2g",
            "mid2name": {
                "ns:m.0n2g": "Anglicanism"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.places_of_worship_historical) Anglicanism)",
            "SExpr": "(JOIN (R religion.religion.places_of_worship_historical) m.0n2g)"
        }
    },
    "60": {
        "generations": "What is the UWH criteria iii category for protected sites?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_g3xd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_g3xd ns:protected_sites.site_listing_category.category_of ?x .\n}\n",
            "TopicEntityMid": "m.05_g3xd",
            "mid2name": {
                "ns:m.05_g3xd": "UWH criteria iii"
            },
            "SExpr_w_name": "(JOIN (R protected_sites.site_listing_category.category_of) UWH criteria iii)",
            "SExpr": "(JOIN (R protected_sites.site_listing_category.category_of) m.05_g3xd)"
        }
    },
    "61": {
        "generations": "What works are set in Coffee A Go-Go fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gyrq0p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gyrq0p ns:fictional_universe.fictional_setting.works_set_here ?x .\n}\n",
            "TopicEntityMid": "m.0gyrq0p",
            "mid2name": {
                "ns:m.0gyrq0p": "Coffee A Go-Go"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.works_set_here) Coffee A Go-Go)",
            "SExpr": "(JOIN (R fictional_universe.fictional_setting.works_set_here) m.0gyrq0p)"
        }
    },
    "62": {
        "generations": "What equipment is related to unicycling?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07wny)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07wny ns:sports.sport.related_equipment ?x .\n}\n",
            "TopicEntityMid": "m.07wny",
            "mid2name": {
                "ns:m.07wny": "Unicycling"
            },
            "SExpr_w_name": "(JOIN (R sports.sport.related_equipment) Unicycling)",
            "SExpr": "(JOIN (R sports.sport.related_equipment) m.07wny)"
        }
    },
    "63": {
        "generations": "What organization is NCAA Division II a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g9q4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g9q4 ns:organization.organization.parent ?x .\n}\n",
            "TopicEntityMid": "m.05g9q4",
            "mid2name": {
                "ns:m.05g9q4": "NCAA Division II"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.parent) NCAA Division II)",
            "SExpr": "(JOIN (R organization.organization.parent) m.05g9q4)"
        }
    },
    "64": {
        "generations": "which colleges and universities have a Gamma Delta Chi fraternity or sorority?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hf41)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hf41 ns:education.fraternity_sorority.colleges_and_universities ?x .\n}\n",
            "TopicEntityMid": "m.07hf41",
            "mid2name": {
                "ns:m.07hf41": "Gamma Delta Chi"
            },
            "SExpr_w_name": "(JOIN (R education.fraternity_sorority.colleges_and_universities) Gamma Delta Chi)",
            "SExpr": "(JOIN (R education.fraternity_sorority.colleges_and_universities) m.07hf41)"
        }
    },
    "65": {
        "generations": "which comic book covers did tom taggart ink?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jyx7k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jyx7k ns:comic_books.comic_book_inker.comic_covers_inked ?x .\n}\n",
            "TopicEntityMid": "m.0jyx7k",
            "mid2name": {
                "ns:m.0jyx7k": "Tom Taggart"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) Tom Taggart)",
            "SExpr": "(JOIN (R comic_books.comic_book_inker.comic_covers_inked) m.0jyx7k)"
        }
    },
    "66": {
        "generations": "What artworks are part of the Montmartre art series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gttjjq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gttjjq ns:visual_art.art_series.artworks ?x .\n}\n",
            "TopicEntityMid": "m.0gttjjq",
            "mid2name": {
                "ns:m.0gttjjq": "Montmartre"
            },
            "SExpr_w_name": "(JOIN (R visual_art.art_series.artworks) Montmartre)",
            "SExpr": "(JOIN (R visual_art.art_series.artworks) m.0gttjjq)"
        }
    },
    "67": {
        "generations": "What industry is Gulf Air in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02156z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02156z ns:business.business_operation.industry ?x .\n}\n",
            "TopicEntityMid": "m.02156z",
            "mid2name": {
                "ns:m.02156z": "Gulf Air"
            },
            "SExpr_w_name": "(JOIN (R business.business_operation.industry) Gulf Air)",
            "SExpr": "(JOIN (R business.business_operation.industry) m.02156z)"
        }
    },
    "68": {
        "generations": "Where does the event in the book \"The Band brings gods to Sandia\" take place?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c1c78q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c1c78q ns:base.militaryinfiction.event_in_fiction.location ?x .\n}\n",
            "TopicEntityMid": "m.0c1c78q",
            "mid2name": {
                "ns:m.0c1c78q": "The Band brings gods to Sandia"
            },
            "SExpr_w_name": "(JOIN (R base.militaryinfiction.event_in_fiction.location) The Band brings gods to Sandia)",
            "SExpr": "(JOIN (R base.militaryinfiction.event_in_fiction.location) m.0c1c78q)"
        }
    },
    "69": {
        "generations": "What are the dialects of the German language?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.dialects ?x .\n}\n",
            "TopicEntityMid": "m.04306rv",
            "mid2name": {
                "ns:m.04306rv": "German Language"
            },
            "SExpr_w_name": "(JOIN (R language.human_language.dialects) German Language)",
            "SExpr": "(JOIN (R language.human_language.dialects) m.04306rv)"
        }
    },
    "70": {
        "generations": "What event did the Irish Confederate Wars take place in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037pbp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037pbp ns:time.event.included_in_event ?x .\n}\n",
            "TopicEntityMid": "m.037pbp",
            "mid2name": {
                "ns:m.037pbp": "Irish Confederate Wars"
            },
            "SExpr_w_name": "(JOIN (R time.event.included_in_event) Irish Confederate Wars)",
            "SExpr": "(JOIN (R time.event.included_in_event) m.037pbp)"
        }
    },
    "71": {
        "generations": "What genre of music does the Royal Philharmonic Orchestra play?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016frk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016frk ns:music.artist.genre ?x .\n}\n",
            "TopicEntityMid": "m.016frk",
            "mid2name": {
                "ns:m.016frk": "Royal Philharmonic Orchestra"
            },
            "SExpr_w_name": "(JOIN (R music.artist.genre) Royal Philharmonic Orchestra)",
            "SExpr": "(JOIN (R music.artist.genre) m.016frk)"
        }
    },
    "72": {
        "generations": "where is mountain view cemetery located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08y9t7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08y9t7 ns:location.location.geolocation ?x .\n}\n",
            "TopicEntityMid": "m.08y9t7",
            "mid2name": {
                "ns:m.08y9t7": "Mountain View Cemetery"
            },
            "SExpr_w_name": "(JOIN (R location.location.geolocation) Mountain View Cemetery)",
            "SExpr": "(JOIN (R location.location.geolocation) m.08y9t7)"
        }
    },
    "73": {
        "generations": "who did chuck norris teach martial arts to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015lhm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015lhm ns:martial_arts.martial_artist.martial_arts_students ?x .\n}\n",
            "TopicEntityMid": "m.015lhm",
            "mid2name": {
                "ns:m.015lhm": "Chuck Norris"
            },
            "SExpr_w_name": "(JOIN (R martial_arts.martial_artist.martial_arts_students) Chuck Norris)",
            "SExpr": "(JOIN (R martial_arts.martial_artist.martial_arts_students) m.015lhm)"
        }
    },
    "74": {
        "generations": "What competitions are included in the Men's Judo, Middleweight 78-86 Olympic event?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07nm95y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07nm95y ns:olympics.olympic_event.competitions ?x .\n}\n",
            "TopicEntityMid": "m.07nm95y",
            "mid2name": {
                "ns:m.07nm95y": "Men's Judo, Middleweight 78-86"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_event.competitions) Men's Judo, Middleweight 78-86)",
            "SExpr": "(JOIN (R olympics.olympic_event.competitions) m.07nm95y)"
        }
    },
    "75": {
        "generations": "What is the drug formulation for subcutaneous injection?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n7nt2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n7nt2 ns:medicine.drug_administration_route.drug_formulations ?x .\n}\n",
            "TopicEntityMid": "m.04n7nt2",
            "mid2name": {
                "ns:m.04n7nt2": "Subcutaneous injection"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_administration_route.drug_formulations) Subcutaneous injection)",
            "SExpr": "(JOIN (R medicine.drug_administration_route.drug_formulations) m.04n7nt2)"
        }
    },
    "76": {
        "generations": "What school does Big Jay represent as a mascot?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047tzhf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047tzhf ns:education.school_mascot.school ?x .\n}\n",
            "TopicEntityMid": "m.047tzhf",
            "mid2name": {
                "ns:m.047tzhf": "Big Jay"
            },
            "SExpr_w_name": "(JOIN (R education.school_mascot.school) Big Jay)",
            "SExpr": "(JOIN (R education.school_mascot.school) m.047tzhf)"
        }
    },
    "77": {
        "generations": "Who did the cover inks for Green Arrow: The Longbow Hunters #3?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.046vlkx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.046vlkx ns:comic_books.comic_book_issue.cover_inks ?x .\n}\n",
            "TopicEntityMid": "m.046vlkx",
            "mid2name": {
                "ns:m.046vlkx": "Green Arrow: The Longbow Hunters #3"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.cover_inks) Green Arrow: The Longbow Hunters #3)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.cover_inks) m.046vlkx)"
        }
    },
    "78": {
        "generations": "In which TV episode was the song \"These Boots Are Made for Walkin'\" heard?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0531b_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0531b_ ns:base.songsfromtv.song_performance.heard_in_tv_episode ?x .\n}\n",
            "TopicEntityMid": "m.0531b_",
            "mid2name": {
                "ns:m.0531b_": "These Boots Are Made for Walkin'"
            },
            "SExpr_w_name": "(JOIN (R base.songsfromtv.song_performance.heard_in_tv_episode) These Boots Are Made for Walkin')",
            "SExpr": "(JOIN (R base.songsfromtv.song_performance.heard_in_tv_episode) m.0531b_)"
        }
    },
    "79": {
        "generations": "What country is the film Dodes'ka-den from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fgj5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fgj5 ns:film.film.country ?x .\n}\n",
            "TopicEntityMid": "m.04fgj5",
            "mid2name": {
                "ns:m.04fgj5": "Dodes'ka-den"
            },
            "SExpr_w_name": "(JOIN (R film.film.country) Dodes'ka-den)",
            "SExpr": "(JOIN (R film.film.country) m.04fgj5)"
        }
    },
    "80": {
        "generations": "who publishes the comic book series The Walking Dead?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06vmd9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06vmd9 ns:comic_books.comic_book_series.publisher ?x .\n}\n",
            "TopicEntityMid": "m.06vmd9",
            "mid2name": {
                "ns:m.06vmd9": "The Walking Dead"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_series.publisher) The Walking Dead)",
            "SExpr": "(JOIN (R comic_books.comic_book_series.publisher) m.06vmd9)"
        }
    },
    "81": {
        "generations": "What software uses the Finger protocol?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gygp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gygp ns:computer.internet_protocol.software_used_by ?x .\n}\n",
            "TopicEntityMid": "m.0gygp",
            "mid2name": {
                "ns:m.0gygp": "Finger protocol"
            },
            "SExpr_w_name": "(JOIN (R computer.internet_protocol.software_used_by) Finger protocol)",
            "SExpr": "(JOIN (R computer.internet_protocol.software_used_by) m.0gygp)"
        }
    },
    "82": {
        "generations": "What other aircraft models are comparable to the Grumman American AA-5?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.063rlc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.063rlc ns:aviation.aircraft_model.comparable_aircraft ?x .\n}\n",
            "TopicEntityMid": "m.063rlc",
            "mid2name": {
                "ns:m.063rlc": "Grumman American AA-5"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_model.comparable_aircraft) Grumman American AA-5)",
            "SExpr": "(JOIN (R aviation.aircraft_model.comparable_aircraft) m.063rlc)"
        }
    },
    "83": {
        "generations": "What is a white dwarf a subcategory of in astronomy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083l8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083l8 ns:astronomy.celestial_object_category.subcategory_of ?x .\n}\n",
            "TopicEntityMid": "m.083l8",
            "mid2name": {
                "ns:m.083l8": "White dwarf"
            },
            "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.subcategory_of) White dwarf)",
            "SExpr": "(JOIN (R astronomy.celestial_object_category.subcategory_of) m.083l8)"
        }
    },
    "84": {
        "generations": "What are the different generations of the Chevrolet Camaro?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j25p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j25p ns:automotive.model.generations ?x .\n}\n",
            "TopicEntityMid": "m.01j25p",
            "mid2name": {
                "ns:m.01j25p": "Chevrolet Camaro"
            },
            "SExpr_w_name": "(JOIN (R automotive.model.generations) Chevrolet Camaro)",
            "SExpr": "(JOIN (R automotive.model.generations) m.01j25p)"
        }
    },
    "85": {
        "generations": "What language uses the Ukrainian alphabet?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03y7n_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03y7n_ ns:language.language_writing_system.languages ?x .\n}\n",
            "TopicEntityMid": "m.03y7n_",
            "mid2name": {
                "ns:m.03y7n_": "Ukrainian alphabet"
            },
            "SExpr_w_name": "(JOIN (R language.language_writing_system.languages) Ukrainian alphabet)",
            "SExpr": "(JOIN (R language.language_writing_system.languages) m.03y7n_)"
        }
    },
    "86": {
        "generations": "Which programming language was influenced by Joy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033jmv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033jmv ns:computer.programming_language.influenced_by ?x .\n}\n",
            "TopicEntityMid": "m.033jmv",
            "mid2name": {
                "ns:m.033jmv": "Joy"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language.influenced_by) Joy)",
            "SExpr": "(JOIN (R computer.programming_language.influenced_by) m.033jmv)"
        }
    },
    "87": {
        "generations": "What company made the Kodak CX4200?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q2mk0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q2mk0 ns:business.consumer_product.company ?x .\n}\n",
            "TopicEntityMid": "m.03q2mk0",
            "mid2name": {
                "ns:m.03q2mk0": "Kodak CX4200"
            },
            "SExpr_w_name": "(JOIN (R business.consumer_product.company) Kodak CX4200)",
            "SExpr": "(JOIN (R business.consumer_product.company) m.03q2mk0)"
        }
    },
    "88": {
        "generations": "What is the shape classification code for a galaxy with the code SA(s)cd?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgl5x2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgl5x2 ns:astronomy.galaxy_classification_code.galaxy_shape ?x .\n}\n",
            "TopicEntityMid": "m.0cgl5x2",
            "mid2name": {
                "ns:m.0cgl5x2": "SA(s)cd"
            },
            "SExpr_w_name": "(JOIN (R astronomy.galaxy_classification_code.galaxy_shape) SA(s)cd)",
            "SExpr": "(JOIN (R astronomy.galaxy_classification_code.galaxy_shape) m.0cgl5x2)"
        }
    },
    "89": {
        "generations": "What drugs belong to the Aromatic Amino Acid Decarboxylation Inhibitor class?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqyw3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqyw3d ns:medicine.drug_class.drugs ?x .\n}\n",
            "TopicEntityMid": "m.0hqyw3d",
            "mid2name": {
                "ns:m.0hqyw3d": "Aromatic Amino Acid Decarboxylation Inhibitor"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_class.drugs) Aromatic Amino Acid Decarboxylation Inhibitor)",
            "SExpr": "(JOIN (R medicine.drug_class.drugs) m.0hqyw3d)"
        }
    },
    "90": {
        "generations": "Which teams are in the Southland Conference for football?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022_gr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022_gr ns:american_football.football_conference.teams ?x .\n}\n",
            "TopicEntityMid": "m.022_gr",
            "mid2name": {
                "ns:m.022_gr": "Southland Conference"
            },
            "SExpr_w_name": "(JOIN (R american_football.football_conference.teams) Southland Conference)",
            "SExpr": "(JOIN (R american_football.football_conference.teams) m.022_gr)"
        }
    },
    "91": {
        "generations": "What treatment is being tested in the medical trial for Systemic Lupus Erythematosus using Memantine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d2cxf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d2cxf ns:medicine.medical_trial.treatment_being_tested ?x .\n}\n",
            "TopicEntityMid": "m.04d2cxf",
            "mid2name": {
                "ns:m.04d2cxf": "Memantine in Systemic Lupus Erythematosus"
            },
            "SExpr_w_name": "(JOIN (R medicine.medical_trial.treatment_being_tested) Memantine in Systemic Lupus Erythematosus)",
            "SExpr": "(JOIN (R medicine.medical_trial.treatment_being_tested) m.04d2cxf)"
        }
    },
    "92": {
        "generations": "What type of fuel does the Mercedes-Benz 5.5L 12 Cylinder 510 hp 612 ft-lbs Turbo engine use?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04mkw1j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04mkw1j ns:automotive.engine.fuels_used ?x .\n}\n",
            "TopicEntityMid": "m.04mkw1j",
            "mid2name": {
                "ns:m.04mkw1j": "Mercedes-Benz 5.5L 12 Cylinder 510 hp 612 ft-lbs Turbo"
            },
            "SExpr_w_name": "(JOIN (R automotive.engine.fuels_used) Mercedes-Benz 5.5L 12 Cylinder 510 hp 612 ft-lbs Turbo)",
            "SExpr": "(JOIN (R automotive.engine.fuels_used) m.04mkw1j)"
        }
    },
    "93": {
        "generations": "Has Leeds United F.C. ever been nominated for an award?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xn7x1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xn7x1 ns:award.award_nominee.award_nominations ?x .\n}\n",
            "TopicEntityMid": "m.01xn7x1",
            "mid2name": {
                "ns:m.01xn7x1": "Leeds United F.C."
            },
            "SExpr_w_name": "(JOIN (R award.award_nominee.award_nominations) Leeds United F.C.)",
            "SExpr": "(JOIN (R award.award_nominee.award_nominations) m.01xn7x1)"
        }
    },
    "94": {
        "generations": "What is the brand name for Teriparatide?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037n_c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037n_c ns:medicine.drug.brands ?x .\n}\n",
            "TopicEntityMid": "m.037n_c",
            "mid2name": {
                "ns:m.037n_c": "Teriparatide"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug.brands) Teriparatide)",
            "SExpr": "(JOIN (R medicine.drug.brands) m.037n_c)"
        }
    },
    "95": {
        "generations": "Who makes the Drifter candy bar?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cbdqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cbdqr ns:food.candy_bar.manufacturer ?x .\n}\n",
            "TopicEntityMid": "m.0cbdqr",
            "mid2name": {
                "ns:m.0cbdqr": "Drifter"
            },
            "SExpr_w_name": "(JOIN (R food.candy_bar.manufacturer) Drifter)",
            "SExpr": "(JOIN (R food.candy_bar.manufacturer) m.0cbdqr)"
        }
    },
    "96": {
        "generations": "What shape is a lighthouse?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04nqxj8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04nqxj8 ns:architecture.tower_shape.lighthouse_has_shape ?x .\n}\n",
            "TopicEntityMid": "m.04nqxj8",
            "mid2name": {
                "ns:m.04nqxj8": "Conical"
            },
            "SExpr_w_name": "(JOIN (R architecture.tower_shape.lighthouse_has_shape) Conical)",
            "SExpr": "(JOIN (R architecture.tower_shape.lighthouse_has_shape) m.04nqxj8)"
        }
    },
    "97": {
        "generations": "what is the Nisibisi globe of power made of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b_tw93)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b_tw93 ns:fictional_universe.fictional_object.composition ?x .\n}\n",
            "TopicEntityMid": "m.0b_tw93",
            "mid2name": {
                "ns:m.0b_tw93": "Nisibisi globe of power"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.composition) Nisibisi globe of power)",
            "SExpr": "(JOIN (R fictional_universe.fictional_object.composition) m.0b_tw93)"
        }
    },
    "98": {
        "generations": "which record label released music under the name F-Beat?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dnz3xt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dnz3xt ns:music.record_label.releases ?x .\n}\n",
            "TopicEntityMid": "m.0dnz3xt",
            "mid2name": {
                "ns:m.0dnz3xt": "F-Beat"
            },
            "SExpr_w_name": "(JOIN (R music.record_label.releases) F-Beat)",
            "SExpr": "(JOIN (R music.record_label.releases) m.0dnz3xt)"
        }
    },
    "99": {
        "generations": "Where is the Supreme ski lift located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04kk20l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04kk20l ns:skiing.ski_lift.ski_area ?x .\n}\n",
            "TopicEntityMid": "m.04kk20l",
            "mid2name": {
                "ns:m.04kk20l": "Supreme"
            },
            "SExpr_w_name": "(JOIN (R skiing.ski_lift.ski_area) Supreme)",
            "SExpr": "(JOIN (R skiing.ski_lift.ski_area) m.04kk20l)"
        }
    },
    "100": {
        "generations": "What movie features Low Earth orbit?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cspd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cspd ns:film.film_location.featured_in_films ?x .\n}\n",
            "TopicEntityMid": "m.0cspd",
            "mid2name": {
                "ns:m.0cspd": "Low Earth orbit"
            },
            "SExpr_w_name": "(JOIN (R film.film_location.featured_in_films) Low Earth orbit)",
            "SExpr": "(JOIN (R film.film_location.featured_in_films) m.0cspd)"
        }
    },
    "101": {
        "generations": "Who composed the music for The Calling?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_hwrlg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_hwrlg ns:music.composition.composer ?x .\n}\n",
            "TopicEntityMid": "m.0_hwrlg",
            "mid2name": {
                "ns:m.0_hwrlg": "The Calling"
            },
            "SExpr_w_name": "(JOIN (R music.composition.composer) The Calling)",
            "SExpr": "(JOIN (R music.composition.composer) m.0_hwrlg)"
        }
    },
    "102": {
        "generations": "what are the colors of mu sigma upsilon fraternity/sorority?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c1356)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c1356 ns:education.fraternity_sorority.colors ?x .\n}\n",
            "TopicEntityMid": "m.0c1356",
            "mid2name": {
                "ns:m.0c1356": "Mu Sigma Upsilon"
            },
            "SExpr_w_name": "(JOIN (R education.fraternity_sorority.colors) Mu Sigma Upsilon)",
            "SExpr": "(JOIN (R education.fraternity_sorority.colors) m.0c1356)"
        }
    },
    "103": {
        "generations": "Which airlines are members of the SkyTeam alliance?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x4x4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x4x4 ns:aviation.airline_alliance.member_airlines ?x .\n}\n",
            "TopicEntityMid": "m.01x4x4",
            "mid2name": {
                "ns:m.01x4x4": "SkyTeam"
            },
            "SExpr_w_name": "(JOIN (R aviation.airline_alliance.member_airlines) SkyTeam)",
            "SExpr": "(JOIN (R aviation.airline_alliance.member_airlines) m.01x4x4)"
        }
    },
    "104": {
        "generations": "Which characters have lived in the fictional setting of Bandara?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bxtry2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bxtry2 ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n",
            "TopicEntityMid": "m.0bxtry2",
            "mid2name": {
                "ns:m.0bxtry2": "Bandara"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Bandara)",
            "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.0bxtry2)"
        }
    },
    "105": {
        "generations": "What farms does the United States of America serve in terms of CSA (Community Supported Agriculture)?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:base.csafarms.area_served.farms ?x .\n}\n",
            "TopicEntityMid": "m.09c7w0",
            "mid2name": {
                "ns:m.09c7w0": "United States of America"
            },
            "SExpr_w_name": "(JOIN (R base.csafarms.area_served.farms) United States of America)",
            "SExpr": "(JOIN (R base.csafarms.area_served.farms) m.09c7w0)"
        }
    },
    "106": {
        "generations": "What dog breeds originated in Mali?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v09)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v09 ns:biology.breed_origin.breeds_originating_here ?x .\n}\n",
            "TopicEntityMid": "m.04v09",
            "mid2name": {
                "ns:m.04v09": "Mali"
            },
            "SExpr_w_name": "(JOIN (R biology.breed_origin.breeds_originating_here) Mali)",
            "SExpr": "(JOIN (R biology.breed_origin.breeds_originating_here) m.04v09)"
        }
    },
    "107": {
        "generations": "What events were included in the 2004 Australian federal election?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02br3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02br3q ns:time.event.includes_event ?x .\n}\n",
            "TopicEntityMid": "m.02br3q",
            "mid2name": {
                "ns:m.02br3q": "Australian federal election, 2004"
            },
            "SExpr_w_name": "(JOIN (R time.event.includes_event) Australian federal election, 2004)",
            "SExpr": "(JOIN (R time.event.includes_event) m.02br3q)"
        }
    },
    "108": {
        "generations": "What is equivalent to Sagitta in the ontology instance?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06_35)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06_35 ns:base.ontologies.ontology_instance.equivalent_instances ?x .\n}\n",
            "TopicEntityMid": "m.06_35",
            "mid2name": {
                "ns:m.06_35": "Sagitta"
            },
            "SExpr_w_name": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) Sagitta)",
            "SExpr": "(JOIN (R base.ontologies.ontology_instance.equivalent_instances) m.06_35)"
        }
    },
    "109": {
        "generations": "What asteroid group does 5951 Alicemonet belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03y0qk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03y0qk4 ns:astronomy.asteroid.member_of_asteroid_group ?x .\n}\n",
            "TopicEntityMid": "m.03y0qk4",
            "mid2name": {
                "ns:m.03y0qk4": "5951 Alicemonet"
            },
            "SExpr_w_name": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) 5951 Alicemonet)",
            "SExpr": "(JOIN (R astronomy.asteroid.member_of_asteroid_group) m.03y0qk4)"
        }
    },
    "110": {
        "generations": "Who is the mother of the thoroughbred racehorse Mahubah?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026n95v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026n95v ns:base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam ?x .\n}\n",
            "TopicEntityMid": "m.026n95v",
            "mid2name": {
                "ns:m.026n95v": "Mahubah"
            },
            "SExpr_w_name": "(JOIN (R base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam) Mahubah)",
            "SExpr": "(JOIN (R base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam) m.026n95v)"
        }
    },
    "111": {
        "generations": "What medical trials were sponsored by Columbia University?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w5m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w5m ns:medicine.medical_trial_sponsor.trials_sponsored ?x .\n}\n",
            "TopicEntityMid": "m.01w5m",
            "mid2name": {
                "ns:m.01w5m": "Columbia University"
            },
            "SExpr_w_name": "(JOIN (R medicine.medical_trial_sponsor.trials_sponsored) Columbia University)",
            "SExpr": "(JOIN (R medicine.medical_trial_sponsor.trials_sponsored) m.01w5m)"
        }
    },
    "112": {
        "generations": "Which constitutional amendments were proposed by Israel Moore Foster?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06ckdb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06ckdb ns:law.constitutional_amendment_proposer.constitutional_amendments_proposed ?x .\n}\n",
            "TopicEntityMid": "m.06ckdb",
            "mid2name": {
                "ns:m.06ckdb": "Israel Moore Foster"
            },
            "SExpr_w_name": "(JOIN (R law.constitutional_amendment_proposer.constitutional_amendments_proposed) Israel Moore Foster)",
            "SExpr": "(JOIN (R law.constitutional_amendment_proposer.constitutional_amendments_proposed) m.06ckdb)"
        }
    },
    "113": {
        "generations": "What was the launch vehicle for EgyptSat 2?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010fc37k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010fc37k ns:spaceflight.satellite.launch_vehicle ?x .\n}\n",
            "TopicEntityMid": "m.010fc37k",
            "mid2name": {
                "ns:m.010fc37k": "EgyptSat 2"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.satellite.launch_vehicle) EgyptSat 2)",
            "SExpr": "(JOIN (R spaceflight.satellite.launch_vehicle) m.010fc37k)"
        }
    },
    "114": {
        "generations": "What are the divisions in the Eastern Conference of basketball?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04rk0c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04rk0c ns:basketball.basketball_conference.divisions ?x .\n}\n",
            "TopicEntityMid": "m.04rk0c",
            "mid2name": {
                "ns:m.04rk0c": "Eastern Conference"
            },
            "SExpr_w_name": "(JOIN (R basketball.basketball_conference.divisions) Eastern Conference)",
            "SExpr": "(JOIN (R basketball.basketball_conference.divisions) m.04rk0c)"
        }
    },
    "115": {
        "generations": "who drew the cover of identity crisis issue #7?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04cp0bd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04cp0bd ns:comic_books.comic_book_issue.cover_pencils ?x .\n}\n",
            "TopicEntityMid": "m.04cp0bd",
            "mid2name": {
                "ns:m.04cp0bd": "Identity Crisis #7"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.cover_pencils) Identity Crisis #7)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.cover_pencils) m.04cp0bd)"
        }
    },
    "116": {
        "generations": "What are the lower classifications of a virus in biology?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g9pc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g9pc ns:biology.organism_classification.lower_classifications ?x .\n}\n",
            "TopicEntityMid": "m.0g9pc",
            "mid2name": {
                "ns:m.0g9pc": "Virus"
            },
            "SExpr_w_name": "(JOIN (R biology.organism_classification.lower_classifications) Virus)",
            "SExpr": "(JOIN (R biology.organism_classification.lower_classifications) m.0g9pc)"
        }
    },
    "117": {
        "generations": "What is the stage of small cell lung cancer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04tnh6x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04tnh6x ns:medicine.disease_stage.stage_of ?x .\n}\n",
            "TopicEntityMid": "m.04tnh6x",
            "mid2name": {
                "ns:m.04tnh6x": "Stage IIA Small Cell Lung Cancer"
            },
            "SExpr_w_name": "(JOIN (R medicine.disease_stage.stage_of) Stage IIA Small Cell Lung Cancer)",
            "SExpr": "(JOIN (R medicine.disease_stage.stage_of) m.04tnh6x)"
        }
    },
    "118": {
        "generations": "What genre of internet videos feature pop music?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.064t9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.064t9 ns:base.webvideo.internet_video_genre.internet_video ?x .\n}\n",
            "TopicEntityMid": "m.064t9",
            "mid2name": {
                "ns:m.064t9": "Pop music"
            },
            "SExpr_w_name": "(JOIN (R base.webvideo.internet_video_genre.internet_video) Pop music)",
            "SExpr": "(JOIN (R base.webvideo.internet_video_genre.internet_video) m.064t9)"
        }
    },
    "119": {
        "generations": "where was the tv program history of prostitution produced?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07cg0mp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07cg0mp ns:tv.tv_program.country_of_origin ?x .\n}\n",
            "TopicEntityMid": "m.07cg0mp",
            "mid2name": {
                "ns:m.07cg0mp": "History of Prostitution"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program.country_of_origin) History of Prostitution)",
            "SExpr": "(JOIN (R tv.tv_program.country_of_origin) m.07cg0mp)"
        }
    },
    "120": {
        "generations": "What is a descriptive name for a film actor?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jsg4j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jsg4j ns:base.descriptive_names.names.descriptive_name ?x .\n}\n",
            "TopicEntityMid": "m.0jsg4j",
            "mid2name": {
                "ns:m.0jsg4j": "Film actor"
            },
            "SExpr_w_name": "(JOIN (R base.descriptive_names.names.descriptive_name) Film actor)",
            "SExpr": "(JOIN (R base.descriptive_names.names.descriptive_name) m.0jsg4j)"
        }
    },
    "121": {
        "generations": "What are the administrative divisions of Slovenia?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06t8v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06t8v ns:location.country.administrative_divisions ?x .\n}\n",
            "TopicEntityMid": "m.06t8v",
            "mid2name": {
                "ns:m.06t8v": "Slovenia"
            },
            "SExpr_w_name": "(JOIN (R location.country.administrative_divisions) Slovenia)",
            "SExpr": "(JOIN (R location.country.administrative_divisions) m.06t8v)"
        }
    },
    "122": {
        "generations": "Who created the character war-band of 300 hand-picked men?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0kynw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0kynw ns:fictional_universe.fictional_character.character_created_by ?x .\n}\n",
            "TopicEntityMid": "m.0c0kynw",
            "mid2name": {
                "ns:m.0c0kynw": "war-band of 300 hand-picked men"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.character_created_by) war-band of 300 hand-picked men)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.character_created_by) m.0c0kynw)"
        }
    },
    "123": {
        "generations": "which cameras have a 16:9 image ratio?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022qdb2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022qdb2 ns:digicams.camera_image_ratio.cameras ?x .\n}\n",
            "TopicEntityMid": "m.022qdb2",
            "mid2name": {
                "ns:m.022qdb2": "16:9"
            },
            "SExpr_w_name": "(JOIN (R digicams.camera_image_ratio.cameras) 16:9)",
            "SExpr": "(JOIN (R digicams.camera_image_ratio.cameras) m.022qdb2)"
        }
    },
    "124": {
        "generations": "What product line does GameCube belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f0w2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f0w2 ns:business.consumer_product.product_line ?x .\n}\n",
            "TopicEntityMid": "m.0f0w2",
            "mid2name": {
                "ns:m.0f0w2": "GameCube"
            },
            "SExpr_w_name": "(JOIN (R business.consumer_product.product_line) GameCube)",
            "SExpr": "(JOIN (R business.consumer_product.product_line) m.0f0w2)"
        }
    },
    "125": {
        "generations": "What drugs have the physiologic effect of decreased protein synthesis?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqzb1d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqzb1d ns:medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect ?x .\n}\n",
            "TopicEntityMid": "m.0hqzb1d",
            "mid2name": {
                "ns:m.0hqzb1d": "Decreased Protein Synthesis"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect) Decreased Protein Synthesis)",
            "SExpr": "(JOIN (R medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect) m.0hqzb1d)"
        }
    },
    "126": {
        "generations": "What is included in the category of Carnival glass?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062b74)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062b74 ns:interests.collection_category.items_in_this_category ?x .\n}\n",
            "TopicEntityMid": "m.062b74",
            "mid2name": {
                "ns:m.062b74": "Carnival glass"
            },
            "SExpr_w_name": "(JOIN (R interests.collection_category.items_in_this_category) Carnival glass)",
            "SExpr": "(JOIN (R interests.collection_category.items_in_this_category) m.062b74)"
        }
    },
    "127": {
        "generations": "What category does the Honeywell HTS900 belong to in engineering?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b58ny)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b58ny ns:engineering.engine.category ?x .\n}\n",
            "TopicEntityMid": "m.05b58ny",
            "mid2name": {
                "ns:m.05b58ny": "Honeywell HTS900"
            },
            "SExpr_w_name": "(JOIN (R engineering.engine.category) Honeywell HTS900)",
            "SExpr": "(JOIN (R engineering.engine.category) m.05b58ny)"
        }
    },
    "128": {
        "generations": "What datasets are provided by the Food and Drug Administration?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.032mx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.032mx ns:dataworld.data_provider.datasets_provided ?x .\n}\n",
            "TopicEntityMid": "m.032mx",
            "mid2name": {
                "ns:m.032mx": "Food and Drug Administration"
            },
            "SExpr_w_name": "(JOIN (R dataworld.data_provider.datasets_provided) Food and Drug Administration)",
            "SExpr": "(JOIN (R dataworld.data_provider.datasets_provided) m.032mx)"
        }
    },
    "129": {
        "generations": "What product does the brand Amitiza sell?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j4t8qm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j4t8qm ns:business.brand.products ?x .\n}\n",
            "TopicEntityMid": "m.0j4t8qm",
            "mid2name": {
                "ns:m.0j4t8qm": "Amitiza"
            },
            "SExpr_w_name": "(JOIN (R business.brand.products) Amitiza)",
            "SExpr": "(JOIN (R business.brand.products) m.0j4t8qm)"
        }
    },
    "130": {
        "generations": "What fictional universes is Justice Be Done a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lkhv8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lkhv8 ns:fictional_universe.work_of_fiction.part_of_these_fictional_universes ?x .\n}\n",
            "TopicEntityMid": "m.04lkhv8",
            "mid2name": {
                "ns:m.04lkhv8": "Justice Be Done"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) Justice Be Done)",
            "SExpr": "(JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) m.04lkhv8)"
        }
    },
    "131": {
        "generations": "What top-level domains are currently active?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hsn4g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hsn4g ns:internet.top_level_domain_status.domains ?x .\n}\n",
            "TopicEntityMid": "m.02hsn4g",
            "mid2name": {
                "ns:m.02hsn4g": "Active"
            },
            "SExpr_w_name": "(JOIN (R internet.top_level_domain_status.domains) Active)",
            "SExpr": "(JOIN (R internet.top_level_domain_status.domains) m.02hsn4g)"
        }
    },
    "132": {
        "generations": "What category does Muay Thai belong to in martial arts?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04xz3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04xz3 ns:martial_arts.martial_art.category ?x .\n}\n",
            "TopicEntityMid": "m.04xz3",
            "mid2name": {
                "ns:m.04xz3": "Muay Thai"
            },
            "SExpr_w_name": "(JOIN (R martial_arts.martial_art.category) Muay Thai)",
            "SExpr": "(JOIN (R martial_arts.martial_art.category) m.04xz3)"
        }
    },
    "133": {
        "generations": "What is the genomic locus annotation for human cytogenetic band 2q12.2?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwj7k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwj7k ns:biology.genomic_locus.annotation ?x .\n}\n",
            "TopicEntityMid": "m.02kwj7k",
            "mid2name": {
                "ns:m.02kwj7k": "Locus for Human Cytogenetic Band 2q12.2"
            },
            "SExpr_w_name": "(JOIN (R biology.genomic_locus.annotation) Locus for Human Cytogenetic Band 2q12.2)",
            "SExpr": "(JOIN (R biology.genomic_locus.annotation) m.02kwj7k)"
        }
    },
    "134": {
        "generations": "what countries use the canadian dollar as their currency?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ptk_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ptk_ ns:finance.currency.countries_used ?x .\n}\n",
            "TopicEntityMid": "m.0ptk_",
            "mid2name": {
                "ns:m.0ptk_": "Canadian dollar"
            },
            "SExpr_w_name": "(JOIN (R finance.currency.countries_used) Canadian dollar)",
            "SExpr": "(JOIN (R finance.currency.countries_used) m.0ptk_)"
        }
    },
    "135": {
        "generations": "What type of software is Digital Assets Repository categorized as?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09msx3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09msx3 ns:computer.software_genre.software_in_genre ?x .\n}\n",
            "TopicEntityMid": "m.09msx3",
            "mid2name": {
                "ns:m.09msx3": "Digital Assets Repository"
            },
            "SExpr_w_name": "(JOIN (R computer.software_genre.software_in_genre) Digital Assets Repository)",
            "SExpr": "(JOIN (R computer.software_genre.software_in_genre) m.09msx3)"
        }
    },
    "136": {
        "generations": "Who designed the ship Young America?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hsj0ww)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hsj0ww ns:boats.ship.designer ?x .\n}\n",
            "TopicEntityMid": "m.0hsj0ww",
            "mid2name": {
                "ns:m.0hsj0ww": "Young America"
            },
            "SExpr_w_name": "(JOIN (R boats.ship.designer) Young America)",
            "SExpr": "(JOIN (R boats.ship.designer) m.0hsj0ww)"
        }
    },
    "137": {
        "generations": "What teams are in the Brazilian Football Confederation league?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.032jvc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.032jvc ns:sports.sports_league.teams ?x .\n}\n",
            "TopicEntityMid": "m.032jvc",
            "mid2name": {
                "ns:m.032jvc": "Brazilian Football Confederation"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league.teams) Brazilian Football Confederation)",
            "SExpr": "(JOIN (R sports.sports_league.teams) m.032jvc)"
        }
    },
    "138": {
        "generations": "What is the parent website of the blog 1stcentralinsurance.com?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01223gb6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01223gb6 ns:internet.website.parent_web_property ?x .\n}\n",
            "TopicEntityMid": "m.01223gb6",
            "mid2name": {
                "ns:m.01223gb6": "http://blog.1stcentralinsurance.com/"
            },
            "SExpr_w_name": "(JOIN (R internet.website.parent_web_property) http://blog.1stcentralinsurance.com/)",
            "SExpr": "(JOIN (R internet.website.parent_web_property) m.01223gb6)"
        }
    },
    "139": {
        "generations": "What are the cover colors of Batman #1 comic book issue?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wkbg7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wkbg7 ns:comic_books.comic_book_issue.cover_colors ?x .\n}\n",
            "TopicEntityMid": "m.02wkbg7",
            "mid2name": {
                "ns:m.02wkbg7": "Batman #1"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.cover_colors) Batman #1)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.cover_colors) m.02wkbg7)"
        }
    },
    "140": {
        "generations": "What is Big Octo featured in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nb8562)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nb8562 ns:fictional_universe.fictional_creature.featured_in_fictional_universe ?x .\n}\n",
            "TopicEntityMid": "m.0nb8562",
            "mid2name": {
                "ns:m.0nb8562": "Big Octo"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_creature.featured_in_fictional_universe) Big Octo)",
            "SExpr": "(JOIN (R fictional_universe.fictional_creature.featured_in_fictional_universe) m.0nb8562)"
        }
    },
    "141": {
        "generations": "Which zoo has an exhibit called Amazonia?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j3gl78)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j3gl78 ns:zoos.zoo_exhibit.zoo ?x .\n}\n",
            "TopicEntityMid": "m.0j3gl78",
            "mid2name": {
                "ns:m.0j3gl78": "Amazonia"
            },
            "SExpr_w_name": "(JOIN (R zoos.zoo_exhibit.zoo) Amazonia)",
            "SExpr": "(JOIN (R zoos.zoo_exhibit.zoo) m.0j3gl78)"
        }
    },
    "142": {
        "generations": "What book series is Ace Science Fiction Specials Series 2 a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078fp5j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078fp5j ns:book.book_edition_series.part_of_series ?x .\n}\n",
            "TopicEntityMid": "m.078fp5j",
            "mid2name": {
                "ns:m.078fp5j": "Ace Science Fiction Specials Series 2"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition_series.part_of_series) Ace Science Fiction Specials Series 2)",
            "SExpr": "(JOIN (R book.book_edition_series.part_of_series) m.078fp5j)"
        }
    },
    "143": {
        "generations": "What car model came before the Dodge Dart?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hnct4b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hnct4b ns:automotive.model.predecessor ?x .\n}\n",
            "TopicEntityMid": "m.0hnct4b",
            "mid2name": {
                "ns:m.0hnct4b": "Dodge Dart"
            },
            "SExpr_w_name": "(JOIN (R automotive.model.predecessor) Dodge Dart)",
            "SExpr": "(JOIN (R automotive.model.predecessor) m.0hnct4b)"
        }
    },
    "144": {
        "generations": "What is the name of the TV series that includes an episode called Super Max?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kfh3md)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kfh3md ns:tv.tv_series_episode.series ?x .\n}\n",
            "TopicEntityMid": "m.0kfh3md",
            "mid2name": {
                "ns:m.0kfh3md": "Super Max"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_series_episode.series) Super Max)",
            "SExpr": "(JOIN (R tv.tv_series_episode.series) m.0kfh3md)"
        }
    },
    "145": {
        "generations": "What direction does the calendar system in the fictional universe go?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bvlhf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bvlhf ns:fictional_universe.calendar_system_directionality.calendars ?x .\n}\n",
            "TopicEntityMid": "m.03bvlhf",
            "mid2name": {
                "ns:m.03bvlhf": "Forward"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.calendar_system_directionality.calendars) Forward)",
            "SExpr": "(JOIN (R fictional_universe.calendar_system_directionality.calendars) m.03bvlhf)"
        }
    },
    "146": {
        "generations": "Who discovered Kepler-6 b?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09v8tjx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09v8tjx ns:astronomy.astronomical_discovery.discovery_organization ?x .\n}\n",
            "TopicEntityMid": "m.09v8tjx",
            "mid2name": {
                "ns:m.09v8tjx": "Kepler-6 b"
            },
            "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.discovery_organization) Kepler-6 b)",
            "SExpr": "(JOIN (R astronomy.astronomical_discovery.discovery_organization) m.09v8tjx)"
        }
    },
    "147": {
        "generations": "What type of voice does a baritone have in music?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j871)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j871 ns:music.voice.singers ?x .\n}\n",
            "TopicEntityMid": "m.0j871",
            "mid2name": {
                "ns:m.0j871": "Baritone"
            },
            "SExpr_w_name": "(JOIN (R music.voice.singers) Baritone)",
            "SExpr": "(JOIN (R music.voice.singers) m.0j871)"
        }
    },
    "148": {
        "generations": "who competes in equestrian vaulting at the olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06_knc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06_knc ns:olympics.olympic_sport.athletes ?x .\n}\n",
            "TopicEntityMid": "m.06_knc",
            "mid2name": {
                "ns:m.06_knc": "Equestrian vaulting"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_sport.athletes) Equestrian vaulting)",
            "SExpr": "(JOIN (R olympics.olympic_sport.athletes) m.06_knc)"
        }
    },
    "149": {
        "generations": "What is the name of the legislative committee in the Buenos Aires legislature that deals with communication?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vrhv3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vrhv3 ns:government.legislative_committee.legislature ?x .\n}\n",
            "TopicEntityMid": "m.07vrhv3",
            "mid2name": {
                "ns:m.07vrhv3": "Comisi\u00f3n de Comunicaci\u00f3n Social (Legislatura de Buenos Aires)"
            },
            "SExpr_w_name": "(JOIN (R government.legislative_committee.legislature) Comisi\u00f3n de Comunicaci\u00f3n Social (Legislatura de Buenos Aires))",
            "SExpr": "(JOIN (R government.legislative_committee.legislature) m.07vrhv3)"
        }
    },
    "150": {
        "generations": "What newspaper published an issue on October 2, 2004, called the San Francisco Chronicle?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j_kktg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j_kktg ns:book.newspaper_issue.newspaper ?x .\n}\n",
            "TopicEntityMid": "m.0j_kktg",
            "mid2name": {
                "ns:m.0j_kktg": "San Francisco Chronicle, 02 Oct 2004"
            },
            "SExpr_w_name": "(JOIN (R book.newspaper_issue.newspaper) San Francisco Chronicle, 02 Oct 2004)",
            "SExpr": "(JOIN (R book.newspaper_issue.newspaper) m.0j_kktg)"
        }
    },
    "151": {
        "generations": "What is Kaposi's sarcoma named after?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bqpg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bqpg ns:symbols.namesake.named_after ?x .\n}\n",
            "TopicEntityMid": "m.0bqpg",
            "mid2name": {
                "ns:m.0bqpg": "Kaposi's sarcoma"
            },
            "SExpr_w_name": "(JOIN (R symbols.namesake.named_after) Kaposi's sarcoma)",
            "SExpr": "(JOIN (R symbols.namesake.named_after) m.0bqpg)"
        }
    },
    "152": {
        "generations": "What rides did Frank F. Hoover design in amusement parks?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04kt2lb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04kt2lb ns:amusement_parks.ride_designer.rides ?x .\n}\n",
            "TopicEntityMid": "m.04kt2lb",
            "mid2name": {
                "ns:m.04kt2lb": "Frank F. Hoover"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.ride_designer.rides) Frank F. Hoover)",
            "SExpr": "(JOIN (R amusement_parks.ride_designer.rides) m.04kt2lb)"
        }
    },
    "153": {
        "generations": "Who manufactures the PowerPC computer processor?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0620f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0620f ns:computer.computer_processor.manufacturers ?x .\n}\n",
            "TopicEntityMid": "m.0620f",
            "mid2name": {
                "ns:m.0620f": "PowerPC"
            },
            "SExpr_w_name": "(JOIN (R computer.computer_processor.manufacturers) PowerPC)",
            "SExpr": "(JOIN (R computer.computer_processor.manufacturers) m.0620f)"
        }
    },
    "154": {
        "generations": "who created the artwork \"Triumphs of Caesar\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pqtq9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pqtq9 ns:visual_art.artwork.artist ?x .\n}\n",
            "TopicEntityMid": "m.02pqtq9",
            "mid2name": {
                "ns:m.02pqtq9": "Triumphs of Caesar"
            },
            "SExpr_w_name": "(JOIN (R visual_art.artwork.artist) Triumphs of Caesar)",
            "SExpr": "(JOIN (R visual_art.artwork.artist) m.02pqtq9)"
        }
    },
    "155": {
        "generations": "who illustrated the book edition covers for this book?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dwn29)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dwn29 ns:book.illustrator.book_edition_covers ?x .\n}\n",
            "TopicEntityMid": "m.04dwn29",
            "mid2name": {
                "ns:m.04dwn29": "Ray Lundgren"
            },
            "SExpr_w_name": "(JOIN (R book.illustrator.book_edition_covers) Ray Lundgren)",
            "SExpr": "(JOIN (R book.illustrator.book_edition_covers) m.04dwn29)"
        }
    },
    "156": {
        "generations": "Which fictional school has graduates from Massachusetts Institute of Technology?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04rwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04rwx ns:fictional_universe.school_in_fiction.students_graduates ?x .\n}\n",
            "TopicEntityMid": "m.04rwx",
            "mid2name": {
                "ns:m.04rwx": "Massachusetts Institute of Technology"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.school_in_fiction.students_graduates) Massachusetts Institute of Technology)",
            "SExpr": "(JOIN (R fictional_universe.school_in_fiction.students_graduates) m.04rwx)"
        }
    },
    "157": {
        "generations": "Who designed the Flight Deck ride?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d9275)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d9275 ns:amusement_parks.ride.designer ?x .\n}\n",
            "TopicEntityMid": "m.0d9275",
            "mid2name": {
                "ns:m.0d9275": "Flight Deck"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.ride.designer) Flight Deck)",
            "SExpr": "(JOIN (R amusement_parks.ride.designer) m.0d9275)"
        }
    },
    "158": {
        "generations": "What demonstration medals did Elaine Dagg-Jackson win in the Olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04njn7f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04njn7f ns:olympics.olympic_athlete.demonstration_medals_won ?x .\n}\n",
            "TopicEntityMid": "m.04njn7f",
            "mid2name": {
                "ns:m.04njn7f": "Elaine Dagg-Jackson"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_athlete.demonstration_medals_won) Elaine Dagg-Jackson)",
            "SExpr": "(JOIN (R olympics.olympic_athlete.demonstration_medals_won) m.04njn7f)"
        }
    },
    "159": {
        "generations": "What concerts have been held at MetLife Stadium?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dnkph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dnkph ns:music.performance_venue.concerts ?x .\n}\n",
            "TopicEntityMid": "m.0dnkph",
            "mid2name": {
                "ns:m.0dnkph": "MetLife Stadium"
            },
            "SExpr_w_name": "(JOIN (R music.performance_venue.concerts) MetLife Stadium)",
            "SExpr": "(JOIN (R music.performance_venue.concerts) m.0dnkph)"
        }
    },
    "160": {
        "generations": "What is atmospheric physics a subdiscipline of in the field of study?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d288)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d288 ns:education.field_of_study.subdiscipline_of ?x .\n}\n",
            "TopicEntityMid": "m.03d288",
            "mid2name": {
                "ns:m.03d288": "Atmospheric physics"
            },
            "SExpr_w_name": "(JOIN (R education.field_of_study.subdiscipline_of) Atmospheric physics)",
            "SExpr": "(JOIN (R education.field_of_study.subdiscipline_of) m.03d288)"
        }
    },
    "161": {
        "generations": "Where did the Manny Pacquiao vs. Juan Manuel M\u00e1rquez IV fight take place?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ny9hmy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ny9hmy ns:time.event.locations ?x .\n}\n",
            "TopicEntityMid": "m.0ny9hmy",
            "mid2name": {
                "ns:m.0ny9hmy": "Manny Pacquiao vs. Juan Manuel M\u00e1rquez IV"
            },
            "SExpr_w_name": "(JOIN (R time.event.locations) Manny Pacquiao vs. Juan Manuel M\u00e1rquez IV)",
            "SExpr": "(JOIN (R time.event.locations) m.0ny9hmy)"
        }
    },
    "162": {
        "generations": "What is the name of the asteroid family that Rafita belongs to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04njnhq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04njnhq ns:astronomy.asteroid_family.asteroid_family_member ?x .\n}\n",
            "TopicEntityMid": "m.04njnhq",
            "mid2name": {
                "ns:m.04njnhq": "Rafita family"
            },
            "SExpr_w_name": "(JOIN (R astronomy.asteroid_family.asteroid_family_member) Rafita family)",
            "SExpr": "(JOIN (R astronomy.asteroid_family.asteroid_family_member) m.04njnhq)"
        }
    },
    "163": {
        "generations": "what is the carbon footprint per capita in the cayman islands?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nty ns:location.statistical_region.co2_emissions_per_capita ?x .\n}\n",
            "TopicEntityMid": "m.01nty",
            "mid2name": {
                "ns:m.01nty": "Cayman Islands"
            },
            "SExpr_w_name": "(JOIN (R location.statistical_region.co2_emissions_per_capita) Cayman Islands)",
            "SExpr": "(JOIN (R location.statistical_region.co2_emissions_per_capita) m.01nty)"
        }
    },
    "164": {
        "generations": "What is the phase of the medical trial for giving Indinavir, Stavudine, and Lamivudine to HIV-infected children?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbby2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbby2 ns:medicine.medical_trial.phase ?x .\n}\n",
            "TopicEntityMid": "m.03zbby2",
            "mid2name": {
                "ns:m.03zbby2": "Safety and Effectiveness of Giving Indinavir Plus Stavudine Plus Lamivudine to HIV-Infected Children"
            },
            "SExpr_w_name": "(JOIN (R medicine.medical_trial.phase) Safety and Effectiveness of Giving Indinavir Plus Stavudine Plus Lamivudine to HIV-Infected Children)",
            "SExpr": "(JOIN (R medicine.medical_trial.phase) m.03zbby2)"
        }
    },
    "165": {
        "generations": "who directed the episode \"Lost Girls\" in a TV series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07tgbc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07tgbc_ ns:tv.tv_series_episode.director ?x .\n}\n",
            "TopicEntityMid": "m.07tgbc_",
            "mid2name": {
                "ns:m.07tgbc_": "Lost Girls"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_series_episode.director) Lost Girls)",
            "SExpr": "(JOIN (R tv.tv_series_episode.director) m.07tgbc_)"
        }
    },
    "166": {
        "generations": "where was talking marriage with ryan bailey filmed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012vsslv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012vsslv ns:tv.tv_program.filming_locations ?x .\n}\n",
            "TopicEntityMid": "m.012vsslv",
            "mid2name": {
                "ns:m.012vsslv": "Talking Marriage with Ryan Bailey"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program.filming_locations) Talking Marriage with Ryan Bailey)",
            "SExpr": "(JOIN (R tv.tv_program.filming_locations) m.012vsslv)"
        }
    },
    "167": {
        "generations": "what musical compositions are about vanity?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hjyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hjyl ns:book.book_subject.musical_compositions_about_this_topic ?x .\n}\n",
            "TopicEntityMid": "m.01hjyl",
            "mid2name": {
                "ns:m.01hjyl": "Vanity"
            },
            "SExpr_w_name": "(JOIN (R book.book_subject.musical_compositions_about_this_topic) Vanity)",
            "SExpr": "(JOIN (R book.book_subject.musical_compositions_about_this_topic) m.01hjyl)"
        }
    },
    "168": {
        "generations": "Which comic books did Jason pencil?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07k2x4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07k2x4 ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n}\n",
            "TopicEntityMid": "m.07k2x4",
            "mid2name": {
                "ns:m.07k2x4": "Jason"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) Jason)",
            "SExpr": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) m.07k2x4)"
        }
    },
    "169": {
        "generations": "What conservation plans are in place for Kentucky?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0498y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0498y ns:base.litcentral.focal_location.conservation_plan_s ?x .\n}\n",
            "TopicEntityMid": "m.0498y",
            "mid2name": {
                "ns:m.0498y": "Kentucky"
            },
            "SExpr_w_name": "(JOIN (R base.litcentral.focal_location.conservation_plan_s) Kentucky)",
            "SExpr": "(JOIN (R base.litcentral.focal_location.conservation_plan_s) m.0498y)"
        }
    },
    "170": {
        "generations": "What school is WRUW-FM affiliated with?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.092xvq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.092xvq ns:education.student_radio_station.school ?x .\n}\n",
            "TopicEntityMid": "m.092xvq",
            "mid2name": {
                "ns:m.092xvq": "WRUW-FM"
            },
            "SExpr_w_name": "(JOIN (R education.student_radio_station.school) WRUW-FM)",
            "SExpr": "(JOIN (R education.student_radio_station.school) m.092xvq)"
        }
    },
    "171": {
        "generations": "What events have taken place at Garfield High School?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.073phb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.073phb ns:location.location.events ?x .\n}\n",
            "TopicEntityMid": "m.073phb",
            "mid2name": {
                "ns:m.073phb": "Garfield High School"
            },
            "SExpr_w_name": "(JOIN (R location.location.events) Garfield High School)",
            "SExpr": "(JOIN (R location.location.events) m.073phb)"
        }
    },
    "172": {
        "generations": "What are the martial arts included in the Internal category?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_yl6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_yl6z ns:martial_arts.martial_art_category.martial_arts ?x .\n}\n",
            "TopicEntityMid": "m.02_yl6z",
            "mid2name": {
                "ns:m.02_yl6z": "Internal"
            },
            "SExpr_w_name": "(JOIN (R martial_arts.martial_art_category.martial_arts) Internal)",
            "SExpr": "(JOIN (R martial_arts.martial_art_category.martial_arts) m.02_yl6z)"
        }
    },
    "173": {
        "generations": "What religious text do the Puranas belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vmp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vmp7 ns:religion.religious_text.religious_text_of ?x .\n}\n",
            "TopicEntityMid": "m.01vmp7",
            "mid2name": {
                "ns:m.01vmp7": "Puranas"
            },
            "SExpr_w_name": "(JOIN (R religion.religious_text.religious_text_of) Puranas)",
            "SExpr": "(JOIN (R religion.religious_text.religious_text_of) m.01vmp7)"
        }
    },
    "174": {
        "generations": "What type of compositions are piano sonatas?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rl25)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rl25 ns:music.compositional_form.compositions ?x .\n}\n",
            "TopicEntityMid": "m.03rl25",
            "mid2name": {
                "ns:m.03rl25": "Piano sonata"
            },
            "SExpr_w_name": "(JOIN (R music.compositional_form.compositions) Piano sonata)",
            "SExpr": "(JOIN (R music.compositional_form.compositions) m.03rl25)"
        }
    },
    "175": {
        "generations": "Who holds the title of Member of the Order of Australia?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bjc0m7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bjc0m7 ns:royalty.chivalric_title.title_holders ?x .\n}\n",
            "TopicEntityMid": "m.0bjc0m7",
            "mid2name": {
                "ns:m.0bjc0m7": "Member of the Order of Australia"
            },
            "SExpr_w_name": "(JOIN (R royalty.chivalric_title.title_holders) Member of the Order of Australia)",
            "SExpr": "(JOIN (R royalty.chivalric_title.title_holders) m.0bjc0m7)"
        }
    },
    "176": {
        "generations": "What type of medical trial design is Safety/Efficacy Study?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.040ftp3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.040ftp3 ns:medicine.medical_trial_design.trials ?x .\n}\n",
            "TopicEntityMid": "m.040ftp3",
            "mid2name": {
                "ns:m.040ftp3": "Safety/Efficacy Study"
            },
            "SExpr_w_name": "(JOIN (R medicine.medical_trial_design.trials) Safety/Efficacy Study)",
            "SExpr": "(JOIN (R medicine.medical_trial_design.trials) m.040ftp3)"
        }
    },
    "177": {
        "generations": "Who owns Pro FM radio station?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j3gcqw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j3gcqw ns:broadcast.radio_station.owner ?x .\n}\n",
            "TopicEntityMid": "m.0j3gcqw",
            "mid2name": {
                "ns:m.0j3gcqw": "Pro FM"
            },
            "SExpr_w_name": "(JOIN (R broadcast.radio_station.owner) Pro FM)",
            "SExpr": "(JOIN (R broadcast.radio_station.owner) m.0j3gcqw)"
        }
    },
    "178": {
        "generations": "What country does Jelena Jankovi\u0107 represent in the Olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06148c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06148c ns:olympics.olympic_athlete.country ?x .\n}\n",
            "TopicEntityMid": "m.06148c",
            "mid2name": {
                "ns:m.06148c": "Jelena Jankovi\u0107"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_athlete.country) Jelena Jankovi\u0107)",
            "SExpr": "(JOIN (R olympics.olympic_athlete.country) m.06148c)"
        }
    },
    "179": {
        "generations": "Who orchestrated the play Once?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j65301)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j65301 ns:theater.play.orchestrator ?x .\n}\n",
            "TopicEntityMid": "m.0j65301",
            "mid2name": {
                "ns:m.0j65301": "Once"
            },
            "SExpr_w_name": "(JOIN (R theater.play.orchestrator) Once)",
            "SExpr": "(JOIN (R theater.play.orchestrator) m.0j65301)"
        }
    },
    "180": {
        "generations": "who is the current bishop of chelmsford?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ksp6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ksp6 ns:government.government_office_or_title.office_holders ?x .\n}\n",
            "TopicEntityMid": "m.03ksp6",
            "mid2name": {
                "ns:m.03ksp6": "Bishop of Chelmsford"
            },
            "SExpr_w_name": "(JOIN (R government.government_office_or_title.office_holders) Bishop of Chelmsford)",
            "SExpr": "(JOIN (R government.government_office_or_title.office_holders) m.03ksp6)"
        }
    },
    "181": {
        "generations": "Who is the author of the Foie Gras Pasta recipe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083pzzb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083pzzb ns:food.recipe.author ?x .\n}\n",
            "TopicEntityMid": "m.083pzzb",
            "mid2name": {
                "ns:m.083pzzb": "Foie Gras Pasta"
            },
            "SExpr_w_name": "(JOIN (R food.recipe.author) Foie Gras Pasta)",
            "SExpr": "(JOIN (R food.recipe.author) m.083pzzb)"
        }
    },
    "182": {
        "generations": "What is the dish called 'Ncrappiata alla martinese?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07yj3sr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07yj3sr ns:food.recipe.dish ?x .\n}\n",
            "TopicEntityMid": "m.07yj3sr",
            "mid2name": {
                "ns:m.07yj3sr": "'Ncrappiata alla martinese"
            },
            "SExpr_w_name": "(JOIN (R food.recipe.dish) 'Ncrappiata alla martinese)",
            "SExpr": "(JOIN (R food.recipe.dish) m.07yj3sr)"
        }
    },
    "183": {
        "generations": "Who developed the software called Spud?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rkt8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rkt8b ns:computer.software.developer ?x .\n}\n",
            "TopicEntityMid": "m.09rkt8b",
            "mid2name": {
                "ns:m.09rkt8b": "Spud"
            },
            "SExpr_w_name": "(JOIN (R computer.software.developer) Spud)",
            "SExpr": "(JOIN (R computer.software.developer) m.09rkt8b)"
        }
    },
    "184": {
        "generations": "where did tim buckley perform at the folklore center?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nbvthl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nbvthl ns:music.concert.venue ?x .\n}\n",
            "TopicEntityMid": "m.0nbvthl",
            "mid2name": {
                "ns:m.0nbvthl": "Tim Buckley at The Folklore Center"
            },
            "SExpr_w_name": "(JOIN (R music.concert.venue) Tim Buckley at The Folklore Center)",
            "SExpr": "(JOIN (R music.concert.venue) m.0nbvthl)"
        }
    },
    "185": {
        "generations": "Who were the engineers for The Fame album?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bflrw0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bflrw0 ns:music.release.engineers ?x .\n}\n",
            "TopicEntityMid": "m.0bflrw0",
            "mid2name": {
                "ns:m.0bflrw0": "The Fame"
            },
            "SExpr_w_name": "(JOIN (R music.release.engineers) The Fame)",
            "SExpr": "(JOIN (R music.release.engineers) m.0bflrw0)"
        }
    },
    "186": {
        "generations": "What mountain range is Wetterwandeck in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b6jsq2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b6jsq2 ns:geography.mountain.mountain_range ?x .\n}\n",
            "TopicEntityMid": "m.0b6jsq2",
            "mid2name": {
                "ns:m.0b6jsq2": "Wetterwandeck"
            },
            "SExpr_w_name": "(JOIN (R geography.mountain.mountain_range) Wetterwandeck)",
            "SExpr": "(JOIN (R geography.mountain.mountain_range) m.0b6jsq2)"
        }
    },
    "187": {
        "generations": "What is the processor family of the INMOS T4 computer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08q_nky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08q_nky ns:computer.computer_processor.processor_family ?x .\n}\n",
            "TopicEntityMid": "m.08q_nky",
            "mid2name": {
                "ns:m.08q_nky": "INMOS T4"
            },
            "SExpr_w_name": "(JOIN (R computer.computer_processor.processor_family) INMOS T4)",
            "SExpr": "(JOIN (R computer.computer_processor.processor_family) m.08q_nky)"
        }
    },
    "188": {
        "generations": "Who manufactures the Specialized Stumpjumper bicycle model?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qpf8g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qpf8g ns:bicycles.bicycle_model.manufacturer ?x .\n}\n",
            "TopicEntityMid": "m.03qpf8g",
            "mid2name": {
                "ns:m.03qpf8g": "Specialized Stumpjumper"
            },
            "SExpr_w_name": "(JOIN (R bicycles.bicycle_model.manufacturer) Specialized Stumpjumper)",
            "SExpr": "(JOIN (R bicycles.bicycle_model.manufacturer) m.03qpf8g)"
        }
    },
    "189": {
        "generations": "What are examples of dwarf planets?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g3tzt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g3tzt ns:astronomy.celestial_object_category.objects ?x .\n}\n",
            "TopicEntityMid": "m.0g3tzt",
            "mid2name": {
                "ns:m.0g3tzt": "Dwarf planet"
            },
            "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.objects) Dwarf planet)",
            "SExpr": "(JOIN (R astronomy.celestial_object_category.objects) m.0g3tzt)"
        }
    },
    "190": {
        "generations": "what is an equivalent class to the ontology class album?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lx2r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lx2r ns:base.ontologies.ontology_class.equivalent_classes ?x .\n}\n",
            "TopicEntityMid": "m.02lx2r",
            "mid2name": {
                "ns:m.02lx2r": "Album"
            },
            "SExpr_w_name": "(JOIN (R base.ontologies.ontology_class.equivalent_classes) Album)",
            "SExpr": "(JOIN (R base.ontologies.ontology_class.equivalent_classes) m.02lx2r)"
        }
    },
    "191": {
        "generations": "Who created the SNP file format?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d9gbm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d9gbm ns:computer.file_format.format_creator ?x .\n}\n",
            "TopicEntityMid": "m.0d9gbm",
            "mid2name": {
                "ns:m.0d9gbm": "SNP file format"
            },
            "SExpr_w_name": "(JOIN (R computer.file_format.format_creator) SNP file format)",
            "SExpr": "(JOIN (R computer.file_format.format_creator) m.0d9gbm)"
        }
    },
    "192": {
        "generations": "What was the name of Sting's concert tour in New York?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bx760p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bx760p ns:music.concert.concert_tour ?x .\n}\n",
            "TopicEntityMid": "m.0bx760p",
            "mid2name": {
                "ns:m.0bx760p": "Sting Symphonicity Tour, New York"
            },
            "SExpr_w_name": "(JOIN (R music.concert.concert_tour) Sting Symphonicity Tour, New York)",
            "SExpr": "(JOIN (R music.concert.concert_tour) m.0bx760p)"
        }
    },
    "193": {
        "generations": "What is the plural form of Speaker of the United States House of Representatives?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgqx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgqx ns:base.schemastaging.context_name.plural ?x .\n}\n",
            "TopicEntityMid": "m.0cgqx",
            "mid2name": {
                "ns:m.0cgqx": "Speaker of the United States House of Representatives"
            },
            "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.plural) Speaker of the United States House of Representatives)",
            "SExpr": "(JOIN (R base.schemastaging.context_name.plural) m.0cgqx)"
        }
    },
    "194": {
        "generations": "Who founded the Military Order of Savoy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gfhvx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gfhvx0 ns:royalty.order_of_chivalry.founders ?x .\n}\n",
            "TopicEntityMid": "m.0gfhvx0",
            "mid2name": {
                "ns:m.0gfhvx0": "Military Order of Savoy"
            },
            "SExpr_w_name": "(JOIN (R royalty.order_of_chivalry.founders) Military Order of Savoy)",
            "SExpr": "(JOIN (R royalty.order_of_chivalry.founders) m.0gfhvx0)"
        }
    },
    "195": {
        "generations": "who are some artists in the performance art form?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gq53)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gq53 ns:visual_art.visual_art_form.artists ?x .\n}\n",
            "TopicEntityMid": "m.01gq53",
            "mid2name": {
                "ns:m.01gq53": "Performance"
            },
            "SExpr_w_name": "(JOIN (R visual_art.visual_art_form.artists) Performance)",
            "SExpr": "(JOIN (R visual_art.visual_art_form.artists) m.01gq53)"
        }
    },
    "196": {
        "generations": "which royal family preceded the house of hanover?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017yzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017yzc ns:royalty.royal_line.preceded_by ?x .\n}\n",
            "TopicEntityMid": "m.017yzc",
            "mid2name": {
                "ns:m.017yzc": "House of Hanover"
            },
            "SExpr_w_name": "(JOIN (R royalty.royal_line.preceded_by) House of Hanover)",
            "SExpr": "(JOIN (R royalty.royal_line.preceded_by) m.017yzc)"
        }
    },
    "197": {
        "generations": "who are some people with the profession of hurricane expert?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0grrn5r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0grrn5r ns:people.profession.people_with_this_profession ?x .\n}\n",
            "TopicEntityMid": "m.0grrn5r",
            "mid2name": {
                "ns:m.0grrn5r": "Hurricane Expert"
            },
            "SExpr_w_name": "(JOIN (R people.profession.people_with_this_profession) Hurricane Expert)",
            "SExpr": "(JOIN (R people.profession.people_with_this_profession) m.0grrn5r)"
        }
    },
    "198": {
        "generations": "where did greek mythology originate?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034p8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034p8 ns:base.folklore.mythology.location_of_origin ?x .\n}\n",
            "TopicEntityMid": "m.034p8",
            "mid2name": {
                "ns:m.034p8": "Greek mythology"
            },
            "SExpr_w_name": "(JOIN (R base.folklore.mythology.location_of_origin) Greek mythology)",
            "SExpr": "(JOIN (R base.folklore.mythology.location_of_origin) m.034p8)"
        }
    },
    "199": {
        "generations": "Which celebrities have been patients at the Meadows Clinic?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fxd_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fxd_d ns:celebrities.rehab_facility.celebrity_patients ?x .\n}\n",
            "TopicEntityMid": "m.04fxd_d",
            "mid2name": {
                "ns:m.04fxd_d": "Meadows Clinic"
            },
            "SExpr_w_name": "(JOIN (R celebrities.rehab_facility.celebrity_patients) Meadows Clinic)",
            "SExpr": "(JOIN (R celebrities.rehab_facility.celebrity_patients) m.04fxd_d)"
        }
    },
    "200": {
        "generations": "what was the legislature during the 110th united states congress?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f0dc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f0dc ns:government.legislative_session.legislature ?x .\n}\n",
            "TopicEntityMid": "m.06f0dc",
            "mid2name": {
                "ns:m.06f0dc": "110th United States Congress"
            },
            "SExpr_w_name": "(JOIN (R government.legislative_session.legislature) 110th United States Congress)",
            "SExpr": "(JOIN (R government.legislative_session.legislature) m.06f0dc)"
        }
    },
    "201": {
        "generations": "What internet forum topics are related to Google and motorcycles?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:base.motorcycle.internet_forum_topic.internet_forum_s ?x .\n}\n",
            "TopicEntityMid": "m.045c7b",
            "mid2name": {
                "ns:m.045c7b": "Google"
            },
            "SExpr_w_name": "(JOIN (R base.motorcycle.internet_forum_topic.internet_forum_s) Google)",
            "SExpr": "(JOIN (R base.motorcycle.internet_forum_topic.internet_forum_s) m.045c7b)"
        }
    },
    "202": {
        "generations": "What are the dialects of the programming language C#?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07657k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07657k ns:computer.programming_language.dialects ?x .\n}\n",
            "TopicEntityMid": "m.07657k",
            "mid2name": {
                "ns:m.07657k": "C#"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) C#)",
            "SExpr": "(JOIN (R computer.programming_language.dialects) m.07657k)"
        }
    },
    "203": {
        "generations": "What book did Nasjah Djamin contribute to as an author?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0djvcfj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0djvcfj ns:book.author.contributing_author_to ?x .\n}\n",
            "TopicEntityMid": "m.0djvcfj",
            "mid2name": {
                "ns:m.0djvcfj": "Nasjah Djamin"
            },
            "SExpr_w_name": "(JOIN (R book.author.contributing_author_to) Nasjah Djamin)",
            "SExpr": "(JOIN (R book.author.contributing_author_to) m.0djvcfj)"
        }
    },
    "204": {
        "generations": "who spoke at barack obama's inauguration?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:base.inaugurations.inauguration_speaker.inauguration ?x .\n}\n",
            "TopicEntityMid": "m.02mjmr",
            "mid2name": {
                "ns:m.02mjmr": "Barack Obama"
            },
            "SExpr_w_name": "(JOIN (R base.inaugurations.inauguration_speaker.inauguration) Barack Obama)",
            "SExpr": "(JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.02mjmr)"
        }
    },
    "205": {
        "generations": "What games are available on the Game & Watch platform?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kdlb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kdlb ns:cvg.cvg_platform.games_on_this_platform ?x .\n}\n",
            "TopicEntityMid": "m.01kdlb",
            "mid2name": {
                "ns:m.01kdlb": "Game & Watch"
            },
            "SExpr_w_name": "(JOIN (R cvg.cvg_platform.games_on_this_platform) Game & Watch)",
            "SExpr": "(JOIN (R cvg.cvg_platform.games_on_this_platform) m.01kdlb)"
        }
    },
    "206": {
        "generations": "what are the colors of the smart gilas sports team?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.063y7fk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.063y7fk ns:sports.sports_team.colors ?x .\n}\n",
            "TopicEntityMid": "m.063y7fk",
            "mid2name": {
                "ns:m.063y7fk": "Smart Gilas"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team.colors) Smart Gilas)",
            "SExpr": "(JOIN (R sports.sports_team.colors) m.063y7fk)"
        }
    },
    "207": {
        "generations": "Which company sponsors the Lubimal top-level domain?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11bc14hf2t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11bc14hf2t ns:internet.top_level_domain_sponsor.domains ?x .\n}\n",
            "TopicEntityMid": "g.11bc14hf2t",
            "mid2name": {
                "ns:g.11bc14hf2t": "Lubimal (MS) Ltd."
            },
            "SExpr_w_name": "(JOIN (R internet.top_level_domain_sponsor.domains) Lubimal (MS) Ltd.)",
            "SExpr": "(JOIN (R internet.top_level_domain_sponsor.domains) g.11bc14hf2t)"
        }
    },
    "208": {
        "generations": "What are some examples of animal homeopathic drug formulations?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j4q6wg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j4q6wg ns:medicine.drug_formulation_category.drug_formulations ?x .\n}\n",
            "TopicEntityMid": "m.0j4q6wg",
            "mid2name": {
                "ns:m.0j4q6wg": "Animal homeopathic"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_formulation_category.drug_formulations) Animal homeopathic)",
            "SExpr": "(JOIN (R medicine.drug_formulation_category.drug_formulations) m.0j4q6wg)"
        }
    },
    "209": {
        "generations": "who are the associated authors of marinism?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08798z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08798z ns:book.school_or_movement.associated_authors ?x .\n}\n",
            "TopicEntityMid": "m.08798z",
            "mid2name": {
                "ns:m.08798z": "Marinism"
            },
            "SExpr_w_name": "(JOIN (R book.school_or_movement.associated_authors) Marinism)",
            "SExpr": "(JOIN (R book.school_or_movement.associated_authors) m.08798z)"
        }
    },
    "210": {
        "generations": "What competitions are included in the men's squash tournament event?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08nj_28)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08nj_28 ns:sports.tournament_event.competitions ?x .\n}\n",
            "TopicEntityMid": "m.08nj_28",
            "mid2name": {
                "ns:m.08nj_28": "Men's squash"
            },
            "SExpr_w_name": "(JOIN (R sports.tournament_event.competitions) Men's squash)",
            "SExpr": "(JOIN (R sports.tournament_event.competitions) m.08nj_28)"
        }
    },
    "211": {
        "generations": "What is liturgical drama?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09n7t4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09n7t4 ns:theater.theater_genre.plays_in_this_genre ?x .\n}\n",
            "TopicEntityMid": "m.09n7t4",
            "mid2name": {
                "ns:m.09n7t4": "Liturgical drama"
            },
            "SExpr_w_name": "(JOIN (R theater.theater_genre.plays_in_this_genre) Liturgical drama)",
            "SExpr": "(JOIN (R theater.theater_genre.plays_in_this_genre) m.09n7t4)"
        }
    },
    "212": {
        "generations": "What recipes can be made with peanut oil?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gdv9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gdv9 ns:food.ingredient.recipes ?x .\n}\n",
            "TopicEntityMid": "m.04gdv9",
            "mid2name": {
                "ns:m.04gdv9": "Peanut oil"
            },
            "SExpr_w_name": "(JOIN (R food.ingredient.recipes) Peanut oil)",
            "SExpr": "(JOIN (R food.ingredient.recipes) m.04gdv9)"
        }
    },
    "213": {
        "generations": "What governmental body is Maryland Senate a component of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fcdw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fcdw ns:government.governmental_body.body_this_is_a_component_of ?x .\n}\n",
            "TopicEntityMid": "m.04fcdw",
            "mid2name": {
                "ns:m.04fcdw": "Maryland Senate"
            },
            "SExpr_w_name": "(JOIN (R government.governmental_body.body_this_is_a_component_of) Maryland Senate)",
            "SExpr": "(JOIN (R government.governmental_body.body_this_is_a_component_of) m.04fcdw)"
        }
    },
    "214": {
        "generations": "What is photopsia a symptom of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09p809)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09p809 ns:medicine.symptom.symptom_of ?x .\n}\n",
            "TopicEntityMid": "m.09p809",
            "mid2name": {
                "ns:m.09p809": "Photopsia"
            },
            "SExpr_w_name": "(JOIN (R medicine.symptom.symptom_of) Photopsia)",
            "SExpr": "(JOIN (R medicine.symptom.symptom_of) m.09p809)"
        }
    },
    "215": {
        "generations": "who appoints members of the united states congress?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t31)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t31 ns:people.appointer.appointment_made ?x .\n}\n",
            "TopicEntityMid": "m.07t31",
            "mid2name": {
                "ns:m.07t31": "United States Congress"
            },
            "SExpr_w_name": "(JOIN (R people.appointer.appointment_made) United States Congress)",
            "SExpr": "(JOIN (R people.appointer.appointment_made) m.07t31)"
        }
    },
    "216": {
        "generations": "Which comic book stories were lettered by Janice Chiang?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z88gj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z88gj ns:comic_books.comic_book_letterer.comic_stories_lettered ?x .\n}\n",
            "TopicEntityMid": "m.02z88gj",
            "mid2name": {
                "ns:m.02z88gj": "Janice Chiang"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_letterer.comic_stories_lettered) Janice Chiang)",
            "SExpr": "(JOIN (R comic_books.comic_book_letterer.comic_stories_lettered) m.02z88gj)"
        }
    },
    "217": {
        "generations": "What is the next model year for the Chevy Spark 2014?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012br3w2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012br3w2 ns:automotive.model_year.next_model_year ?x .\n}\n",
            "TopicEntityMid": "m.012br3w2",
            "mid2name": {
                "ns:m.012br3w2": "2014 Chevy Spark"
            },
            "SExpr_w_name": "(JOIN (R automotive.model_year.next_model_year) 2014 Chevy Spark)",
            "SExpr": "(JOIN (R automotive.model_year.next_model_year) m.012br3w2)"
        }
    },
    "218": {
        "generations": "What is Diatrizoic acid used for in medicine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08kvxr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08kvxr ns:medicine.drug.canonical_brands ?x .\n}\n",
            "TopicEntityMid": "m.08kvxr",
            "mid2name": {
                "ns:m.08kvxr": "Diatrizoic acid"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug.canonical_brands) Diatrizoic acid)",
            "SExpr": "(JOIN (R medicine.drug.canonical_brands) m.08kvxr)"
        }
    },
    "219": {
        "generations": "What disease is associated with Elephantulus myurus?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gf88q1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gf88q1 ns:medicine.vector_of_disease.disease ?x .\n}\n",
            "TopicEntityMid": "m.0gf88q1",
            "mid2name": {
                "ns:m.0gf88q1": "Elephantulus myurus"
            },
            "SExpr_w_name": "(JOIN (R medicine.vector_of_disease.disease) Elephantulus myurus)",
            "SExpr": "(JOIN (R medicine.vector_of_disease.disease) m.0gf88q1)"
        }
    },
    "220": {
        "generations": "What radio station does the producer WERS produce for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06cvvh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06cvvh ns:broadcast.producer.produces ?x .\n}\n",
            "TopicEntityMid": "m.06cvvh",
            "mid2name": {
                "ns:m.06cvvh": "WERS"
            },
            "SExpr_w_name": "(JOIN (R broadcast.producer.produces) WERS)",
            "SExpr": "(JOIN (R broadcast.producer.produces) m.06cvvh)"
        }
    },
    "221": {
        "generations": "who designed the programming language m4?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02y1lf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02y1lf ns:computer.programming_language.language_designers ?x .\n}\n",
            "TopicEntityMid": "m.02y1lf",
            "mid2name": {
                "ns:m.02y1lf": "m4"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language.language_designers) m4)",
            "SExpr": "(JOIN (R computer.programming_language.language_designers) m.02y1lf)"
        }
    },
    "222": {
        "generations": "What type of processor does the IMSAI Series Two computer have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cpv78)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cpv78 ns:computer.computer.processor ?x .\n}\n",
            "TopicEntityMid": "m.0cpv78",
            "mid2name": {
                "ns:m.0cpv78": "IMSAI Series Two"
            },
            "SExpr_w_name": "(JOIN (R computer.computer.processor) IMSAI Series Two)",
            "SExpr": "(JOIN (R computer.computer.processor) m.0cpv78)"
        }
    },
    "223": {
        "generations": "Who manufactures the Beechcraft Super King Air aircraft model?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pg55h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pg55h ns:aviation.aircraft_model.manufacturer ?x .\n}\n",
            "TopicEntityMid": "m.02pg55h",
            "mid2name": {
                "ns:m.02pg55h": "Beechcraft Super King Air"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_model.manufacturer) Beechcraft Super King Air)",
            "SExpr": "(JOIN (R aviation.aircraft_model.manufacturer) m.02pg55h)"
        }
    },
    "224": {
        "generations": "What was the name of Girls' Generation's first Asia tour?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0wpq2zc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0wpq2zc ns:music.concert_film.concert_tour ?x .\n}\n",
            "TopicEntityMid": "m.0wpq2zc",
            "mid2name": {
                "ns:m.0wpq2zc": "Girls' Generation - The 1st Asia Tour : Into the New World"
            },
            "SExpr_w_name": "(JOIN (R music.concert_film.concert_tour) Girls' Generation - The 1st Asia Tour : Into the New World)",
            "SExpr": "(JOIN (R music.concert_film.concert_tour) m.0wpq2zc)"
        }
    },
    "225": {
        "generations": "What are the active ingredients in the homeopathic preparation containing horse chestnut, collinsonia canadensis root, echinacea angustifolia, hamamelis virginiana root bark/stem bark, pulsatilla vulgaris, arnica montana, activated charcoal, graphite, hydrofluoric acid, lycopodium clavatum spore, nitric acid, strychnos nux-vomica seed, paeonia officinalis root, and sepia officinalis juice?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqwt6b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqwt6b ns:medicine.drug.active_moieties ?x .\n}\n",
            "TopicEntityMid": "m.0hqwt6b",
            "mid2name": {
                "ns:m.0hqwt6b": "Horse chestnut/Collinsonia canadensis root/Echinacea angustifolia/Hamamelis virginiana root bark/stem bark/Pulsatilla vulgaris/Arnica montana/Activated charcoal/Graphite/Hydrofluoric acid/Lycopodium clavatum spore/Nitric acid/Strychnos nux-vomica seed/Paeonia officinalis root/Sepia officinalis juice homeopathic preparation"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug.active_moieties) Horse chestnut/Collinsonia canadensis root/Echinacea angustifolia/Hamamelis virginiana root bark/stem bark/Pulsatilla vulgaris/Arnica montana/Activated charcoal/Graphite/Hydrofluoric acid/Lycopodium clavatum spore/Nitric acid/Strychnos nux-vomica seed/Paeonia officinalis root/Sepia officinalis juice homeopathic preparation)",
            "SExpr": "(JOIN (R medicine.drug.active_moieties) m.0hqwt6b)"
        }
    },
    "226": {
        "generations": "What drug class does Tertatolol belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m5q6g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m5q6g ns:medicine.drug.drug_class ?x .\n}\n",
            "TopicEntityMid": "m.03m5q6g",
            "mid2name": {
                "ns:m.03m5q6g": "Tertatolol"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug.drug_class) Tertatolol)",
            "SExpr": "(JOIN (R medicine.drug.drug_class) m.03m5q6g)"
        }
    },
    "227": {
        "generations": "What is the API protocol used by Representational state transfer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03nsxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03nsxd ns:internet.protocol.api ?x .\n}\n",
            "TopicEntityMid": "m.03nsxd",
            "mid2name": {
                "ns:m.03nsxd": "Representational state transfer"
            },
            "SExpr_w_name": "(JOIN (R internet.protocol.api) Representational state transfer)",
            "SExpr": "(JOIN (R internet.protocol.api) m.03nsxd)"
        }
    },
    "228": {
        "generations": "What is the parent aircraft model of the Boeing 737-600?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.049hj89)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.049hj89 ns:aviation.aircraft_model.parent_aircraft_model ?x .\n}\n",
            "TopicEntityMid": "m.049hj89",
            "mid2name": {
                "ns:m.049hj89": "Boeing 737-600"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_model.parent_aircraft_model) Boeing 737-600)",
            "SExpr": "(JOIN (R aviation.aircraft_model.parent_aircraft_model) m.049hj89)"
        }
    },
    "229": {
        "generations": "What type of binding does the book \"Pines\" have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010hsrpk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010hsrpk ns:book.book_edition.binding ?x .\n}\n",
            "TopicEntityMid": "m.010hsrpk",
            "mid2name": {
                "ns:m.010hsrpk": "Pines"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition.binding) Pines)",
            "SExpr": "(JOIN (R book.book_edition.binding) m.010hsrpk)"
        }
    },
    "230": {
        "generations": "What type of wine is Port wine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0143h2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0143h2 ns:food.wine_style.wines ?x .\n}\n",
            "TopicEntityMid": "m.0143h2",
            "mid2name": {
                "ns:m.0143h2": "Port wine"
            },
            "SExpr_w_name": "(JOIN (R food.wine_style.wines) Port wine)",
            "SExpr": "(JOIN (R food.wine_style.wines) m.0143h2)"
        }
    },
    "231": {
        "generations": "Which operas has Andreas Franz directed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04j6r37)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04j6r37 ns:opera.opera_director.operas_directed ?x .\n}\n",
            "TopicEntityMid": "m.04j6r37",
            "mid2name": {
                "ns:m.04j6r37": "Andreas Franz"
            },
            "SExpr_w_name": "(JOIN (R opera.opera_director.operas_directed) Andreas Franz)",
            "SExpr": "(JOIN (R opera.opera_director.operas_directed) m.04j6r37)"
        }
    },
    "232": {
        "generations": "What organization is a child of David Game College Group?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027gmsd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027gmsd ns:organization.organization.child ?x .\n}\n",
            "TopicEntityMid": "m.027gmsd",
            "mid2name": {
                "ns:m.027gmsd": "David Game College Group"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.child) David Game College Group)",
            "SExpr": "(JOIN (R organization.organization.child) m.027gmsd)"
        }
    },
    "233": {
        "generations": "Who issued UPM-Kymmene Corporation ADR?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x15wg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x15wg9 ns:business.issue.issuer ?x .\n}\n",
            "TopicEntityMid": "m.0x15wg9",
            "mid2name": {
                "ns:m.0x15wg9": "UPM-Kymmene Corporation ADR"
            },
            "SExpr_w_name": "(JOIN (R business.issue.issuer) UPM-Kymmene Corporation ADR)",
            "SExpr": "(JOIN (R business.issue.issuer) m.0x15wg9)"
        }
    },
    "234": {
        "generations": "who created the comic book character abin sur?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nvz8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nvz8 ns:comic_books.comic_book_character.created_by ?x .\n}\n",
            "TopicEntityMid": "m.05nvz8",
            "mid2name": {
                "ns:m.05nvz8": "Abin Sur"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_character.created_by) Abin Sur)",
            "SExpr": "(JOIN (R comic_books.comic_book_character.created_by) m.05nvz8)"
        }
    },
    "235": {
        "generations": "What is the name of the school newspaper for The Towerlight?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pj0l1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pj0l1 ns:education.school_newspaper.school ?x .\n}\n",
            "TopicEntityMid": "m.02pj0l1",
            "mid2name": {
                "ns:m.02pj0l1": "The Towerlight"
            },
            "SExpr_w_name": "(JOIN (R education.school_newspaper.school) The Towerlight)",
            "SExpr": "(JOIN (R education.school_newspaper.school) m.02pj0l1)"
        }
    },
    "236": {
        "generations": "What type of grape is used to make Dolcetto d'Alba wine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07yl5x7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07yl5x7 ns:food.wine_style.grape_varieties ?x .\n}\n",
            "TopicEntityMid": "m.07yl5x7",
            "mid2name": {
                "ns:m.07yl5x7": "Dolcetto d'Alba"
            },
            "SExpr_w_name": "(JOIN (R food.wine_style.grape_varieties) Dolcetto d'Alba)",
            "SExpr": "(JOIN (R food.wine_style.grape_varieties) m.07yl5x7)"
        }
    },
    "237": {
        "generations": "What wine styles are associated with Bonarda di Gattinara grape variety?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rk12l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rk12l ns:wine.grape_variety.wine_styles ?x .\n}\n",
            "TopicEntityMid": "m.09rk12l",
            "mid2name": {
                "ns:m.09rk12l": "Bonarda di Gattinara"
            },
            "SExpr_w_name": "(JOIN (R wine.grape_variety.wine_styles) Bonarda di Gattinara)",
            "SExpr": "(JOIN (R wine.grape_variety.wine_styles) m.09rk12l)"
        }
    },
    "238": {
        "generations": "What is a type of food that is narrower than ground beef?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rkhg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rkhg ns:base.schemastaging.food_extra.narrower ?x .\n}\n",
            "TopicEntityMid": "m.02rkhg",
            "mid2name": {
                "ns:m.02rkhg": "Ground beef"
            },
            "SExpr_w_name": "(JOIN (R base.schemastaging.food_extra.narrower) Ground beef)",
            "SExpr": "(JOIN (R base.schemastaging.food_extra.narrower) m.02rkhg)"
        }
    },
    "239": {
        "generations": "What exhibitions were produced by the Plymouth Historical Museum?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bv390)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bv390 ns:exhibitions.exhibition_producer.exhibitions_produced ?x .\n}\n",
            "TopicEntityMid": "m.05bv390",
            "mid2name": {
                "ns:m.05bv390": "Plymouth Historical Museum"
            },
            "SExpr_w_name": "(JOIN (R exhibitions.exhibition_producer.exhibitions_produced) Plymouth Historical Museum)",
            "SExpr": "(JOIN (R exhibitions.exhibition_producer.exhibitions_produced) m.05bv390)"
        }
    },
    "240": {
        "generations": "What is serialization used for in computer file formats?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0725b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0725b ns:computer.file_format_genre.file_formats ?x .\n}\n",
            "TopicEntityMid": "m.0725b",
            "mid2name": {
                "ns:m.0725b": "Serialization"
            },
            "SExpr_w_name": "(JOIN (R computer.file_format_genre.file_formats) Serialization)",
            "SExpr": "(JOIN (R computer.file_format_genre.file_formats) m.0725b)"
        }
    },
    "241": {
        "generations": "What is the source of the Alpha Capricornids meteor shower?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gp9f6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gp9f6 ns:astronomy.meteor_shower.source_of_meteor_shower ?x .\n}\n",
            "TopicEntityMid": "m.03gp9f6",
            "mid2name": {
                "ns:m.03gp9f6": "Alpha Capricornids"
            },
            "SExpr_w_name": "(JOIN (R astronomy.meteor_shower.source_of_meteor_shower) Alpha Capricornids)",
            "SExpr": "(JOIN (R astronomy.meteor_shower.source_of_meteor_shower) m.03gp9f6)"
        }
    },
    "242": {
        "generations": "What journal has articles on culture, medicine, and psychiatry?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qt394l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qt394l ns:book.journal.articles ?x .\n}\n",
            "TopicEntityMid": "m.0qt394l",
            "mid2name": {
                "ns:m.0qt394l": "Culture, Medicine and Psychiatry"
            },
            "SExpr_w_name": "(JOIN (R book.journal.articles) Culture, Medicine and Psychiatry)",
            "SExpr": "(JOIN (R book.journal.articles) m.0qt394l)"
        }
    },
    "243": {
        "generations": "What programming language is used by Uzbl software?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07s6rsh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07s6rsh ns:computer.software.languages_used ?x .\n}\n",
            "TopicEntityMid": "m.07s6rsh",
            "mid2name": {
                "ns:m.07s6rsh": "Uzbl"
            },
            "SExpr_w_name": "(JOIN (R computer.software.languages_used) Uzbl)",
            "SExpr": "(JOIN (R computer.software.languages_used) m.07s6rsh)"
        }
    },
    "244": {
        "generations": "What is the automotive class of the Shelby GT350?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k_yjt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k_yjt ns:automotive.model.automotive_class ?x .\n}\n",
            "TopicEntityMid": "m.02k_yjt",
            "mid2name": {
                "ns:m.02k_yjt": "Shelby GT350"
            },
            "SExpr_w_name": "(JOIN (R automotive.model.automotive_class) Shelby GT350)",
            "SExpr": "(JOIN (R automotive.model.automotive_class) m.02k_yjt)"
        }
    },
    "245": {
        "generations": "Which cameras use the Nikon DX format?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g448b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g448b ns:digicams.camera_format.cameras ?x .\n}\n",
            "TopicEntityMid": "m.0g448b",
            "mid2name": {
                "ns:m.0g448b": "Nikon DX format"
            },
            "SExpr_w_name": "(JOIN (R digicams.camera_format.cameras) Nikon DX format)",
            "SExpr": "(JOIN (R digicams.camera_format.cameras) m.0g448b)"
        }
    },
    "246": {
        "generations": "What tests are included in a neuropsychological test?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022cfz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022cfz ns:medicine.diagnostic_test.includes_tests ?x .\n}\n",
            "TopicEntityMid": "m.022cfz",
            "mid2name": {
                "ns:m.022cfz": "Neuropsychological test"
            },
            "SExpr_w_name": "(JOIN (R medicine.diagnostic_test.includes_tests) Neuropsychological test)",
            "SExpr": "(JOIN (R medicine.diagnostic_test.includes_tests) m.022cfz)"
        }
    },
    "247": {
        "generations": "What movies are about the Christmas and holiday season?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gn5kd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gn5kd ns:film.film_subject.films ?x .\n}\n",
            "TopicEntityMid": "m.0gn5kd",
            "mid2name": {
                "ns:m.0gn5kd": "Christmas and holiday season"
            },
            "SExpr_w_name": "(JOIN (R film.film_subject.films) Christmas and holiday season)",
            "SExpr": "(JOIN (R film.film_subject.films) m.0gn5kd)"
        }
    },
    "248": {
        "generations": "Which fictional characters are keyboard players?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fnpj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fnpj ns:fictional_universe.character_occupation.characters_with_this_occupation ?x .\n}\n",
            "TopicEntityMid": "m.0fnpj",
            "mid2name": {
                "ns:m.0fnpj": "Keyboard Player"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) Keyboard Player)",
            "SExpr": "(JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) m.0fnpj)"
        }
    },
    "249": {
        "generations": "Which ship classes were designed by Paul Wright?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062zg59)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062zg59 ns:boats.ship_designer.ship_classes_designed ?x .\n}\n",
            "TopicEntityMid": "m.062zg59",
            "mid2name": {
                "ns:m.062zg59": "Paul Wright"
            },
            "SExpr_w_name": "(JOIN (R boats.ship_designer.ship_classes_designed) Paul Wright)",
            "SExpr": "(JOIN (R boats.ship_designer.ship_classes_designed) m.062zg59)"
        }
    },
    "250": {
        "generations": "What is the name of the recording in the music release track \"Mehfooz\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mszmbx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mszmbx ns:music.release_track.recording ?x .\n}\n",
            "TopicEntityMid": "m.0mszmbx",
            "mid2name": {
                "ns:m.0mszmbx": "Mehfooz"
            },
            "SExpr_w_name": "(JOIN (R music.release_track.recording) Mehfooz)",
            "SExpr": "(JOIN (R music.release_track.recording) m.0mszmbx)"
        }
    },
    "251": {
        "generations": "What type of transmission is a 6 speed automatic?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qpvxm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qpvxm ns:automotive.transmission.classification ?x .\n}\n",
            "TopicEntityMid": "m.03qpvxm",
            "mid2name": {
                "ns:m.03qpvxm": "6 Speed Automatic"
            },
            "SExpr_w_name": "(JOIN (R automotive.transmission.classification) 6 Speed Automatic)",
            "SExpr": "(JOIN (R automotive.transmission.classification) m.03qpvxm)"
        }
    },
    "252": {
        "generations": "What was the recurring event that the 1984 Winter Olympics was a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0sx92)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0sx92 ns:time.event.instance_of_recurring_event ?x .\n}\n",
            "TopicEntityMid": "m.0sx92",
            "mid2name": {
                "ns:m.0sx92": "1984 Winter Olympics"
            },
            "SExpr_w_name": "(JOIN (R time.event.instance_of_recurring_event) 1984 Winter Olympics)",
            "SExpr": "(JOIN (R time.event.instance_of_recurring_event) m.0sx92)"
        }
    },
    "253": {
        "generations": "who is buried in Kalvehave?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11byb4d_k9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11byb4d_k9 ns:people.place_of_interment.interred_here ?x .\n}\n",
            "TopicEntityMid": "g.11byb4d_k9",
            "mid2name": {
                "ns:g.11byb4d_k9": "Kalvehave"
            },
            "SExpr_w_name": "(JOIN (R people.place_of_interment.interred_here) Kalvehave)",
            "SExpr": "(JOIN (R people.place_of_interment.interred_here) g.11byb4d_k9)"
        }
    },
    "254": {
        "generations": "what season comes before christmastide?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rb95)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rb95 ns:user.sprocketonline.default_domain.season.preceding_season ?x .\n}\n",
            "TopicEntityMid": "m.02rb95",
            "mid2name": {
                "ns:m.02rb95": "Christmastide"
            },
            "SExpr_w_name": "(JOIN (R user.sprocketonline.default_domain.season.preceding_season) Christmastide)",
            "SExpr": "(JOIN (R user.sprocketonline.default_domain.season.preceding_season) m.02rb95)"
        }
    },
    "255": {
        "generations": "What breed groups are recognized by the United Kennel Club?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.038fx_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.038fx_ ns:biology.breed_registry.breed_groups ?x .\n}\n",
            "TopicEntityMid": "m.038fx_",
            "mid2name": {
                "ns:m.038fx_": "United Kennel Club"
            },
            "SExpr_w_name": "(JOIN (R biology.breed_registry.breed_groups) United Kennel Club)",
            "SExpr": "(JOIN (R biology.breed_registry.breed_groups) m.038fx_)"
        }
    },
    "256": {
        "generations": "What football association governs the Birmingham County?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026n2lm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026n2lm ns:soccer.fifa.leagues_governed ?x .\n}\n",
            "TopicEntityMid": "m.026n2lm",
            "mid2name": {
                "ns:m.026n2lm": "Birmingham County Football Association"
            },
            "SExpr_w_name": "(JOIN (R soccer.fifa.leagues_governed) Birmingham County Football Association)",
            "SExpr": "(JOIN (R soccer.fifa.leagues_governed) m.026n2lm)"
        }
    },
    "257": {
        "generations": "What models were produced in the 1974 generation of the Pontiac GTO?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k_kvm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k_kvm ns:automotive.generation.models ?x .\n}\n",
            "TopicEntityMid": "m.02k_kvm",
            "mid2name": {
                "ns:m.02k_kvm": "1974 Pontiac GTO (Generation)"
            },
            "SExpr_w_name": "(JOIN (R automotive.generation.models) 1974 Pontiac GTO (Generation))",
            "SExpr": "(JOIN (R automotive.generation.models) m.02k_kvm)"
        }
    },
    "258": {
        "generations": "Who are the members of the Exiles in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gjfj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gjfj ns:fictional_universe.fictional_organization.members ?x .\n}\n",
            "TopicEntityMid": "m.03gjfj",
            "mid2name": {
                "ns:m.03gjfj": "Exiles"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_organization.members) Exiles)",
            "SExpr": "(JOIN (R fictional_universe.fictional_organization.members) m.03gjfj)"
        }
    },
    "259": {
        "generations": "What category does vodka belong to in the consumer product industry?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08127)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08127 ns:business.consumer_product.category ?x .\n}\n",
            "TopicEntityMid": "m.08127",
            "mid2name": {
                "ns:m.08127": "Vodka"
            },
            "SExpr_w_name": "(JOIN (R business.consumer_product.category) Vodka)",
            "SExpr": "(JOIN (R business.consumer_product.category) m.08127)"
        }
    },
    "260": {
        "generations": "On what platforms can Quest for Fame be played?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06x902)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06x902 ns:base.wikipedia_infobox.video_game.platforms ?x .\n}\n",
            "TopicEntityMid": "m.06x902",
            "mid2name": {
                "ns:m.06x902": "Quest for Fame"
            },
            "SExpr_w_name": "(JOIN (R base.wikipedia_infobox.video_game.platforms) Quest for Fame)",
            "SExpr": "(JOIN (R base.wikipedia_infobox.video_game.platforms) m.06x902)"
        }
    },
    "261": {
        "generations": "What was the focus of the construction project for US Route 101?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jb0pw3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jb0pw3 ns:projects.project.project_focus ?x .\n}\n",
            "TopicEntityMid": "m.0jb0pw3",
            "mid2name": {
                "ns:m.0jb0pw3": "Construction of US Route 101"
            },
            "SExpr_w_name": "(JOIN (R projects.project.project_focus) Construction of US Route 101)",
            "SExpr": "(JOIN (R projects.project.project_focus) m.0jb0pw3)"
        }
    },
    "262": {
        "generations": "What language is Russian Life written in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062cb0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062cb0 ns:book.periodical.language ?x .\n}\n",
            "TopicEntityMid": "m.062cb0",
            "mid2name": {
                "ns:m.062cb0": "Russian Life"
            },
            "SExpr_w_name": "(JOIN (R book.periodical.language) Russian Life)",
            "SExpr": "(JOIN (R book.periodical.language) m.062cb0)"
        }
    },
    "263": {
        "generations": "What is the antiparticle of the up quark?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jzqz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jzqz ns:physics.particle.antiparticle ?x .\n}\n",
            "TopicEntityMid": "m.01jzqz",
            "mid2name": {
                "ns:m.01jzqz": "Up quark"
            },
            "SExpr_w_name": "(JOIN (R physics.particle.antiparticle) Up quark)",
            "SExpr": "(JOIN (R physics.particle.antiparticle) m.01jzqz)"
        }
    },
    "264": {
        "generations": "What animals does James White own?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yqj5q0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yqj5q0 ns:biology.animal_owner.animals_owned ?x .\n}\n",
            "TopicEntityMid": "m.0yqj5q0",
            "mid2name": {
                "ns:m.0yqj5q0": "James White"
            },
            "SExpr_w_name": "(JOIN (R biology.animal_owner.animals_owned) James White)",
            "SExpr": "(JOIN (R biology.animal_owner.animals_owned) m.0yqj5q0)"
        }
    },
    "265": {
        "generations": "What sector does AVERT belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04z_yv3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04z_yv3 ns:organization.organization.sectors ?x .\n}\n",
            "TopicEntityMid": "m.04z_yv3",
            "mid2name": {
                "ns:m.04z_yv3": "AVERT"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.sectors) AVERT)",
            "SExpr": "(JOIN (R organization.organization.sectors) m.04z_yv3)"
        }
    },
    "266": {
        "generations": "What was the subject of the Brit Insurance Designs Awards in 2010?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ch_sw2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ch_sw2 ns:exhibitions.exhibition.subjects ?x .\n}\n",
            "TopicEntityMid": "m.0ch_sw2",
            "mid2name": {
                "ns:m.0ch_sw2": "Brit Insurance Designs Awards 2010"
            },
            "SExpr_w_name": "(JOIN (R exhibitions.exhibition.subjects) Brit Insurance Designs Awards 2010)",
            "SExpr": "(JOIN (R exhibitions.exhibition.subjects) m.0ch_sw2)"
        }
    },
    "267": {
        "generations": "What category does the Andromeda Galaxy belong to in astronomy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jvb4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jvb4 ns:astronomy.celestial_object.category ?x .\n}\n",
            "TopicEntityMid": "m.0jvb4",
            "mid2name": {
                "ns:m.0jvb4": "Andromeda Galaxy"
            },
            "SExpr_w_name": "(JOIN (R astronomy.celestial_object.category) Andromeda Galaxy)",
            "SExpr": "(JOIN (R astronomy.celestial_object.category) m.0jvb4)"
        }
    },
    "268": {
        "generations": "where is the creighton bluejays men's basketball team located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qsymk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qsymk ns:sports.sports_team.location ?x .\n}\n",
            "TopicEntityMid": "m.02qsymk",
            "mid2name": {
                "ns:m.02qsymk": "Creighton Bluejays men's basketball"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team.location) Creighton Bluejays men's basketball)",
            "SExpr": "(JOIN (R sports.sports_team.location) m.02qsymk)"
        }
    },
    "269": {
        "generations": "What is the engine cycle of the RD-171 rocket engine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xlvv5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xlvv5 ns:spaceflight.bipropellant_rocket_engine.engine_cycle ?x .\n}\n",
            "TopicEntityMid": "m.02xlvv5",
            "mid2name": {
                "ns:m.02xlvv5": "RD-171"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.bipropellant_rocket_engine.engine_cycle) RD-171)",
            "SExpr": "(JOIN (R spaceflight.bipropellant_rocket_engine.engine_cycle) m.02xlvv5)"
        }
    },
    "270": {
        "generations": "What guidebooks are part of the Travel guidebook series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01314940)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01314940 ns:travel.guidebook_series.guidebooks ?x .\n}\n",
            "TopicEntityMid": "m.01314940",
            "mid2name": {
                "ns:m.01314940": "Travel"
            },
            "SExpr_w_name": "(JOIN (R travel.guidebook_series.guidebooks) Travel)",
            "SExpr": "(JOIN (R travel.guidebook_series.guidebooks) m.01314940)"
        }
    },
    "271": {
        "generations": "What species is featured in the fictional universe of Lexx?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0967h3f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0967h3f ns:fictional_universe.fictional_universe.species ?x .\n}\n",
            "TopicEntityMid": "m.0967h3f",
            "mid2name": {
                "ns:m.0967h3f": "Lexx"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.species) Lexx)",
            "SExpr": "(JOIN (R fictional_universe.fictional_universe.species) m.0967h3f)"
        }
    },
    "272": {
        "generations": "who owns the Longview Mall?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03l_zrp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03l_zrp ns:business.shopping_center.owner ?x .\n}\n",
            "TopicEntityMid": "m.03l_zrp",
            "mid2name": {
                "ns:m.03l_zrp": "Longview Mall"
            },
            "SExpr_w_name": "(JOIN (R business.shopping_center.owner) Longview Mall)",
            "SExpr": "(JOIN (R business.shopping_center.owner) m.03l_zrp)"
        }
    },
    "273": {
        "generations": "What was the name of the croquet event at the 1900 Summer Olympics and what was the format?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vrwq0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vrwq0 ns:olympics.olympic_event_competition.event ?x .\n}\n",
            "TopicEntityMid": "m.02vrwq0",
            "mid2name": {
                "ns:m.02vrwq0": "Croquet at the 1900 Summer Olympics \u2013 Singles, two balls"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_event_competition.event) Croquet at the 1900 Summer Olympics \u2013 Singles, two balls)",
            "SExpr": "(JOIN (R olympics.olympic_event_competition.event) m.02vrwq0)"
        }
    },
    "274": {
        "generations": "where was the Allan Hills 84001 meteorite discovered?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0192tq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0192tq ns:astronomy.meteorite.meteorite_discovery_location ?x .\n}\n",
            "TopicEntityMid": "m.0192tq",
            "mid2name": {
                "ns:m.0192tq": "Allan Hills 84001"
            },
            "SExpr_w_name": "(JOIN (R astronomy.meteorite.meteorite_discovery_location) Allan Hills 84001)",
            "SExpr": "(JOIN (R astronomy.meteorite.meteorite_discovery_location) m.0192tq)"
        }
    },
    "275": {
        "generations": "How was HD 1461 d discovered in astronomy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09k5lz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09k5lz1 ns:astronomy.astronomical_discovery.discovery_technique ?x .\n}\n",
            "TopicEntityMid": "m.09k5lz1",
            "mid2name": {
                "ns:m.09k5lz1": "HD 1461 d"
            },
            "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.discovery_technique) HD 1461 d)",
            "SExpr": "(JOIN (R astronomy.astronomical_discovery.discovery_technique) m.09k5lz1)"
        }
    },
    "276": {
        "generations": "What is the equivalent concept of Canvas in the SKOS vocabulary?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jmpt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jmpt ns:base.skosbase.vocabulary_equivalent_topic.equivalent_concept ?x .\n}\n",
            "TopicEntityMid": "m.0jmpt",
            "mid2name": {
                "ns:m.0jmpt": "Canvas"
            },
            "SExpr_w_name": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.equivalent_concept) Canvas)",
            "SExpr": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.equivalent_concept) m.0jmpt)"
        }
    },
    "277": {
        "generations": "What file formats are supported by Laservision?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l137j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l137j ns:computer.computing_platform.file_formats_supported ?x .\n}\n",
            "TopicEntityMid": "m.02l137j",
            "mid2name": {
                "ns:m.02l137j": "Laservision"
            },
            "SExpr_w_name": "(JOIN (R computer.computing_platform.file_formats_supported) Laservision)",
            "SExpr": "(JOIN (R computer.computing_platform.file_formats_supported) m.02l137j)"
        }
    },
    "278": {
        "generations": "who won the 2008 election for illinois's 112th state representative district?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04s_xtv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04s_xtv ns:government.election.general_election ?x .\n}\n",
            "TopicEntityMid": "m.04s_xtv",
            "mid2name": {
                "ns:m.04s_xtv": "Illinois\u2019s 112th State Representative district election, 2008"
            },
            "SExpr_w_name": "(JOIN (R government.election.general_election) Illinois\u2019s 112th State Representative district election, 2008)",
            "SExpr": "(JOIN (R government.election.general_election) m.04s_xtv)"
        }
    },
    "279": {
        "generations": "who are the children of frances marsden in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g50rk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g50rk ns:fictional_universe.fictional_character.children ?x .\n}\n",
            "TopicEntityMid": "m.0g50rk",
            "mid2name": {
                "ns:m.0g50rk": "Frances Marsden"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.children) Frances Marsden)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.children) m.0g50rk)"
        }
    },
    "280": {
        "generations": "What is the casualty count for The Sacred Band of Stepsons in military fiction?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bhbf93)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bhbf93 ns:base.militaryinfiction.military_combatant_in_fiction.casualties ?x .\n}\n",
            "TopicEntityMid": "m.0bhbf93",
            "mid2name": {
                "ns:m.0bhbf93": "The Sacred Band of Stepsons"
            },
            "SExpr_w_name": "(JOIN (R base.militaryinfiction.military_combatant_in_fiction.casualties) The Sacred Band of Stepsons)",
            "SExpr": "(JOIN (R base.militaryinfiction.military_combatant_in_fiction.casualties) m.0bhbf93)"
        }
    },
    "281": {
        "generations": "What car brand is Volkswagen known for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h5wtyy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h5wtyy ns:automotive.make.model_s ?x .\n}\n",
            "TopicEntityMid": "m.0h5wtyy",
            "mid2name": {
                "ns:m.0h5wtyy": "Volkswagen"
            },
            "SExpr_w_name": "(JOIN (R automotive.make.model_s) Volkswagen)",
            "SExpr": "(JOIN (R automotive.make.model_s) m.0h5wtyy)"
        }
    },
    "282": {
        "generations": "What is the original language of the Seventh-day Adventist Encyclopedia, M-Z?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y4dy39)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y4dy39 ns:book.written_work.original_language ?x .\n}\n",
            "TopicEntityMid": "m.0y4dy39",
            "mid2name": {
                "ns:m.0y4dy39": "Seventh-day Adventist Encyclopedia, M-Z"
            },
            "SExpr_w_name": "(JOIN (R book.written_work.original_language) Seventh-day Adventist Encyclopedia, M-Z)",
            "SExpr": "(JOIN (R book.written_work.original_language) m.0y4dy39)"
        }
    },
    "283": {
        "generations": "What is the setting of \"A Death in the Family, Part Two\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036lcnm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036lcnm ns:fictional_universe.work_of_fiction.setting ?x .\n}\n",
            "TopicEntityMid": "m.036lcnm",
            "mid2name": {
                "ns:m.036lcnm": "A Death in the Family, Part Two"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.work_of_fiction.setting) A Death in the Family, Part Two)",
            "SExpr": "(JOIN (R fictional_universe.work_of_fiction.setting) m.036lcnm)"
        }
    },
    "284": {
        "generations": "What are the comments on The Frank Show editorial?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c89mr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c89mr ns:user.zsi_editorial.editorial.topic.comments ?x .\n}\n",
            "TopicEntityMid": "m.0c89mr",
            "mid2name": {
                "ns:m.0c89mr": "The Frank Show"
            },
            "SExpr_w_name": "(JOIN (R user.zsi_editorial.editorial.topic.comments) The Frank Show)",
            "SExpr": "(JOIN (R user.zsi_editorial.editorial.topic.comments) m.0c89mr)"
        }
    },
    "285": {
        "generations": "What brands make peanut butter flavored breakfast cereal?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01qfcj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01qfcj ns:base.breakfast.breakfast_cereal_flavor.brands ?x .\n}\n",
            "TopicEntityMid": "m.01qfcj",
            "mid2name": {
                "ns:m.01qfcj": "Peanut butter"
            },
            "SExpr_w_name": "(JOIN (R base.breakfast.breakfast_cereal_flavor.brands) Peanut butter)",
            "SExpr": "(JOIN (R base.breakfast.breakfast_cereal_flavor.brands) m.01qfcj)"
        }
    },
    "286": {
        "generations": "What animal eats cattle in the food web?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xq0k1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xq0k1 ns:base.ecology.food_web_member.eaten_by ?x .\n}\n",
            "TopicEntityMid": "m.01xq0k1",
            "mid2name": {
                "ns:m.01xq0k1": "Cattle"
            },
            "SExpr_w_name": "(JOIN (R base.ecology.food_web_member.eaten_by) Cattle)",
            "SExpr": "(JOIN (R base.ecology.food_web_member.eaten_by) m.01xq0k1)"
        }
    },
    "287": {
        "generations": "What book is the translation of two speeches by General Charles de Gaulle?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f6nvp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f6nvp ns:book.translation.translation_of ?x .\n}\n",
            "TopicEntityMid": "m.06f6nvp",
            "mid2name": {
                "ns:m.06f6nvp": "Two speeches by General Charles de Gaulle.."
            },
            "SExpr_w_name": "(JOIN (R book.translation.translation_of) Two speeches by General Charles de Gaulle..)",
            "SExpr": "(JOIN (R book.translation.translation_of) m.06f6nvp)"
        }
    },
    "288": {
        "generations": "What is the governing body of the Bundesliga football league?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037169)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037169 ns:soccer.football_league.governing_body ?x .\n}\n",
            "TopicEntityMid": "m.037169",
            "mid2name": {
                "ns:m.037169": "Bundesliga"
            },
            "SExpr_w_name": "(JOIN (R soccer.football_league.governing_body) Bundesliga)",
            "SExpr": "(JOIN (R soccer.football_league.governing_body) m.037169)"
        }
    },
    "289": {
        "generations": "Where is the MiniGrail telescope housed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058m01)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058m01 ns:astronomy.telescope.housed_in ?x .\n}\n",
            "TopicEntityMid": "m.058m01",
            "mid2name": {
                "ns:m.058m01": "MiniGrail"
            },
            "SExpr_w_name": "(JOIN (R astronomy.telescope.housed_in) MiniGrail)",
            "SExpr": "(JOIN (R astronomy.telescope.housed_in) m.058m01)"
        }
    },
    "290": {
        "generations": "What language do the Bunjevci people speak?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vpv9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vpv9 ns:people.ethnicity.languages_spoken ?x .\n}\n",
            "TopicEntityMid": "m.01vpv9",
            "mid2name": {
                "ns:m.01vpv9": "Bunjevci"
            },
            "SExpr_w_name": "(JOIN (R people.ethnicity.languages_spoken) Bunjevci)",
            "SExpr": "(JOIN (R people.ethnicity.languages_spoken) m.01vpv9)"
        }
    },
    "291": {
        "generations": "Which fictional characters belong to the ethnicity of Ranke?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0b0q2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0b0q2 ns:fictional_universe.ethnicity_in_fiction.characters_of_this_ethnicity ?x .\n}\n",
            "TopicEntityMid": "m.0c0b0q2",
            "mid2name": {
                "ns:m.0c0b0q2": "Ranke"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.ethnicity_in_fiction.characters_of_this_ethnicity) Ranke)",
            "SExpr": "(JOIN (R fictional_universe.ethnicity_in_fiction.characters_of_this_ethnicity) m.0c0b0q2)"
        }
    },
    "292": {
        "generations": "Which fictional characters have the ability to create an unending dream state?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c82m27)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c82m27 ns:fictional_universe.character_powers.characters_with_this_ability ?x .\n}\n",
            "TopicEntityMid": "m.0c82m27",
            "mid2name": {
                "ns:m.0c82m27": "Create unending dream state"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.character_powers.characters_with_this_ability) Create unending dream state)",
            "SExpr": "(JOIN (R fictional_universe.character_powers.characters_with_this_ability) m.0c82m27)"
        }
    },
    "293": {
        "generations": "Where is Alpine Shepherd cheese from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h891x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h891x ns:food.cheese.region ?x .\n}\n",
            "TopicEntityMid": "m.02h891x",
            "mid2name": {
                "ns:m.02h891x": "Alpine Shepherd"
            },
            "SExpr_w_name": "(JOIN (R food.cheese.region) Alpine Shepherd)",
            "SExpr": "(JOIN (R food.cheese.region) m.02h891x)"
        }
    },
    "294": {
        "generations": "What are the religions included in the Abrahamic religions?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f_h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f_h6 ns:religion.religion.includes ?x .\n}\n",
            "TopicEntityMid": "m.0f_h6",
            "mid2name": {
                "ns:m.0f_h6": "Abrahamic religions"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.includes) Abrahamic religions)",
            "SExpr": "(JOIN (R religion.religion.includes) m.0f_h6)"
        }
    },
    "295": {
        "generations": "Who is the artist of the music video \"Russian Roulette\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h3dnrc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h3dnrc ns:music.music_video.artist ?x .\n}\n",
            "TopicEntityMid": "m.0h3dnrc",
            "mid2name": {
                "ns:m.0h3dnrc": "Russian Roulette"
            },
            "SExpr_w_name": "(JOIN (R music.music_video.artist) Russian Roulette)",
            "SExpr": "(JOIN (R music.music_video.artist) m.0h3dnrc)"
        }
    },
    "296": {
        "generations": "What instrument belongs to the Heckelphone family?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s4s1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s4s1 ns:music.instrument.family ?x .\n}\n",
            "TopicEntityMid": "m.01s4s1",
            "mid2name": {
                "ns:m.01s4s1": "Heckelphone"
            },
            "SExpr_w_name": "(JOIN (R music.instrument.family) Heckelphone)",
            "SExpr": "(JOIN (R music.instrument.family) m.01s4s1)"
        }
    },
    "297": {
        "generations": "Which agency provides memorial benefits for veterans?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y4wk07)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y4wk07 ns:government.government_service.providing_agency ?x .\n}\n",
            "TopicEntityMid": "m.0y4wk07",
            "mid2name": {
                "ns:m.0y4wk07": "Memorial Benefits (Veterans Affairs)"
            },
            "SExpr_w_name": "(JOIN (R government.government_service.providing_agency) Memorial Benefits (Veterans Affairs))",
            "SExpr": "(JOIN (R government.government_service.providing_agency) m.0y4wk07)"
        }
    },
    "298": {
        "generations": "what calendar system is used for july 11th?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.041hj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.041hj ns:time.day_of_year.calendar_system ?x .\n}\n",
            "TopicEntityMid": "m.041hj",
            "mid2name": {
                "ns:m.041hj": "July 11"
            },
            "SExpr_w_name": "(JOIN (R time.day_of_year.calendar_system) July 11)",
            "SExpr": "(JOIN (R time.day_of_year.calendar_system) m.041hj)"
        }
    },
    "299": {
        "generations": "what is the format of KSRA-FM radio station?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047q9rz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047q9rz ns:broadcast.radio_station.format ?x .\n}\n",
            "TopicEntityMid": "m.047q9rz",
            "mid2name": {
                "ns:m.047q9rz": "KSRA-FM"
            },
            "SExpr_w_name": "(JOIN (R broadcast.radio_station.format) KSRA-FM)",
            "SExpr": "(JOIN (R broadcast.radio_station.format) m.047q9rz)"
        }
    },
    "300": {
        "generations": "What category does Molasses Chip belong to in the business product line?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01147lfw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01147lfw ns:business.product_line.category ?x .\n}\n",
            "TopicEntityMid": "m.01147lfw",
            "mid2name": {
                "ns:m.01147lfw": "Molasses Chip"
            },
            "SExpr_w_name": "(JOIN (R business.product_line.category) Molasses Chip)",
            "SExpr": "(JOIN (R business.product_line.category) m.01147lfw)"
        }
    },
    "301": {
        "generations": "what religion is LaVeyan Satanism a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026dlh_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026dlh_ ns:religion.religion.is_part_of ?x .\n}\n",
            "TopicEntityMid": "m.026dlh_",
            "mid2name": {
                "ns:m.026dlh_": "LaVeyan Satanism"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.is_part_of) LaVeyan Satanism)",
            "SExpr": "(JOIN (R religion.religion.is_part_of) m.026dlh_)"
        }
    },
    "302": {
        "generations": "Who discovered the Orionids?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025y5nx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025y5nx ns:astronomy.astronomical_discovery.discoverer ?x .\n}\n",
            "TopicEntityMid": "m.025y5nx",
            "mid2name": {
                "ns:m.025y5nx": "Orionids"
            },
            "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.discoverer) Orionids)",
            "SExpr": "(JOIN (R astronomy.astronomical_discovery.discoverer) m.025y5nx)"
        }
    },
    "303": {
        "generations": "what is the second amendment to the united states constitution?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07shq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07shq ns:law.constitutional_amendment.constitution ?x .\n}\n",
            "TopicEntityMid": "m.07shq",
            "mid2name": {
                "ns:m.07shq": "Second Amendment to the United States Constitution"
            },
            "SExpr_w_name": "(JOIN (R law.constitutional_amendment.constitution) Second Amendment to the United States Constitution)",
            "SExpr": "(JOIN (R law.constitutional_amendment.constitution) m.07shq)"
        }
    },
    "304": {
        "generations": "What is the title of the book about Stanford students following Venus across the sun?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kh6khb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kh6khb ns:book.published_work.published_in_published_as ?x .\n}\n",
            "TopicEntityMid": "m.0kh6khb",
            "mid2name": {
                "ns:m.0kh6khb": "Stanford students follow Venus across the sun"
            },
            "SExpr_w_name": "(JOIN (R book.published_work.published_in_published_as) Stanford students follow Venus across the sun)",
            "SExpr": "(JOIN (R book.published_work.published_in_published_as) m.0kh6khb)"
        }
    },
    "305": {
        "generations": "Which chromosome is the PA0477 gene located on?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0l1dqp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0l1dqp7 ns:biology.gene.chromosome ?x .\n}\n",
            "TopicEntityMid": "m.0l1dqp7",
            "mid2name": {
                "ns:m.0l1dqp7": "PA0477"
            },
            "SExpr_w_name": "(JOIN (R biology.gene.chromosome) PA0477)",
            "SExpr": "(JOIN (R biology.gene.chromosome) m.0l1dqp7)"
        }
    },
    "306": {
        "generations": "Who are the activists for nutrition?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05djc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05djc ns:base.activism.activism_issue.activists ?x .\n}\n",
            "TopicEntityMid": "m.05djc",
            "mid2name": {
                "ns:m.05djc": "Nutrition"
            },
            "SExpr_w_name": "(JOIN (R base.activism.activism_issue.activists) Nutrition)",
            "SExpr": "(JOIN (R base.activism.activism_issue.activists) m.05djc)"
        }
    },
    "307": {
        "generations": "What department is Stanford Hematology a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dlql62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dlql62 ns:education.department.department_of ?x .\n}\n",
            "TopicEntityMid": "m.0dlql62",
            "mid2name": {
                "ns:m.0dlql62": "Stanford Hematology"
            },
            "SExpr_w_name": "(JOIN (R education.department.department_of) Stanford Hematology)",
            "SExpr": "(JOIN (R education.department.department_of) m.0dlql62)"
        }
    },
    "308": {
        "generations": "What lawsuits has Microsoft Corporation been involved in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04sv4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04sv4 ns:base.morelaw.plaintiff.lawsuits ?x .\n}\n",
            "TopicEntityMid": "m.04sv4",
            "mid2name": {
                "ns:m.04sv4": "Microsoft Corporation"
            },
            "SExpr_w_name": "(JOIN (R base.morelaw.plaintiff.lawsuits) Microsoft Corporation)",
            "SExpr": "(JOIN (R base.morelaw.plaintiff.lawsuits) m.04sv4)"
        }
    },
    "309": {
        "generations": "who directed the theater production of Edward II?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0w37sm0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0w37sm0 ns:theater.theater_production.director ?x .\n}\n",
            "TopicEntityMid": "m.0w37sm0",
            "mid2name": {
                "ns:m.0w37sm0": "Edward II"
            },
            "SExpr_w_name": "(JOIN (R theater.theater_production.director) Edward II)",
            "SExpr": "(JOIN (R theater.theater_production.director) m.0w37sm0)"
        }
    },
    "310": {
        "generations": "What astronomical discovery was retracted?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b458y8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b458y8 ns:astronomy.astronomical_discovery_status.objects ?x .\n}\n",
            "TopicEntityMid": "m.0b458y8",
            "mid2name": {
                "ns:m.0b458y8": "Retracted"
            },
            "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery_status.objects) Retracted)",
            "SExpr": "(JOIN (R astronomy.astronomical_discovery_status.objects) m.0b458y8)"
        }
    },
    "311": {
        "generations": "What movies fall under the genre of Nazi exploitation?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08t59x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08t59x ns:film.film_genre.films_in_this_genre ?x .\n}\n",
            "TopicEntityMid": "m.08t59x",
            "mid2name": {
                "ns:m.08t59x": "Nazi exploitation"
            },
            "SExpr_w_name": "(JOIN (R film.film_genre.films_in_this_genre) Nazi exploitation)",
            "SExpr": "(JOIN (R film.film_genre.films_in_this_genre) m.08t59x)"
        }
    },
    "312": {
        "generations": "What fictional universe does Marvel belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058nt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058nt ns:fictional_universe.fictional_universe.organizations ?x .\n}\n",
            "TopicEntityMid": "m.058nt",
            "mid2name": {
                "ns:m.058nt": "Marvel Universe"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) Marvel Universe)",
            "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) m.058nt)"
        }
    },
    "313": {
        "generations": "What is the name of the radio station that plays 70s hits on Sky.fm?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gbx2_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gbx2_ ns:broadcast.content.broadcast ?x .\n}\n",
            "TopicEntityMid": "m.03gbx2_",
            "mid2name": {
                "ns:m.03gbx2_": "All Hits 70s on Sky.fm"
            },
            "SExpr_w_name": "(JOIN (R broadcast.content.broadcast) All Hits 70s on Sky.fm)",
            "SExpr": "(JOIN (R broadcast.content.broadcast) m.03gbx2_)"
        }
    },
    "314": {
        "generations": "What is the route and stop information for Santa Rosa CityBus?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022qqsh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022qqsh ns:user.joehughes.default_domain.transit_agency.route_stop_information ?x .\n}\n",
            "TopicEntityMid": "m.022qqsh",
            "mid2name": {
                "ns:m.022qqsh": "Santa Rosa CityBus"
            },
            "SExpr_w_name": "(JOIN (R user.joehughes.default_domain.transit_agency.route_stop_information) Santa Rosa CityBus)",
            "SExpr": "(JOIN (R user.joehughes.default_domain.transit_agency.route_stop_information) m.022qqsh)"
        }
    },
    "315": {
        "generations": "What protocols are used by web services?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cf485w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cf485w ns:internet.api.protocols ?x .\n}\n",
            "TopicEntityMid": "m.0cf485w",
            "mid2name": {
                "ns:m.0cf485w": "Web Service"
            },
            "SExpr_w_name": "(JOIN (R internet.api.protocols) Web Service)",
            "SExpr": "(JOIN (R internet.api.protocols) m.0cf485w)"
        }
    },
    "316": {
        "generations": "What forms is Phentermine 37.5 available in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqndcw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqndcw ns:medicine.manufactured_drug_form.available_in ?x .\n}\n",
            "TopicEntityMid": "m.0hqndcw",
            "mid2name": {
                "ns:m.0hqndcw": "Phentermine 37.5 tablet"
            },
            "SExpr_w_name": "(JOIN (R medicine.manufactured_drug_form.available_in) Phentermine 37.5 tablet)",
            "SExpr": "(JOIN (R medicine.manufactured_drug_form.available_in) m.0hqndcw)"
        }
    },
    "317": {
        "generations": "Who owns the patent for a trash can with a power operated lid?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010bxr_t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010bxr_t ns:law.us_patent.assignee ?x .\n}\n",
            "TopicEntityMid": "m.010bxr_t",
            "mid2name": {
                "ns:m.010bxr_t": "TRASH CAN WITH POWER OPERATED LID"
            },
            "SExpr_w_name": "(JOIN (R law.us_patent.assignee) TRASH CAN WITH POWER OPERATED LID)",
            "SExpr": "(JOIN (R law.us_patent.assignee) m.010bxr_t)"
        }
    },
    "318": {
        "generations": "What is the broader group of sulfonate dioxygenase activity in biology?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l1_vy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l1_vy ns:biology.gene_ontology_group.broader_group ?x .\n}\n",
            "TopicEntityMid": "m.02l1_vy",
            "mid2name": {
                "ns:m.02l1_vy": "sulfonate dioxygenase activity"
            },
            "SExpr_w_name": "(JOIN (R biology.gene_ontology_group.broader_group) sulfonate dioxygenase activity)",
            "SExpr": "(JOIN (R biology.gene_ontology_group.broader_group) m.02l1_vy)"
        }
    },
    "319": {
        "generations": "What is the sex of Jamuna Toni?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c0z5v6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c0z5v6 ns:biology.organism.sex ?x .\n}\n",
            "TopicEntityMid": "m.0c0z5v6",
            "mid2name": {
                "ns:m.0c0z5v6": "Jamuna Toni"
            },
            "SExpr_w_name": "(JOIN (R biology.organism.sex) Jamuna Toni)",
            "SExpr": "(JOIN (R biology.organism.sex) m.0c0z5v6)"
        }
    },
    "320": {
        "generations": "Who has contributed to Kaish's tracks?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03f3b97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03f3b97 ns:music.artist.track_contributions ?x .\n}\n",
            "TopicEntityMid": "m.03f3b97",
            "mid2name": {
                "ns:m.03f3b97": "Kaish"
            },
            "SExpr_w_name": "(JOIN (R music.artist.track_contributions) Kaish)",
            "SExpr": "(JOIN (R music.artist.track_contributions) m.03f3b97)"
        }
    },
    "321": {
        "generations": "What are the typical ingredients used in Algerian cuisine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051v_0j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051v_0j ns:dining.cuisine.ingredients ?x .\n}\n",
            "TopicEntityMid": "m.051v_0j",
            "mid2name": {
                "ns:m.051v_0j": "Algerian cuisine"
            },
            "SExpr_w_name": "(JOIN (R dining.cuisine.ingredients) Algerian cuisine)",
            "SExpr": "(JOIN (R dining.cuisine.ingredients) m.051v_0j)"
        }
    },
    "322": {
        "generations": "What artworks belong to the visual art genre \"Other\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011c086t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011c086t ns:visual_art.visual_art_genre.artworks ?x .\n}\n",
            "TopicEntityMid": "m.011c086t",
            "mid2name": {
                "ns:m.011c086t": "Other"
            },
            "SExpr_w_name": "(JOIN (R visual_art.visual_art_genre.artworks) Other)",
            "SExpr": "(JOIN (R visual_art.visual_art_genre.artworks) m.011c086t)"
        }
    },
    "323": {
        "generations": "What instrument is split into an alto flute?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0l15f_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0l15f_ ns:dataworld.gardening_hint.split_to ?x .\n}\n",
            "TopicEntityMid": "m.0l15f_",
            "mid2name": {
                "ns:m.0l15f_": "Alto flute"
            },
            "SExpr_w_name": "(JOIN (R dataworld.gardening_hint.split_to) Alto flute)",
            "SExpr": "(JOIN (R dataworld.gardening_hint.split_to) m.0l15f_)"
        }
    },
    "324": {
        "generations": "who wrote the tenth planet episode of a tv series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04x7k0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04x7k0 ns:tv.tv_series_episode.writer ?x .\n}\n",
            "TopicEntityMid": "m.04x7k0",
            "mid2name": {
                "ns:m.04x7k0": "The Tenth Planet"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_series_episode.writer) The Tenth Planet)",
            "SExpr": "(JOIN (R tv.tv_series_episode.writer) m.04x7k0)"
        }
    },
    "325": {
        "generations": "What is the job title of a Chief Strategy Officer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0256b13)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0256b13 ns:business.job_title.people_with_this_title ?x .\n}\n",
            "TopicEntityMid": "m.0256b13",
            "mid2name": {
                "ns:m.0256b13": "Chief Strategy Officer"
            },
            "SExpr_w_name": "(JOIN (R business.job_title.people_with_this_title) Chief Strategy Officer)",
            "SExpr": "(JOIN (R business.job_title.people_with_this_title) m.0256b13)"
        }
    },
    "326": {
        "generations": "who is a well-known practitioner of meihuaquan?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d90yb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d90yb ns:martial_arts.martial_art.well_known_practitioner ?x .\n}\n",
            "TopicEntityMid": "m.0d90yb",
            "mid2name": {
                "ns:m.0d90yb": "Meihuaquan"
            },
            "SExpr_w_name": "(JOIN (R martial_arts.martial_art.well_known_practitioner) Meihuaquan)",
            "SExpr": "(JOIN (R martial_arts.martial_art.well_known_practitioner) m.0d90yb)"
        }
    },
    "327": {
        "generations": "What type of license does Funtoo Linux have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ch10ft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ch10ft ns:computer.software.license ?x .\n}\n",
            "TopicEntityMid": "m.0ch10ft",
            "mid2name": {
                "ns:m.0ch10ft": "Funtoo Linux"
            },
            "SExpr_w_name": "(JOIN (R computer.software.license) Funtoo Linux)",
            "SExpr": "(JOIN (R computer.software.license) m.0ch10ft)"
        }
    },
    "328": {
        "generations": "What is the rating for Virtua Tennis 4?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gm9fh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gm9fh4 ns:cvg.game_version.rating ?x .\n}\n",
            "TopicEntityMid": "m.0gm9fh4",
            "mid2name": {
                "ns:m.0gm9fh4": "Virtua Tennis 4"
            },
            "SExpr_w_name": "(JOIN (R cvg.game_version.rating) Virtua Tennis 4)",
            "SExpr": "(JOIN (R cvg.game_version.rating) m.0gm9fh4)"
        }
    },
    "329": {
        "generations": "What is the coat of arms for \"Party per fess\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05d1hzx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05d1hzx ns:symbols.heraldic_variation_of_the_field.coat_of_arms ?x .\n}\n",
            "TopicEntityMid": "m.05d1hzx",
            "mid2name": {
                "ns:m.05d1hzx": "Party per fess"
            },
            "SExpr_w_name": "(JOIN (R symbols.heraldic_variation_of_the_field.coat_of_arms) Party per fess)",
            "SExpr": "(JOIN (R symbols.heraldic_variation_of_the_field.coat_of_arms) m.05d1hzx)"
        }
    },
    "330": {
        "generations": "What type of fuel is used in rocket engines that use Unsymmetrical dimethylhydrazine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017q1y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017q1y ns:spaceflight.rocket_engine_fuel.rocket_engines ?x .\n}\n",
            "TopicEntityMid": "m.017q1y",
            "mid2name": {
                "ns:m.017q1y": "Unsymmetrical dimethylhydrazine"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) Unsymmetrical dimethylhydrazine)",
            "SExpr": "(JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.017q1y)"
        }
    },
    "331": {
        "generations": "What was the strongest storm in the 2008 Atlantic hurricane season?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vkb3f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vkb3f ns:meteorology.tropical_cyclone_season.strongest_storm ?x .\n}\n",
            "TopicEntityMid": "m.02vkb3f",
            "mid2name": {
                "ns:m.02vkb3f": "2008 Atlantic hurricane season"
            },
            "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone_season.strongest_storm) 2008 Atlantic hurricane season)",
            "SExpr": "(JOIN (R meteorology.tropical_cyclone_season.strongest_storm) m.02vkb3f)"
        }
    },
    "332": {
        "generations": "What are the language paradigms of FLOW-MATIC?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0l6nk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0l6nk ns:computer.programming_language.language_paradigms ?x .\n}\n",
            "TopicEntityMid": "m.0l6nk",
            "mid2name": {
                "ns:m.0l6nk": "FLOW-MATIC"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language.language_paradigms) FLOW-MATIC)",
            "SExpr": "(JOIN (R computer.programming_language.language_paradigms) m.0l6nk)"
        }
    },
    "333": {
        "generations": "What is the specialization of accountants and auditors?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0116g0nj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0116g0nj ns:base.lightweight.profession.specialization ?x .\n}\n",
            "TopicEntityMid": "m.0116g0nj",
            "mid2name": {
                "ns:m.0116g0nj": "Accountants and Auditors"
            },
            "SExpr_w_name": "(JOIN (R base.lightweight.profession.specialization) Accountants and Auditors)",
            "SExpr": "(JOIN (R base.lightweight.profession.specialization) m.0116g0nj)"
        }
    },
    "334": {
        "generations": "Who are some comedians known for surreal humor?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05f0tf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05f0tf ns:base.americancomedy.comedy_genre.comedians_in_this_genre ?x .\n}\n",
            "TopicEntityMid": "m.05f0tf",
            "mid2name": {
                "ns:m.05f0tf": "Surreal humour"
            },
            "SExpr_w_name": "(JOIN (R base.americancomedy.comedy_genre.comedians_in_this_genre) Surreal humour)",
            "SExpr": "(JOIN (R base.americancomedy.comedy_genre.comedians_in_this_genre) m.05f0tf)"
        }
    },
    "335": {
        "generations": "Which programming language influenced Nqthm?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027kv60)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027kv60 ns:computer.programming_language.influenced ?x .\n}\n",
            "TopicEntityMid": "m.027kv60",
            "mid2name": {
                "ns:m.027kv60": "Nqthm"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language.influenced) Nqthm)",
            "SExpr": "(JOIN (R computer.programming_language.influenced) m.027kv60)"
        }
    },
    "336": {
        "generations": "Who collects drawings?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02csf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02csf ns:interests.collection_category.collectors ?x .\n}\n",
            "TopicEntityMid": "m.02csf",
            "mid2name": {
                "ns:m.02csf": "Drawing"
            },
            "SExpr_w_name": "(JOIN (R interests.collection_category.collectors) Drawing)",
            "SExpr": "(JOIN (R interests.collection_category.collectors) m.02csf)"
        }
    },
    "337": {
        "generations": "What airline uses the Sikorsky CH-53D aircraft model?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j5441h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j5441h ns:aviation.aircraft_model.part_of_line ?x .\n}\n",
            "TopicEntityMid": "m.0j5441h",
            "mid2name": {
                "ns:m.0j5441h": "Sikorsky CH-53D"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_model.part_of_line) Sikorsky CH-53D)",
            "SExpr": "(JOIN (R aviation.aircraft_model.part_of_line) m.0j5441h)"
        }
    },
    "338": {
        "generations": "Who uses the coat of arms of Australia?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02bs5v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02bs5v ns:symbols.coat_of_arms.bearers ?x .\n}\n",
            "TopicEntityMid": "m.02bs5v",
            "mid2name": {
                "ns:m.02bs5v": "Coat of arms of Australia"
            },
            "SExpr_w_name": "(JOIN (R symbols.coat_of_arms.bearers) Coat of arms of Australia)",
            "SExpr": "(JOIN (R symbols.coat_of_arms.bearers) m.02bs5v)"
        }
    },
    "339": {
        "generations": "Who is the leader of the Roman Catholic Archdiocese of Lahore?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kfr__j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kfr__j ns:religion.religious_leadership_title.leaders ?x .\n}\n",
            "TopicEntityMid": "m.0kfr__j",
            "mid2name": {
                "ns:m.0kfr__j": "Archbishop of Roman Catholic Archdiocese of Lahore"
            },
            "SExpr_w_name": "(JOIN (R religion.religious_leadership_title.leaders) Archbishop of Roman Catholic Archdiocese of Lahore)",
            "SExpr": "(JOIN (R religion.religious_leadership_title.leaders) m.0kfr__j)"
        }
    },
    "340": {
        "generations": "What projects are included in Mozilla Labs?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g4q4k2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g4q4k2 ns:projects.project.includes_smaller_projects ?x .\n}\n",
            "TopicEntityMid": "m.0g4q4k2",
            "mid2name": {
                "ns:m.0g4q4k2": "Mozilla Labs"
            },
            "SExpr_w_name": "(JOIN (R projects.project.includes_smaller_projects) Mozilla Labs)",
            "SExpr": "(JOIN (R projects.project.includes_smaller_projects) m.0g4q4k2)"
        }
    },
    "341": {
        "generations": "What court heard the case of Burnett v. National Enquirer, Inc.?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09k7csp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09k7csp ns:law.legal_case.court ?x .\n}\n",
            "TopicEntityMid": "m.09k7csp",
            "mid2name": {
                "ns:m.09k7csp": "Burnett v. National Enquirer, Inc."
            },
            "SExpr_w_name": "(JOIN (R law.legal_case.court) Burnett v. National Enquirer, Inc.)",
            "SExpr": "(JOIN (R law.legal_case.court) m.09k7csp)"
        }
    },
    "342": {
        "generations": "What is the geographic scope of the organization blluetekgroup?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012w8w3b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012w8w3b ns:organization.organization.geographic_scope ?x .\n}\n",
            "TopicEntityMid": "m.012w8w3b",
            "mid2name": {
                "ns:m.012w8w3b": "blluetekgroup"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.geographic_scope) blluetekgroup)",
            "SExpr": "(JOIN (R organization.organization.geographic_scope) m.012w8w3b)"
        }
    },
    "343": {
        "generations": "What are the variants of the Dj\u00e4vlar Anamma aircraft model?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11bc1ggc_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11bc1ggc_7 ns:aviation.aircraft_model.variants ?x .\n}\n",
            "TopicEntityMid": "g.11bc1ggc_7",
            "mid2name": {
                "ns:g.11bc1ggc_7": "Dj\u00e4vlar Anamma"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_model.variants) Dj\u00e4vlar Anamma)",
            "SExpr": "(JOIN (R aviation.aircraft_model.variants) g.11bc1ggc_7)"
        }
    },
    "344": {
        "generations": "where did the STS-6 space mission land?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018yvx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018yvx ns:spaceflight.space_mission.landing_site ?x .\n}\n",
            "TopicEntityMid": "m.018yvx",
            "mid2name": {
                "ns:m.018yvx": "STS-6"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.space_mission.landing_site) STS-6)",
            "SExpr": "(JOIN (R spaceflight.space_mission.landing_site) m.018yvx)"
        }
    },
    "345": {
        "generations": "What type of degree do students graduate with from educational institutions?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_xgp2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_xgp2 ns:education.educational_institution.students_graduates ?x .\n}\n",
            "TopicEntityMid": "m.02_xgp2",
            "mid2name": {
                "ns:m.02_xgp2": "Doctorate"
            },
            "SExpr_w_name": "(JOIN (R education.educational_institution.students_graduates) Doctorate)",
            "SExpr": "(JOIN (R education.educational_institution.students_graduates) m.02_xgp2)"
        }
    },
    "346": {
        "generations": "What are some things named after the sport of cricket?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09xp_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09xp_ ns:symbols.name_source.namesakes ?x .\n}\n",
            "TopicEntityMid": "m.09xp_",
            "mid2name": {
                "ns:m.09xp_": "Cricket"
            },
            "SExpr_w_name": "(JOIN (R symbols.name_source.namesakes) Cricket)",
            "SExpr": "(JOIN (R symbols.name_source.namesakes) m.09xp_)"
        }
    },
    "347": {
        "generations": "What TV segments did Graham Chapman write?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03dq9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03dq9 ns:tv.tv_writer.tv_segments_written ?x .\n}\n",
            "TopicEntityMid": "m.03dq9",
            "mid2name": {
                "ns:m.03dq9": "Graham Chapman"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_writer.tv_segments_written) Graham Chapman)",
            "SExpr": "(JOIN (R tv.tv_writer.tv_segments_written) m.03dq9)"
        }
    },
    "348": {
        "generations": "What cameras use a Nikkor sensor manufacturer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030s04)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030s04 ns:digicams.camera_sensor_manufacturer.cameras ?x .\n}\n",
            "TopicEntityMid": "m.030s04",
            "mid2name": {
                "ns:m.030s04": "Nikkor"
            },
            "SExpr_w_name": "(JOIN (R digicams.camera_sensor_manufacturer.cameras) Nikkor)",
            "SExpr": "(JOIN (R digicams.camera_sensor_manufacturer.cameras) m.030s04)"
        }
    },
    "349": {
        "generations": "What is the name of the mascot for the team?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09msl0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09msl0 ns:sports.mascot.team ?x .\n}\n",
            "TopicEntityMid": "m.09msl0",
            "mid2name": {
                "ns:m.09msl0": "H'Angus"
            },
            "SExpr_w_name": "(JOIN (R sports.mascot.team) H'Angus)",
            "SExpr": "(JOIN (R sports.mascot.team) m.09msl0)"
        }
    },
    "350": {
        "generations": "what is the origin of the united free church of scotland?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02psl5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02psl5 ns:religion.religion.branched_from ?x .\n}\n",
            "TopicEntityMid": "m.02psl5",
            "mid2name": {
                "ns:m.02psl5": "United Free Church of Scotland"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.branched_from) United Free Church of Scotland)",
            "SExpr": "(JOIN (R religion.religion.branched_from) m.02psl5)"
        }
    },
    "351": {
        "generations": "What are the active ingredients in the tincture used in China containing nux vom, chamomilla, kali phos, and mag phos?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqv0_m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqv0_m ns:medicine.drug_formulation.active_ingredient_moieties ?x .\n}\n",
            "TopicEntityMid": "m.0hqv0_m",
            "mid2name": {
                "ns:m.0hqv0_m": "China , nux vom, chamomilla, kali phos , mag phos 0.3/0.3/0.15/0.15/0.3 tincture"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) China , nux vom, chamomilla, kali phos , mag phos 0.3/0.3/0.15/0.15/0.3 tincture)",
            "SExpr": "(JOIN (R medicine.drug_formulation.active_ingredient_moieties) m.0hqv0_m)"
        }
    },
    "352": {
        "generations": "what is a lightsaber featured in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pk35)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pk35 ns:fictional_universe.fictional_object.featured_in_fictional_universe ?x .\n}\n",
            "TopicEntityMid": "m.0pk35",
            "mid2name": {
                "ns:m.0pk35": "Lightsaber"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.featured_in_fictional_universe) Lightsaber)",
            "SExpr": "(JOIN (R fictional_universe.fictional_object.featured_in_fictional_universe) m.0pk35)"
        }
    },
    "353": {
        "generations": "Who has possessed Agis in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cpg09y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cpg09y ns:fictional_universe.fictional_character.has_possessed ?x .\n}\n",
            "TopicEntityMid": "m.0cpg09y",
            "mid2name": {
                "ns:m.0cpg09y": "Agis"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.has_possessed) Agis)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.has_possessed) m.0cpg09y)"
        }
    },
    "354": {
        "generations": "What style of beer is Bateman's Rosey Nosey?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dqb4p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dqb4p ns:food.beer.beer_style ?x .\n}\n",
            "TopicEntityMid": "m.04dqb4p",
            "mid2name": {
                "ns:m.04dqb4p": "Bateman's Rosey Nosey"
            },
            "SExpr_w_name": "(JOIN (R food.beer.beer_style) Bateman's Rosey Nosey)",
            "SExpr": "(JOIN (R food.beer.beer_style) m.04dqb4p)"
        }
    },
    "355": {
        "generations": "who are the architects of classical architecture?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dvh9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dvh9 ns:architecture.architectural_style.architects ?x .\n}\n",
            "TopicEntityMid": "m.0dvh9",
            "mid2name": {
                "ns:m.0dvh9": "Classical architecture"
            },
            "SExpr_w_name": "(JOIN (R architecture.architectural_style.architects) Classical architecture)",
            "SExpr": "(JOIN (R architecture.architectural_style.architects) m.0dvh9)"
        }
    },
    "356": {
        "generations": "What book series includes \"Studies in Women and Religion\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012brp6x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012brp6x ns:book.book_edition_series.editions_in_this_series ?x .\n}\n",
            "TopicEntityMid": "m.012brp6x",
            "mid2name": {
                "ns:m.012brp6x": "Studies in Women and Religion"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition_series.editions_in_this_series) Studies in Women and Religion)",
            "SExpr": "(JOIN (R book.book_edition_series.editions_in_this_series) m.012brp6x)"
        }
    },
    "357": {
        "generations": "Which Olympic games did Fuwa: Yingying serve as a mascot for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jsgpmz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jsgpmz ns:olympics.olympic_mascot.olympic_games ?x .\n}\n",
            "TopicEntityMid": "m.0jsgpmz",
            "mid2name": {
                "ns:m.0jsgpmz": "Fuwa: Yingying"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_mascot.olympic_games) Fuwa: Yingying)",
            "SExpr": "(JOIN (R olympics.olympic_mascot.olympic_games) m.0jsgpmz)"
        }
    },
    "358": {
        "generations": "What profession does the default domain job title \"Athlete\" belong to in Narphorium?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01445t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01445t ns:user.narphorium.default_domain.job_title.professions ?x .\n}\n",
            "TopicEntityMid": "m.01445t",
            "mid2name": {
                "ns:m.01445t": "Athlete"
            },
            "SExpr_w_name": "(JOIN (R user.narphorium.default_domain.job_title.professions) Athlete)",
            "SExpr": "(JOIN (R user.narphorium.default_domain.job_title.professions) m.01445t)"
        }
    },
    "359": {
        "generations": "Who is the blender for Justerini & Brooks blended spirits?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b139b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b139b ns:distilled_spirits.blended_spirit.blender ?x .\n}\n",
            "TopicEntityMid": "m.0b139b",
            "mid2name": {
                "ns:m.0b139b": "Justerini & Brooks"
            },
            "SExpr_w_name": "(JOIN (R distilled_spirits.blended_spirit.blender) Justerini & Brooks)",
            "SExpr": "(JOIN (R distilled_spirits.blended_spirit.blender) m.0b139b)"
        }
    },
    "360": {
        "generations": "What software license is the Mozilla Public License a version of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02w1yc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02w1yc ns:computer.software_license.version_of ?x .\n}\n",
            "TopicEntityMid": "m.02w1yc",
            "mid2name": {
                "ns:m.02w1yc": "Mozilla Public License"
            },
            "SExpr_w_name": "(JOIN (R computer.software_license.version_of) Mozilla Public License)",
            "SExpr": "(JOIN (R computer.software_license.version_of) m.02w1yc)"
        }
    },
    "361": {
        "generations": "What zoos are members of the Honolulu Zoo?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01zhlk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01zhlk ns:zoos.zoo.memberships ?x .\n}\n",
            "TopicEntityMid": "m.01zhlk",
            "mid2name": {
                "ns:m.01zhlk": "Honolulu Zoo"
            },
            "SExpr_w_name": "(JOIN (R zoos.zoo.memberships) Honolulu Zoo)",
            "SExpr": "(JOIN (R zoos.zoo.memberships) m.01zhlk)"
        }
    },
    "362": {
        "generations": "Which music group does DJ Ras Cue support?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g9nbxz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g9nbxz ns:music.group_member.artists_supported ?x .\n}\n",
            "TopicEntityMid": "m.0g9nbxz",
            "mid2name": {
                "ns:m.0g9nbxz": "DJ Ras Cue"
            },
            "SExpr_w_name": "(JOIN (R music.group_member.artists_supported) DJ Ras Cue)",
            "SExpr": "(JOIN (R music.group_member.artists_supported) m.0g9nbxz)"
        }
    },
    "363": {
        "generations": "what was the name of the general election in india in 2009?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0642hj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0642hj_ ns:government.general_election.part_of_general_election ?x .\n}\n",
            "TopicEntityMid": "m.0642hj_",
            "mid2name": {
                "ns:m.0642hj_": "Indian general election, 2009"
            },
            "SExpr_w_name": "(JOIN (R government.general_election.part_of_general_election) Indian general election, 2009)",
            "SExpr": "(JOIN (R government.general_election.part_of_general_election) m.0642hj_)"
        }
    },
    "364": {
        "generations": "What type of cuisine is green bean casserole?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0djhcg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0djhcg ns:food.dish.cuisine ?x .\n}\n",
            "TopicEntityMid": "m.0djhcg",
            "mid2name": {
                "ns:m.0djhcg": "Green bean casserole"
            },
            "SExpr_w_name": "(JOIN (R food.dish.cuisine) Green bean casserole)",
            "SExpr": "(JOIN (R food.dish.cuisine) m.0djhcg)"
        }
    },
    "365": {
        "generations": "In which TV episodes does Ellie Beckett appear?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09nd46_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09nd46_ ns:tv.tv_character.appeared_in_tv_episodes ?x .\n}\n",
            "TopicEntityMid": "m.09nd46_",
            "mid2name": {
                "ns:m.09nd46_": "Ellie Beckett"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_character.appeared_in_tv_episodes) Ellie Beckett)",
            "SExpr": "(JOIN (R tv.tv_character.appeared_in_tv_episodes) m.09nd46_)"
        }
    },
    "366": {
        "generations": "What companies are in the confectionery and nut stores industry?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qblsl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qblsl ns:business.industry.companies ?x .\n}\n",
            "TopicEntityMid": "m.03qblsl",
            "mid2name": {
                "ns:m.03qblsl": "Confectionery and Nut Stores"
            },
            "SExpr_w_name": "(JOIN (R business.industry.companies) Confectionery and Nut Stores)",
            "SExpr": "(JOIN (R business.industry.companies) m.03qblsl)"
        }
    },
    "367": {
        "generations": "What is the name of the aircraft model made by American Blimp A-170?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z0srj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z0srj ns:aviation.aircraft_model.aircraft ?x .\n}\n",
            "TopicEntityMid": "m.02z0srj",
            "mid2name": {
                "ns:m.02z0srj": "American Blimp A-170"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_model.aircraft) American Blimp A-170)",
            "SExpr": "(JOIN (R aviation.aircraft_model.aircraft) m.02z0srj)"
        }
    },
    "368": {
        "generations": "Which company owns the Ford Valencia Plant?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w6zry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w6zry ns:automotive.manufacturing_plant.company ?x .\n}\n",
            "TopicEntityMid": "m.06w6zry",
            "mid2name": {
                "ns:m.06w6zry": "Ford Valencia Plant"
            },
            "SExpr_w_name": "(JOIN (R automotive.manufacturing_plant.company) Ford Valencia Plant)",
            "SExpr": "(JOIN (R automotive.manufacturing_plant.company) m.06w6zry)"
        }
    },
    "369": {
        "generations": "What sport does a second baseman play?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rsl1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rsl1 ns:sports.sports_position.sport ?x .\n}\n",
            "TopicEntityMid": "m.02rsl1",
            "mid2name": {
                "ns:m.02rsl1": "Second baseman"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_position.sport) Second baseman)",
            "SExpr": "(JOIN (R sports.sports_position.sport) m.02rsl1)"
        }
    },
    "370": {
        "generations": "What video games belong to the light gun genre?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kdw2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kdw2 ns:cvg.cvg_genre.games ?x .\n}\n",
            "TopicEntityMid": "m.0kdw2",
            "mid2name": {
                "ns:m.0kdw2": "Light gun"
            },
            "SExpr_w_name": "(JOIN (R cvg.cvg_genre.games) Light gun)",
            "SExpr": "(JOIN (R cvg.cvg_genre.games) m.0kdw2)"
        }
    },
    "371": {
        "generations": "Which operating systems were developed by Martin Janitschke?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ncy_0r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ncy_0r ns:computer.operating_system_developer.operating_systems_developed ?x .\n}\n",
            "TopicEntityMid": "m.0ncy_0r",
            "mid2name": {
                "ns:m.0ncy_0r": "Martin Janitschke"
            },
            "SExpr_w_name": "(JOIN (R computer.operating_system_developer.operating_systems_developed) Martin Janitschke)",
            "SExpr": "(JOIN (R computer.operating_system_developer.operating_systems_developed) m.0ncy_0r)"
        }
    },
    "372": {
        "generations": "What is the observance rule for the Day of Remembrance for Truth and Justice?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02818tl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02818tl ns:base.schemastaging.holiday_extra.observance_rule ?x .\n}\n",
            "TopicEntityMid": "m.02818tl",
            "mid2name": {
                "ns:m.02818tl": "Day of Remembrance for Truth and Justice"
            },
            "SExpr_w_name": "(JOIN (R base.schemastaging.holiday_extra.observance_rule) Day of Remembrance for Truth and Justice)",
            "SExpr": "(JOIN (R base.schemastaging.holiday_extra.observance_rule) m.02818tl)"
        }
    },
    "373": {
        "generations": "Which operas were produced by D'Oily Carte's Opera Company?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09kkhxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09kkhxc ns:opera.opera_company.operas_produced ?x .\n}\n",
            "TopicEntityMid": "m.09kkhxc",
            "mid2name": {
                "ns:m.09kkhxc": "D'Oily Carte's Opera Company"
            },
            "SExpr_w_name": "(JOIN (R opera.opera_company.operas_produced) D'Oily Carte's Opera Company)",
            "SExpr": "(JOIN (R opera.opera_company.operas_produced) m.09kkhxc)"
        }
    },
    "374": {
        "generations": "What is the parent operating system of Kubuntu 8.04?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050yvnm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050yvnm ns:computer.operating_system.parent_os ?x .\n}\n",
            "TopicEntityMid": "m.050yvnm",
            "mid2name": {
                "ns:m.050yvnm": "Kubuntu 8.04"
            },
            "SExpr_w_name": "(JOIN (R computer.operating_system.parent_os) Kubuntu 8.04)",
            "SExpr": "(JOIN (R computer.operating_system.parent_os) m.050yvnm)"
        }
    },
    "375": {
        "generations": "What is an example of a Borzoi?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j0g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j0g ns:biology.animal_breed.examples ?x .\n}\n",
            "TopicEntityMid": "m.01j0g",
            "mid2name": {
                "ns:m.01j0g": "Borzoi"
            },
            "SExpr_w_name": "(JOIN (R biology.animal_breed.examples) Borzoi)",
            "SExpr": "(JOIN (R biology.animal_breed.examples) m.01j0g)"
        }
    },
    "376": {
        "generations": "What school magazine does Haileybury and Imperial Service College have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01k7bf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01k7bf ns:education.educational_institution.school_magazines ?x .\n}\n",
            "TopicEntityMid": "m.01k7bf",
            "mid2name": {
                "ns:m.01k7bf": "Haileybury and Imperial Service College"
            },
            "SExpr_w_name": "(JOIN (R education.educational_institution.school_magazines) Haileybury and Imperial Service College)",
            "SExpr": "(JOIN (R education.educational_institution.school_magazines) m.01k7bf)"
        }
    },
    "377": {
        "generations": "How many books were circulated by Mooers Free Library in a year?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02njh95)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02njh95 ns:library.public_library_system.annual_circulation ?x .\n}\n",
            "TopicEntityMid": "m.02njh95",
            "mid2name": {
                "ns:m.02njh95": "Mooers Free Library"
            },
            "SExpr_w_name": "(JOIN (R library.public_library_system.annual_circulation) Mooers Free Library)",
            "SExpr": "(JOIN (R library.public_library_system.annual_circulation) m.02njh95)"
        }
    },
    "378": {
        "generations": "What is the status of Kepler-5 b in astronomy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09v8d6b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09v8d6b ns:astronomy.astronomical_discovery.status ?x .\n}\n",
            "TopicEntityMid": "m.09v8d6b",
            "mid2name": {
                "ns:m.09v8d6b": "Kepler-5 b"
            },
            "SExpr_w_name": "(JOIN (R astronomy.astronomical_discovery.status) Kepler-5 b)",
            "SExpr": "(JOIN (R astronomy.astronomical_discovery.status) m.09v8d6b)"
        }
    },
    "379": {
        "generations": "What languages are part of the Yupik language family?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wmwq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wmwq ns:language.language_family.languages ?x .\n}\n",
            "TopicEntityMid": "m.03wmwq",
            "mid2name": {
                "ns:m.03wmwq": "Yupik languages"
            },
            "SExpr_w_name": "(JOIN (R language.language_family.languages) Yupik languages)",
            "SExpr": "(JOIN (R language.language_family.languages) m.03wmwq)"
        }
    },
    "380": {
        "generations": "Which artist is performing on the Mythology Tour?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rysy_z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rysy_z ns:music.concert_tour.artist ?x .\n}\n",
            "TopicEntityMid": "m.0rysy_z",
            "mid2name": {
                "ns:m.0rysy_z": "Mythology Tour"
            },
            "SExpr_w_name": "(JOIN (R music.concert_tour.artist) Mythology Tour)",
            "SExpr": "(JOIN (R music.concert_tour.artist) m.0rysy_z)"
        }
    },
    "381": {
        "generations": "who illustrated magazine covers for brian leister?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j1y6wf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j1y6wf ns:book.illustrator.magazine_covers ?x .\n}\n",
            "TopicEntityMid": "m.0j1y6wf",
            "mid2name": {
                "ns:m.0j1y6wf": "Brian Leister"
            },
            "SExpr_w_name": "(JOIN (R book.illustrator.magazine_covers) Brian Leister)",
            "SExpr": "(JOIN (R book.illustrator.magazine_covers) m.0j1y6wf)"
        }
    },
    "382": {
        "generations": "What sport does the North West Junior Hockey League play?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027dvy5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027dvy5 ns:sports.sports_league.sport ?x .\n}\n",
            "TopicEntityMid": "m.027dvy5",
            "mid2name": {
                "ns:m.027dvy5": "North West Junior Hockey League"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league.sport) North West Junior Hockey League)",
            "SExpr": "(JOIN (R sports.sports_league.sport) m.027dvy5)"
        }
    },
    "383": {
        "generations": "Where do Hersbrucker hops come from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0115gwl7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0115gwl7 ns:base.lightweight.beer_hop.origin ?x .\n}\n",
            "TopicEntityMid": "m.0115gwl7",
            "mid2name": {
                "ns:m.0115gwl7": "Hersbrucker"
            },
            "SExpr_w_name": "(JOIN (R base.lightweight.beer_hop.origin) Hersbrucker)",
            "SExpr": "(JOIN (R base.lightweight.beer_hop.origin) m.0115gwl7)"
        }
    },
    "384": {
        "generations": "What is a Motet-chanson in music?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02717vc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02717vc ns:music.compositional_form.superforms ?x .\n}\n",
            "TopicEntityMid": "m.02717vc",
            "mid2name": {
                "ns:m.02717vc": "Motet-chanson"
            },
            "SExpr_w_name": "(JOIN (R music.compositional_form.superforms) Motet-chanson)",
            "SExpr": "(JOIN (R music.compositional_form.superforms) m.02717vc)"
        }
    },
    "385": {
        "generations": "What network does OpenNTPD belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.068b73)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.068b73 ns:computer.software.service_network ?x .\n}\n",
            "TopicEntityMid": "m.068b73",
            "mid2name": {
                "ns:m.068b73": "OpenNTPD"
            },
            "SExpr_w_name": "(JOIN (R computer.software.service_network) OpenNTPD)",
            "SExpr": "(JOIN (R computer.software.service_network) m.068b73)"
        }
    },
    "386": {
        "generations": "What genre is the music video for \"In Your Arms\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j8k58g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j8k58g ns:music.music_video.music_video_genre ?x .\n}\n",
            "TopicEntityMid": "m.0j8k58g",
            "mid2name": {
                "ns:m.0j8k58g": "In Your Arms"
            },
            "SExpr_w_name": "(JOIN (R music.music_video.music_video_genre) In Your Arms)",
            "SExpr": "(JOIN (R music.music_video.music_video_genre) m.0j8k58g)"
        }
    },
    "387": {
        "generations": "what is in madman comics issue #15?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059cy3g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059cy3g ns:comic_books.comic_book_issue.contents ?x .\n}\n",
            "TopicEntityMid": "m.059cy3g",
            "mid2name": {
                "ns:m.059cy3g": "Madman Comics #15"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.contents) Madman Comics #15)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.contents) m.059cy3g)"
        }
    },
    "388": {
        "generations": "who produced the Les XX exhibition in 1888?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gtwghz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gtwghz ns:exhibitions.exhibition.produced_by ?x .\n}\n",
            "TopicEntityMid": "m.0gtwghz",
            "mid2name": {
                "ns:m.0gtwghz": "Les XX 1888"
            },
            "SExpr_w_name": "(JOIN (R exhibitions.exhibition.produced_by) Les XX 1888)",
            "SExpr": "(JOIN (R exhibitions.exhibition.produced_by) m.0gtwghz)"
        }
    },
    "389": {
        "generations": "Who has won the Officer of the Order of the British Empire award?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gdhq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gdhq ns:award.award_category.winners ?x .\n}\n",
            "TopicEntityMid": "m.03gdhq",
            "mid2name": {
                "ns:m.03gdhq": "Officer of the Order of the British Empire"
            },
            "SExpr_w_name": "(JOIN (R award.award_category.winners) Officer of the Order of the British Empire)",
            "SExpr": "(JOIN (R award.award_category.winners) m.03gdhq)"
        }
    },
    "390": {
        "generations": "What was the previous generation of the Chevrolet Camaro?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027bxzg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027bxzg ns:automotive.generation.predecessor ?x .\n}\n",
            "TopicEntityMid": "m.027bxzg",
            "mid2name": {
                "ns:m.027bxzg": "Fifth Generation Chevrolet Camaro"
            },
            "SExpr_w_name": "(JOIN (R automotive.generation.predecessor) Fifth Generation Chevrolet Camaro)",
            "SExpr": "(JOIN (R automotive.generation.predecessor) m.027bxzg)"
        }
    },
    "391": {
        "generations": "Has Corn won any awards?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zgrtpb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zgrtpb ns:award.award_winning_work.awards_won ?x .\n}\n",
            "TopicEntityMid": "m.0zgrtpb",
            "mid2name": {
                "ns:m.0zgrtpb": "Corn"
            },
            "SExpr_w_name": "(JOIN (R award.award_winning_work.awards_won) Corn)",
            "SExpr": "(JOIN (R award.award_winning_work.awards_won) m.0zgrtpb)"
        }
    },
    "392": {
        "generations": "What are the dwarf planets in our solar system?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06p5g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06p5g ns:astronomy.star_system.dwarf_planets ?x .\n}\n",
            "TopicEntityMid": "m.06p5g",
            "mid2name": {
                "ns:m.06p5g": "Solar System"
            },
            "SExpr_w_name": "(JOIN (R astronomy.star_system.dwarf_planets) Solar System)",
            "SExpr": "(JOIN (R astronomy.star_system.dwarf_planets) m.06p5g)"
        }
    },
    "393": {
        "generations": "What award list does Olivos Red Course appear in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04vzckt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04vzckt ns:award.ranked_item.appears_in_ranked_lists ?x .\n}\n",
            "TopicEntityMid": "m.04vzckt",
            "mid2name": {
                "ns:m.04vzckt": "Olivos Red Course"
            },
            "SExpr_w_name": "(JOIN (R award.ranked_item.appears_in_ranked_lists) Olivos Red Course)",
            "SExpr": "(JOIN (R award.ranked_item.appears_in_ranked_lists) m.04vzckt)"
        }
    },
    "394": {
        "generations": "What type of piston configuration does the Ford Model A engine have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_2gd5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_2gd5 ns:engineering.piston_engine.piston_configuration ?x .\n}\n",
            "TopicEntityMid": "m.07_2gd5",
            "mid2name": {
                "ns:m.07_2gd5": "Ford Model A engine"
            },
            "SExpr_w_name": "(JOIN (R engineering.piston_engine.piston_configuration) Ford Model A engine)",
            "SExpr": "(JOIN (R engineering.piston_engine.piston_configuration) m.07_2gd5)"
        }
    },
    "395": {
        "generations": "What computer games are distributed on DVD?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.029j_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.029j_ ns:cvg.computer_game_distribution_system.games_distributed ?x .\n}\n",
            "TopicEntityMid": "m.029j_",
            "mid2name": {
                "ns:m.029j_": "DVD"
            },
            "SExpr_w_name": "(JOIN (R cvg.computer_game_distribution_system.games_distributed) DVD)",
            "SExpr": "(JOIN (R cvg.computer_game_distribution_system.games_distributed) m.029j_)"
        }
    },
    "396": {
        "generations": "where is The Three Horseshoes located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b3wy9d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b3wy9d ns:business.business_location.address ?x .\n}\n",
            "TopicEntityMid": "m.0b3wy9d",
            "mid2name": {
                "ns:m.0b3wy9d": "The Three Horseshoes"
            },
            "SExpr_w_name": "(JOIN (R business.business_location.address) The Three Horseshoes)",
            "SExpr": "(JOIN (R business.business_location.address) m.0b3wy9d)"
        }
    },
    "397": {
        "generations": "What ship is mentioned in the Aubrey-Maturin book series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07y14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07y14 ns:base.aubreymaturin.ship.mentions ?x .\n}\n",
            "TopicEntityMid": "m.07y14",
            "mid2name": {
                "ns:m.07y14": "USS Constitution"
            },
            "SExpr_w_name": "(JOIN (R base.aubreymaturin.ship.mentions) USS Constitution)",
            "SExpr": "(JOIN (R base.aubreymaturin.ship.mentions) m.07y14)"
        }
    },
    "398": {
        "generations": "Who invented the reflecting telescope?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nhc9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nhc9 ns:law.invention.inventor ?x .\n}\n",
            "TopicEntityMid": "m.01nhc9",
            "mid2name": {
                "ns:m.01nhc9": "Reflecting telescope"
            },
            "SExpr_w_name": "(JOIN (R law.invention.inventor) Reflecting telescope)",
            "SExpr": "(JOIN (R law.invention.inventor) m.01nhc9)"
        }
    },
    "399": {
        "generations": "What is the parent company of Banana Republic located in Woodland Hills Mall?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m173g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m173g ns:business.business_location.parent_company ?x .\n}\n",
            "TopicEntityMid": "m.03m173g",
            "mid2name": {
                "ns:m.03m173g": "Banana Republic, Woodland Hills Mall"
            },
            "SExpr_w_name": "(JOIN (R business.business_location.parent_company) Banana Republic, Woodland Hills Mall)",
            "SExpr": "(JOIN (R business.business_location.parent_company) m.03m173g)"
        }
    },
    "400": {
        "generations": "What type of engine is a diesel engine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02crk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02crk ns:engineering.engine_category.engines ?x .\n}\n",
            "TopicEntityMid": "m.02crk",
            "mid2name": {
                "ns:m.02crk": "Diesel engine"
            },
            "SExpr_w_name": "(JOIN (R engineering.engine_category.engines) Diesel engine)",
            "SExpr": "(JOIN (R engineering.engine_category.engines) m.02crk)"
        }
    },
    "401": {
        "generations": "What was DreamSpec derived from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rktwd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rktwd ns:user.pak21.default_domain.derivative_software.derived_from ?x .\n}\n",
            "TopicEntityMid": "m.09rktwd",
            "mid2name": {
                "ns:m.09rktwd": "Playstation 2 DreamSpec"
            },
            "SExpr_w_name": "(JOIN (R user.pak21.default_domain.derivative_software.derived_from) Playstation 2 DreamSpec)",
            "SExpr": "(JOIN (R user.pak21.default_domain.derivative_software.derived_from) m.09rktwd)"
        }
    },
    "402": {
        "generations": "What book series includes The Uralic and Altaic Series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06jdvk3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06jdvk3 ns:book.book_edition_series.sub_series ?x .\n}\n",
            "TopicEntityMid": "m.06jdvk3",
            "mid2name": {
                "ns:m.06jdvk3": "The Uralic and Altaic Series"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition_series.sub_series) The Uralic and Altaic Series)",
            "SExpr": "(JOIN (R book.book_edition_series.sub_series) m.06jdvk3)"
        }
    },
    "403": {
        "generations": "What was the next event in the 2005-06 Luxembourg National Division series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dcsx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dcsx2 ns:time.event.next_in_series ?x .\n}\n",
            "TopicEntityMid": "m.0dcsx2",
            "mid2name": {
                "ns:m.0dcsx2": "2005\u201306 Luxembourg National Division"
            },
            "SExpr_w_name": "(JOIN (R time.event.next_in_series) 2005\u201306 Luxembourg National Division)",
            "SExpr": "(JOIN (R time.event.next_in_series) m.0dcsx2)"
        }
    },
    "404": {
        "generations": "What anime/manga franchises fall under the comedy genre?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05p553)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05p553 ns:base.animemanga.anime_manga_genre.anime_manga_franchises ?x .\n}\n",
            "TopicEntityMid": "m.05p553",
            "mid2name": {
                "ns:m.05p553": "Comedy"
            },
            "SExpr_w_name": "(JOIN (R base.animemanga.anime_manga_genre.anime_manga_franchises) Comedy)",
            "SExpr": "(JOIN (R base.animemanga.anime_manga_genre.anime_manga_franchises) m.05p553)"
        }
    },
    "405": {
        "generations": "Which radio stations are owned by V-Teck Communications?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11byb3yq69)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11byb3yq69 ns:broadcast.radio_station_owner.radio_stations ?x .\n}\n",
            "TopicEntityMid": "g.11byb3yq69",
            "mid2name": {
                "ns:g.11byb3yq69": "V-Teck Communications"
            },
            "SExpr_w_name": "(JOIN (R broadcast.radio_station_owner.radio_stations) V-Teck Communications)",
            "SExpr": "(JOIN (R broadcast.radio_station_owner.radio_stations) g.11byb3yq69)"
        }
    },
    "406": {
        "generations": "What minority group is designated in Ngawa Tibetan and Qiang Autonomous Prefecture?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08xfdx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08xfdx ns:location.cn_autonomous_prefecture.designated_minority ?x .\n}\n",
            "TopicEntityMid": "m.08xfdx",
            "mid2name": {
                "ns:m.08xfdx": "Ngawa Tibetan and Qiang Autonomous Prefecture"
            },
            "SExpr_w_name": "(JOIN (R location.cn_autonomous_prefecture.designated_minority) Ngawa Tibetan and Qiang Autonomous Prefecture)",
            "SExpr": "(JOIN (R location.cn_autonomous_prefecture.designated_minority) m.08xfdx)"
        }
    },
    "407": {
        "generations": "where is Health Central hospital located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04g3dzr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04g3dzr ns:medicine.hospital.address ?x .\n}\n",
            "TopicEntityMid": "m.04g3dzr",
            "mid2name": {
                "ns:m.04g3dzr": "Health Central"
            },
            "SExpr_w_name": "(JOIN (R medicine.hospital.address) Health Central)",
            "SExpr": "(JOIN (R medicine.hospital.address) m.04g3dzr)"
        }
    },
    "408": {
        "generations": "What magazine topic does the Science magazine cover?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mq7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mq7 ns:user.techgnostic.default_domain.magazine_topic.periodical ?x .\n}\n",
            "TopicEntityMid": "m.06mq7",
            "mid2name": {
                "ns:m.06mq7": "Science"
            },
            "SExpr_w_name": "(JOIN (R user.techgnostic.default_domain.magazine_topic.periodical) Science)",
            "SExpr": "(JOIN (R user.techgnostic.default_domain.magazine_topic.periodical) m.06mq7)"
        }
    },
    "409": {
        "generations": "Who are the contributing authors of the book edition WKID: easy radio plays?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08r1wpq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08r1wpq ns:book.book_edition.contributing_authors ?x .\n}\n",
            "TopicEntityMid": "m.08r1wpq",
            "mid2name": {
                "ns:m.08r1wpq": "WKID: easy radio plays"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition.contributing_authors) WKID: easy radio plays)",
            "SExpr": "(JOIN (R book.book_edition.contributing_authors) m.08r1wpq)"
        }
    },
    "410": {
        "generations": "What art series did Michele Wood create?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vltvg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vltvg ns:visual_art.visual_artist.art_series ?x .\n}\n",
            "TopicEntityMid": "m.05vltvg",
            "mid2name": {
                "ns:m.05vltvg": "Michele Wood"
            },
            "SExpr_w_name": "(JOIN (R visual_art.visual_artist.art_series) Michele Wood)",
            "SExpr": "(JOIN (R visual_art.visual_artist.art_series) m.05vltvg)"
        }
    },
    "411": {
        "generations": "What is the registry for the top-level domain \"tw\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04704r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04704r ns:internet.top_level_domain.registry ?x .\n}\n",
            "TopicEntityMid": "m.04704r",
            "mid2name": {
                "ns:m.04704r": "tw"
            },
            "SExpr_w_name": "(JOIN (R internet.top_level_domain.registry) tw)",
            "SExpr": "(JOIN (R internet.top_level_domain.registry) m.04704r)"
        }
    },
    "412": {
        "generations": "What is the parent classification of infantile autism in the ICD-9-CM classification?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rq3hm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rq3hm ns:medicine.icd_9_cm_classification.parent_classification ?x .\n}\n",
            "TopicEntityMid": "m.09rq3hm",
            "mid2name": {
                "ns:m.09rq3hm": "Infantile autism, current or active state"
            },
            "SExpr_w_name": "(JOIN (R medicine.icd_9_cm_classification.parent_classification) Infantile autism, current or active state)",
            "SExpr": "(JOIN (R medicine.icd_9_cm_classification.parent_classification) m.09rq3hm)"
        }
    },
    "413": {
        "generations": "What are some recipes for ovo-lacto vegetarianism?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05q88)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05q88 ns:food.diet.recipes ?x .\n}\n",
            "TopicEntityMid": "m.05q88",
            "mid2name": {
                "ns:m.05q88": "Ovo-lacto vegetarianism"
            },
            "SExpr_w_name": "(JOIN (R food.diet.recipes) Ovo-lacto vegetarianism)",
            "SExpr": "(JOIN (R food.diet.recipes) m.05q88)"
        }
    },
    "414": {
        "generations": "What products are included in the women's fragrances theme?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h6npjp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h6npjp ns:business.product_theme.products ?x .\n}\n",
            "TopicEntityMid": "m.0h6npjp",
            "mid2name": {
                "ns:m.0h6npjp": "Women's fragrances"
            },
            "SExpr_w_name": "(JOIN (R business.product_theme.products) Women's fragrances)",
            "SExpr": "(JOIN (R business.product_theme.products) m.0h6npjp)"
        }
    },
    "415": {
        "generations": "which books were published by Barnes in New York?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qg3tb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qg3tb ns:book.publishing_company.books_published ?x .\n}\n",
            "TopicEntityMid": "m.05qg3tb",
            "mid2name": {
                "ns:m.05qg3tb": "New York: Barnes"
            },
            "SExpr_w_name": "(JOIN (R book.publishing_company.books_published) New York: Barnes)",
            "SExpr": "(JOIN (R book.publishing_company.books_published) m.05qg3tb)"
        }
    },
    "416": {
        "generations": "What type of rocket engine cycle is used in spaceflight?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04qqvv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04qqvv ns:spaceflight.rocket_engine_cycle.rocket_engines ?x .\n}\n",
            "TopicEntityMid": "m.04qqvv",
            "mid2name": {
                "ns:m.04qqvv": "Gas-generator cycle"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) Gas-generator cycle)",
            "SExpr": "(JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqvv)"
        }
    },
    "417": {
        "generations": "What is the name of the opera recording for Ad\u00e8s' The Tempest?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zmvh1z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zmvh1z ns:opera.opera_recording.opera ?x .\n}\n",
            "TopicEntityMid": "m.0zmvh1z",
            "mid2name": {
                "ns:m.0zmvh1z": "Ad\u00e8s: The Tempest"
            },
            "SExpr_w_name": "(JOIN (R opera.opera_recording.opera) Ad\u00e8s: The Tempest)",
            "SExpr": "(JOIN (R opera.opera_recording.opera) m.0zmvh1z)"
        }
    },
    "418": {
        "generations": "What material was used to construct the lighthouse?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06qqb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06qqb ns:architecture.lighthouse_construction_material.used_on_lighthouse ?x .\n}\n",
            "TopicEntityMid": "m.06qqb",
            "mid2name": {
                "ns:m.06qqb": "Steel"
            },
            "SExpr_w_name": "(JOIN (R architecture.lighthouse_construction_material.used_on_lighthouse) Steel)",
            "SExpr": "(JOIN (R architecture.lighthouse_construction_material.used_on_lighthouse) m.06qqb)"
        }
    },
    "419": {
        "generations": "where was frank gatson jr. born?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j2bcpk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j2bcpk ns:people.person.place_of_birth ?x .\n}\n",
            "TopicEntityMid": "m.0j2bcpk",
            "mid2name": {
                "ns:m.0j2bcpk": "Frank Gatson Jr."
            },
            "SExpr_w_name": "(JOIN (R people.person.place_of_birth) Frank Gatson Jr.)",
            "SExpr": "(JOIN (R people.person.place_of_birth) m.0j2bcpk)"
        }
    },
    "420": {
        "generations": "In which operas does the character Nebuchadrezzar II appear?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hzk38l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hzk38l ns:opera.opera_character.operas_appears_in ?x .\n}\n",
            "TopicEntityMid": "m.0hzk38l",
            "mid2name": {
                "ns:m.0hzk38l": "Nebuchadrezzar II"
            },
            "SExpr_w_name": "(JOIN (R opera.opera_character.operas_appears_in) Nebuchadrezzar II)",
            "SExpr": "(JOIN (R opera.opera_character.operas_appears_in) m.0hzk38l)"
        }
    },
    "421": {
        "generations": "what is the patent number for US Patent 5958446?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqxyw5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqxyw5 ns:law.us_patent.patent_number ?x .\n}\n",
            "TopicEntityMid": "m.0hqxyw5",
            "mid2name": {
                "ns:m.0hqxyw5": "US Patent 5958446"
            },
            "SExpr_w_name": "(JOIN (R law.us_patent.patent_number) US Patent 5958446)",
            "SExpr": "(JOIN (R law.us_patent.patent_number) m.0hqxyw5)"
        }
    },
    "422": {
        "generations": "What agency succeeded the Department of the Environment, Sport and Territories?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zbvbtz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zbvbtz ns:government.government_agency.successor_agency ?x .\n}\n",
            "TopicEntityMid": "m.0zbvbtz",
            "mid2name": {
                "ns:m.0zbvbtz": "Department of the Environment, Sport and Territories"
            },
            "SExpr_w_name": "(JOIN (R government.government_agency.successor_agency) Department of the Environment, Sport and Territories)",
            "SExpr": "(JOIN (R government.government_agency.successor_agency) m.0zbvbtz)"
        }
    },
    "423": {
        "generations": "what is the opposite gender equivalent of grand cross in chivalric rank?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ft8v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ft8v ns:royalty.chivalric_rank.opposite_gender_equivalent ?x .\n}\n",
            "TopicEntityMid": "m.03ft8v",
            "mid2name": {
                "ns:m.03ft8v": "Grand Cross"
            },
            "SExpr_w_name": "(JOIN (R royalty.chivalric_rank.opposite_gender_equivalent) Grand Cross)",
            "SExpr": "(JOIN (R royalty.chivalric_rank.opposite_gender_equivalent) m.03ft8v)"
        }
    },
    "424": {
        "generations": "What is a low-fat diet used to treat?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wbd4f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wbd4f ns:medicine.medical_treatment.used_to_treat ?x .\n}\n",
            "TopicEntityMid": "m.02wbd4f",
            "mid2name": {
                "ns:m.02wbd4f": "Low-fat diet"
            },
            "SExpr_w_name": "(JOIN (R medicine.medical_treatment.used_to_treat) Low-fat diet)",
            "SExpr": "(JOIN (R medicine.medical_treatment.used_to_treat) m.02wbd4f)"
        }
    },
    "425": {
        "generations": "What operating systems are compatible with the Macintosh SE computer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023tnt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023tnt ns:computer.computer.compatible_oses ?x .\n}\n",
            "TopicEntityMid": "m.023tnt",
            "mid2name": {
                "ns:m.023tnt": "Macintosh SE"
            },
            "SExpr_w_name": "(JOIN (R computer.computer.compatible_oses) Macintosh SE)",
            "SExpr": "(JOIN (R computer.computer.compatible_oses) m.023tnt)"
        }
    },
    "426": {
        "generations": "What type of segments were featured in the TV episode about news satire?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vr89)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vr89 ns:tv.tv_subject.tv_episode_segments ?x .\n}\n",
            "TopicEntityMid": "m.05vr89",
            "mid2name": {
                "ns:m.05vr89": "News satire"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_subject.tv_episode_segments) News satire)",
            "SExpr": "(JOIN (R tv.tv_subject.tv_episode_segments) m.05vr89)"
        }
    },
    "427": {
        "generations": "when was the comic book issue \"Kanojo ga Flag o Oraretara: Ore, Kono Tenk\u014d ga Owattara, Ano Ko to Kekkon Surun da\" published?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01124d16)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01124d16 ns:comic_books.comic_book_issue.date_of_publication ?x .\n}\n",
            "TopicEntityMid": "m.01124d16",
            "mid2name": {
                "ns:m.01124d16": "Kanojo ga Flag o Oraretara: Ore, Kono Tenk\u014d ga Owattara, Ano Ko to Kekkon Surun da"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.date_of_publication) Kanojo ga Flag o Oraretara: Ore, Kono Tenk\u014d ga Owattara, Ano Ko to Kekkon Surun da)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.date_of_publication) m.01124d16)"
        }
    },
    "428": {
        "generations": "What is the infusion style of Jeremiah Weed distilled spirits?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.088rsv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.088rsv ns:distilled_spirits.infused_spirit.infusion_style ?x .\n}\n",
            "TopicEntityMid": "m.088rsv",
            "mid2name": {
                "ns:m.088rsv": "Jeremiah Weed"
            },
            "SExpr_w_name": "(JOIN (R distilled_spirits.infused_spirit.infusion_style) Jeremiah Weed)",
            "SExpr": "(JOIN (R distilled_spirits.infused_spirit.infusion_style) m.088rsv)"
        }
    },
    "429": {
        "generations": "What products are in the Olympus OM-D product line?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jb95w7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jb95w7 ns:business.product_line.products ?x .\n}\n",
            "TopicEntityMid": "m.0jb95w7",
            "mid2name": {
                "ns:m.0jb95w7": "Olympus OM-D"
            },
            "SExpr_w_name": "(JOIN (R business.product_line.products) Olympus OM-D)",
            "SExpr": "(JOIN (R business.product_line.products) m.0jb95w7)"
        }
    },
    "430": {
        "generations": "What league is the Cock of the North a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0115mdnf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0115mdnf ns:sports.sports_championship.league ?x .\n}\n",
            "TopicEntityMid": "m.0115mdnf",
            "mid2name": {
                "ns:m.0115mdnf": "Cock of the North"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_championship.league) Cock of the North)",
            "SExpr": "(JOIN (R sports.sports_championship.league) m.0115mdnf)"
        }
    },
    "431": {
        "generations": "What is included in Wat?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jd5z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jd5z ns:base.argumentmaps.idea.included_in ?x .\n}\n",
            "TopicEntityMid": "m.02jd5z",
            "mid2name": {
                "ns:m.02jd5z": "Wat"
            },
            "SExpr_w_name": "(JOIN (R base.argumentmaps.idea.included_in) Wat)",
            "SExpr": "(JOIN (R base.argumentmaps.idea.included_in) m.02jd5z)"
        }
    },
    "432": {
        "generations": "What is the broader concept of sneakers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09kjlm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09kjlm ns:base.skosbase.vocabulary_equivalent_topic.broader_concept ?x .\n}\n",
            "TopicEntityMid": "m.09kjlm",
            "mid2name": {
                "ns:m.09kjlm": "Sneakers"
            },
            "SExpr_w_name": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.broader_concept) Sneakers)",
            "SExpr": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.broader_concept) m.09kjlm)"
        }
    },
    "433": {
        "generations": "Which web browser does Bing Highlights work on?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cmyknl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cmyknl ns:computer.web_browser_extension.works_on_web_browser ?x .\n}\n",
            "TopicEntityMid": "m.0cmyknl",
            "mid2name": {
                "ns:m.0cmyknl": "Bing Highlights"
            },
            "SExpr_w_name": "(JOIN (R computer.web_browser_extension.works_on_web_browser) Bing Highlights)",
            "SExpr": "(JOIN (R computer.web_browser_extension.works_on_web_browser) m.0cmyknl)"
        }
    },
    "434": {
        "generations": "What is the name of the superior court in New Hampshire?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08wzdc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08wzdc ns:law.court.superior_courts ?x .\n}\n",
            "TopicEntityMid": "m.08wzdc",
            "mid2name": {
                "ns:m.08wzdc": "New Hampshire Superior Court"
            },
            "SExpr_w_name": "(JOIN (R law.court.superior_courts) New Hampshire Superior Court)",
            "SExpr": "(JOIN (R law.court.superior_courts) m.08wzdc)"
        }
    },
    "435": {
        "generations": "What cocktails can be garnished with cinnamon?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f0ch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f0ch ns:base.cocktails.cocktail_garnish.cocktails_with_this_garnish ?x .\n}\n",
            "TopicEntityMid": "m.0f0ch",
            "mid2name": {
                "ns:m.0f0ch": "Cinnamon"
            },
            "SExpr_w_name": "(JOIN (R base.cocktails.cocktail_garnish.cocktails_with_this_garnish) Cinnamon)",
            "SExpr": "(JOIN (R base.cocktails.cocktail_garnish.cocktails_with_this_garnish) m.0f0ch)"
        }
    },
    "436": {
        "generations": "What is an example of an inferior court in the legal system?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.072h0h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.072h0h ns:law.court.inferior_courts ?x .\n}\n",
            "TopicEntityMid": "m.072h0h",
            "mid2name": {
                "ns:m.072h0h": "Court of Appeal"
            },
            "SExpr_w_name": "(JOIN (R law.court.inferior_courts) Court of Appeal)",
            "SExpr": "(JOIN (R law.court.inferior_courts) m.072h0h)"
        }
    },
    "437": {
        "generations": "what is the address of wild horse golf club?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04w1b45)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04w1b45 ns:location.location.street_address ?x .\n}\n",
            "TopicEntityMid": "m.04w1b45",
            "mid2name": {
                "ns:m.04w1b45": "Wild Horse Golf Club"
            },
            "SExpr_w_name": "(JOIN (R location.location.street_address) Wild Horse Golf Club)",
            "SExpr": "(JOIN (R location.location.street_address) m.04w1b45)"
        }
    },
    "438": {
        "generations": "What songs did Phoebe Buffay compose?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03fcg5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03fcg5 ns:music.composer.compositions ?x .\n}\n",
            "TopicEntityMid": "m.03fcg5",
            "mid2name": {
                "ns:m.03fcg5": "Phoebe Buffay"
            },
            "SExpr_w_name": "(JOIN (R music.composer.compositions) Phoebe Buffay)",
            "SExpr": "(JOIN (R music.composer.compositions) m.03fcg5)"
        }
    },
    "439": {
        "generations": "Who sponsors the .kiwi top-level domain?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_8nrsr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_8nrsr ns:internet.top_level_domain.sponsor ?x .\n}\n",
            "TopicEntityMid": "m.0_8nrsr",
            "mid2name": {
                "ns:m.0_8nrsr": ".kiwi"
            },
            "SExpr_w_name": "(JOIN (R internet.top_level_domain.sponsor) .kiwi)",
            "SExpr": "(JOIN (R internet.top_level_domain.sponsor) m.0_8nrsr)"
        }
    },
    "440": {
        "generations": "What radio station is affiliated with Mohawk College?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x36z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x36z ns:education.educational_institution.radio_station ?x .\n}\n",
            "TopicEntityMid": "m.01x36z",
            "mid2name": {
                "ns:m.01x36z": "Mohawk College"
            },
            "SExpr_w_name": "(JOIN (R education.educational_institution.radio_station) Mohawk College)",
            "SExpr": "(JOIN (R education.educational_institution.radio_station) m.01x36z)"
        }
    },
    "441": {
        "generations": "Which fictional characters were born in Hagrid's Hut?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09k2kry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09k2kry ns:fictional_universe.fictional_setting.fictional_characters_born_here ?x .\n}\n",
            "TopicEntityMid": "m.09k2kry",
            "mid2name": {
                "ns:m.09k2kry": "Hagrid's Hut"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.fictional_characters_born_here) Hagrid's Hut)",
            "SExpr": "(JOIN (R fictional_universe.fictional_setting.fictional_characters_born_here) m.09k2kry)"
        }
    },
    "442": {
        "generations": "Who is Ronald Weasley related to in the fictional family?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c8jw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c8jw ns:user.pak21.default_domain.fictional_family_member.family ?x .\n}\n",
            "TopicEntityMid": "m.0c8jw",
            "mid2name": {
                "ns:m.0c8jw": "Ronald Weasley"
            },
            "SExpr_w_name": "(JOIN (R user.pak21.default_domain.fictional_family_member.family) Ronald Weasley)",
            "SExpr": "(JOIN (R user.pak21.default_domain.fictional_family_member.family) m.0c8jw)"
        }
    },
    "443": {
        "generations": "Which constellations border Phoenix?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d36y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d36y ns:astronomy.constellation.bordering_constellations_new ?x .\n}\n",
            "TopicEntityMid": "m.0d36y",
            "mid2name": {
                "ns:m.0d36y": "Phoenix"
            },
            "SExpr_w_name": "(JOIN (R astronomy.constellation.bordering_constellations_new) Phoenix)",
            "SExpr": "(JOIN (R astronomy.constellation.bordering_constellations_new) m.0d36y)"
        }
    },
    "444": {
        "generations": "What is the model of the aircraft called Big Stink?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fr9pk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fr9pk ns:aviation.aircraft.model ?x .\n}\n",
            "TopicEntityMid": "m.0fr9pk",
            "mid2name": {
                "ns:m.0fr9pk": "Big Stink"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft.model) Big Stink)",
            "SExpr": "(JOIN (R aviation.aircraft.model) m.0fr9pk)"
        }
    },
    "445": {
        "generations": "What type of music does a DJ mix typically perform?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0df219)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0df219 ns:music.performance_role.regular_performances ?x .\n}\n",
            "TopicEntityMid": "m.0df219",
            "mid2name": {
                "ns:m.0df219": "DJ mix"
            },
            "SExpr_w_name": "(JOIN (R music.performance_role.regular_performances) DJ mix)",
            "SExpr": "(JOIN (R music.performance_role.regular_performances) m.0df219)"
        }
    },
    "446": {
        "generations": "Who served in the Sacred Band of Thebes military unit?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c1myv7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c1myv7 ns:military.military_unit.servicemembers ?x .\n}\n",
            "TopicEntityMid": "m.0c1myv7",
            "mid2name": {
                "ns:m.0c1myv7": "Sacred Band of Thebes"
            },
            "SExpr_w_name": "(JOIN (R military.military_unit.servicemembers) Sacred Band of Thebes)",
            "SExpr": "(JOIN (R military.military_unit.servicemembers) m.0c1myv7)"
        }
    },
    "447": {
        "generations": "What is an Earth trojan asteroid?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04154sz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04154sz ns:astronomy.asteroid_group.asteroid_group_members ?x .\n}\n",
            "TopicEntityMid": "m.04154sz",
            "mid2name": {
                "ns:m.04154sz": "Earth trojan"
            },
            "SExpr_w_name": "(JOIN (R astronomy.asteroid_group.asteroid_group_members) Earth trojan)",
            "SExpr": "(JOIN (R astronomy.asteroid_group.asteroid_group_members) m.04154sz)"
        }
    },
    "448": {
        "generations": "What websites are defunct?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hpsgv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hpsgv ns:internet.website_status.sites ?x .\n}\n",
            "TopicEntityMid": "m.02hpsgv",
            "mid2name": {
                "ns:m.02hpsgv": "Defunct"
            },
            "SExpr_w_name": "(JOIN (R internet.website_status.sites) Defunct)",
            "SExpr": "(JOIN (R internet.website_status.sites) m.02hpsgv)"
        }
    },
    "449": {
        "generations": "What style category does Christmas/Winter Specialty Spiced Beer belong to according to BJCP?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hv22_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hv22_ ns:food.beer_style.bjcp_style_category ?x .\n}\n",
            "TopicEntityMid": "m.02hv22_",
            "mid2name": {
                "ns:m.02hv22_": "Christmas/Winter Specialty Spiced Beer"
            },
            "SExpr_w_name": "(JOIN (R food.beer_style.bjcp_style_category) Christmas/Winter Specialty Spiced Beer)",
            "SExpr": "(JOIN (R food.beer_style.bjcp_style_category) m.02hv22_)"
        }
    },
    "450": {
        "generations": "What spirits does Heaven Hill blend?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03nts0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03nts0 ns:distilled_spirits.spirit_blender.blends ?x .\n}\n",
            "TopicEntityMid": "m.03nts0",
            "mid2name": {
                "ns:m.03nts0": "Heaven Hill"
            },
            "SExpr_w_name": "(JOIN (R distilled_spirits.spirit_blender.blends) Heaven Hill)",
            "SExpr": "(JOIN (R distilled_spirits.spirit_blender.blends) m.03nts0)"
        }
    },
    "451": {
        "generations": "What is the Beaufort scale category for a Category 5 Hurricane (SSHS)?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xs1c1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xs1c1 ns:meteorology.tropical_cyclone_category.Beaufort_scale ?x .\n}\n",
            "TopicEntityMid": "m.01xs1c1",
            "mid2name": {
                "ns:m.01xs1c1": "Category 5 Hurricane (SSHS)"
            },
            "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) Category 5 Hurricane (SSHS))",
            "SExpr": "(JOIN (R meteorology.tropical_cyclone_category.Beaufort_scale) m.01xs1c1)"
        }
    },
    "452": {
        "generations": "how many beds does st. lucie medical center have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04g3kvq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04g3kvq ns:medicine.hospital.beds ?x .\n}\n",
            "TopicEntityMid": "m.04g3kvq",
            "mid2name": {
                "ns:m.04g3kvq": "St. Lucie Medical Center"
            },
            "SExpr_w_name": "(JOIN (R medicine.hospital.beds) St. Lucie Medical Center)",
            "SExpr": "(JOIN (R medicine.hospital.beds) m.04g3kvq)"
        }
    },
    "453": {
        "generations": "What holidays are included in Eastertide?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v0dg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v0dg ns:time.holiday_period.holidays ?x .\n}\n",
            "TopicEntityMid": "m.04v0dg",
            "mid2name": {
                "ns:m.04v0dg": "Eastertide"
            },
            "SExpr_w_name": "(JOIN (R time.holiday_period.holidays) Eastertide)",
            "SExpr": "(JOIN (R time.holiday_period.holidays) m.04v0dg)"
        }
    },
    "454": {
        "generations": "Who are the characters in the manga Naruto?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hryy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hryy ns:base.animemanga.manga_title.characters ?x .\n}\n",
            "TopicEntityMid": "m.01hryy",
            "mid2name": {
                "ns:m.01hryy": "Naruto"
            },
            "SExpr_w_name": "(JOIN (R base.animemanga.manga_title.characters) Naruto)",
            "SExpr": "(JOIN (R base.animemanga.manga_title.characters) m.01hryy)"
        }
    },
    "455": {
        "generations": "where does U.S. Route 25E end?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bxh70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bxh70 ns:transportation.road.end1 ?x .\n}\n",
            "TopicEntityMid": "m.03bxh70",
            "mid2name": {
                "ns:m.03bxh70": "U.S. Route 25E"
            },
            "SExpr_w_name": "(JOIN (R transportation.road.end1) U.S. Route 25E)",
            "SExpr": "(JOIN (R transportation.road.end1) m.03bxh70)"
        }
    },
    "456": {
        "generations": "What was the name of the men's singles tennis event at the 1984 Summer Olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b8cjb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b8cjb ns:olympics.olympic_demonstration_competition.event ?x .\n}\n",
            "TopicEntityMid": "m.0b8cjb",
            "mid2name": {
                "ns:m.0b8cjb": "Tennis at the 1984 Summer Olympics \u2013 Men's Singles"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_demonstration_competition.event) Tennis at the 1984 Summer Olympics \u2013 Men's Singles)",
            "SExpr": "(JOIN (R olympics.olympic_demonstration_competition.event) m.0b8cjb)"
        }
    },
    "457": {
        "generations": "Who participated in the initial design and construction of Est\u00e1dio Algarve?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09jz209)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09jz209 ns:projects.project.participants ?x .\n}\n",
            "TopicEntityMid": "m.09jz209",
            "mid2name": {
                "ns:m.09jz209": "Initial design and construction of Est\u00e1dio Algarve"
            },
            "SExpr_w_name": "(JOIN (R projects.project.participants) Initial design and construction of Est\u00e1dio Algarve)",
            "SExpr": "(JOIN (R projects.project.participants) m.09jz209)"
        }
    },
    "458": {
        "generations": "What religion celebrates the Feast of St. Margaret of the \u00c1rp\u00e1d House?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kv0v5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kv0v5 ns:time.holiday.featured_in_religions ?x .\n}\n",
            "TopicEntityMid": "m.0_kv0v5",
            "mid2name": {
                "ns:m.0_kv0v5": "Feast of St. Margaret of the \u00c1rp\u00e1d House"
            },
            "SExpr_w_name": "(JOIN (R time.holiday.featured_in_religions) Feast of St. Margaret of the \u00c1rp\u00e1d House)",
            "SExpr": "(JOIN (R time.holiday.featured_in_religions) m.0_kv0v5)"
        }
    },
    "459": {
        "generations": "what episodes are in season 2 of the 20th century-fox hour?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07l424j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07l424j ns:tv.tv_series_season.episodes ?x .\n}\n",
            "TopicEntityMid": "m.07l424j",
            "mid2name": {
                "ns:m.07l424j": "The 20th Century-Fox Hour - Season 2"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_series_season.episodes) The 20th Century-Fox Hour - Season 2)",
            "SExpr": "(JOIN (R tv.tv_series_season.episodes) m.07l424j)"
        }
    },
    "460": {
        "generations": "What type of accommodation is considered budget?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ywbd_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ywbd_ ns:travel.accommodation_price_range.accommodation_in_this_range ?x .\n}\n",
            "TopicEntityMid": "m.03ywbd_",
            "mid2name": {
                "ns:m.03ywbd_": "Budget"
            },
            "SExpr_w_name": "(JOIN (R travel.accommodation_price_range.accommodation_in_this_range) Budget)",
            "SExpr": "(JOIN (R travel.accommodation_price_range.accommodation_in_this_range) m.03ywbd_)"
        }
    },
    "461": {
        "generations": "when was the rock of ages (2009 original broadway cast) album released?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0frt2z0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0frt2z0 ns:music.album.primary_release ?x .\n}\n",
            "TopicEntityMid": "m.0frt2z0",
            "mid2name": {
                "ns:m.0frt2z0": "Rock of Ages (2009 original Broadway cast)"
            },
            "SExpr_w_name": "(JOIN (R music.album.primary_release) Rock of Ages (2009 original Broadway cast))",
            "SExpr": "(JOIN (R music.album.primary_release) m.0frt2z0)"
        }
    },
    "462": {
        "generations": "What organizations are in the audio production sector?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04j55j0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04j55j0 ns:organization.organization_sector.organizations_in_this_sector ?x .\n}\n",
            "TopicEntityMid": "m.04j55j0",
            "mid2name": {
                "ns:m.04j55j0": "Audio Production"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_sector.organizations_in_this_sector) Audio Production)",
            "SExpr": "(JOIN (R organization.organization_sector.organizations_in_this_sector) m.04j55j0)"
        }
    },
    "463": {
        "generations": "What type of wine is red wine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wsb20)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wsb20 ns:wine.wine_color.wines ?x .\n}\n",
            "TopicEntityMid": "m.02wsb20",
            "mid2name": {
                "ns:m.02wsb20": "Red Wine"
            },
            "SExpr_w_name": "(JOIN (R wine.wine_color.wines) Red Wine)",
            "SExpr": "(JOIN (R wine.wine_color.wines) m.02wsb20)"
        }
    },
    "464": {
        "generations": "what file format is XML extended from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k0bjr8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k0bjr8 ns:computer.file_format.extended_from ?x .\n}\n",
            "TopicEntityMid": "m.0k0bjr8",
            "mid2name": {
                "ns:m.0k0bjr8": "XML"
            },
            "SExpr_w_name": "(JOIN (R computer.file_format.extended_from) XML)",
            "SExpr": "(JOIN (R computer.file_format.extended_from) m.0k0bjr8)"
        }
    },
    "465": {
        "generations": "What is the ellerdale ID for Azure?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jn2m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jn2m ns:user.avh.default_domain.ellerdale_topic.ellerdale_id ?x .\n}\n",
            "TopicEntityMid": "m.03jn2m",
            "mid2name": {
                "ns:m.03jn2m": "Azure"
            },
            "SExpr_w_name": "(JOIN (R user.avh.default_domain.ellerdale_topic.ellerdale_id) Azure)",
            "SExpr": "(JOIN (R user.avh.default_domain.ellerdale_topic.ellerdale_id) m.03jn2m)"
        }
    },
    "466": {
        "generations": "What agency designates sites in the National Landscape Conservation System?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09qx9m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09qx9m ns:protected_sites.natural_or_cultural_site_designation.listing_agency ?x .\n}\n",
            "TopicEntityMid": "m.09qx9m",
            "mid2name": {
                "ns:m.09qx9m": "National Landscape Conservation System"
            },
            "SExpr_w_name": "(JOIN (R protected_sites.natural_or_cultural_site_designation.listing_agency) National Landscape Conservation System)",
            "SExpr": "(JOIN (R protected_sites.natural_or_cultural_site_designation.listing_agency) m.09qx9m)"
        }
    },
    "467": {
        "generations": "What is the composition of the Albareto meteorite?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f324b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f324b ns:astronomy.meteorite.meteorite_composition ?x .\n}\n",
            "TopicEntityMid": "m.04f324b",
            "mid2name": {
                "ns:m.04f324b": "Albareto"
            },
            "SExpr_w_name": "(JOIN (R astronomy.meteorite.meteorite_composition) Albareto)",
            "SExpr": "(JOIN (R astronomy.meteorite.meteorite_composition) m.04f324b)"
        }
    },
    "468": {
        "generations": "what patents fall under the US patent category 704/257?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.043jg14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.043jg14 ns:law.us_patent_category.patents ?x .\n}\n",
            "TopicEntityMid": "m.043jg14",
            "mid2name": {
                "ns:m.043jg14": "704/257"
            },
            "SExpr_w_name": "(JOIN (R law.us_patent_category.patents) 704/257)",
            "SExpr": "(JOIN (R law.us_patent_category.patents) m.043jg14)"
        }
    },
    "469": {
        "generations": "What is the ship class of the Japanese submarine I-25?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zb0l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zb0l ns:boats.ship.ship_class ?x .\n}\n",
            "TopicEntityMid": "m.02zb0l",
            "mid2name": {
                "ns:m.02zb0l": "Japanese submarine I-25"
            },
            "SExpr_w_name": "(JOIN (R boats.ship.ship_class) Japanese submarine I-25)",
            "SExpr": "(JOIN (R boats.ship.ship_class) m.02zb0l)"
        }
    },
    "470": {
        "generations": "Which cameras support the JPEG compressed format with EXIF 2.2?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q44xr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q44xr ns:digicams.camera_compressed_format.cameras ?x .\n}\n",
            "TopicEntityMid": "m.03q44xr",
            "mid2name": {
                "ns:m.03q44xr": "JPEG (EXIF 2.2)"
            },
            "SExpr_w_name": "(JOIN (R digicams.camera_compressed_format.cameras) JPEG (EXIF 2.2))",
            "SExpr": "(JOIN (R digicams.camera_compressed_format.cameras) m.03q44xr)"
        }
    },
    "471": {
        "generations": "What constellation is HD 118203 b located in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04y5h50)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04y5h50 ns:base.exoplanetology.exoplanet.constellation ?x .\n}\n",
            "TopicEntityMid": "m.04y5h50",
            "mid2name": {
                "ns:m.04y5h50": "HD 118203 b"
            },
            "SExpr_w_name": "(JOIN (R base.exoplanetology.exoplanet.constellation) HD 118203 b)",
            "SExpr": "(JOIN (R base.exoplanetology.exoplanet.constellation) m.04y5h50)"
        }
    },
    "472": {
        "generations": "What type of cloud is Altocumulus lenticularis?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0327d7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0327d7 ns:meteorology.cloud.classification ?x .\n}\n",
            "TopicEntityMid": "m.0327d7",
            "mid2name": {
                "ns:m.0327d7": "Altocumulus lenticularis"
            },
            "SExpr_w_name": "(JOIN (R meteorology.cloud.classification) Altocumulus lenticularis)",
            "SExpr": "(JOIN (R meteorology.cloud.classification) m.0327d7)"
        }
    },
    "473": {
        "generations": "Who plays the Parker Fly guitar?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jplhp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jplhp ns:music.guitar.guitarists ?x .\n}\n",
            "TopicEntityMid": "m.04jplhp",
            "mid2name": {
                "ns:m.04jplhp": "Parker Fly"
            },
            "SExpr_w_name": "(JOIN (R music.guitar.guitarists) Parker Fly)",
            "SExpr": "(JOIN (R music.guitar.guitarists) m.04jplhp)"
        }
    },
    "474": {
        "generations": "what is the next issue after x-men #49 in the comic book series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gwb_8j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gwb_8j ns:comic_books.comic_book_issue.next_issue ?x .\n}\n",
            "TopicEntityMid": "m.0gwb_8j",
            "mid2name": {
                "ns:m.0gwb_8j": "X-Men #49"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.next_issue) X-Men #49)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.next_issue) m.0gwb_8j)"
        }
    },
    "475": {
        "generations": "What did Crna Gora Inzenjering AD Nik issue?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cqfb50)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cqfb50 ns:business.issuer.issue ?x .\n}\n",
            "TopicEntityMid": "m.0cqfb50",
            "mid2name": {
                "ns:m.0cqfb50": "Crna Gora Inzenjering AD Nik"
            },
            "SExpr_w_name": "(JOIN (R business.issuer.issue) Crna Gora Inzenjering AD Nik)",
            "SExpr": "(JOIN (R business.issuer.issue) m.0cqfb50)"
        }
    },
    "476": {
        "generations": "What religion branched into Hasidic Judaism?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03r6w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03r6w ns:religion.religion.branched_into ?x .\n}\n",
            "TopicEntityMid": "m.03r6w",
            "mid2name": {
                "ns:m.03r6w": "Hasidic Judaism"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.branched_into) Hasidic Judaism)",
            "SExpr": "(JOIN (R religion.religion.branched_into) m.03r6w)"
        }
    },
    "477": {
        "generations": "What breeds of animals have black coloring?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019sc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019sc ns:biology.breed_coloring.breeds ?x .\n}\n",
            "TopicEntityMid": "m.019sc",
            "mid2name": {
                "ns:m.019sc": "Black"
            },
            "SExpr_w_name": "(JOIN (R biology.breed_coloring.breeds) Black)",
            "SExpr": "(JOIN (R biology.breed_coloring.breeds) m.019sc)"
        }
    },
    "478": {
        "generations": "What type of poetry is the Blues form used for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h8ln8_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h8ln8_ ns:book.poetic_verse_form.poems_of_this_form ?x .\n}\n",
            "TopicEntityMid": "m.0h8ln8_",
            "mid2name": {
                "ns:m.0h8ln8_": "Blues"
            },
            "SExpr_w_name": "(JOIN (R book.poetic_verse_form.poems_of_this_form) Blues)",
            "SExpr": "(JOIN (R book.poetic_verse_form.poems_of_this_form) m.0h8ln8_)"
        }
    },
    "479": {
        "generations": "What is the wine style of the 2006 Domaine Bzikot P\u00e8re et Fils \"Bourgogne Blanc\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05l67pz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05l67pz ns:wine.wine.wine_style ?x .\n}\n",
            "TopicEntityMid": "m.05l67pz",
            "mid2name": {
                "ns:m.05l67pz": "2006 Domaine Bzikot P\u00e8re et Fils \"Bourgogne Blanc\""
            },
            "SExpr_w_name": "(JOIN (R wine.wine.wine_style) 2006 Domaine Bzikot P\u00e8re et Fils \"Bourgogne Blanc\")",
            "SExpr": "(JOIN (R wine.wine.wine_style) m.05l67pz)"
        }
    },
    "480": {
        "generations": "what is the previous issue of Comet Man #6 in the comic book series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nbyvs2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nbyvs2 ns:comic_books.comic_book_issue.previous_issue ?x .\n}\n",
            "TopicEntityMid": "m.0nbyvs2",
            "mid2name": {
                "ns:m.0nbyvs2": "Comet Man #6"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.previous_issue) Comet Man #6)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.previous_issue) m.0nbyvs2)"
        }
    },
    "481": {
        "generations": "What is Rudi Gl\u00f6ckner's profession in soccer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026r0nt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026r0nt ns:soccer.football_referee.main_referee_for ?x .\n}\n",
            "TopicEntityMid": "m.026r0nt",
            "mid2name": {
                "ns:m.026r0nt": "Rudi Gl\u00f6ckner"
            },
            "SExpr_w_name": "(JOIN (R soccer.football_referee.main_referee_for) Rudi Gl\u00f6ckner)",
            "SExpr": "(JOIN (R soccer.football_referee.main_referee_for) m.026r0nt)"
        }
    },
    "482": {
        "generations": "Which ski run is served by Spiney Chutes Area?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04knmqz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04knmqz ns:skiing.ski_run.served_by ?x .\n}\n",
            "TopicEntityMid": "m.04knmqz",
            "mid2name": {
                "ns:m.04knmqz": "Spiney Chutes Area"
            },
            "SExpr_w_name": "(JOIN (R skiing.ski_run.served_by) Spiney Chutes Area)",
            "SExpr": "(JOIN (R skiing.ski_run.served_by) m.04knmqz)"
        }
    },
    "483": {
        "generations": "What products contain sodium ascorbate and ascorbic acid as ingredients?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.065s739)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.065s739 ns:business.product_ingredient.used_in_products ?x .\n}\n",
            "TopicEntityMid": "m.065s739",
            "mid2name": {
                "ns:m.065s739": "Sodium ascorbate and ascorbic acid"
            },
            "SExpr_w_name": "(JOIN (R business.product_ingredient.used_in_products) Sodium ascorbate and ascorbic acid)",
            "SExpr": "(JOIN (R business.product_ingredient.used_in_products) m.065s739)"
        }
    },
    "484": {
        "generations": "What category does marine channel belong to in geography?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cn9p08)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cn9p08 ns:geography.geographical_feature_category.subcategory_of ?x .\n}\n",
            "TopicEntityMid": "m.0cn9p08",
            "mid2name": {
                "ns:m.0cn9p08": "Marine channel"
            },
            "SExpr_w_name": "(JOIN (R geography.geographical_feature_category.subcategory_of) Marine channel)",
            "SExpr": "(JOIN (R geography.geographical_feature_category.subcategory_of) m.0cn9p08)"
        }
    },
    "485": {
        "generations": "what locations are in the azores time zone?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h97ny4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h97ny4 ns:time.time_zone.locations_in_this_time_zone ?x .\n}\n",
            "TopicEntityMid": "m.0h97ny4",
            "mid2name": {
                "ns:m.0h97ny4": "Azores\u00a0Time Zone"
            },
            "SExpr_w_name": "(JOIN (R time.time_zone.locations_in_this_time_zone) Azores\u00a0Time Zone)",
            "SExpr": "(JOIN (R time.time_zone.locations_in_this_time_zone) m.0h97ny4)"
        }
    },
    "486": {
        "generations": "In what languages has The Iliad been translated?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06cft01)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06cft01 ns:book.translation.language ?x .\n}\n",
            "TopicEntityMid": "m.06cft01",
            "mid2name": {
                "ns:m.06cft01": "The Iliad"
            },
            "SExpr_w_name": "(JOIN (R book.translation.language) The Iliad)",
            "SExpr": "(JOIN (R book.translation.language) m.06cft01)"
        }
    },
    "487": {
        "generations": "What is the major for students studying management engineering?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03whchq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03whchq ns:education.field_of_study.students_majoring ?x .\n}\n",
            "TopicEntityMid": "m.03whchq",
            "mid2name": {
                "ns:m.03whchq": "Management engineering"
            },
            "SExpr_w_name": "(JOIN (R education.field_of_study.students_majoring) Management engineering)",
            "SExpr": "(JOIN (R education.field_of_study.students_majoring) m.03whchq)"
        }
    },
    "488": {
        "generations": "What type of music is played on the broadcast?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ykmmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ykmmr ns:broadcast.genre.content ?x .\n}\n",
            "TopicEntityMid": "m.07ykmmr",
            "mid2name": {
                "ns:m.07ykmmr": "Metal"
            },
            "SExpr_w_name": "(JOIN (R broadcast.genre.content) Metal)",
            "SExpr": "(JOIN (R broadcast.genre.content) m.07ykmmr)"
        }
    },
    "489": {
        "generations": "What is the name of the highway system in New Zealand?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01t2wp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01t2wp ns:transportation.highway_system.highways ?x .\n}\n",
            "TopicEntityMid": "m.01t2wp",
            "mid2name": {
                "ns:m.01t2wp": "New Zealand state highway network"
            },
            "SExpr_w_name": "(JOIN (R transportation.highway_system.highways) New Zealand state highway network)",
            "SExpr": "(JOIN (R transportation.highway_system.highways) m.01t2wp)"
        }
    },
    "490": {
        "generations": "What types of cheese have a soft texture?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h48ft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h48ft ns:food.cheese_texture.cheeses ?x .\n}\n",
            "TopicEntityMid": "m.02h48ft",
            "mid2name": {
                "ns:m.02h48ft": "Soft"
            },
            "SExpr_w_name": "(JOIN (R food.cheese_texture.cheeses) Soft)",
            "SExpr": "(JOIN (R food.cheese_texture.cheeses) m.02h48ft)"
        }
    },
    "491": {
        "generations": "What beers fall under the category of Light Lager?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hv2qx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hv2qx ns:food.beer_style.beers ?x .\n}\n",
            "TopicEntityMid": "m.02hv2qx",
            "mid2name": {
                "ns:m.02hv2qx": "Light Lager"
            },
            "SExpr_w_name": "(JOIN (R food.beer_style.beers) Light Lager)",
            "SExpr": "(JOIN (R food.beer_style.beers) m.02hv2qx)"
        }
    },
    "492": {
        "generations": "What websites fall under the category of alt porn?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qy6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qy6q ns:internet.website_category.sites ?x .\n}\n",
            "TopicEntityMid": "m.03qy6q",
            "mid2name": {
                "ns:m.03qy6q": "Alt porn"
            },
            "SExpr_w_name": "(JOIN (R internet.website_category.sites) Alt porn)",
            "SExpr": "(JOIN (R internet.website_category.sites) m.03qy6q)"
        }
    },
    "493": {
        "generations": "What gene is associated with Pseudomonas aeruginosa PAO1 chromosome?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kdy0rf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kdy0rf ns:biology.chromosome.gene ?x .\n}\n",
            "TopicEntityMid": "m.0kdy0rf",
            "mid2name": {
                "ns:m.0kdy0rf": "Pseudomonas aeruginosa PAO1"
            },
            "SExpr_w_name": "(JOIN (R biology.chromosome.gene) Pseudomonas aeruginosa PAO1)",
            "SExpr": "(JOIN (R biology.chromosome.gene) m.0kdy0rf)"
        }
    },
    "494": {
        "generations": "Which company owns the patents assigned to Jackson & Perkins?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h3gml)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h3gml ns:law.patent_assignee.patents_assigned ?x .\n}\n",
            "TopicEntityMid": "m.03h3gml",
            "mid2name": {
                "ns:m.03h3gml": "Jackson & Perkins"
            },
            "SExpr_w_name": "(JOIN (R law.patent_assignee.patents_assigned) Jackson & Perkins)",
            "SExpr": "(JOIN (R law.patent_assignee.patents_assigned) m.03h3gml)"
        }
    },
    "495": {
        "generations": "What mythical creatures are associated with Europe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02j9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02j9z ns:base.folklore.mythology.mythical_creatures ?x .\n}\n",
            "TopicEntityMid": "m.02j9z",
            "mid2name": {
                "ns:m.02j9z": "Europe"
            },
            "SExpr_w_name": "(JOIN (R base.folklore.mythology.mythical_creatures) Europe)",
            "SExpr": "(JOIN (R base.folklore.mythology.mythical_creatures) m.02j9z)"
        }
    },
    "496": {
        "generations": "What is the Ecclesiastical province's religious jurisdiction class?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02b3by)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02b3by ns:religion.religious_jurisdiction_class.jurisdiction ?x .\n}\n",
            "TopicEntityMid": "m.02b3by",
            "mid2name": {
                "ns:m.02b3by": "Ecclesiastical province"
            },
            "SExpr_w_name": "(JOIN (R religion.religious_jurisdiction_class.jurisdiction) Ecclesiastical province)",
            "SExpr": "(JOIN (R religion.religious_jurisdiction_class.jurisdiction) m.02b3by)"
        }
    },
    "497": {
        "generations": "What amusement parks are in Tomorrowland?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050h8f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050h8f ns:amusement_parks.amusement_park_area.parks ?x .\n}\n",
            "TopicEntityMid": "m.050h8f",
            "mid2name": {
                "ns:m.050h8f": "Tomorrowland"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.amusement_park_area.parks) Tomorrowland)",
            "SExpr": "(JOIN (R amusement_parks.amusement_park_area.parks) m.050h8f)"
        }
    },
    "498": {
        "generations": "What is the clear coat exterior color of the 2004 General Motors Pulse Red car?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k_q8w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k_q8w ns:automotive.exterior_color.clear_coat ?x .\n}\n",
            "TopicEntityMid": "m.02k_q8w",
            "mid2name": {
                "ns:m.02k_q8w": "2004 General Motors Pulse Red"
            },
            "SExpr_w_name": "(JOIN (R automotive.exterior_color.clear_coat) 2004 General Motors Pulse Red)",
            "SExpr": "(JOIN (R automotive.exterior_color.clear_coat) m.02k_q8w)"
        }
    },
    "499": {
        "generations": "who founded the world mission society church of god?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q21kx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q21kx ns:religion.religion.founding_figures ?x .\n}\n",
            "TopicEntityMid": "m.02q21kx",
            "mid2name": {
                "ns:m.02q21kx": "World Mission Society Church of God"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.founding_figures) World Mission Society Church of God)",
            "SExpr": "(JOIN (R religion.religion.founding_figures) m.02q21kx)"
        }
    },
    "500": {
        "generations": "which characters primarily appear in the Earth-Two comic book universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025rvl0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025rvl0 ns:comic_books.comic_book_fictional_universe.characters_primarily_appearing_in_this_universe ?x .\n}\n",
            "TopicEntityMid": "m.025rvl0",
            "mid2name": {
                "ns:m.025rvl0": "Earth-Two"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_fictional_universe.characters_primarily_appearing_in_this_universe) Earth-Two)",
            "SExpr": "(JOIN (R comic_books.comic_book_fictional_universe.characters_primarily_appearing_in_this_universe) m.025rvl0)"
        }
    },
    "501": {
        "generations": "What software did Christophe Grenier develop?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11by3hv_kz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11by3hv_kz ns:computer.software_developer.software ?x .\n}\n",
            "TopicEntityMid": "g.11by3hv_kz",
            "mid2name": {
                "ns:g.11by3hv_kz": "Christophe Grenier"
            },
            "SExpr_w_name": "(JOIN (R computer.software_developer.software) Christophe Grenier)",
            "SExpr": "(JOIN (R computer.software_developer.software) g.11by3hv_kz)"
        }
    },
    "502": {
        "generations": "What company made the American Cyclecar Co?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j5zyvv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j5zyvv ns:automotive.company.make_s ?x .\n}\n",
            "TopicEntityMid": "m.0j5zyvv",
            "mid2name": {
                "ns:m.0j5zyvv": "American Cyclecar Co"
            },
            "SExpr_w_name": "(JOIN (R automotive.company.make_s) American Cyclecar Co)",
            "SExpr": "(JOIN (R automotive.company.make_s) m.0j5zyvv)"
        }
    },
    "503": {
        "generations": "What is the active ingredient in Zinc sulfate heptahydrate?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqyzxb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqyzxb ns:medicine.drug_ingredient.active_ingredient_of_formulation ?x .\n}\n",
            "TopicEntityMid": "m.0hqyzxb",
            "mid2name": {
                "ns:m.0hqyzxb": "Zinc sulfate heptahydrate"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) Zinc sulfate heptahydrate)",
            "SExpr": "(JOIN (R medicine.drug_ingredient.active_ingredient_of_formulation) m.0hqyzxb)"
        }
    },
    "504": {
        "generations": "Which rockets are currently operational in spaceflight?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09lgxr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09lgxr ns:spaceflight.rocket_status.rockets ?x .\n}\n",
            "TopicEntityMid": "m.09lgxr",
            "mid2name": {
                "ns:m.09lgxr": "Operational"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket_status.rockets) Operational)",
            "SExpr": "(JOIN (R spaceflight.rocket_status.rockets) m.09lgxr)"
        }
    },
    "505": {
        "generations": "What is a league that plays field lacrosse?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05254wc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05254wc ns:sports.sport.leagues ?x .\n}\n",
            "TopicEntityMid": "m.05254wc",
            "mid2name": {
                "ns:m.05254wc": "Field lacrosse"
            },
            "SExpr_w_name": "(JOIN (R sports.sport.leagues) Field lacrosse)",
            "SExpr": "(JOIN (R sports.sport.leagues) m.05254wc)"
        }
    },
    "506": {
        "generations": "What wines are produced by Feeney Ranch vineyard?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ghtvm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ghtvm ns:wine.vineyard.wines ?x .\n}\n",
            "TopicEntityMid": "m.03ghtvm",
            "mid2name": {
                "ns:m.03ghtvm": "Feeney Ranch"
            },
            "SExpr_w_name": "(JOIN (R wine.vineyard.wines) Feeney Ranch)",
            "SExpr": "(JOIN (R wine.vineyard.wines) m.03ghtvm)"
        }
    },
    "507": {
        "generations": "What is the genre of the xz file format?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.063ynsr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.063ynsr ns:computer.file_format.genre ?x .\n}\n",
            "TopicEntityMid": "m.063ynsr",
            "mid2name": {
                "ns:m.063ynsr": "xz"
            },
            "SExpr_w_name": "(JOIN (R computer.file_format.genre) xz)",
            "SExpr": "(JOIN (R computer.file_format.genre) m.063ynsr)"
        }
    },
    "508": {
        "generations": "Which astronauts are part of the Canadian Space Agency?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wjhc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wjhc ns:spaceflight.space_agency.astronauts ?x .\n}\n",
            "TopicEntityMid": "m.01wjhc",
            "mid2name": {
                "ns:m.01wjhc": "Canadian Space Agency"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.space_agency.astronauts) Canadian Space Agency)",
            "SExpr": "(JOIN (R spaceflight.space_agency.astronauts) m.01wjhc)"
        }
    },
    "509": {
        "generations": "What is the chivalric title associated with the Order of the Crescent?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mc9vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mc9vv ns:royalty.order_of_chivalry.chivalric_titles ?x .\n}\n",
            "TopicEntityMid": "m.03mc9vv",
            "mid2name": {
                "ns:m.03mc9vv": "Order of the Crescent"
            },
            "SExpr_w_name": "(JOIN (R royalty.order_of_chivalry.chivalric_titles) Order of the Crescent)",
            "SExpr": "(JOIN (R royalty.order_of_chivalry.chivalric_titles) m.03mc9vv)"
        }
    },
    "510": {
        "generations": "what format does the sony alpha 850 camera use?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06_v4pc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06_v4pc ns:digicams.digital_camera.format ?x .\n}\n",
            "TopicEntityMid": "m.06_v4pc",
            "mid2name": {
                "ns:m.06_v4pc": "Sony Alpha 850"
            },
            "SExpr_w_name": "(JOIN (R digicams.digital_camera.format) Sony Alpha 850)",
            "SExpr": "(JOIN (R digicams.digital_camera.format) m.06_v4pc)"
        }
    },
    "511": {
        "generations": "what star system does comet C/1861 G1 (Thatcher) belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026v4vz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026v4vz ns:astronomy.star_system_body.star_system ?x .\n}\n",
            "TopicEntityMid": "m.026v4vz",
            "mid2name": {
                "ns:m.026v4vz": "C/1861 G1 (Thatcher)"
            },
            "SExpr_w_name": "(JOIN (R astronomy.star_system_body.star_system) C/1861 G1 (Thatcher))",
            "SExpr": "(JOIN (R astronomy.star_system_body.star_system) m.026v4vz)"
        }
    },
    "512": {
        "generations": "What car model succeeded the Triumph TR1 / 20TS?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vn998)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vn998 ns:automotive.model.successor ?x .\n}\n",
            "TopicEntityMid": "m.02vn998",
            "mid2name": {
                "ns:m.02vn998": "Triumph TR1 / 20TS"
            },
            "SExpr_w_name": "(JOIN (R automotive.model.successor) Triumph TR1 / 20TS)",
            "SExpr": "(JOIN (R automotive.model.successor) m.02vn998)"
        }
    },
    "513": {
        "generations": "Who was the operator of the 2009 Pel-Air Westwind ditching?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bbvjp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bbvjp7 ns:aviation.airliner_accident.operator ?x .\n}\n",
            "TopicEntityMid": "m.0bbvjp7",
            "mid2name": {
                "ns:m.0bbvjp7": "2009 Pel-Air Westwind ditching"
            },
            "SExpr_w_name": "(JOIN (R aviation.airliner_accident.operator) 2009 Pel-Air Westwind ditching)",
            "SExpr": "(JOIN (R aviation.airliner_accident.operator) m.0bbvjp7)"
        }
    },
    "514": {
        "generations": "What structures does the Ammerer family own in terms of architecture?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012bvd9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012bvd9k ns:architecture.architectural_structure_owner.structures_owned ?x .\n}\n",
            "TopicEntityMid": "m.012bvd9k",
            "mid2name": {
                "ns:m.012bvd9k": "Family Ammerer"
            },
            "SExpr_w_name": "(JOIN (R architecture.architectural_structure_owner.structures_owned) Family Ammerer)",
            "SExpr": "(JOIN (R architecture.architectural_structure_owner.structures_owned) m.012bvd9k)"
        }
    },
    "515": {
        "generations": "Who are the deities in Zoroastrianism?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025sr3l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025sr3l ns:religion.religion.deities ?x .\n}\n",
            "TopicEntityMid": "m.025sr3l",
            "mid2name": {
                "ns:m.025sr3l": "Zoroastrianism"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.deities) Zoroastrianism)",
            "SExpr": "(JOIN (R religion.religion.deities) m.025sr3l)"
        }
    },
    "516": {
        "generations": "who is on the executive committee of the Conf\u00e9d\u00e9ration des Syndicats Nationaux?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bjc2w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bjc2w0 ns:organization.organization_committee.members ?x .\n}\n",
            "TopicEntityMid": "m.0bjc2w0",
            "mid2name": {
                "ns:m.0bjc2w0": "Executive committee of the Conf\u00e9d\u00e9ration des Syndicats Nationaux"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_committee.members) Executive committee of the Conf\u00e9d\u00e9ration des Syndicats Nationaux)",
            "SExpr": "(JOIN (R organization.organization_committee.members) m.0bjc2w0)"
        }
    },
    "517": {
        "generations": "What breed is a Skookum cat?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027tcfq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027tcfq ns:biology.animal_breed.breed_of ?x .\n}\n",
            "TopicEntityMid": "m.027tcfq",
            "mid2name": {
                "ns:m.027tcfq": "Skookum cat"
            },
            "SExpr_w_name": "(JOIN (R biology.animal_breed.breed_of) Skookum cat)",
            "SExpr": "(JOIN (R biology.animal_breed.breed_of) m.027tcfq)"
        }
    },
    "518": {
        "generations": "What is the revenue of Ramboll UK?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045m8r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045m8r3 ns:business.business_operation.revenue ?x .\n}\n",
            "TopicEntityMid": "m.045m8r3",
            "mid2name": {
                "ns:m.045m8r3": "Ramboll UK"
            },
            "SExpr_w_name": "(JOIN (R business.business_operation.revenue) Ramboll UK)",
            "SExpr": "(JOIN (R business.business_operation.revenue) m.045m8r3)"
        }
    },
    "519": {
        "generations": "What is the data source for Freebase?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.021ympy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.021ympy ns:dataworld.information_source.data_operations ?x .\n}\n",
            "TopicEntityMid": "m.021ympy",
            "mid2name": {
                "ns:m.021ympy": "Freebase"
            },
            "SExpr_w_name": "(JOIN (R dataworld.information_source.data_operations) Freebase)",
            "SExpr": "(JOIN (R dataworld.information_source.data_operations) m.021ympy)"
        }
    },
    "520": {
        "generations": "What is Amrit Sanchar?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0brgn6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0brgn6 ns:religion.religious_practice.practice_of ?x .\n}\n",
            "TopicEntityMid": "m.0brgn6",
            "mid2name": {
                "ns:m.0brgn6": "Amrit Sanchar"
            },
            "SExpr_w_name": "(JOIN (R religion.religious_practice.practice_of) Amrit Sanchar)",
            "SExpr": "(JOIN (R religion.religious_practice.practice_of) m.0brgn6)"
        }
    },
    "521": {
        "generations": "What album or release is My First Songs Tour supporting?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09k3d5f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09k3d5f ns:music.concert_tour.album_or_release_supporting ?x .\n}\n",
            "TopicEntityMid": "m.09k3d5f",
            "mid2name": {
                "ns:m.09k3d5f": "My First Songs Tour"
            },
            "SExpr_w_name": "(JOIN (R music.concert_tour.album_or_release_supporting) My First Songs Tour)",
            "SExpr": "(JOIN (R music.concert_tour.album_or_release_supporting) m.09k3d5f)"
        }
    },
    "522": {
        "generations": "What is the parent model of the Atari 130 ST computer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h879_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h879_ ns:computer.computer.parent_model ?x .\n}\n",
            "TopicEntityMid": "m.02h879_",
            "mid2name": {
                "ns:m.02h879_": "Atari 130 ST"
            },
            "SExpr_w_name": "(JOIN (R computer.computer.parent_model) Atari 130 ST)",
            "SExpr": "(JOIN (R computer.computer.parent_model) m.02h879_)"
        }
    },
    "523": {
        "generations": "What is Nikki Washington's nationality?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0l8my9w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0l8my9w ns:people.person.nationality ?x .\n}\n",
            "TopicEntityMid": "m.0l8my9w",
            "mid2name": {
                "ns:m.0l8my9w": "Nikki Washington"
            },
            "SExpr_w_name": "(JOIN (R people.person.nationality) Nikki Washington)",
            "SExpr": "(JOIN (R people.person.nationality) m.0l8my9w)"
        }
    },
    "524": {
        "generations": "What celestial objects were discovered by the Palomar Planet-Crossing Asteroid Survey?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zr1p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zr1p ns:astronomy.astronomical_survey_project_organization.celestial_objects_discovered ?x .\n}\n",
            "TopicEntityMid": "m.03zr1p",
            "mid2name": {
                "ns:m.03zr1p": "Palomar Planet-Crossing Asteroid Survey"
            },
            "SExpr_w_name": "(JOIN (R astronomy.astronomical_survey_project_organization.celestial_objects_discovered) Palomar Planet-Crossing Asteroid Survey)",
            "SExpr": "(JOIN (R astronomy.astronomical_survey_project_organization.celestial_objects_discovered) m.03zr1p)"
        }
    },
    "525": {
        "generations": "who owns the Askelonian horses in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c1ryn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c1ryn5 ns:fictional_universe.fictional_object.owner ?x .\n}\n",
            "TopicEntityMid": "m.0c1ryn5",
            "mid2name": {
                "ns:m.0c1ryn5": "Askelonian horses"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.owner) Askelonian horses)",
            "SExpr": "(JOIN (R fictional_universe.fictional_object.owner) m.0c1ryn5)"
        }
    },
    "526": {
        "generations": "What restaurants serve Tex-Mex food?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07l9d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07l9d ns:dining.cuisine.restaurant ?x .\n}\n",
            "TopicEntityMid": "m.07l9d",
            "mid2name": {
                "ns:m.07l9d": "Tex-Mex food"
            },
            "SExpr_w_name": "(JOIN (R dining.cuisine.restaurant) Tex-Mex food)",
            "SExpr": "(JOIN (R dining.cuisine.restaurant) m.07l9d)"
        }
    },
    "527": {
        "generations": "What is a strict nature reserve?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gx148x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gx148x ns:protected_sites.iucn_category.protected_areas ?x .\n}\n",
            "TopicEntityMid": "m.0gx148x",
            "mid2name": {
                "ns:m.0gx148x": "Strict nature reserve"
            },
            "SExpr_w_name": "(JOIN (R protected_sites.iucn_category.protected_areas) Strict nature reserve)",
            "SExpr": "(JOIN (R protected_sites.iucn_category.protected_areas) m.0gx148x)"
        }
    },
    "528": {
        "generations": "where is kindergarten taught?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pyhj5r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pyhj5r ns:education.grade_level.locations_used ?x .\n}\n",
            "TopicEntityMid": "m.0pyhj5r",
            "mid2name": {
                "ns:m.0pyhj5r": "Kindergarten"
            },
            "SExpr_w_name": "(JOIN (R education.grade_level.locations_used) Kindergarten)",
            "SExpr": "(JOIN (R education.grade_level.locations_used) m.0pyhj5r)"
        }
    },
    "529": {
        "generations": "Who has Lordi performed headline performances for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.044j4r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.044j4r ns:user.robert.performance.performer.headline_performances ?x .\n}\n",
            "TopicEntityMid": "m.044j4r",
            "mid2name": {
                "ns:m.044j4r": "Lordi"
            },
            "SExpr_w_name": "(JOIN (R user.robert.performance.performer.headline_performances) Lordi)",
            "SExpr": "(JOIN (R user.robert.performance.performer.headline_performances) m.044j4r)"
        }
    },
    "530": {
        "generations": "What digital cameras are manufactured by Kyocera?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rxy_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rxy_ ns:digicams.digital_camera_manufacturer.cameras ?x .\n}\n",
            "TopicEntityMid": "m.02rxy_",
            "mid2name": {
                "ns:m.02rxy_": "Kyocera"
            },
            "SExpr_w_name": "(JOIN (R digicams.digital_camera_manufacturer.cameras) Kyocera)",
            "SExpr": "(JOIN (R digicams.digital_camera_manufacturer.cameras) m.02rxy_)"
        }
    },
    "531": {
        "generations": "What language family does Kho-Bwa languages belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fbjnp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fbjnp ns:language.language_family.member_of_language_families ?x .\n}\n",
            "TopicEntityMid": "m.05fbjnp",
            "mid2name": {
                "ns:m.05fbjnp": "Kho-Bwa languages"
            },
            "SExpr_w_name": "(JOIN (R language.language_family.member_of_language_families) Kho-Bwa languages)",
            "SExpr": "(JOIN (R language.language_family.member_of_language_families) m.05fbjnp)"
        }
    },
    "532": {
        "generations": "What exhibitions has Nova Benway curated?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011k531d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011k531d ns:exhibitions.exhibition_curator.exhibitions_curated ?x .\n}\n",
            "TopicEntityMid": "m.011k531d",
            "mid2name": {
                "ns:m.011k531d": "Nova Benway"
            },
            "SExpr_w_name": "(JOIN (R exhibitions.exhibition_curator.exhibitions_curated) Nova Benway)",
            "SExpr": "(JOIN (R exhibitions.exhibition_curator.exhibitions_curated) m.011k531d)"
        }
    },
    "533": {
        "generations": "Who appeared in The Terrible Thunderlizards?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qb_m0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qb_m0 ns:tv.tv_episode_segment.performances ?x .\n}\n",
            "TopicEntityMid": "m.02qb_m0",
            "mid2name": {
                "ns:m.02qb_m0": "The Terrible Thunderlizards"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_episode_segment.performances) The Terrible Thunderlizards)",
            "SExpr": "(JOIN (R tv.tv_episode_segment.performances) m.02qb_m0)"
        }
    },
    "534": {
        "generations": "where was the Impressionism: A Centenary Exhibition held?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hccktc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hccktc ns:exhibitions.exhibition.venues ?x .\n}\n",
            "TopicEntityMid": "m.0hccktc",
            "mid2name": {
                "ns:m.0hccktc": "Impressionism: A Centenary Exhibition"
            },
            "SExpr_w_name": "(JOIN (R exhibitions.exhibition.venues) Impressionism: A Centenary Exhibition)",
            "SExpr": "(JOIN (R exhibitions.exhibition.venues) m.0hccktc)"
        }
    },
    "535": {
        "generations": "who proposed the corwin amendment to the constitution?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02nty_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02nty_ ns:law.constitutional_amendment.proposed_by ?x .\n}\n",
            "TopicEntityMid": "m.02nty_",
            "mid2name": {
                "ns:m.02nty_": "Corwin Amendment"
            },
            "SExpr_w_name": "(JOIN (R law.constitutional_amendment.proposed_by) Corwin Amendment)",
            "SExpr": "(JOIN (R law.constitutional_amendment.proposed_by) m.02nty_)"
        }
    },
    "536": {
        "generations": "which albums did dean watson engineer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07893ng)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07893ng ns:music.engineer.releases_engineered ?x .\n}\n",
            "TopicEntityMid": "m.07893ng",
            "mid2name": {
                "ns:m.07893ng": "Dean Watson"
            },
            "SExpr_w_name": "(JOIN (R music.engineer.releases_engineered) Dean Watson)",
            "SExpr": "(JOIN (R music.engineer.releases_engineered) m.07893ng)"
        }
    },
    "537": {
        "generations": "What is the name of the comet group that includes Kreutz Sungrazers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jvsz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jvsz ns:astronomy.comet_group.comet ?x .\n}\n",
            "TopicEntityMid": "m.05jvsz",
            "mid2name": {
                "ns:m.05jvsz": "Kreutz Sungrazers"
            },
            "SExpr_w_name": "(JOIN (R astronomy.comet_group.comet) Kreutz Sungrazers)",
            "SExpr": "(JOIN (R astronomy.comet_group.comet) m.05jvsz)"
        }
    },
    "538": {
        "generations": "What is depicted as a supporter in the former coat of arms of Republika Srpska?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01zlq2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01zlq2 ns:symbols.coat_of_arms.supporter ?x .\n}\n",
            "TopicEntityMid": "m.01zlq2",
            "mid2name": {
                "ns:m.01zlq2": "Former Coat of arms of Republika Srpska"
            },
            "SExpr_w_name": "(JOIN (R symbols.coat_of_arms.supporter) Former Coat of arms of Republika Srpska)",
            "SExpr": "(JOIN (R symbols.coat_of_arms.supporter) m.01zlq2)"
        }
    },
    "539": {
        "generations": "What type of fuel does the RD-216M rocket engine use?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xlv95)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xlv95 ns:spaceflight.bipropellant_rocket_engine.fuel ?x .\n}\n",
            "TopicEntityMid": "m.02xlv95",
            "mid2name": {
                "ns:m.02xlv95": "RD-216M"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.bipropellant_rocket_engine.fuel) RD-216M)",
            "SExpr": "(JOIN (R spaceflight.bipropellant_rocket_engine.fuel) m.02xlv95)"
        }
    },
    "540": {
        "generations": "What is the subject of the music videos that feature loneliness?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c7vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c7vv ns:music.music_video_subject.subject_in_these_music_videos ?x .\n}\n",
            "TopicEntityMid": "m.05c7vv",
            "mid2name": {
                "ns:m.05c7vv": "Loneliness"
            },
            "SExpr_w_name": "(JOIN (R music.music_video_subject.subject_in_these_music_videos) Loneliness)",
            "SExpr": "(JOIN (R music.music_video_subject.subject_in_these_music_videos) m.05c7vv)"
        }
    },
    "541": {
        "generations": "what is a ladle used for in cooking?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rl48)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rl48 ns:food.culinary_tool.used_in_recipes ?x .\n}\n",
            "TopicEntityMid": "m.027rl48",
            "mid2name": {
                "ns:m.027rl48": "Ladle"
            },
            "SExpr_w_name": "(JOIN (R food.culinary_tool.used_in_recipes) Ladle)",
            "SExpr": "(JOIN (R food.culinary_tool.used_in_recipes) m.027rl48)"
        }
    },
    "542": {
        "generations": "What diseases are included in neuromuscular disease?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c818v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c818v ns:medicine.disease.includes_diseases ?x .\n}\n",
            "TopicEntityMid": "m.0c818v",
            "mid2name": {
                "ns:m.0c818v": "Neuromuscular disease"
            },
            "SExpr_w_name": "(JOIN (R medicine.disease.includes_diseases) Neuromuscular disease)",
            "SExpr": "(JOIN (R medicine.disease.includes_diseases) m.0c818v)"
        }
    },
    "543": {
        "generations": "What gene is found in the Pseudomonas aeruginosa PAO1 genome?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kdy0r9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kdy0r9 ns:biology.genome.gene ?x .\n}\n",
            "TopicEntityMid": "m.0kdy0r9",
            "mid2name": {
                "ns:m.0kdy0r9": "Pseudomonas aeruginosa PAO1 genome"
            },
            "SExpr_w_name": "(JOIN (R biology.genome.gene) Pseudomonas aeruginosa PAO1 genome)",
            "SExpr": "(JOIN (R biology.genome.gene) m.0kdy0r9)"
        }
    },
    "544": {
        "generations": "who coaches the iowa hawkeyes football team?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ttn0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ttn0 ns:sports.sports_team.coaches ?x .\n}\n",
            "TopicEntityMid": "m.03ttn0",
            "mid2name": {
                "ns:m.03ttn0": "Iowa Hawkeyes football"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team.coaches) Iowa Hawkeyes football)",
            "SExpr": "(JOIN (R sports.sports_team.coaches) m.03ttn0)"
        }
    },
    "545": {
        "generations": "What is the active ingredient in Magnesium trisilicate anhydrous?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jxnmyh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jxnmyh ns:medicine.drug_ingredient.active_moiety_of_drug ?x .\n}\n",
            "TopicEntityMid": "m.0jxnmyh",
            "mid2name": {
                "ns:m.0jxnmyh": "Magnesium trisilicate anhydrous"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_ingredient.active_moiety_of_drug) Magnesium trisilicate anhydrous)",
            "SExpr": "(JOIN (R medicine.drug_ingredient.active_moiety_of_drug) m.0jxnmyh)"
        }
    },
    "546": {
        "generations": "What is the morally disputed activity in the statement \"They started bringing our babies out in those sheets and they laid them by my feet. They started making a line of them\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.066bwl8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.066bwl8 ns:base.argumentmaps.moral_defence.morally_disputed_activity ?x .\n}\n",
            "TopicEntityMid": "m.066bwl8",
            "mid2name": {
                "ns:m.066bwl8": "'They started bringing our babies out in those sheets and they laid them by my feet. They started making a line of them."
            },
            "SExpr_w_name": "(JOIN (R base.argumentmaps.moral_defence.morally_disputed_activity) 'They started bringing our babies out in those sheets and they laid them by my feet. They started making a line of them.)",
            "SExpr": "(JOIN (R base.argumentmaps.moral_defence.morally_disputed_activity) m.066bwl8)"
        }
    },
    "547": {
        "generations": "Which institution issued technical reports for the North American Banding Council?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052w1h_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052w1h_ ns:book.report_issuing_institution.technical_reports_issued ?x .\n}\n",
            "TopicEntityMid": "m.052w1h_",
            "mid2name": {
                "ns:m.052w1h_": "The North American Banding Council"
            },
            "SExpr_w_name": "(JOIN (R book.report_issuing_institution.technical_reports_issued) The North American Banding Council)",
            "SExpr": "(JOIN (R book.report_issuing_institution.technical_reports_issued) m.052w1h_)"
        }
    },
    "548": {
        "generations": "Who composed the music for Fancy Nancy the Musical?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0r4zjqm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0r4zjqm ns:theater.play.composer ?x .\n}\n",
            "TopicEntityMid": "m.0r4zjqm",
            "mid2name": {
                "ns:m.0r4zjqm": "Fancy Nancy the Musical"
            },
            "SExpr_w_name": "(JOIN (R theater.play.composer) Fancy Nancy the Musical)",
            "SExpr": "(JOIN (R theater.play.composer) m.0r4zjqm)"
        }
    },
    "549": {
        "generations": "What is the circulation area of the Whidbey Crosswind newspaper?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hypzm_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hypzm_ ns:book.newspaper.circulation_areas ?x .\n}\n",
            "TopicEntityMid": "m.0hypzm_",
            "mid2name": {
                "ns:m.0hypzm_": "Whidbey Crosswind"
            },
            "SExpr_w_name": "(JOIN (R book.newspaper.circulation_areas) Whidbey Crosswind)",
            "SExpr": "(JOIN (R book.newspaper.circulation_areas) m.0hypzm_)"
        }
    },
    "550": {
        "generations": "What programming languages use component-oriented programming?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kdv_b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kdv_b ns:computer.programming_language_paradigm.languages ?x .\n}\n",
            "TopicEntityMid": "m.02kdv_b",
            "mid2name": {
                "ns:m.02kdv_b": "Component-oriented programming"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language_paradigm.languages) Component-oriented programming)",
            "SExpr": "(JOIN (R computer.programming_language_paradigm.languages) m.02kdv_b)"
        }
    },
    "551": {
        "generations": "How many chess games has Garry Kasparov played?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03c5y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03c5y ns:chess.chess_player.games_played ?x .\n}\n",
            "TopicEntityMid": "m.03c5y",
            "mid2name": {
                "ns:m.03c5y": "Garry Kasparov"
            },
            "SExpr_w_name": "(JOIN (R chess.chess_player.games_played) Garry Kasparov)",
            "SExpr": "(JOIN (R chess.chess_player.games_played) m.03c5y)"
        }
    },
    "552": {
        "generations": "What periodicals does Investor's Business Daily publish?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0100td04)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0100td04 ns:book.periodical_publisher.periodicals_published ?x .\n}\n",
            "TopicEntityMid": "m.0100td04",
            "mid2name": {
                "ns:m.0100td04": "Investor's Business Daily"
            },
            "SExpr_w_name": "(JOIN (R book.periodical_publisher.periodicals_published) Investor's Business Daily)",
            "SExpr": "(JOIN (R book.periodical_publisher.periodicals_published) m.0100td04)"
        }
    },
    "553": {
        "generations": "What tropical cyclones occurred during the 1982 Pacific hurricane season?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06thwp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06thwp ns:meteorology.tropical_cyclone_season.tropical_cyclones ?x .\n}\n",
            "TopicEntityMid": "m.06thwp",
            "mid2name": {
                "ns:m.06thwp": "1982 Pacific hurricane season"
            },
            "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone_season.tropical_cyclones) 1982 Pacific hurricane season)",
            "SExpr": "(JOIN (R meteorology.tropical_cyclone_season.tropical_cyclones) m.06thwp)"
        }
    },
    "554": {
        "generations": "What is the scuba diving ecoregion that contains Cape Verde?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nqj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nqj ns:base.scubadiving.ecoregion.contained_by ?x .\n}\n",
            "TopicEntityMid": "m.01nqj",
            "mid2name": {
                "ns:m.01nqj": "Cape Verde"
            },
            "SExpr_w_name": "(JOIN (R base.scubadiving.ecoregion.contained_by) Cape Verde)",
            "SExpr": "(JOIN (R base.scubadiving.ecoregion.contained_by) m.01nqj)"
        }
    },
    "555": {
        "generations": "who published the book series Buffy the Vampire Slayer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02sjvkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02sjvkh ns:book.periodical.publisher ?x .\n}\n",
            "TopicEntityMid": "m.02sjvkh",
            "mid2name": {
                "ns:m.02sjvkh": "Buffy the Vampire Slayer"
            },
            "SExpr_w_name": "(JOIN (R book.periodical.publisher) Buffy the Vampire Slayer)",
            "SExpr": "(JOIN (R book.periodical.publisher) m.02sjvkh)"
        }
    },
    "556": {
        "generations": "How many vice presidential delegate votes did Jimmy Carter receive in the primary election?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042kg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042kg ns:base.politicalconventions.primary_candidate.vp_delegate_vote_tally ?x .\n}\n",
            "TopicEntityMid": "m.042kg",
            "mid2name": {
                "ns:m.042kg": "Jimmy Carter"
            },
            "SExpr_w_name": "(JOIN (R base.politicalconventions.primary_candidate.vp_delegate_vote_tally) Jimmy Carter)",
            "SExpr": "(JOIN (R base.politicalconventions.primary_candidate.vp_delegate_vote_tally) m.042kg)"
        }
    },
    "557": {
        "generations": "What genre is the movie Family Values Tour '98?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crv6yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crv6yy ns:film.film.genre ?x .\n}\n",
            "TopicEntityMid": "m.0crv6yy",
            "mid2name": {
                "ns:m.0crv6yy": "Family Values Tour '98"
            },
            "SExpr_w_name": "(JOIN (R film.film.genre) Family Values Tour '98)",
            "SExpr": "(JOIN (R film.film.genre) m.0crv6yy)"
        }
    },
    "558": {
        "generations": "what websites does matias basilico own?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02t4ykq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02t4ykq ns:internet.website_owner.websites_owned ?x .\n}\n",
            "TopicEntityMid": "m.02t4ykq",
            "mid2name": {
                "ns:m.02t4ykq": "Matias Basilico"
            },
            "SExpr_w_name": "(JOIN (R internet.website_owner.websites_owned) Matias Basilico)",
            "SExpr": "(JOIN (R internet.website_owner.websites_owned) m.02t4ykq)"
        }
    },
    "559": {
        "generations": "What is included in The Early Years music release?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vmwwsm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vmwwsm ns:music.multipart_release.components ?x .\n}\n",
            "TopicEntityMid": "m.0vmwwsm",
            "mid2name": {
                "ns:m.0vmwwsm": "The Early Years"
            },
            "SExpr_w_name": "(JOIN (R music.multipart_release.components) The Early Years)",
            "SExpr": "(JOIN (R music.multipart_release.components) m.0vmwwsm)"
        }
    },
    "560": {
        "generations": "What type of martial arts does Chang Moo Kwan specialize in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2ky1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2ky1 ns:martial_arts.martial_arts_organization.martial_arts ?x .\n}\n",
            "TopicEntityMid": "m.0f2ky1",
            "mid2name": {
                "ns:m.0f2ky1": "Chang Moo Kwan"
            },
            "SExpr_w_name": "(JOIN (R martial_arts.martial_arts_organization.martial_arts) Chang Moo Kwan)",
            "SExpr": "(JOIN (R martial_arts.martial_arts_organization.martial_arts) m.0f2ky1)"
        }
    },
    "561": {
        "generations": "What writing system is used for Arcaicam Esperantom?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0693t2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0693t2 ns:language.human_language.writing_system ?x .\n}\n",
            "TopicEntityMid": "m.0693t2",
            "mid2name": {
                "ns:m.0693t2": "Arcaicam Esperantom"
            },
            "SExpr_w_name": "(JOIN (R language.human_language.writing_system) Arcaicam Esperantom)",
            "SExpr": "(JOIN (R language.human_language.writing_system) m.0693t2)"
        }
    },
    "562": {
        "generations": "what books are in the Hachidaish\u016b literary series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gxb2wz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gxb2wz ns:book.literary_series.works_in_this_series ?x .\n}\n",
            "TopicEntityMid": "m.0gxb2wz",
            "mid2name": {
                "ns:m.0gxb2wz": "Hachidaish\u016b"
            },
            "SExpr_w_name": "(JOIN (R book.literary_series.works_in_this_series) Hachidaish\u016b)",
            "SExpr": "(JOIN (R book.literary_series.works_in_this_series) m.0gxb2wz)"
        }
    },
    "563": {
        "generations": "What movies feature the character Catbus?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c9xy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c9xy ns:film.film_character.portrayed_in_films ?x .\n}\n",
            "TopicEntityMid": "m.05c9xy",
            "mid2name": {
                "ns:m.05c9xy": "Catbus"
            },
            "SExpr_w_name": "(JOIN (R film.film_character.portrayed_in_films) Catbus)",
            "SExpr": "(JOIN (R film.film_character.portrayed_in_films) m.05c9xy)"
        }
    },
    "564": {
        "generations": "What TV series is Formidable Opponent a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_g7klh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_g7klh ns:tv.sequence_of_tv_episode_segments.tv_series ?x .\n}\n",
            "TopicEntityMid": "m.0_g7klh",
            "mid2name": {
                "ns:m.0_g7klh": "Formidable Opponent"
            },
            "SExpr_w_name": "(JOIN (R tv.sequence_of_tv_episode_segments.tv_series) Formidable Opponent)",
            "SExpr": "(JOIN (R tv.sequence_of_tv_episode_segments.tv_series) m.0_g7klh)"
        }
    },
    "565": {
        "generations": "what category does transformers belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03dhbp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03dhbp ns:interests.collection_category.parent_category ?x .\n}\n",
            "TopicEntityMid": "m.03dhbp",
            "mid2name": {
                "ns:m.03dhbp": "Transformers"
            },
            "SExpr_w_name": "(JOIN (R interests.collection_category.parent_category) Transformers)",
            "SExpr": "(JOIN (R interests.collection_category.parent_category) m.03dhbp)"
        }
    },
    "566": {
        "generations": "What government service does the Antioch Police Department operate?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gvrf5p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gvrf5p ns:organization.organization.operates_government_service ?x .\n}\n",
            "TopicEntityMid": "m.0gvrf5p",
            "mid2name": {
                "ns:m.0gvrf5p": "Antioch Police Department"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.operates_government_service) Antioch Police Department)",
            "SExpr": "(JOIN (R organization.organization.operates_government_service) m.0gvrf5p)"
        }
    },
    "567": {
        "generations": "who was the editor of Madman Atomic Comics issue #13?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gktmc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gktmc ns:comic_books.comic_book_issue.editor ?x .\n}\n",
            "TopicEntityMid": "m.05gktmc",
            "mid2name": {
                "ns:m.05gktmc": "Madman Atomic Comics #13"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.editor) Madman Atomic Comics #13)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.editor) m.05gktmc)"
        }
    },
    "568": {
        "generations": "What is the maximum speed in kilometers per hour for a slow cricket bowling pace?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k87pp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k87pp ns:cricket.cricket_bowling_pace.max_speed_kmph ?x .\n}\n",
            "TopicEntityMid": "m.02k87pp",
            "mid2name": {
                "ns:m.02k87pp": "Slow"
            },
            "SExpr_w_name": "(JOIN (R cricket.cricket_bowling_pace.max_speed_kmph) Slow)",
            "SExpr": "(JOIN (R cricket.cricket_bowling_pace.max_speed_kmph) m.02k87pp)"
        }
    },
    "569": {
        "generations": "What is the parent test of the continuous performance task in medicine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gsxnx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gsxnx ns:medicine.diagnostic_test.parent_test ?x .\n}\n",
            "TopicEntityMid": "m.0gsxnx",
            "mid2name": {
                "ns:m.0gsxnx": "Continuous performance task"
            },
            "SExpr_w_name": "(JOIN (R medicine.diagnostic_test.parent_test) Continuous performance task)",
            "SExpr": "(JOIN (R medicine.diagnostic_test.parent_test) m.0gsxnx)"
        }
    },
    "570": {
        "generations": "What are the different generations of the Audi A6 model?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02n2b3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02n2b3 ns:base.cars_refactor.model.generations ?x .\n}\n",
            "TopicEntityMid": "m.02n2b3",
            "mid2name": {
                "ns:m.02n2b3": "Audi A6"
            },
            "SExpr_w_name": "(JOIN (R base.cars_refactor.model.generations) Audi A6)",
            "SExpr": "(JOIN (R base.cars_refactor.model.generations) m.02n2b3)"
        }
    },
    "571": {
        "generations": "What was the league for the 2009-10 Bundesliga season?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05t0zjg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05t0zjg ns:soccer.football_league_season.league ?x .\n}\n",
            "TopicEntityMid": "m.05t0zjg",
            "mid2name": {
                "ns:m.05t0zjg": "2009\u201310 Bundesliga"
            },
            "SExpr_w_name": "(JOIN (R soccer.football_league_season.league) 2009\u201310 Bundesliga)",
            "SExpr": "(JOIN (R soccer.football_league_season.league) m.05t0zjg)"
        }
    },
    "572": {
        "generations": "What products belong to the computer peripheral class Speech Synthesizer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07f70lq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07f70lq ns:computer.computer_peripheral_class.products ?x .\n}\n",
            "TopicEntityMid": "m.07f70lq",
            "mid2name": {
                "ns:m.07f70lq": "Speech Synthesizer"
            },
            "SExpr_w_name": "(JOIN (R computer.computer_peripheral_class.products) Speech Synthesizer)",
            "SExpr": "(JOIN (R computer.computer_peripheral_class.products) m.07f70lq)"
        }
    },
    "573": {
        "generations": "Who is a supplier for Raumgleiter in the business industry?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011f6zvv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011f6zvv ns:business.customer.supplier ?x .\n}\n",
            "TopicEntityMid": "m.011f6zvv",
            "mid2name": {
                "ns:m.011f6zvv": "Raumgleiter"
            },
            "SExpr_w_name": "(JOIN (R business.customer.supplier) Raumgleiter)",
            "SExpr": "(JOIN (R business.customer.supplier) m.011f6zvv)"
        }
    },
    "574": {
        "generations": "who curated the human genome build 36.2?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kwgby)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kwgby ns:biology.genome_build.curator ?x .\n}\n",
            "TopicEntityMid": "m.02kwgby",
            "mid2name": {
                "ns:m.02kwgby": "Human Genome Build 36.2"
            },
            "SExpr_w_name": "(JOIN (R biology.genome_build.curator) Human Genome Build 36.2)",
            "SExpr": "(JOIN (R biology.genome_build.curator) m.02kwgby)"
        }
    },
    "575": {
        "generations": "who won medals in tennis at the olympic event?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07bs0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07bs0 ns:user.jg.default_domain.olympic_event.medal_winners ?x .\n}\n",
            "TopicEntityMid": "m.07bs0",
            "mid2name": {
                "ns:m.07bs0": "Tennis"
            },
            "SExpr_w_name": "(JOIN (R user.jg.default_domain.olympic_event.medal_winners) Tennis)",
            "SExpr": "(JOIN (R user.jg.default_domain.olympic_event.medal_winners) m.07bs0)"
        }
    },
    "576": {
        "generations": "What is the name of the segment in the TV show that features Obama's anger translator?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010787x0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010787x0 ns:tv.sequence_of_tv_episode_segments.segments ?x .\n}\n",
            "TopicEntityMid": "m.010787x0",
            "mid2name": {
                "ns:m.010787x0": "Obama's Anger Translator"
            },
            "SExpr_w_name": "(JOIN (R tv.sequence_of_tv_episode_segments.segments) Obama's Anger Translator)",
            "SExpr": "(JOIN (R tv.sequence_of_tv_episode_segments.segments) m.010787x0)"
        }
    },
    "577": {
        "generations": "What are the beginner ski runs rated as?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04knmgf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04knmgf ns:skiing.run_rating.ski_runs ?x .\n}\n",
            "TopicEntityMid": "m.04knmgf",
            "mid2name": {
                "ns:m.04knmgf": "Beginner"
            },
            "SExpr_w_name": "(JOIN (R skiing.run_rating.ski_runs) Beginner)",
            "SExpr": "(JOIN (R skiing.run_rating.ski_runs) m.04knmgf)"
        }
    },
    "578": {
        "generations": "What are the features of the Hilton Waterfront Beach Resort?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06zkvxz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06zkvxz ns:travel.accommodation.features ?x .\n}\n",
            "TopicEntityMid": "m.06zkvxz",
            "mid2name": {
                "ns:m.06zkvxz": "Hilton Waterfront Beach Resort"
            },
            "SExpr_w_name": "(JOIN (R travel.accommodation.features) Hilton Waterfront Beach Resort)",
            "SExpr": "(JOIN (R travel.accommodation.features) m.06zkvxz)"
        }
    },
    "579": {
        "generations": "What book was edited by the Pragmatic Programmers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kznwv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kznwv ns:book.author.works_edited ?x .\n}\n",
            "TopicEntityMid": "m.02kznwv",
            "mid2name": {
                "ns:m.02kznwv": "Pragmatic Programmers"
            },
            "SExpr_w_name": "(JOIN (R book.author.works_edited) Pragmatic Programmers)",
            "SExpr": "(JOIN (R book.author.works_edited) m.02kznwv)"
        }
    },
    "580": {
        "generations": "What is included in the package for disc 1 of Jazz im G\u00e4rtnerplatz 2001?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03j66w1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03j66w1 ns:music.release_component.package ?x .\n}\n",
            "TopicEntityMid": "m.03j66w1",
            "mid2name": {
                "ns:m.03j66w1": "Jazz im G\u00e4rtnerplatz 2001 (disc 1)"
            },
            "SExpr_w_name": "(JOIN (R music.release_component.package) Jazz im G\u00e4rtnerplatz 2001 (disc 1))",
            "SExpr": "(JOIN (R music.release_component.package) m.03j66w1)"
        }
    },
    "581": {
        "generations": "What drugs have the mechanism of action of a neurokinin 1 antagonist?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqxs_b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqxs_b ns:medicine.drug_mechanism_of_action.drugs_with_this_mechanism_of_action ?x .\n}\n",
            "TopicEntityMid": "m.0hqxs_b",
            "mid2name": {
                "ns:m.0hqxs_b": "Neurokinin 1 Antagonist"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_mechanism_of_action.drugs_with_this_mechanism_of_action) Neurokinin 1 Antagonist)",
            "SExpr": "(JOIN (R medicine.drug_mechanism_of_action.drugs_with_this_mechanism_of_action) m.0hqxs_b)"
        }
    },
    "582": {
        "generations": "What gene is involved in the glycerophospholipid catabolic process?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l8d9w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l8d9w ns:biology.gene_group.gene ?x .\n}\n",
            "TopicEntityMid": "m.02l8d9w",
            "mid2name": {
                "ns:m.02l8d9w": "glycerophospholipid catabolic process"
            },
            "SExpr_w_name": "(JOIN (R biology.gene_group.gene) glycerophospholipid catabolic process)",
            "SExpr": "(JOIN (R biology.gene_group.gene) m.02l8d9w)"
        }
    },
    "583": {
        "generations": "who is the chairperson of the house committee on transportation and infrastructure?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03lpft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03lpft ns:user.robert.us_congress.house_committee.chairperson ?x .\n}\n",
            "TopicEntityMid": "m.03lpft",
            "mid2name": {
                "ns:m.03lpft": "House Committee on Transportation and Infrastructure"
            },
            "SExpr_w_name": "(JOIN (R user.robert.us_congress.house_committee.chairperson) House Committee on Transportation and Infrastructure)",
            "SExpr": "(JOIN (R user.robert.us_congress.house_committee.chairperson) m.03lpft)"
        }
    },
    "584": {
        "generations": "who wrote the episode \"Failing the Children: Deadly Mistakes\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05v31_0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05v31_0 ns:tv.tv_episode_segment.writer ?x .\n}\n",
            "TopicEntityMid": "m.05v31_0",
            "mid2name": {
                "ns:m.05v31_0": "Failing the Children: Deadly Mistakes"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_episode_segment.writer) Failing the Children: Deadly Mistakes)",
            "SExpr": "(JOIN (R tv.tv_episode_segment.writer) m.05v31_0)"
        }
    },
    "585": {
        "generations": "What is a miniature opera?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059l7hl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059l7hl ns:opera.opera_genre.operas_in_this_genre ?x .\n}\n",
            "TopicEntityMid": "m.059l7hl",
            "mid2name": {
                "ns:m.059l7hl": "Miniature opera"
            },
            "SExpr_w_name": "(JOIN (R opera.opera_genre.operas_in_this_genre) Miniature opera)",
            "SExpr": "(JOIN (R opera.opera_genre.operas_in_this_genre) m.059l7hl)"
        }
    },
    "586": {
        "generations": "who manages beit she'an national park?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.049ynzx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.049ynzx ns:protected_sites.protected_site.governing_body ?x .\n}\n",
            "TopicEntityMid": "m.049ynzx",
            "mid2name": {
                "ns:m.049ynzx": "Beit She'an National Park"
            },
            "SExpr_w_name": "(JOIN (R protected_sites.protected_site.governing_body) Beit She'an National Park)",
            "SExpr": "(JOIN (R protected_sites.protected_site.governing_body) m.049ynzx)"
        }
    },
    "587": {
        "generations": "What is the focus of the collective Rowing?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f41)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f41 ns:base.collectives.collective_focus.collectives ?x .\n}\n",
            "TopicEntityMid": "m.06f41",
            "mid2name": {
                "ns:m.06f41": "Rowing"
            },
            "SExpr_w_name": "(JOIN (R base.collectives.collective_focus.collectives) Rowing)",
            "SExpr": "(JOIN (R base.collectives.collective_focus.collectives) m.06f41)"
        }
    },
    "588": {
        "generations": "Which department governs the protected sites in Hawaii?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ptysx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ptysx ns:protected_sites.governing_body_of_protected_sites.protected_sites_governed ?x .\n}\n",
            "TopicEntityMid": "m.02ptysx",
            "mid2name": {
                "ns:m.02ptysx": "Hawai'i Department of Land and Natural Resources"
            },
            "SExpr_w_name": "(JOIN (R protected_sites.governing_body_of_protected_sites.protected_sites_governed) Hawai'i Department of Land and Natural Resources)",
            "SExpr": "(JOIN (R protected_sites.governing_body_of_protected_sites.protected_sites_governed) m.02ptysx)"
        }
    },
    "589": {
        "generations": "what is the legal status of triclocarban?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02x40yw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02x40yw ns:medicine.drug.legal_status ?x .\n}\n",
            "TopicEntityMid": "m.02x40yw",
            "mid2name": {
                "ns:m.02x40yw": "Triclocarban"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug.legal_status) Triclocarban)",
            "SExpr": "(JOIN (R medicine.drug.legal_status) m.02x40yw)"
        }
    },
    "590": {
        "generations": "What is the product line for the tactical approach to reducing equipment costs?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rp_q_0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rp_q_0 ns:business.product_theme.product_lines ?x .\n}\n",
            "TopicEntityMid": "m.0rp_q_0",
            "mid2name": {
                "ns:m.0rp_q_0": "Tactical approach to reducing equipment costs"
            },
            "SExpr_w_name": "(JOIN (R business.product_theme.product_lines) Tactical approach to reducing equipment costs)",
            "SExpr": "(JOIN (R business.product_theme.product_lines) m.0rp_q_0)"
        }
    },
    "591": {
        "generations": "what is the cover price of marvel spotlight #5?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0127m_6f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0127m_6f ns:comic_books.comic_book_issue.cover_price ?x .\n}\n",
            "TopicEntityMid": "m.0127m_6f",
            "mid2name": {
                "ns:m.0127m_6f": "Marvel Spotlight #5"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.cover_price) Marvel Spotlight #5)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.cover_price) m.0127m_6f)"
        }
    },
    "592": {
        "generations": "What is the title of the medical trial that evaluated AZT in children with AIDS or ARC?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbx4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbx4 ns:medicine.medical_trial.references ?x .\n}\n",
            "TopicEntityMid": "m.03zbbx4",
            "mid2name": {
                "ns:m.03zbbx4": "A Phase I Evaluation of Azidothymidine (AZT) in Children with Acquired Immune Deficiency Syndrome (AIDS) or AIDS Related Complex (ARC)"
            },
            "SExpr_w_name": "(JOIN (R medicine.medical_trial.references) A Phase I Evaluation of Azidothymidine (AZT) in Children with Acquired Immune Deficiency Syndrome (AIDS) or AIDS Related Complex (ARC))",
            "SExpr": "(JOIN (R medicine.medical_trial.references) m.03zbbx4)"
        }
    },
    "593": {
        "generations": "What election district is associated with the Wilmot by-election in 1904?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b__st9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b__st9 ns:government.election.district ?x .\n}\n",
            "TopicEntityMid": "m.0b__st9",
            "mid2name": {
                "ns:m.0b__st9": "Wilmot by-election, 1904"
            },
            "SExpr_w_name": "(JOIN (R government.election.district) Wilmot by-election, 1904)",
            "SExpr": "(JOIN (R government.election.district) m.0b__st9)"
        }
    },
    "594": {
        "generations": "What is the recipe for beef bourguignon?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y_pt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y_pt ns:food.dish.recipes ?x .\n}\n",
            "TopicEntityMid": "m.06y_pt",
            "mid2name": {
                "ns:m.06y_pt": "Beef bourguignon"
            },
            "SExpr_w_name": "(JOIN (R food.dish.recipes) Beef bourguignon)",
            "SExpr": "(JOIN (R food.dish.recipes) m.06y_pt)"
        }
    },
    "595": {
        "generations": "What sports league was the 2012-13 Torneo Argentino B a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010mlzkv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010mlzkv ns:sports.sports_league_season.league ?x .\n}\n",
            "TopicEntityMid": "m.010mlzkv",
            "mid2name": {
                "ns:m.010mlzkv": "2012\u201313 Torneo Argentino B"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league_season.league) 2012\u201313 Torneo Argentino B)",
            "SExpr": "(JOIN (R sports.sports_league_season.league) m.010mlzkv)"
        }
    },
    "596": {
        "generations": "Who are the Rusyns of Romania included in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q2343)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q2343 ns:people.ethnicity.included_in_group ?x .\n}\n",
            "TopicEntityMid": "m.02q2343",
            "mid2name": {
                "ns:m.02q2343": "Rusyns of Romania"
            },
            "SExpr_w_name": "(JOIN (R people.ethnicity.included_in_group) Rusyns of Romania)",
            "SExpr": "(JOIN (R people.ethnicity.included_in_group) m.02q2343)"
        }
    },
    "597": {
        "generations": "Who manufactured the Stunt Fall ride?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.1239vcdj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.1239vcdj ns:amusement_parks.ride.manufacturer ?x .\n}\n",
            "TopicEntityMid": "g.1239vcdj",
            "mid2name": {
                "ns:g.1239vcdj": "Stunt Fall"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.ride.manufacturer) Stunt Fall)",
            "SExpr": "(JOIN (R amusement_parks.ride.manufacturer) g.1239vcdj)"
        }
    },
    "598": {
        "generations": "What is a common target of disparagement in arguments about disputed values?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bvp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bvp ns:base.argumentmaps.thing_of_disputed_value.disparagement ?x .\n}\n",
            "TopicEntityMid": "m.06bvp",
            "mid2name": {
                "ns:m.06bvp": "Religion"
            },
            "SExpr_w_name": "(JOIN (R base.argumentmaps.thing_of_disputed_value.disparagement) Religion)",
            "SExpr": "(JOIN (R base.argumentmaps.thing_of_disputed_value.disparagement) m.06bvp)"
        }
    },
    "599": {
        "generations": "what was the Guelph Maple Leafs later known as?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chk_s9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chk_s9 ns:sports.defunct_sports_team.later_known_as ?x .\n}\n",
            "TopicEntityMid": "m.0chk_s9",
            "mid2name": {
                "ns:m.0chk_s9": "Guelph Maple Leafs"
            },
            "SExpr_w_name": "(JOIN (R sports.defunct_sports_team.later_known_as) Guelph Maple Leafs)",
            "SExpr": "(JOIN (R sports.defunct_sports_team.later_known_as) m.0chk_s9)"
        }
    },
    "600": {
        "generations": "What rides are in Aribabiba amusement park?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nj672l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nj672l ns:amusement_parks.amusement_park_area.rides ?x .\n}\n",
            "TopicEntityMid": "m.0nj672l",
            "mid2name": {
                "ns:m.0nj672l": "Aribabiba"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.amusement_park_area.rides) Aribabiba)",
            "SExpr": "(JOIN (R amusement_parks.amusement_park_area.rides) m.0nj672l)"
        }
    },
    "601": {
        "generations": "What recordings has Evan Shinners been featured on?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0127psyf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0127psyf ns:music.featured_artist.recordings ?x .\n}\n",
            "TopicEntityMid": "m.0127psyf",
            "mid2name": {
                "ns:m.0127psyf": "Evan Shinners"
            },
            "SExpr_w_name": "(JOIN (R music.featured_artist.recordings) Evan Shinners)",
            "SExpr": "(JOIN (R music.featured_artist.recordings) m.0127psyf)"
        }
    },
    "602": {
        "generations": "Which institution is the UNC Charlotte Department of Electrical and Computer Engineering a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz78z3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz78z3 ns:education.department.institution ?x .\n}\n",
            "TopicEntityMid": "m.0hz78z3",
            "mid2name": {
                "ns:m.0hz78z3": "UNC Charlotte Department of Electrical and Computer Engineering"
            },
            "SExpr_w_name": "(JOIN (R education.department.institution) UNC Charlotte Department of Electrical and Computer Engineering)",
            "SExpr": "(JOIN (R education.department.institution) m.0hz78z3)"
        }
    },
    "603": {
        "generations": "What type of ships can a sailing frigate carry?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gjccb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gjccb ns:base.sails.sailboat.ships ?x .\n}\n",
            "TopicEntityMid": "m.05gjccb",
            "mid2name": {
                "ns:m.05gjccb": "Sailing Frigate"
            },
            "SExpr_w_name": "(JOIN (R base.sails.sailboat.ships) Sailing Frigate)",
            "SExpr": "(JOIN (R base.sails.sailboat.ships) m.05gjccb)"
        }
    },
    "604": {
        "generations": "What brand is included in J.K Farnell?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0120145d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0120145d ns:business.brand.includes_brands ?x .\n}\n",
            "TopicEntityMid": "m.0120145d",
            "mid2name": {
                "ns:m.0120145d": "J.K Farnell"
            },
            "SExpr_w_name": "(JOIN (R business.brand.includes_brands) J.K Farnell)",
            "SExpr": "(JOIN (R business.brand.includes_brands) m.0120145d)"
        }
    },
    "605": {
        "generations": "Who built the USS Wasp ship?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04cvc2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04cvc2l ns:boats.ship.ship_builder ?x .\n}\n",
            "TopicEntityMid": "m.04cvc2l",
            "mid2name": {
                "ns:m.04cvc2l": "USS Wasp"
            },
            "SExpr_w_name": "(JOIN (R boats.ship.ship_builder) USS Wasp)",
            "SExpr": "(JOIN (R boats.ship.ship_builder) m.04cvc2l)"
        }
    },
    "606": {
        "generations": "What is the jurisdiction of the Delaware Court of Chancery?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08hkp1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08hkp1 ns:government.governmental_body.jurisdiction ?x .\n}\n",
            "TopicEntityMid": "m.08hkp1",
            "mid2name": {
                "ns:m.08hkp1": "Delaware Court of Chancery"
            },
            "SExpr_w_name": "(JOIN (R government.governmental_body.jurisdiction) Delaware Court of Chancery)",
            "SExpr": "(JOIN (R government.governmental_body.jurisdiction) m.08hkp1)"
        }
    },
    "607": {
        "generations": "What is the parent method of Carrier sense multiple access with collision avoidance in engineering?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b5ty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b5ty ns:engineering.channel_access_method.parent_method ?x .\n}\n",
            "TopicEntityMid": "m.0b5ty",
            "mid2name": {
                "ns:m.0b5ty": "Carrier sense multiple access with collision avoidance"
            },
            "SExpr_w_name": "(JOIN (R engineering.channel_access_method.parent_method) Carrier sense multiple access with collision avoidance)",
            "SExpr": "(JOIN (R engineering.channel_access_method.parent_method) m.0b5ty)"
        }
    },
    "608": {
        "generations": "what tourist destination is near Arlington Gallery?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_jgbb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_jgbb ns:travel.tourist_attraction.near_travel_destination ?x .\n}\n",
            "TopicEntityMid": "m.04_jgbb",
            "mid2name": {
                "ns:m.04_jgbb": "Arlington Gallery"
            },
            "SExpr_w_name": "(JOIN (R travel.tourist_attraction.near_travel_destination) Arlington Gallery)",
            "SExpr": "(JOIN (R travel.tourist_attraction.near_travel_destination) m.04_jgbb)"
        }
    },
    "609": {
        "generations": "who has a master of science in engineering management degree?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cwn8l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cwn8l ns:education.educational_degree.people_with_this_degree ?x .\n}\n",
            "TopicEntityMid": "m.03cwn8l",
            "mid2name": {
                "ns:m.03cwn8l": "Master of Science in Engineering Management"
            },
            "SExpr_w_name": "(JOIN (R education.educational_degree.people_with_this_degree) Master of Science in Engineering Management)",
            "SExpr": "(JOIN (R education.educational_degree.people_with_this_degree) m.03cwn8l)"
        }
    },
    "610": {
        "generations": "what is the atomic mass of copper?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025rsfk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025rsfk ns:chemistry.chemical_element.atomic_mass ?x .\n}\n",
            "TopicEntityMid": "m.025rsfk",
            "mid2name": {
                "ns:m.025rsfk": "Copper"
            },
            "SExpr_w_name": "(JOIN (R chemistry.chemical_element.atomic_mass) Copper)",
            "SExpr": "(JOIN (R chemistry.chemical_element.atomic_mass) m.025rsfk)"
        }
    },
    "611": {
        "generations": "What cities are Maltese dogs popular in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cyl6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cyl6 ns:base.petbreeds.dog_breed.cities_where_this_dog_is_popular ?x .\n}\n",
            "TopicEntityMid": "m.02cyl6",
            "mid2name": {
                "ns:m.02cyl6": "Maltese"
            },
            "SExpr_w_name": "(JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) Maltese)",
            "SExpr": "(JOIN (R base.petbreeds.dog_breed.cities_where_this_dog_is_popular) m.02cyl6)"
        }
    },
    "612": {
        "generations": "What file format can be read by Meb?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l03km)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l03km ns:computer.file_format.read_by ?x .\n}\n",
            "TopicEntityMid": "m.02l03km",
            "mid2name": {
                "ns:m.02l03km": "Meb"
            },
            "SExpr_w_name": "(JOIN (R computer.file_format.read_by) Meb)",
            "SExpr": "(JOIN (R computer.file_format.read_by) m.02l03km)"
        }
    },
    "613": {
        "generations": "What charges are on the coat of arms of Zaanstad?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05d1hx8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05d1hx8 ns:symbols.coat_of_arms.charges ?x .\n}\n",
            "TopicEntityMid": "m.05d1hx8",
            "mid2name": {
                "ns:m.05d1hx8": "Coat of Arms of Zaanstad"
            },
            "SExpr_w_name": "(JOIN (R symbols.coat_of_arms.charges) Coat of Arms of Zaanstad)",
            "SExpr": "(JOIN (R symbols.coat_of_arms.charges) m.05d1hx8)"
        }
    },
    "614": {
        "generations": "What are some recipes that involve kneading?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08brwj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08brwj ns:food.culinary_technique.recipes ?x .\n}\n",
            "TopicEntityMid": "m.08brwj",
            "mid2name": {
                "ns:m.08brwj": "Kneading"
            },
            "SExpr_w_name": "(JOIN (R food.culinary_technique.recipes) Kneading)",
            "SExpr": "(JOIN (R food.culinary_technique.recipes) m.08brwj)"
        }
    },
    "615": {
        "generations": "what is the alcohol content range of american amber ale?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hv1sg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hv1sg ns:food.beer_style.alcohol_by_volume_range ?x .\n}\n",
            "TopicEntityMid": "m.02hv1sg",
            "mid2name": {
                "ns:m.02hv1sg": "American Amber Ale"
            },
            "SExpr_w_name": "(JOIN (R food.beer_style.alcohol_by_volume_range) American Amber Ale)",
            "SExpr": "(JOIN (R food.beer_style.alcohol_by_volume_range) m.02hv1sg)"
        }
    },
    "616": {
        "generations": "What is a subform of quartet in music composition?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b_stnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b_stnz ns:music.compositional_form.subforms ?x .\n}\n",
            "TopicEntityMid": "m.0b_stnz",
            "mid2name": {
                "ns:m.0b_stnz": "Quartet (composition)"
            },
            "SExpr_w_name": "(JOIN (R music.compositional_form.subforms) Quartet (composition))",
            "SExpr": "(JOIN (R music.compositional_form.subforms) m.0b_stnz)"
        }
    },
    "617": {
        "generations": "who was the landscape architect for Lemon Street?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0114tdk5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0114tdk5 ns:architecture.landscape_project.landscape_architect ?x .\n}\n",
            "TopicEntityMid": "m.0114tdk5",
            "mid2name": {
                "ns:m.0114tdk5": "Lemon Street"
            },
            "SExpr_w_name": "(JOIN (R architecture.landscape_project.landscape_architect) Lemon Street)",
            "SExpr": "(JOIN (R architecture.landscape_project.landscape_architect) m.0114tdk5)"
        }
    },
    "618": {
        "generations": "What is the age of Old Potrero Single Malt Hotaling's Whiskey?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052k5l9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052k5l9 ns:distilled_spirits.distilled_spirit.age ?x .\n}\n",
            "TopicEntityMid": "m.052k5l9",
            "mid2name": {
                "ns:m.052k5l9": "Old Potrero Single Malt Hotaling's Whiskey"
            },
            "SExpr_w_name": "(JOIN (R distilled_spirits.distilled_spirit.age) Old Potrero Single Malt Hotaling's Whiskey)",
            "SExpr": "(JOIN (R distilled_spirits.distilled_spirit.age) m.052k5l9)"
        }
    },
    "619": {
        "generations": "What governmental body is Marker of the Swans a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.075g98)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.075g98 ns:government.government_office_or_title.governmental_body_if_any ?x .\n}\n",
            "TopicEntityMid": "m.075g98",
            "mid2name": {
                "ns:m.075g98": "Marker of the Swans"
            },
            "SExpr_w_name": "(JOIN (R government.government_office_or_title.governmental_body_if_any) Marker of the Swans)",
            "SExpr": "(JOIN (R government.government_office_or_title.governmental_body_if_any) m.075g98)"
        }
    },
    "620": {
        "generations": "who owns Logan Hall?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0p6lgp4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0p6lgp4 ns:architecture.structure.owner ?x .\n}\n",
            "TopicEntityMid": "m.0p6lgp4",
            "mid2name": {
                "ns:m.0p6lgp4": "Logan Hall"
            },
            "SExpr_w_name": "(JOIN (R architecture.structure.owner) Logan Hall)",
            "SExpr": "(JOIN (R architecture.structure.owner) m.0p6lgp4)"
        }
    },
    "621": {
        "generations": "What is a referee technical decision in boxing?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ryly0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ryly0 ns:boxing.boxing_decision.matches_ended_with_this_decision ?x .\n}\n",
            "TopicEntityMid": "m.02ryly0",
            "mid2name": {
                "ns:m.02ryly0": "Referee technical decision"
            },
            "SExpr_w_name": "(JOIN (R boxing.boxing_decision.matches_ended_with_this_decision) Referee technical decision)",
            "SExpr": "(JOIN (R boxing.boxing_decision.matches_ended_with_this_decision) m.02ryly0)"
        }
    },
    "622": {
        "generations": "Did Cape Town bid on the Olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yj2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yj2 ns:olympics.olympic_bidding_city.olympics_bid_on ?x .\n}\n",
            "TopicEntityMid": "m.01yj2",
            "mid2name": {
                "ns:m.01yj2": "Cape Town"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_bidding_city.olympics_bid_on) Cape Town)",
            "SExpr": "(JOIN (R olympics.olympic_bidding_city.olympics_bid_on) m.01yj2)"
        }
    },
    "623": {
        "generations": "which rides can you go on with a disney A ticket?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04kwkjp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04kwkjp ns:amusement_parks.disney_ride_ticket.rides ?x .\n}\n",
            "TopicEntityMid": "m.04kwkjp",
            "mid2name": {
                "ns:m.04kwkjp": "A ticket"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.disney_ride_ticket.rides) A ticket)",
            "SExpr": "(JOIN (R amusement_parks.disney_ride_ticket.rides) m.04kwkjp)"
        }
    },
    "624": {
        "generations": "What is the highest grade taught in Houston schools?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.076q3_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.076q3_7 ns:education.school.highest_grade_taught ?x .\n}\n",
            "TopicEntityMid": "m.076q3_7",
            "mid2name": {
                "ns:m.076q3_7": "Houston"
            },
            "SExpr_w_name": "(JOIN (R education.school.highest_grade_taught) Houston)",
            "SExpr": "(JOIN (R education.school.highest_grade_taught) m.076q3_7)"
        }
    },
    "625": {
        "generations": "What make is the 2014 Ford Fiesta?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_v90dc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_v90dc ns:automotive.model_year.make ?x .\n}\n",
            "TopicEntityMid": "m.0_v90dc",
            "mid2name": {
                "ns:m.0_v90dc": "2014 Ford Fiesta"
            },
            "SExpr_w_name": "(JOIN (R automotive.model_year.make) 2014 Ford Fiesta)",
            "SExpr": "(JOIN (R automotive.model_year.make) m.0_v90dc)"
        }
    },
    "626": {
        "generations": "Who manufactured the Pegasus II rocket?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vpwz5q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vpwz5q ns:spaceflight.rocket.manufacturer ?x .\n}\n",
            "TopicEntityMid": "m.0vpwz5q",
            "mid2name": {
                "ns:m.0vpwz5q": "Pegasus II"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket.manufacturer) Pegasus II)",
            "SExpr": "(JOIN (R spaceflight.rocket.manufacturer) m.0vpwz5q)"
        }
    },
    "627": {
        "generations": "who was the cover artist for the august 1963 issue of the magazine of fantasy and science fiction?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hj0f4f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hj0f4f ns:book.magazine_issue.cover_artist ?x .\n}\n",
            "TopicEntityMid": "m.0hj0f4f",
            "mid2name": {
                "ns:m.0hj0f4f": "The Magazine of Fantasy and Science Fiction, August 1963"
            },
            "SExpr_w_name": "(JOIN (R book.magazine_issue.cover_artist) The Magazine of Fantasy and Science Fiction, August 1963)",
            "SExpr": "(JOIN (R book.magazine_issue.cover_artist) m.0hj0f4f)"
        }
    },
    "628": {
        "generations": "What subject area was the Nobel Prize awarded for RNA interference?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xnnb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xnnb ns:base.nobelprizes.nobel_subject_area.nobel_awards ?x .\n}\n",
            "TopicEntityMid": "m.0xnnb",
            "mid2name": {
                "ns:m.0xnnb": "RNA interference"
            },
            "SExpr_w_name": "(JOIN (R base.nobelprizes.nobel_subject_area.nobel_awards) RNA interference)",
            "SExpr": "(JOIN (R base.nobelprizes.nobel_subject_area.nobel_awards) m.0xnnb)"
        }
    },
    "629": {
        "generations": "What songs are on disc 6 of Absolute Hardcore 2000?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03b0vjf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03b0vjf ns:music.release.track_list ?x .\n}\n",
            "TopicEntityMid": "m.03b0vjf",
            "mid2name": {
                "ns:m.03b0vjf": "Absolute Hardcore 2000 (disc 6)"
            },
            "SExpr_w_name": "(JOIN (R music.release.track_list) Absolute Hardcore 2000 (disc 6))",
            "SExpr": "(JOIN (R music.release.track_list) m.03b0vjf)"
        }
    },
    "630": {
        "generations": "What mountain range is Paso el Condor in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hxt8cl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hxt8cl ns:geography.mountain_pass.range ?x .\n}\n",
            "TopicEntityMid": "m.0hxt8cl",
            "mid2name": {
                "ns:m.0hxt8cl": "Paso el Condor"
            },
            "SExpr_w_name": "(JOIN (R geography.mountain_pass.range) Paso el Condor)",
            "SExpr": "(JOIN (R geography.mountain_pass.range) m.0hxt8cl)"
        }
    },
    "631": {
        "generations": "Which museum is Nashid Madyun the director of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h4_r7x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h4_r7x ns:architecture.museum_director.museum ?x .\n}\n",
            "TopicEntityMid": "m.0h4_r7x",
            "mid2name": {
                "ns:m.0h4_r7x": "Nashid Madyun"
            },
            "SExpr_w_name": "(JOIN (R architecture.museum_director.museum) Nashid Madyun)",
            "SExpr": "(JOIN (R architecture.museum_director.museum) m.0h4_r7x)"
        }
    },
    "632": {
        "generations": "who designed the first generation mercury topaz?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02n9nv8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02n9nv8 ns:automotive.generation.designer ?x .\n}\n",
            "TopicEntityMid": "m.02n9nv8",
            "mid2name": {
                "ns:m.02n9nv8": "First Generation Mercury Topaz"
            },
            "SExpr_w_name": "(JOIN (R automotive.generation.designer) First Generation Mercury Topaz)",
            "SExpr": "(JOIN (R automotive.generation.designer) m.02n9nv8)"
        }
    },
    "633": {
        "generations": "What were the rounds in the 2010 FIFA World Cup?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016h2b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016h2b ns:base.tournaments.tournament.rounds ?x .\n}\n",
            "TopicEntityMid": "m.016h2b",
            "mid2name": {
                "ns:m.016h2b": "2010 FIFA World Cup"
            },
            "SExpr_w_name": "(JOIN (R base.tournaments.tournament.rounds) 2010 FIFA World Cup)",
            "SExpr": "(JOIN (R base.tournaments.tournament.rounds) m.016h2b)"
        }
    },
    "634": {
        "generations": "what plays has peter a. bobley produced in theater?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ly_p8r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ly_p8r ns:theater.theater_producer.plays_produced ?x .\n}\n",
            "TopicEntityMid": "m.0ly_p8r",
            "mid2name": {
                "ns:m.0ly_p8r": "Peter A. Bobley"
            },
            "SExpr_w_name": "(JOIN (R theater.theater_producer.plays_produced) Peter A. Bobley)",
            "SExpr": "(JOIN (R theater.theater_producer.plays_produced) m.0ly_p8r)"
        }
    },
    "635": {
        "generations": "What are some organizations associated with the religion of Baptism?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01cvx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01cvx ns:religion.religion.organizations ?x .\n}\n",
            "TopicEntityMid": "m.01cvx",
            "mid2name": {
                "ns:m.01cvx": "Baptism"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.organizations) Baptism)",
            "SExpr": "(JOIN (R religion.religion.organizations) m.01cvx)"
        }
    },
    "636": {
        "generations": "Who produced the album \"Make It Happen\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bfl988)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bfl988 ns:music.release.producers ?x .\n}\n",
            "TopicEntityMid": "m.0bfl988",
            "mid2name": {
                "ns:m.0bfl988": "Make It Happen"
            },
            "SExpr_w_name": "(JOIN (R music.release.producers) Make It Happen)",
            "SExpr": "(JOIN (R music.release.producers) m.0bfl988)"
        }
    },
    "637": {
        "generations": "What is a common method of destroying structures in architecture?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019726)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019726 ns:architecture.destruction_method.structures_destroyed ?x .\n}\n",
            "TopicEntityMid": "m.019726",
            "mid2name": {
                "ns:m.019726": "Arson"
            },
            "SExpr_w_name": "(JOIN (R architecture.destruction_method.structures_destroyed) Arson)",
            "SExpr": "(JOIN (R architecture.destruction_method.structures_destroyed) m.019726)"
        }
    },
    "638": {
        "generations": "Which programming languages were designed by Thomas Mertes?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11bc1f8dnd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11bc1f8dnd ns:computer.programming_language_designer.languages_designed ?x .\n}\n",
            "TopicEntityMid": "g.11bc1f8dnd",
            "mid2name": {
                "ns:g.11bc1f8dnd": "Thomas Mertes"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language_designer.languages_designed) Thomas Mertes)",
            "SExpr": "(JOIN (R computer.programming_language_designer.languages_designed) g.11bc1f8dnd)"
        }
    },
    "639": {
        "generations": "what comic book series does Avengers Forever #1 belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011v2vbt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011v2vbt ns:comic_books.comic_book_issue.part_of_series ?x .\n}\n",
            "TopicEntityMid": "m.011v2vbt",
            "mid2name": {
                "ns:m.011v2vbt": "Avengers Forever #1"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_issue.part_of_series) Avengers Forever #1)",
            "SExpr": "(JOIN (R comic_books.comic_book_issue.part_of_series) m.011v2vbt)"
        }
    },
    "640": {
        "generations": "What projects has Michael Hopkins Architects worked on?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05c93tt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05c93tt ns:architecture.architecture_firm.projects ?x .\n}\n",
            "TopicEntityMid": "m.05c93tt",
            "mid2name": {
                "ns:m.05c93tt": "Michael Hopkins Architects"
            },
            "SExpr_w_name": "(JOIN (R architecture.architecture_firm.projects) Michael Hopkins Architects)",
            "SExpr": "(JOIN (R architecture.architecture_firm.projects) m.05c93tt)"
        }
    },
    "641": {
        "generations": "What religious organization is associated with Farband?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q3t2q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q3t2q ns:religion.religious_organization.associated_with ?x .\n}\n",
            "TopicEntityMid": "m.02q3t2q",
            "mid2name": {
                "ns:m.02q3t2q": "Farband"
            },
            "SExpr_w_name": "(JOIN (R religion.religious_organization.associated_with) Farband)",
            "SExpr": "(JOIN (R religion.religious_organization.associated_with) m.02q3t2q)"
        }
    },
    "642": {
        "generations": "Where is the Intercultural Open University Foundation located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05f627m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05f627m ns:education.educational_institution.campuses ?x .\n}\n",
            "TopicEntityMid": "m.05f627m",
            "mid2name": {
                "ns:m.05f627m": "Intercultural Open University Foundation"
            },
            "SExpr_w_name": "(JOIN (R education.educational_institution.campuses) Intercultural Open University Foundation)",
            "SExpr": "(JOIN (R education.educational_institution.campuses) m.05f627m)"
        }
    },
    "643": {
        "generations": "What is the marketed formulation of hydrocortisone cypionate for oral use?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0z3xbjt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0z3xbjt ns:medicine.routed_drug.marketed_formulations ?x .\n}\n",
            "TopicEntityMid": "m.0z3xbjt",
            "mid2name": {
                "ns:m.0z3xbjt": "Hydrocortisone Cypionate Oral"
            },
            "SExpr_w_name": "(JOIN (R medicine.routed_drug.marketed_formulations) Hydrocortisone Cypionate Oral)",
            "SExpr": "(JOIN (R medicine.routed_drug.marketed_formulations) m.0z3xbjt)"
        }
    },
    "644": {
        "generations": "What is the design of the medical trial called \"The Effects of Illnesses on HIV Levels in the Body\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zbbxm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zbbxm ns:medicine.medical_trial.design ?x .\n}\n",
            "TopicEntityMid": "m.03zbbxm",
            "mid2name": {
                "ns:m.03zbbxm": "The Effects of Illnesses on HIV Levels in the Body"
            },
            "SExpr_w_name": "(JOIN (R medicine.medical_trial.design) The Effects of Illnesses on HIV Levels in the Body)",
            "SExpr": "(JOIN (R medicine.medical_trial.design) m.03zbbxm)"
        }
    },
    "645": {
        "generations": "What currency did Wallis and Futuna use in the past?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.082nw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.082nw ns:location.country.currency_formerly_used ?x .\n}\n",
            "TopicEntityMid": "m.082nw",
            "mid2name": {
                "ns:m.082nw": "Wallis and Futuna"
            },
            "SExpr_w_name": "(JOIN (R location.country.currency_formerly_used) Wallis and Futuna)",
            "SExpr": "(JOIN (R location.country.currency_formerly_used) m.082nw)"
        }
    },
    "646": {
        "generations": "What computers are compatible with the Playstation 4 Eye?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0w1vh8t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0w1vh8t ns:computer.computer_peripheral.compatible_computers ?x .\n}\n",
            "TopicEntityMid": "m.0w1vh8t",
            "mid2name": {
                "ns:m.0w1vh8t": "Playstation 4 Eye"
            },
            "SExpr_w_name": "(JOIN (R computer.computer_peripheral.compatible_computers) Playstation 4 Eye)",
            "SExpr": "(JOIN (R computer.computer_peripheral.compatible_computers) m.0w1vh8t)"
        }
    },
    "647": {
        "generations": "What foods are in season in Sydney?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y57 ns:base.localfood.food_producing_region.seasonal_availability ?x .\n}\n",
            "TopicEntityMid": "m.06y57",
            "mid2name": {
                "ns:m.06y57": "Sydney"
            },
            "SExpr_w_name": "(JOIN (R base.localfood.food_producing_region.seasonal_availability) Sydney)",
            "SExpr": "(JOIN (R base.localfood.food_producing_region.seasonal_availability) m.06y57)"
        }
    },
    "648": {
        "generations": "What is the IATA code for the airline JQ?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047kv5f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047kv5f ns:aviation.iata_airline_designator.airline ?x .\n}\n",
            "TopicEntityMid": "m.047kv5f",
            "mid2name": {
                "ns:m.047kv5f": "JQ"
            },
            "SExpr_w_name": "(JOIN (R aviation.iata_airline_designator.airline) JQ)",
            "SExpr": "(JOIN (R aviation.iata_airline_designator.airline) m.047kv5f)"
        }
    },
    "649": {
        "generations": "What is the color of Princess Coup, the thoroughbred racehorse?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n3hxt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n3hxt ns:base.thoroughbredracing.thoroughbred_racehorse.color ?x .\n}\n",
            "TopicEntityMid": "m.04n3hxt",
            "mid2name": {
                "ns:m.04n3hxt": "Princess Coup"
            },
            "SExpr_w_name": "(JOIN (R base.thoroughbredracing.thoroughbred_racehorse.color) Princess Coup)",
            "SExpr": "(JOIN (R base.thoroughbredracing.thoroughbred_racehorse.color) m.04n3hxt)"
        }
    },
    "650": {
        "generations": "How many visitors does the Art Gallery of New South Wales have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06kgj1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06kgj1 ns:architecture.museum.visitors ?x .\n}\n",
            "TopicEntityMid": "m.06kgj1",
            "mid2name": {
                "ns:m.06kgj1": "Art Gallery of New South Wales"
            },
            "SExpr_w_name": "(JOIN (R architecture.museum.visitors) Art Gallery of New South Wales)",
            "SExpr": "(JOIN (R architecture.museum.visitors) m.06kgj1)"
        }
    },
    "651": {
        "generations": "What is located within the World Trade Center?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083_h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083_h ns:location.location.contains ?x .\n}\n",
            "TopicEntityMid": "m.083_h",
            "mid2name": {
                "ns:m.083_h": "World Trade Center"
            },
            "SExpr_w_name": "(JOIN (R location.location.contains) World Trade Center)",
            "SExpr": "(JOIN (R location.location.contains) m.083_h)"
        }
    },
    "652": {
        "generations": "What did Walt Disney Imagineering invent?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gvyp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gvyp ns:law.inventor.inventions ?x .\n}\n",
            "TopicEntityMid": "m.04gvyp",
            "mid2name": {
                "ns:m.04gvyp": "Walt Disney Imagineering"
            },
            "SExpr_w_name": "(JOIN (R law.inventor.inventions) Walt Disney Imagineering)",
            "SExpr": "(JOIN (R law.inventor.inventions) m.04gvyp)"
        }
    },
    "653": {
        "generations": "What is the name of the season in HockeyAllsvenskan league?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cmbm0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cmbm0 ns:sports.sports_league.seasons ?x .\n}\n",
            "TopicEntityMid": "m.0cmbm0",
            "mid2name": {
                "ns:m.0cmbm0": "HockeyAllsvenskan"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league.seasons) HockeyAllsvenskan)",
            "SExpr": "(JOIN (R sports.sports_league.seasons) m.0cmbm0)"
        }
    },
    "654": {
        "generations": "What is Candidiasis of other specified sites classified as in the ICD-9-CM?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vt895)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vt895 ns:medicine.icd_9_cm_classification.includes_classifications ?x .\n}\n",
            "TopicEntityMid": "m.07vt895",
            "mid2name": {
                "ns:m.07vt895": "Candidiasis of other specified sites"
            },
            "SExpr_w_name": "(JOIN (R medicine.icd_9_cm_classification.includes_classifications) Candidiasis of other specified sites)",
            "SExpr": "(JOIN (R medicine.icd_9_cm_classification.includes_classifications) m.07vt895)"
        }
    },
    "655": {
        "generations": "What type of glass is typically used for a Bumbo cocktail?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05ljkk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05ljkk ns:base.cocktails.cocktail.standard_drinkware ?x .\n}\n",
            "TopicEntityMid": "m.05ljkk",
            "mid2name": {
                "ns:m.05ljkk": "Bumbo"
            },
            "SExpr_w_name": "(JOIN (R base.cocktails.cocktail.standard_drinkware) Bumbo)",
            "SExpr": "(JOIN (R base.cocktails.cocktail.standard_drinkware) m.05ljkk)"
        }
    },
    "656": {
        "generations": "How was the Doomsday Machine destroyed in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.075ywk2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.075ywk2 ns:fictional_universe.fictional_object.destruction_method ?x .\n}\n",
            "TopicEntityMid": "m.075ywk2",
            "mid2name": {
                "ns:m.075ywk2": "Doomsday Machine"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.destruction_method) Doomsday Machine)",
            "SExpr": "(JOIN (R fictional_universe.fictional_object.destruction_method) m.075ywk2)"
        }
    },
    "657": {
        "generations": "What are some examples of television comedies?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lvfq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lvfq ns:tv.tv_genre.programs ?x .\n}\n",
            "TopicEntityMid": "m.02lvfq",
            "mid2name": {
                "ns:m.02lvfq": "Television comedy"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_genre.programs) Television comedy)",
            "SExpr": "(JOIN (R tv.tv_genre.programs) m.02lvfq)"
        }
    },
    "658": {
        "generations": "What is Bandaran iron alloy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddt8qk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddt8qk ns:fictional_universe.fictional_substance.fictional_object ?x .\n}\n",
            "TopicEntityMid": "m.0ddt8qk",
            "mid2name": {
                "ns:m.0ddt8qk": "Bandaran iron alloy"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_substance.fictional_object) Bandaran iron alloy)",
            "SExpr": "(JOIN (R fictional_universe.fictional_substance.fictional_object) m.0ddt8qk)"
        }
    },
    "659": {
        "generations": "What equipment is needed for Mom's Gingerbread Re-invented recipe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gwry98)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gwry98 ns:food.recipe.equipment ?x .\n}\n",
            "TopicEntityMid": "m.0gwry98",
            "mid2name": {
                "ns:m.0gwry98": "Mom's Gingerbread Re-invented"
            },
            "SExpr_w_name": "(JOIN (R food.recipe.equipment) Mom's Gingerbread Re-invented)",
            "SExpr": "(JOIN (R food.recipe.equipment) m.0gwry98)"
        }
    },
    "660": {
        "generations": "What recurring event in fiction is featured in Wizard Wars?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0clv4sk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0clv4sk ns:base.militaryinfiction.recurring_event_in_fiction.instances ?x .\n}\n",
            "TopicEntityMid": "m.0clv4sk",
            "mid2name": {
                "ns:m.0clv4sk": "Wizard Wars"
            },
            "SExpr_w_name": "(JOIN (R base.militaryinfiction.recurring_event_in_fiction.instances) Wizard Wars)",
            "SExpr": "(JOIN (R base.militaryinfiction.recurring_event_in_fiction.instances) m.0clv4sk)"
        }
    },
    "661": {
        "generations": "What are the generations of the GM V platform?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bbd_q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bbd_q ns:automotive.platform.generations ?x .\n}\n",
            "TopicEntityMid": "m.0bbd_q",
            "mid2name": {
                "ns:m.0bbd_q": "GM V platform"
            },
            "SExpr_w_name": "(JOIN (R automotive.platform.generations) GM V platform)",
            "SExpr": "(JOIN (R automotive.platform.generations) m.0bbd_q)"
        }
    },
    "662": {
        "generations": "What is the aggregate group for R7 cell fate commitment in biology gene ontology?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l3ln1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l3ln1 ns:biology.gene_ontology_group.aggregate_group ?x .\n}\n",
            "TopicEntityMid": "m.02l3ln1",
            "mid2name": {
                "ns:m.02l3ln1": "R7 cell fate commitment"
            },
            "SExpr_w_name": "(JOIN (R biology.gene_ontology_group.aggregate_group) R7 cell fate commitment)",
            "SExpr": "(JOIN (R biology.gene_ontology_group.aggregate_group) m.02l3ln1)"
        }
    },
    "663": {
        "generations": "Who designed the Tinkertoy Tic-Tac-Toe Computer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0290ktf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0290ktf ns:computer.computer.key_designers ?x .\n}\n",
            "TopicEntityMid": "m.0290ktf",
            "mid2name": {
                "ns:m.0290ktf": "Tinkertoy Tic-Tac-Toe Computer"
            },
            "SExpr_w_name": "(JOIN (R computer.computer.key_designers) Tinkertoy Tic-Tac-Toe Computer)",
            "SExpr": "(JOIN (R computer.computer.key_designers) m.0290ktf)"
        }
    },
    "664": {
        "generations": "What is the parent product line of Lumix G Micro System?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h27vgh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h27vgh ns:business.product_line.parent_product_line ?x .\n}\n",
            "TopicEntityMid": "m.0h27vgh",
            "mid2name": {
                "ns:m.0h27vgh": "Lumix G Micro System"
            },
            "SExpr_w_name": "(JOIN (R business.product_line.parent_product_line) Lumix G Micro System)",
            "SExpr": "(JOIN (R business.product_line.parent_product_line) m.0h27vgh)"
        }
    },
    "665": {
        "generations": "who are the members of the Ponnambalam-Coomaraswamy family?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bmg3z_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bmg3z_ ns:people.family.members ?x .\n}\n",
            "TopicEntityMid": "m.0bmg3z_",
            "mid2name": {
                "ns:m.0bmg3z_": "Ponnambalam-Coomaraswamy family"
            },
            "SExpr_w_name": "(JOIN (R people.family.members) Ponnambalam-Coomaraswamy family)",
            "SExpr": "(JOIN (R people.family.members) m.0bmg3z_)"
        }
    },
    "666": {
        "generations": "when was the church of god (anderson, indiana) founded?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0217hr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0217hr ns:organization.organization.date_founded ?x .\n}\n",
            "TopicEntityMid": "m.0217hr",
            "mid2name": {
                "ns:m.0217hr": "Church of God (Anderson, Indiana)"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.date_founded) Church of God (Anderson, Indiana))",
            "SExpr": "(JOIN (R organization.organization.date_founded) m.0217hr)"
        }
    },
    "667": {
        "generations": "What brand of beer is Maeve's Crystal Wheat from Dublin Brewing?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dql88)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dql88 ns:food.beer.brewery_brand ?x .\n}\n",
            "TopicEntityMid": "m.04dql88",
            "mid2name": {
                "ns:m.04dql88": "Dublin Brewing Maeve's Crystal Wheat"
            },
            "SExpr_w_name": "(JOIN (R food.beer.brewery_brand) Dublin Brewing Maeve's Crystal Wheat)",
            "SExpr": "(JOIN (R food.beer.brewery_brand) m.04dql88)"
        }
    },
    "668": {
        "generations": "What school is associated with the Regina Cougars athletics brand?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050jmz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050jmz ns:education.athletics_brand.institution ?x .\n}\n",
            "TopicEntityMid": "m.050jmz",
            "mid2name": {
                "ns:m.050jmz": "Regina Cougars"
            },
            "SExpr_w_name": "(JOIN (R education.athletics_brand.institution) Regina Cougars)",
            "SExpr": "(JOIN (R education.athletics_brand.institution) m.050jmz)"
        }
    },
    "669": {
        "generations": "Which rockets have been launched from Baikonur Cosmodrome Site 200?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ljc0g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ljc0g ns:spaceflight.rocket_launch_site.rockets_launched_here ?x .\n}\n",
            "TopicEntityMid": "m.04ljc0g",
            "mid2name": {
                "ns:m.04ljc0g": "Baikonur Cosmodrome Site 200"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket_launch_site.rockets_launched_here) Baikonur Cosmodrome Site 200)",
            "SExpr": "(JOIN (R spaceflight.rocket_launch_site.rockets_launched_here) m.04ljc0g)"
        }
    },
    "670": {
        "generations": "What fictional language is found in the Riverspeak universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045mh_k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045mh_k ns:fictional_universe.fictional_language.found_in_fictional_universe ?x .\n}\n",
            "TopicEntityMid": "m.045mh_k",
            "mid2name": {
                "ns:m.045mh_k": "Riverspeak"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_language.found_in_fictional_universe) Riverspeak)",
            "SExpr": "(JOIN (R fictional_universe.fictional_language.found_in_fictional_universe) m.045mh_k)"
        }
    },
    "671": {
        "generations": "what is the climate like in hamburg?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hrz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hrz ns:travel.travel_destination.climate ?x .\n}\n",
            "TopicEntityMid": "m.03hrz",
            "mid2name": {
                "ns:m.03hrz": "Hamburg"
            },
            "SExpr_w_name": "(JOIN (R travel.travel_destination.climate) Hamburg)",
            "SExpr": "(JOIN (R travel.travel_destination.climate) m.03hrz)"
        }
    },
    "672": {
        "generations": "What is the legal structure of Vinagro organization?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g59ktd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g59ktd ns:organization.organization.legal_structure ?x .\n}\n",
            "TopicEntityMid": "m.0g59ktd",
            "mid2name": {
                "ns:m.0g59ktd": "Vinagro"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.legal_structure) Vinagro)",
            "SExpr": "(JOIN (R organization.organization.legal_structure) m.0g59ktd)"
        }
    },
    "673": {
        "generations": "What conference is the Northwest Division in for ice hockey?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c7bsr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c7bsr ns:ice_hockey.hockey_division.conference ?x .\n}\n",
            "TopicEntityMid": "m.0c7bsr",
            "mid2name": {
                "ns:m.0c7bsr": "Northwest Division"
            },
            "SExpr_w_name": "(JOIN (R ice_hockey.hockey_division.conference) Northwest Division)",
            "SExpr": "(JOIN (R ice_hockey.hockey_division.conference) m.0c7bsr)"
        }
    },
    "674": {
        "generations": "What animals are exhibited at the zoo for Tasmanian Devils?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j0z3z4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j0z3z4 ns:zoos.zoo_exhibit.species ?x .\n}\n",
            "TopicEntityMid": "m.0j0z3z4",
            "mid2name": {
                "ns:m.0j0z3z4": "Tasmanian Devils"
            },
            "SExpr_w_name": "(JOIN (R zoos.zoo_exhibit.species) Tasmanian Devils)",
            "SExpr": "(JOIN (R zoos.zoo_exhibit.species) m.0j0z3z4)"
        }
    },
    "675": {
        "generations": "What category does artificial hair integrations belong to in the business world?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07fnvh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07fnvh ns:business.product_category.product_lines ?x .\n}\n",
            "TopicEntityMid": "m.07fnvh",
            "mid2name": {
                "ns:m.07fnvh": "Artificial hair integrations"
            },
            "SExpr_w_name": "(JOIN (R business.product_category.product_lines) Artificial hair integrations)",
            "SExpr": "(JOIN (R business.product_category.product_lines) m.07fnvh)"
        }
    },
    "676": {
        "generations": "What was the subject of the Webster v. New Lenox School District legal case?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gxjcm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gxjcm ns:law.legal_case.subject ?x .\n}\n",
            "TopicEntityMid": "m.0gxjcm",
            "mid2name": {
                "ns:m.0gxjcm": "Webster v. New Lenox School District"
            },
            "SExpr_w_name": "(JOIN (R law.legal_case.subject) Webster v. New Lenox School District)",
            "SExpr": "(JOIN (R law.legal_case.subject) m.0gxjcm)"
        }
    },
    "677": {
        "generations": "what comic book series did susumu nemoto create?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.11b8cfdrgl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.11b8cfdrgl ns:comic_books.comic_book_creator.series_created ?x .\n}\n",
            "TopicEntityMid": "g.11b8cfdrgl",
            "mid2name": {
                "ns:g.11b8cfdrgl": "Susumu Nemoto"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_creator.series_created) Susumu Nemoto)",
            "SExpr": "(JOIN (R comic_books.comic_book_creator.series_created) g.11b8cfdrgl)"
        }
    },
    "678": {
        "generations": "What is the shape and format of an A23 battery?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r3tx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r3tx0 ns:engineering.battery_size.shape_format ?x .\n}\n",
            "TopicEntityMid": "m.02r3tx0",
            "mid2name": {
                "ns:m.02r3tx0": "A23 battery"
            },
            "SExpr_w_name": "(JOIN (R engineering.battery_size.shape_format) A23 battery)",
            "SExpr": "(JOIN (R engineering.battery_size.shape_format) m.02r3tx0)"
        }
    },
    "679": {
        "generations": "What calendar system uses Vikram Samvat as its months?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mhpd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mhpd ns:time.calendar.months ?x .\n}\n",
            "TopicEntityMid": "m.05mhpd",
            "mid2name": {
                "ns:m.05mhpd": "Vikram Samvat"
            },
            "SExpr_w_name": "(JOIN (R time.calendar.months) Vikram Samvat)",
            "SExpr": "(JOIN (R time.calendar.months) m.05mhpd)"
        }
    },
    "680": {
        "generations": "What is the Fuller joystick interface classified as in the computer peripheral class?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g4ncw5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g4ncw5 ns:computer.computer_peripheral_class.instance_of ?x .\n}\n",
            "TopicEntityMid": "m.0g4ncw5",
            "mid2name": {
                "ns:m.0g4ncw5": "Fuller joystick interface"
            },
            "SExpr_w_name": "(JOIN (R computer.computer_peripheral_class.instance_of) Fuller joystick interface)",
            "SExpr": "(JOIN (R computer.computer_peripheral_class.instance_of) m.0g4ncw5)"
        }
    },
    "681": {
        "generations": "what is junji koyanagi's profession?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lfqr7l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lfqr7l ns:people.person.profession ?x .\n}\n",
            "TopicEntityMid": "m.0lfqr7l",
            "mid2name": {
                "ns:m.0lfqr7l": "Junji Koyanagi"
            },
            "SExpr_w_name": "(JOIN (R people.person.profession) Junji Koyanagi)",
            "SExpr": "(JOIN (R people.person.profession) m.0lfqr7l)"
        }
    },
    "682": {
        "generations": "Where was the NG 6 fossil specimen found?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fgh3y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fgh3y ns:biology.fossil_specimen.found_at_site ?x .\n}\n",
            "TopicEntityMid": "m.0fgh3y",
            "mid2name": {
                "ns:m.0fgh3y": "NG 6"
            },
            "SExpr_w_name": "(JOIN (R biology.fossil_specimen.found_at_site) NG 6)",
            "SExpr": "(JOIN (R biology.fossil_specimen.found_at_site) m.0fgh3y)"
        }
    },
    "683": {
        "generations": "Who founded the Juno clump asteroid family?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bfg5k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bfg5k ns:astronomy.asteroid_family.founding_asteroid_family_member ?x .\n}\n",
            "TopicEntityMid": "m.0bfg5k",
            "mid2name": {
                "ns:m.0bfg5k": "Juno clump"
            },
            "SExpr_w_name": "(JOIN (R astronomy.asteroid_family.founding_asteroid_family_member) Juno clump)",
            "SExpr": "(JOIN (R astronomy.asteroid_family.founding_asteroid_family_member) m.0bfg5k)"
        }
    },
    "684": {
        "generations": "What comic book story arc is Trapped in Dimension X a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b9r_z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b9r_z ns:comic_books.comic_book_story_arc.spanning ?x .\n}\n",
            "TopicEntityMid": "m.05b9r_z",
            "mid2name": {
                "ns:m.05b9r_z": "Trapped in Dimension X"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_story_arc.spanning) Trapped in Dimension X)",
            "SExpr": "(JOIN (R comic_books.comic_book_story_arc.spanning) m.05b9r_z)"
        }
    },
    "685": {
        "generations": "What is the Monarchical Order a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fg03k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fg03k ns:royalty.order_of_chivalry_category.orders_in_this_category ?x .\n}\n",
            "TopicEntityMid": "m.05fg03k",
            "mid2name": {
                "ns:m.05fg03k": "Monarchical Order"
            },
            "SExpr_w_name": "(JOIN (R royalty.order_of_chivalry_category.orders_in_this_category) Monarchical Order)",
            "SExpr": "(JOIN (R royalty.order_of_chivalry_category.orders_in_this_category) m.05fg03k)"
        }
    },
    "686": {
        "generations": "Which book's short story features a character named Calliope?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hpmckm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hpmckm ns:book.short_story.characters ?x .\n}\n",
            "TopicEntityMid": "m.0hpmckm",
            "mid2name": {
                "ns:m.0hpmckm": "Calliope"
            },
            "SExpr_w_name": "(JOIN (R book.short_story.characters) Calliope)",
            "SExpr": "(JOIN (R book.short_story.characters) m.0hpmckm)"
        }
    },
    "687": {
        "generations": "What is the gender of the recipients of the Order of the Golden Kite, Second Class chivalric rank?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09rjhkx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09rjhkx ns:royalty.chivalric_rank.gender ?x .\n}\n",
            "TopicEntityMid": "m.09rjhkx",
            "mid2name": {
                "ns:m.09rjhkx": "Order of the Golden Kite, Second Class"
            },
            "SExpr_w_name": "(JOIN (R royalty.chivalric_rank.gender) Order of the Golden Kite, Second Class)",
            "SExpr": "(JOIN (R royalty.chivalric_rank.gender) m.09rjhkx)"
        }
    },
    "688": {
        "generations": "What is the system of nobility called in Great Britain?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0257sg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0257sg ns:royalty.system_of_nobility.titles ?x .\n}\n",
            "TopicEntityMid": "m.0257sg",
            "mid2name": {
                "ns:m.0257sg": "Peerage of Great Britain"
            },
            "SExpr_w_name": "(JOIN (R royalty.system_of_nobility.titles) Peerage of Great Britain)",
            "SExpr": "(JOIN (R royalty.system_of_nobility.titles) m.0257sg)"
        }
    },
    "689": {
        "generations": "What organizations did Wilbur Gunn found?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.094v13m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.094v13m ns:organization.organization_founder.organizations_founded ?x .\n}\n",
            "TopicEntityMid": "m.094v13m",
            "mid2name": {
                "ns:m.094v13m": "Wilbur Gunn"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_founder.organizations_founded) Wilbur Gunn)",
            "SExpr": "(JOIN (R organization.organization_founder.organizations_founded) m.094v13m)"
        }
    },
    "690": {
        "generations": "what is the name of the calendar system used in the shire in lord of the rings?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02n_34)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02n_34 ns:fictional_universe.fictional_calendar_system.used_in_fictional_universes ?x .\n}\n",
            "TopicEntityMid": "m.02n_34",
            "mid2name": {
                "ns:m.02n_34": "Shire Reckoning"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_calendar_system.used_in_fictional_universes) Shire Reckoning)",
            "SExpr": "(JOIN (R fictional_universe.fictional_calendar_system.used_in_fictional_universes) m.02n_34)"
        }
    },
    "691": {
        "generations": "What products fall under the software category in business?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mf0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mf0 ns:business.product_category.products ?x .\n}\n",
            "TopicEntityMid": "m.01mf0",
            "mid2name": {
                "ns:m.01mf0": "Software"
            },
            "SExpr_w_name": "(JOIN (R business.product_category.products) Software)",
            "SExpr": "(JOIN (R business.product_category.products) m.01mf0)"
        }
    },
    "692": {
        "generations": "What is the illustrated edition of Return of the Jedi?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qg1gl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qg1gl ns:book.book.editions ?x .\n}\n",
            "TopicEntityMid": "m.05qg1gl",
            "mid2name": {
                "ns:m.05qg1gl": "Return of the Jedi: Illustrated Edition"
            },
            "SExpr_w_name": "(JOIN (R book.book.editions) Return of the Jedi: Illustrated Edition)",
            "SExpr": "(JOIN (R book.book.editions) m.05qg1gl)"
        }
    },
    "693": {
        "generations": "What structures were designed by Eggers & Higgins?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vyj9l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vyj9l ns:architecture.architect.structures_designed ?x .\n}\n",
            "TopicEntityMid": "m.02vyj9l",
            "mid2name": {
                "ns:m.02vyj9l": "Eggers & Higgins"
            },
            "SExpr_w_name": "(JOIN (R architecture.architect.structures_designed) Eggers & Higgins)",
            "SExpr": "(JOIN (R architecture.architect.structures_designed) m.02vyj9l)"
        }
    },
    "694": {
        "generations": "What is the lowest grade taught at Lascassas Elementary School?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.076fvdp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.076fvdp ns:education.school.lowest_grade_taught ?x .\n}\n",
            "TopicEntityMid": "m.076fvdp",
            "mid2name": {
                "ns:m.076fvdp": "Lascassas Elementary School"
            },
            "SExpr_w_name": "(JOIN (R education.school.lowest_grade_taught) Lascassas Elementary School)",
            "SExpr": "(JOIN (R education.school.lowest_grade_taught) m.076fvdp)"
        }
    },
    "695": {
        "generations": "What is the parent modulation of continuous phase modulation in engineering?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03nm7p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03nm7p ns:engineering.signal_modulation_mode.parent_modulation ?x .\n}\n",
            "TopicEntityMid": "m.03nm7p",
            "mid2name": {
                "ns:m.03nm7p": "Continuous phase modulation"
            },
            "SExpr_w_name": "(JOIN (R engineering.signal_modulation_mode.parent_modulation) Continuous phase modulation)",
            "SExpr": "(JOIN (R engineering.signal_modulation_mode.parent_modulation) m.03nm7p)"
        }
    },
    "696": {
        "generations": "In what works does the event of Kama and Molin falling in love appear in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cp4q2r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cp4q2r ns:fictional_universe.event_in_fiction.appears_in_these_works ?x .\n}\n",
            "TopicEntityMid": "m.0cp4q2r",
            "mid2name": {
                "ns:m.0cp4q2r": "Kama and Molin fall in love"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.event_in_fiction.appears_in_these_works) Kama and Molin fall in love)",
            "SExpr": "(JOIN (R fictional_universe.event_in_fiction.appears_in_these_works) m.0cp4q2r)"
        }
    },
    "697": {
        "generations": "Which cameras support the RW2 format for uncompressed images?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h27p_h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h27p_h ns:digicams.camera_uncompressed_format.cameras ?x .\n}\n",
            "TopicEntityMid": "m.0h27p_h",
            "mid2name": {
                "ns:m.0h27p_h": "RW2 format"
            },
            "SExpr_w_name": "(JOIN (R digicams.camera_uncompressed_format.cameras) RW2 format)",
            "SExpr": "(JOIN (R digicams.camera_uncompressed_format.cameras) m.0h27p_h)"
        }
    },
    "698": {
        "generations": "who are the regular cast members of total drama island?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rm6xl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rm6xl ns:tv.tv_program.regular_cast ?x .\n}\n",
            "TopicEntityMid": "m.02rm6xl",
            "mid2name": {
                "ns:m.02rm6xl": "Total Drama Island"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program.regular_cast) Total Drama Island)",
            "SExpr": "(JOIN (R tv.tv_program.regular_cast) m.02rm6xl)"
        }
    },
    "699": {
        "generations": "What is the name of the subcommittee of the United States Senate that deals with international development, multilateral institutions, and international economic, energy, and environmental policy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0289k51)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0289k51 ns:government.legislative_committee.subcommittee_of ?x .\n}\n",
            "TopicEntityMid": "m.0289k51",
            "mid2name": {
                "ns:m.0289k51": "United States Senate Foreign Relations Subcommittee on International Development, Multilateral Institutions and International Economic, Energy and Environmental Policy"
            },
            "SExpr_w_name": "(JOIN (R government.legislative_committee.subcommittee_of) United States Senate Foreign Relations Subcommittee on International Development, Multilateral Institutions and International Economic, Energy and Environmental Policy)",
            "SExpr": "(JOIN (R government.legislative_committee.subcommittee_of) m.0289k51)"
        }
    },
    "700": {
        "generations": "Which rocket launched the Scout satellite?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_28j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_28j ns:spaceflight.rocket.satellites_launched ?x .\n}\n",
            "TopicEntityMid": "m.04_28j",
            "mid2name": {
                "ns:m.04_28j": "Scout"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket.satellites_launched) Scout)",
            "SExpr": "(JOIN (R spaceflight.rocket.satellites_launched) m.04_28j)"
        }
    },
    "701": {
        "generations": "What committees is Laura Richardson a member of in the US Congress as a representative?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027mfb3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027mfb3 ns:user.robert.us_congress.us_representative.committee_memberships ?x .\n}\n",
            "TopicEntityMid": "m.027mfb3",
            "mid2name": {
                "ns:m.027mfb3": "Laura Richardson"
            },
            "SExpr_w_name": "(JOIN (R user.robert.us_congress.us_representative.committee_memberships) Laura Richardson)",
            "SExpr": "(JOIN (R user.robert.us_congress.us_representative.committee_memberships) m.027mfb3)"
        }
    },
    "702": {
        "generations": "where did expedition 44 launch from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rph248)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rph248 ns:spaceflight.space_mission.launch_site ?x .\n}\n",
            "TopicEntityMid": "m.0rph248",
            "mid2name": {
                "ns:m.0rph248": "Expedition 44"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.space_mission.launch_site) Expedition 44)",
            "SExpr": "(JOIN (R spaceflight.space_mission.launch_site) m.0rph248)"
        }
    },
    "703": {
        "generations": "What is the subject of the music video \"Be Still My Heart\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0sgh_wh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0sgh_wh ns:music.music_video.music_video_subject ?x .\n}\n",
            "TopicEntityMid": "m.0sgh_wh",
            "mid2name": {
                "ns:m.0sgh_wh": "Be Still My Heart"
            },
            "SExpr_w_name": "(JOIN (R music.music_video.music_video_subject) Be Still My Heart)",
            "SExpr": "(JOIN (R music.music_video.music_video_subject) m.0sgh_wh)"
        }
    },
    "704": {
        "generations": "Which publishing company has Coughlan Companies as its imprint?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05v2c4t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05v2c4t ns:book.publishing_company.imprint ?x .\n}\n",
            "TopicEntityMid": "m.05v2c4t",
            "mid2name": {
                "ns:m.05v2c4t": "Coughlan Companies"
            },
            "SExpr_w_name": "(JOIN (R book.publishing_company.imprint) Coughlan Companies)",
            "SExpr": "(JOIN (R book.publishing_company.imprint) m.05v2c4t)"
        }
    },
    "705": {
        "generations": "What concert tour has a filmed or video recording called Confessions Tour?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ccq6b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ccq6b ns:music.concert_tour.concert_films_or_videos ?x .\n}\n",
            "TopicEntityMid": "m.0ccq6b",
            "mid2name": {
                "ns:m.0ccq6b": "Confessions Tour"
            },
            "SExpr_w_name": "(JOIN (R music.concert_tour.concert_films_or_videos) Confessions Tour)",
            "SExpr": "(JOIN (R music.concert_tour.concert_films_or_videos) m.0ccq6b)"
        }
    },
    "706": {
        "generations": "What is included in the publication of Homer's Odyssey, books XIII-XXIV?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d9mgmx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d9mgmx ns:book.publication.contents ?x .\n}\n",
            "TopicEntityMid": "m.0d9mgmx",
            "mid2name": {
                "ns:m.0d9mgmx": "Homer's Odyssey, books XIII-XXIV"
            },
            "SExpr_w_name": "(JOIN (R book.publication.contents) Homer's Odyssey, books XIII-XXIV)",
            "SExpr": "(JOIN (R book.publication.contents) m.0d9mgmx)"
        }
    },
    "707": {
        "generations": "What are the categories of tropical cyclones tracked by the Central Pacific Hurricane Center?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03b7m0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03b7m0 ns:meteorology.meteorological_service.tropical_cyclone_categories ?x .\n}\n",
            "TopicEntityMid": "m.03b7m0",
            "mid2name": {
                "ns:m.03b7m0": "Central Pacific Hurricane Center"
            },
            "SExpr_w_name": "(JOIN (R meteorology.meteorological_service.tropical_cyclone_categories) Central Pacific Hurricane Center)",
            "SExpr": "(JOIN (R meteorology.meteorological_service.tropical_cyclone_categories) m.03b7m0)"
        }
    },
    "708": {
        "generations": "What is the agency responsible for the government of Wales?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gjckjk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gjckjk ns:government.government.agency ?x .\n}\n",
            "TopicEntityMid": "m.0gjckjk",
            "mid2name": {
                "ns:m.0gjckjk": "Government of Wales"
            },
            "SExpr_w_name": "(JOIN (R government.government.agency) Government of Wales)",
            "SExpr": "(JOIN (R government.government.agency) m.0gjckjk)"
        }
    },
    "709": {
        "generations": "What brand does Petite Maison belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012nnmlf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012nnmlf ns:business.product_line.brand ?x .\n}\n",
            "TopicEntityMid": "m.012nnmlf",
            "mid2name": {
                "ns:m.012nnmlf": "Petite Maison"
            },
            "SExpr_w_name": "(JOIN (R business.product_line.brand) Petite Maison)",
            "SExpr": "(JOIN (R business.product_line.brand) m.012nnmlf)"
        }
    },
    "710": {
        "generations": "What comic books has J.C. Gagn\u00e9 written?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wlz3c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wlz3c ns:comic_books.comic_book_writer.comic_books_written ?x .\n}\n",
            "TopicEntityMid": "m.02wlz3c",
            "mid2name": {
                "ns:m.02wlz3c": "J.C. Gagn\u00e9"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_writer.comic_books_written) J.C. Gagn\u00e9)",
            "SExpr": "(JOIN (R comic_books.comic_book_writer.comic_books_written) m.02wlz3c)"
        }
    },
    "711": {
        "generations": "What film festival takes place in Cape Town and Winelands?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04tnjc3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04tnjc3 ns:film.film_festival.individual_festivals ?x .\n}\n",
            "TopicEntityMid": "m.04tnjc3",
            "mid2name": {
                "ns:m.04tnjc3": "Cape Town and Winelands International Film Festival"
            },
            "SExpr_w_name": "(JOIN (R film.film_festival.individual_festivals) Cape Town and Winelands International Film Festival)",
            "SExpr": "(JOIN (R film.film_festival.individual_festivals) m.04tnjc3)"
        }
    },
    "712": {
        "generations": "What wines are produced in the Toscana IGT appellation?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kf7rd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kf7rd ns:wine.appellation.wines ?x .\n}\n",
            "TopicEntityMid": "m.05kf7rd",
            "mid2name": {
                "ns:m.05kf7rd": "Toscana IGT"
            },
            "SExpr_w_name": "(JOIN (R wine.appellation.wines) Toscana IGT)",
            "SExpr": "(JOIN (R wine.appellation.wines) m.05kf7rd)"
        }
    },
    "713": {
        "generations": "What conferences are about the video game industry?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.020mfr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.020mfr ns:conferences.conference_subject.specific_conferences_about_this ?x .\n}\n",
            "TopicEntityMid": "m.020mfr",
            "mid2name": {
                "ns:m.020mfr": "Video game industry"
            },
            "SExpr_w_name": "(JOIN (R conferences.conference_subject.specific_conferences_about_this) Video game industry)",
            "SExpr": "(JOIN (R conferences.conference_subject.specific_conferences_about_this) m.020mfr)"
        }
    },
    "714": {
        "generations": "What are some subcategories of geographical features that include marshes?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016nsr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016nsr ns:geography.geographical_feature_category.subcategories ?x .\n}\n",
            "TopicEntityMid": "m.016nsr",
            "mid2name": {
                "ns:m.016nsr": "Marsh"
            },
            "SExpr_w_name": "(JOIN (R geography.geographical_feature_category.subcategories) Marsh)",
            "SExpr": "(JOIN (R geography.geographical_feature_category.subcategories) m.016nsr)"
        }
    },
    "715": {
        "generations": "What is the child method of packet mode multiple access in engineering channel access method?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05y8dl3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05y8dl3 ns:engineering.channel_access_method.child_method ?x .\n}\n",
            "TopicEntityMid": "m.05y8dl3",
            "mid2name": {
                "ns:m.05y8dl3": "Packet mode multiple access"
            },
            "SExpr_w_name": "(JOIN (R engineering.channel_access_method.child_method) Packet mode multiple access)",
            "SExpr": "(JOIN (R engineering.channel_access_method.child_method) m.05y8dl3)"
        }
    },
    "716": {
        "generations": "What are the parts that make up a car?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k4j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k4j ns:base.engineeringdraft.manufactured_component_category.meronyms ?x .\n}\n",
            "TopicEntityMid": "m.0k4j",
            "mid2name": {
                "ns:m.0k4j": "Car"
            },
            "SExpr_w_name": "(JOIN (R base.engineeringdraft.manufactured_component_category.meronyms) Car)",
            "SExpr": "(JOIN (R base.engineeringdraft.manufactured_component_category.meronyms) m.0k4j)"
        }
    },
    "717": {
        "generations": "What radio station broadcasts from the Mt. Sutro Transmitter and is distributed by KFOG?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010q9djy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010q9djy ns:broadcast.distributor.distributes ?x .\n}\n",
            "TopicEntityMid": "m.010q9djy",
            "mid2name": {
                "ns:m.010q9djy": "KFOG Mt. Sutro Transmitter"
            },
            "SExpr_w_name": "(JOIN (R broadcast.distributor.distributes) KFOG Mt. Sutro Transmitter)",
            "SExpr": "(JOIN (R broadcast.distributor.distributes) m.010q9djy)"
        }
    },
    "718": {
        "generations": "What holidays fall under the category of Pagan holiday?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h7b56)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h7b56 ns:time.holiday_category.holidays ?x .\n}\n",
            "TopicEntityMid": "m.02h7b56",
            "mid2name": {
                "ns:m.02h7b56": "Pagan holiday"
            },
            "SExpr_w_name": "(JOIN (R time.holiday_category.holidays) Pagan holiday)",
            "SExpr": "(JOIN (R time.holiday_category.holidays) m.02h7b56)"
        }
    },
    "719": {
        "generations": "What network is beIN Sports 1HD on?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010rdm28)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010rdm28 ns:broadcast.tv_channel.network ?x .\n}\n",
            "TopicEntityMid": "m.010rdm28",
            "mid2name": {
                "ns:m.010rdm28": "beIN Sports 1HD"
            },
            "SExpr_w_name": "(JOIN (R broadcast.tv_channel.network) beIN Sports 1HD)",
            "SExpr": "(JOIN (R broadcast.tv_channel.network) m.010rdm28)"
        }
    },
    "720": {
        "generations": "What is a plant patent and what laws are intended to secure this right?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k83gf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k83gf ns:base.morelaw.legal_right.laws_intended_to_secure_this_right ?x .\n}\n",
            "TopicEntityMid": "m.02k83gf",
            "mid2name": {
                "ns:m.02k83gf": "Plant patent"
            },
            "SExpr_w_name": "(JOIN (R base.morelaw.legal_right.laws_intended_to_secure_this_right) Plant patent)",
            "SExpr": "(JOIN (R base.morelaw.legal_right.laws_intended_to_secure_this_right) m.02k83gf)"
        }
    },
    "721": {
        "generations": "What book is part of the series \"Engaging The Enemy\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g25n5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g25n5 ns:book.written_work.part_of_series ?x .\n}\n",
            "TopicEntityMid": "m.0g25n5",
            "mid2name": {
                "ns:m.0g25n5": "Engaging The Enemy"
            },
            "SExpr_w_name": "(JOIN (R book.written_work.part_of_series) Engaging The Enemy)",
            "SExpr": "(JOIN (R book.written_work.part_of_series) m.0g25n5)"
        }
    },
    "722": {
        "generations": "What are the conditions for cool wet soil in plant disease triangle?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d25t5l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d25t5l ns:biology.plant_disease_conditions.plant_disease_triangle ?x .\n}\n",
            "TopicEntityMid": "m.0d25t5l",
            "mid2name": {
                "ns:m.0d25t5l": "Cool wet soil"
            },
            "SExpr_w_name": "(JOIN (R biology.plant_disease_conditions.plant_disease_triangle) Cool wet soil)",
            "SExpr": "(JOIN (R biology.plant_disease_conditions.plant_disease_triangle) m.0d25t5l)"
        }
    },
    "723": {
        "generations": "What sport does an offensive line coach work in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pwdx4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pwdx4 ns:base.fight.sports_official.sport ?x .\n}\n",
            "TopicEntityMid": "m.02pwdx4",
            "mid2name": {
                "ns:m.02pwdx4": "Offensive line coach"
            },
            "SExpr_w_name": "(JOIN (R base.fight.sports_official.sport) Offensive line coach)",
            "SExpr": "(JOIN (R base.fight.sports_official.sport) m.02pwdx4)"
        }
    },
    "724": {
        "generations": "How long was Robert Berdella's killing spree?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03vq4q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03vq4q ns:base.killers.serial_killer.span_of_killings ?x .\n}\n",
            "TopicEntityMid": "m.03vq4q",
            "mid2name": {
                "ns:m.03vq4q": "Robert Berdella"
            },
            "SExpr_w_name": "(JOIN (R base.killers.serial_killer.span_of_killings) Robert Berdella)",
            "SExpr": "(JOIN (R base.killers.serial_killer.span_of_killings) m.03vq4q)"
        }
    },
    "725": {
        "generations": "Who created the TV program Next People?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tm1g7r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tm1g7r ns:tv.tv_program.program_creator ?x .\n}\n",
            "TopicEntityMid": "m.0tm1g7r",
            "mid2name": {
                "ns:m.0tm1g7r": "Next People"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program.program_creator) Next People)",
            "SExpr": "(JOIN (R tv.tv_program.program_creator) m.0tm1g7r)"
        }
    },
    "726": {
        "generations": "who produces the Nike Considered product line?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vpwq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vpwq1 ns:business.product_line.producer_s ?x .\n}\n",
            "TopicEntityMid": "m.02vpwq1",
            "mid2name": {
                "ns:m.02vpwq1": "Nike Considered"
            },
            "SExpr_w_name": "(JOIN (R business.product_line.producer_s) Nike Considered)",
            "SExpr": "(JOIN (R business.product_line.producer_s) m.02vpwq1)"
        }
    },
    "727": {
        "generations": "what was the office being elected in the canadian federal election of 2008?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b1_7g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b1_7g ns:government.election.office ?x .\n}\n",
            "TopicEntityMid": "m.0b1_7g",
            "mid2name": {
                "ns:m.0b1_7g": "Canadian federal election, 2008"
            },
            "SExpr_w_name": "(JOIN (R government.election.office) Canadian federal election, 2008)",
            "SExpr": "(JOIN (R government.election.office) m.0b1_7g)"
        }
    },
    "728": {
        "generations": "What type of clouds are classified as Family A and are high-level?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xtbgh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xtbgh ns:meteorology.cloud_classification.clouds ?x .\n}\n",
            "TopicEntityMid": "m.01xtbgh",
            "mid2name": {
                "ns:m.01xtbgh": "Family A (high-level)"
            },
            "SExpr_w_name": "(JOIN (R meteorology.cloud_classification.clouds) Family A (high-level))",
            "SExpr": "(JOIN (R meteorology.cloud_classification.clouds) m.01xtbgh)"
        }
    },
    "729": {
        "generations": "What is the number of issues in the Madman Crossovers comic book series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05btcfl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05btcfl ns:comic_books.comic_book_series.issues ?x .\n}\n",
            "TopicEntityMid": "m.05btcfl",
            "mid2name": {
                "ns:m.05btcfl": "Madman Crossovers"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_series.issues) Madman Crossovers)",
            "SExpr": "(JOIN (R comic_books.comic_book_series.issues) m.05btcfl)"
        }
    },
    "730": {
        "generations": "What destroyed the Heart of Askelon in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cn4mm9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cn4mm9 ns:fictional_universe.fictional_object.destroyer ?x .\n}\n",
            "TopicEntityMid": "m.0cn4mm9",
            "mid2name": {
                "ns:m.0cn4mm9": "Heart of Askelon"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_object.destroyer) Heart of Askelon)",
            "SExpr": "(JOIN (R fictional_universe.fictional_object.destroyer) m.0cn4mm9)"
        }
    },
    "731": {
        "generations": "where was the 1961 FA Cup Final held?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bszy9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bszy9 ns:soccer.football_match.held_at ?x .\n}\n",
            "TopicEntityMid": "m.0bszy9",
            "mid2name": {
                "ns:m.0bszy9": "1961 FA Cup Final"
            },
            "SExpr_w_name": "(JOIN (R soccer.football_match.held_at) 1961 FA Cup Final)",
            "SExpr": "(JOIN (R soccer.football_match.held_at) m.0bszy9)"
        }
    },
    "732": {
        "generations": "Who created the comic book series Jacky's Diary?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jsr8n2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jsr8n2 ns:comic_books.comic_book_series.created_by ?x .\n}\n",
            "TopicEntityMid": "m.0jsr8n2",
            "mid2name": {
                "ns:m.0jsr8n2": "Jacky's Diary"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_series.created_by) Jacky's Diary)",
            "SExpr": "(JOIN (R comic_books.comic_book_series.created_by) m.0jsr8n2)"
        }
    },
    "733": {
        "generations": "What sessions did the Cabinet of Jos\u00e9 Socrates have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dj5lq3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dj5lq3 ns:government.governmental_body.sessions ?x .\n}\n",
            "TopicEntityMid": "m.0dj5lq3",
            "mid2name": {
                "ns:m.0dj5lq3": "Cabinet of Jos\u00e9 Socrates"
            },
            "SExpr_w_name": "(JOIN (R government.governmental_body.sessions) Cabinet of Jos\u00e9 Socrates)",
            "SExpr": "(JOIN (R government.governmental_body.sessions) m.0dj5lq3)"
        }
    },
    "734": {
        "generations": "What organizations have an international scope?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z430m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z430m ns:organization.organization_scope.organizations_with_this_scope ?x .\n}\n",
            "TopicEntityMid": "m.01z430m",
            "mid2name": {
                "ns:m.01z430m": "International"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_scope.organizations_with_this_scope) International)",
            "SExpr": "(JOIN (R organization.organization_scope.organizations_with_this_scope) m.01z430m)"
        }
    },
    "735": {
        "generations": "What file format is compatible with HDCAM SR Lite?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gbq8r6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gbq8r6 ns:computer.file_format.contained_by ?x .\n}\n",
            "TopicEntityMid": "m.0gbq8r6",
            "mid2name": {
                "ns:m.0gbq8r6": "HDCAM SR Lite"
            },
            "SExpr_w_name": "(JOIN (R computer.file_format.contained_by) HDCAM SR Lite)",
            "SExpr": "(JOIN (R computer.file_format.contained_by) m.0gbq8r6)"
        }
    },
    "736": {
        "generations": "How can I purchase a fishing license in Massachusetts?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011ky7n1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011ky7n1 ns:government.government_service_channel.website_access ?x .\n}\n",
            "TopicEntityMid": "m.011ky7n1",
            "mid2name": {
                "ns:m.011ky7n1": "Massachusetts fishing license purchase"
            },
            "SExpr_w_name": "(JOIN (R government.government_service_channel.website_access) Massachusetts fishing license purchase)",
            "SExpr": "(JOIN (R government.government_service_channel.website_access) m.011ky7n1)"
        }
    },
    "737": {
        "generations": "What book series mentions penguins?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05z6w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05z6w ns:base.aubreymaturin.species.mentioned_in ?x .\n}\n",
            "TopicEntityMid": "m.05z6w",
            "mid2name": {
                "ns:m.05z6w": "Penguin"
            },
            "SExpr_w_name": "(JOIN (R base.aubreymaturin.species.mentioned_in) Penguin)",
            "SExpr": "(JOIN (R base.aubreymaturin.species.mentioned_in) m.05z6w)"
        }
    },
    "738": {
        "generations": "What hotels are part of the Phoenix Inn Suites brand?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fxws3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fxws3 ns:travel.hotel_brand.hotels_in_this_brand ?x .\n}\n",
            "TopicEntityMid": "m.0fxws3",
            "mid2name": {
                "ns:m.0fxws3": "Phoenix Inn Suites"
            },
            "SExpr_w_name": "(JOIN (R travel.hotel_brand.hotels_in_this_brand) Phoenix Inn Suites)",
            "SExpr": "(JOIN (R travel.hotel_brand.hotels_in_this_brand) m.0fxws3)"
        }
    },
    "739": {
        "generations": "Who illustrated the interior of The Gamer's Quarter Issue 1?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04t5dp5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04t5dp5 ns:book.magazine_issue.interior_illustrations_by ?x .\n}\n",
            "TopicEntityMid": "m.04t5dp5",
            "mid2name": {
                "ns:m.04t5dp5": "The Gamer's Quarter Issue 1"
            },
            "SExpr_w_name": "(JOIN (R book.magazine_issue.interior_illustrations_by) The Gamer's Quarter Issue 1)",
            "SExpr": "(JOIN (R book.magazine_issue.interior_illustrations_by) m.04t5dp5)"
        }
    },
    "740": {
        "generations": "What is the name of the book's afterword?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04__vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04__vv ns:book.short_non_fiction_variety.works ?x .\n}\n",
            "TopicEntityMid": "m.04__vv",
            "mid2name": {
                "ns:m.04__vv": "Afterword"
            },
            "SExpr_w_name": "(JOIN (R book.short_non_fiction_variety.works) Afterword)",
            "SExpr": "(JOIN (R book.short_non_fiction_variety.works) m.04__vv)"
        }
    },
    "741": {
        "generations": "What films has Link TV directed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02w14k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02w14k ns:film.director.film ?x .\n}\n",
            "TopicEntityMid": "m.02w14k",
            "mid2name": {
                "ns:m.02w14k": "Link TV"
            },
            "SExpr_w_name": "(JOIN (R film.director.film) Link TV)",
            "SExpr": "(JOIN (R film.director.film) m.02w14k)"
        }
    },
    "742": {
        "generations": "What are some types of noodles that are narrower in concept than rice noodles?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09jy30)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09jy30 ns:base.skosbase.vocabulary_equivalent_topic.narrower_concept ?x .\n}\n",
            "TopicEntityMid": "m.09jy30",
            "mid2name": {
                "ns:m.09jy30": "Rice noodles"
            },
            "SExpr_w_name": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.narrower_concept) Rice noodles)",
            "SExpr": "(JOIN (R base.skosbase.vocabulary_equivalent_topic.narrower_concept) m.09jy30)"
        }
    },
    "743": {
        "generations": "what is the size of a Duracell AA battery?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08mbnq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08mbnq1 ns:engineering.battery.size ?x .\n}\n",
            "TopicEntityMid": "m.08mbnq1",
            "mid2name": {
                "ns:m.08mbnq1": "Duracell AA battery"
            },
            "SExpr_w_name": "(JOIN (R engineering.battery.size) Duracell AA battery)",
            "SExpr": "(JOIN (R engineering.battery.size) m.08mbnq1)"
        }
    },
    "744": {
        "generations": "What is the content of the Red Hat Public Sector Podcast Series - Podcast Feed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04585bq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04585bq ns:broadcast.broadcast.content ?x .\n}\n",
            "TopicEntityMid": "m.04585bq",
            "mid2name": {
                "ns:m.04585bq": "Red Hat Public Sector Podcast Series - Podcast Feed"
            },
            "SExpr_w_name": "(JOIN (R broadcast.broadcast.content) Red Hat Public Sector Podcast Series - Podcast Feed)",
            "SExpr": "(JOIN (R broadcast.broadcast.content) m.04585bq)"
        }
    },
    "745": {
        "generations": "What types of formulations are available for extended release liquid medication?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqy2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqy2y0 ns:medicine.drug_dosage_form.formulations_available_in_this_form ?x .\n}\n",
            "TopicEntityMid": "m.0hqy2y0",
            "mid2name": {
                "ns:m.0hqy2y0": "Extended release liquid"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_dosage_form.formulations_available_in_this_form) Extended release liquid)",
            "SExpr": "(JOIN (R medicine.drug_dosage_form.formulations_available_in_this_form) m.0hqy2y0)"
        }
    },
    "746": {
        "generations": "What is Coors in biology?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05hn6jd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05hn6jd ns:biology.organism.children ?x .\n}\n",
            "TopicEntityMid": "m.05hn6jd",
            "mid2name": {
                "ns:m.05hn6jd": "Coors"
            },
            "SExpr_w_name": "(JOIN (R biology.organism.children) Coors)",
            "SExpr": "(JOIN (R biology.organism.children) m.05hn6jd)"
        }
    },
    "747": {
        "generations": "What rocket was launched from Saturn V?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07932)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07932 ns:spaceflight.rocket.launch_sites ?x .\n}\n",
            "TopicEntityMid": "m.07932",
            "mid2name": {
                "ns:m.07932": "Saturn V"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket.launch_sites) Saturn V)",
            "SExpr": "(JOIN (R spaceflight.rocket.launch_sites) m.07932)"
        }
    },
    "748": {
        "generations": "What location was merged with Nova Scotia in the Dated Location Test?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059t8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059t8 ns:base.datedlocationtest.dated_location_test.merged_with ?x .\n}\n",
            "TopicEntityMid": "m.059t8",
            "mid2name": {
                "ns:m.059t8": "Nova Scotia"
            },
            "SExpr_w_name": "(JOIN (R base.datedlocationtest.dated_location_test.merged_with) Nova Scotia)",
            "SExpr": "(JOIN (R base.datedlocationtest.dated_location_test.merged_with) m.059t8)"
        }
    },
    "749": {
        "generations": "What artwork depicts the savanna as its subject?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01c7d3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01c7d3 ns:visual_art.art_subject.artwork_on_the_subject ?x .\n}\n",
            "TopicEntityMid": "m.01c7d3",
            "mid2name": {
                "ns:m.01c7d3": "Savanna"
            },
            "SExpr_w_name": "(JOIN (R visual_art.art_subject.artwork_on_the_subject) Savanna)",
            "SExpr": "(JOIN (R visual_art.art_subject.artwork_on_the_subject) m.01c7d3)"
        }
    },
    "750": {
        "generations": "Where does Azeitao cheese come from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h89g8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h89g8 ns:food.cheese.country_of_origin ?x .\n}\n",
            "TopicEntityMid": "m.02h89g8",
            "mid2name": {
                "ns:m.02h89g8": "Azeitao"
            },
            "SExpr_w_name": "(JOIN (R food.cheese.country_of_origin) Azeitao)",
            "SExpr": "(JOIN (R food.cheese.country_of_origin) m.02h89g8)"
        }
    },
    "751": {
        "generations": "What is the roster for FC Benavent?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z87fh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z87fh ns:sports.sports_team.roster ?x .\n}\n",
            "TopicEntityMid": "m.02z87fh",
            "mid2name": {
                "ns:m.02z87fh": "FC Benavent"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team.roster) FC Benavent)",
            "SExpr": "(JOIN (R sports.sports_team.roster) m.02z87fh)"
        }
    },
    "752": {
        "generations": "What is the solubility of serotonin?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.073z8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.073z8 ns:chemistry.chemical_compound.solubility ?x .\n}\n",
            "TopicEntityMid": "m.073z8",
            "mid2name": {
                "ns:m.073z8": "Serotonin"
            },
            "SExpr_w_name": "(JOIN (R chemistry.chemical_compound.solubility) Serotonin)",
            "SExpr": "(JOIN (R chemistry.chemical_compound.solubility) m.073z8)"
        }
    },
    "753": {
        "generations": "what is bono's net worth?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vswwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vswwx ns:celebrities.celebrity.net_worth ?x .\n}\n",
            "TopicEntityMid": "m.01vswwx",
            "mid2name": {
                "ns:m.01vswwx": "Bono"
            },
            "SExpr_w_name": "(JOIN (R celebrities.celebrity.net_worth) Bono)",
            "SExpr": "(JOIN (R celebrities.celebrity.net_worth) m.01vswwx)"
        }
    },
    "754": {
        "generations": "What language is spoken in Puerto Rico?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.057x7c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.057x7c ns:language.language_dialect.language ?x .\n}\n",
            "TopicEntityMid": "m.057x7c",
            "mid2name": {
                "ns:m.057x7c": "Puerto Rican Spanish"
            },
            "SExpr_w_name": "(JOIN (R language.language_dialect.language) Puerto Rican Spanish)",
            "SExpr": "(JOIN (R language.language_dialect.language) m.057x7c)"
        }
    },
    "755": {
        "generations": "Which artists are signed to Jet Records?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hynj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hynj ns:music.record_label.artist ?x .\n}\n",
            "TopicEntityMid": "m.04hynj",
            "mid2name": {
                "ns:m.04hynj": "Jet Records"
            },
            "SExpr_w_name": "(JOIN (R music.record_label.artist) Jet Records)",
            "SExpr": "(JOIN (R music.record_label.artist) m.04hynj)"
        }
    },
    "756": {
        "generations": "Who designed the ship class used by pirates?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026f691)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026f691 ns:boats.ship_class.designer ?x .\n}\n",
            "TopicEntityMid": "m.026f691",
            "mid2name": {
                "ns:m.026f691": "Pirate"
            },
            "SExpr_w_name": "(JOIN (R boats.ship_class.designer) Pirate)",
            "SExpr": "(JOIN (R boats.ship_class.designer) m.026f691)"
        }
    },
    "757": {
        "generations": "What is the name of the galaxy group associated with the Virgo Cluster in astronomy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fc1x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fc1x ns:astronomy.galactic_cluster.galaxy_groups ?x .\n}\n",
            "TopicEntityMid": "m.01fc1x",
            "mid2name": {
                "ns:m.01fc1x": "Virgo Cluster"
            },
            "SExpr_w_name": "(JOIN (R astronomy.galactic_cluster.galaxy_groups) Virgo Cluster)",
            "SExpr": "(JOIN (R astronomy.galactic_cluster.galaxy_groups) m.01fc1x)"
        }
    },
    "758": {
        "generations": "who published the book \"Hans Hobein at the Court of Henry VIII\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gwf8_6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gwf8_6 ns:book.book_edition.publisher ?x .\n}\n",
            "TopicEntityMid": "m.0gwf8_6",
            "mid2name": {
                "ns:m.0gwf8_6": "Hans Hobein at the Court of Henry VIII"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition.publisher) Hans Hobein at the Court of Henry VIII)",
            "SExpr": "(JOIN (R book.book_edition.publisher) m.0gwf8_6)"
        }
    },
    "759": {
        "generations": "What coordinated programs are located in Virginia?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07z1m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07z1m ns:base.litcentral.focal_location.coordinated_program_s ?x .\n}\n",
            "TopicEntityMid": "m.07z1m",
            "mid2name": {
                "ns:m.07z1m": "Virginia"
            },
            "SExpr_w_name": "(JOIN (R base.litcentral.focal_location.coordinated_program_s) Virginia)",
            "SExpr": "(JOIN (R base.litcentral.focal_location.coordinated_program_s) m.07z1m)"
        }
    },
    "760": {
        "generations": "What are the ingredients in a tuna fish sandwich?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cl2zk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cl2zk ns:food.dish.ingredients ?x .\n}\n",
            "TopicEntityMid": "m.03cl2zk",
            "mid2name": {
                "ns:m.03cl2zk": "Tuna fish sandwich"
            },
            "SExpr_w_name": "(JOIN (R food.dish.ingredients) Tuna fish sandwich)",
            "SExpr": "(JOIN (R food.dish.ingredients) m.03cl2zk)"
        }
    },
    "761": {
        "generations": "What operating system includes versions of 386BSD?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h848p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h848p ns:computer.operating_system.includes_os_versions ?x .\n}\n",
            "TopicEntityMid": "m.02h848p",
            "mid2name": {
                "ns:m.02h848p": "386BSD"
            },
            "SExpr_w_name": "(JOIN (R computer.operating_system.includes_os_versions) 386BSD)",
            "SExpr": "(JOIN (R computer.operating_system.includes_os_versions) m.02h848p)"
        }
    },
    "762": {
        "generations": "Which plays did Curtis McKonly orchestrate?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0zc_49q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0zc_49q ns:theater.theatrical_orchestrator.plays_orchestrated ?x .\n}\n",
            "TopicEntityMid": "m.0zc_49q",
            "mid2name": {
                "ns:m.0zc_49q": "Curtis McKonly"
            },
            "SExpr_w_name": "(JOIN (R theater.theatrical_orchestrator.plays_orchestrated) Curtis McKonly)",
            "SExpr": "(JOIN (R theater.theatrical_orchestrator.plays_orchestrated) m.0zc_49q)"
        }
    },
    "763": {
        "generations": "What was the focus of the Venus Express project?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03fxd0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03fxd0 ns:projects.project_focus.projects ?x .\n}\n",
            "TopicEntityMid": "m.03fxd0",
            "mid2name": {
                "ns:m.03fxd0": "Venus Express"
            },
            "SExpr_w_name": "(JOIN (R projects.project_focus.projects) Venus Express)",
            "SExpr": "(JOIN (R projects.project_focus.projects) m.03fxd0)"
        }
    },
    "764": {
        "generations": "What constellation is Mizat in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kld7zr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kld7zr ns:astronomy.star.constellation ?x .\n}\n",
            "TopicEntityMid": "m.0kld7zr",
            "mid2name": {
                "ns:m.0kld7zr": "Mizat"
            },
            "SExpr_w_name": "(JOIN (R astronomy.star.constellation) Mizat)",
            "SExpr": "(JOIN (R astronomy.star.constellation) m.0kld7zr)"
        }
    },
    "765": {
        "generations": "What meteor shower was spawned by the Sungrazing comet?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03r0lh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03r0lh ns:astronomy.comet.meteor_shower_spawned ?x .\n}\n",
            "TopicEntityMid": "m.03r0lh",
            "mid2name": {
                "ns:m.03r0lh": "Sungrazing comet"
            },
            "SExpr_w_name": "(JOIN (R astronomy.comet.meteor_shower_spawned) Sungrazing comet)",
            "SExpr": "(JOIN (R astronomy.comet.meteor_shower_spawned) m.03r0lh)"
        }
    },
    "766": {
        "generations": "What is the title of the religious leadership jurisdiction in the Armenian Apostolic Church?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hd99)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hd99 ns:religion.religious_leadership_jurisdiction.title ?x .\n}\n",
            "TopicEntityMid": "m.01hd99",
            "mid2name": {
                "ns:m.01hd99": "Armenian Apostolic Church"
            },
            "SExpr_w_name": "(JOIN (R religion.religious_leadership_jurisdiction.title) Armenian Apostolic Church)",
            "SExpr": "(JOIN (R religion.religious_leadership_jurisdiction.title) m.01hd99)"
        }
    },
    "767": {
        "generations": "What sport is headgear used for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cphhk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cphhk ns:sports.sports_equipment.sport_used_for ?x .\n}\n",
            "TopicEntityMid": "m.0cphhk",
            "mid2name": {
                "ns:m.0cphhk": "Headgear"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_equipment.sport_used_for) Headgear)",
            "SExpr": "(JOIN (R sports.sports_equipment.sport_used_for) m.0cphhk)"
        }
    },
    "768": {
        "generations": "What is the parent company of Lambert automotive make?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j7c63f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j7c63f ns:automotive.make.parent_company ?x .\n}\n",
            "TopicEntityMid": "m.0j7c63f",
            "mid2name": {
                "ns:m.0j7c63f": "Lambert"
            },
            "SExpr_w_name": "(JOIN (R automotive.make.parent_company) Lambert)",
            "SExpr": "(JOIN (R automotive.make.parent_company) m.0j7c63f)"
        }
    },
    "769": {
        "generations": "What is a common cause of train accidents related to fire?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_41)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_41 ns:base.disaster2.train_accident_cause.train_accidents_caused_this_way ?x .\n}\n",
            "TopicEntityMid": "m.02_41",
            "mid2name": {
                "ns:m.02_41": "Fire"
            },
            "SExpr_w_name": "(JOIN (R base.disaster2.train_accident_cause.train_accidents_caused_this_way) Fire)",
            "SExpr": "(JOIN (R base.disaster2.train_accident_cause.train_accidents_caused_this_way) m.02_41)"
        }
    },
    "770": {
        "generations": "What sport was demonstrated at the Olympics in speed skiing?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vnj3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vnj3 ns:olympics.olympic_sport.games_contested_as_demonstration ?x .\n}\n",
            "TopicEntityMid": "m.01vnj3",
            "mid2name": {
                "ns:m.01vnj3": "Speed skiing"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_sport.games_contested_as_demonstration) Speed skiing)",
            "SExpr": "(JOIN (R olympics.olympic_sport.games_contested_as_demonstration) m.01vnj3)"
        }
    },
    "771": {
        "generations": "who illustrated the book \"Walter and Margaret Keane: They Give Shape to the Unseen\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lcy_7g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lcy_7g ns:book.book.interior_illustrations_by ?x .\n}\n",
            "TopicEntityMid": "m.0lcy_7g",
            "mid2name": {
                "ns:m.0lcy_7g": "Walter and Margaret Keane: They Give Shape to the Unseen (Tomorrow's masters series)"
            },
            "SExpr_w_name": "(JOIN (R book.book.interior_illustrations_by) Walter and Margaret Keane: They Give Shape to the Unseen (Tomorrow's masters series))",
            "SExpr": "(JOIN (R book.book.interior_illustrations_by) m.0lcy_7g)"
        }
    },
    "772": {
        "generations": "who won the 1972 NBA Finals?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cs1ny)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cs1ny ns:sports.sports_championship_event.champion ?x .\n}\n",
            "TopicEntityMid": "m.0cs1ny",
            "mid2name": {
                "ns:m.0cs1ny": "1972 NBA Finals"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_championship_event.champion) 1972 NBA Finals)",
            "SExpr": "(JOIN (R sports.sports_championship_event.champion) m.0cs1ny)"
        }
    },
    "773": {
        "generations": "Which poem features the character Angel of Valentine Days and Nights?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h_2qt7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h_2qt7 ns:book.poem_character.appears_in_poems ?x .\n}\n",
            "TopicEntityMid": "m.0h_2qt7",
            "mid2name": {
                "ns:m.0h_2qt7": "Angel of Valentine Days and Nights"
            },
            "SExpr_w_name": "(JOIN (R book.poem_character.appears_in_poems) Angel of Valentine Days and Nights)",
            "SExpr": "(JOIN (R book.poem_character.appears_in_poems) m.0h_2qt7)"
        }
    },
    "774": {
        "generations": "Who operates The Lodge at Tiburon hotel?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gx37qb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gx37qb ns:travel.hotel.operated_by ?x .\n}\n",
            "TopicEntityMid": "m.0gx37qb",
            "mid2name": {
                "ns:m.0gx37qb": "The Lodge at Tiburon"
            },
            "SExpr_w_name": "(JOIN (R travel.hotel.operated_by) The Lodge at Tiburon)",
            "SExpr": "(JOIN (R travel.hotel.operated_by) m.0gx37qb)"
        }
    },
    "775": {
        "generations": "What music group was Amanda Louise Marchant a member of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vd9tq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vd9tq ns:music.group_member.membership ?x .\n}\n",
            "TopicEntityMid": "m.07vd9tq",
            "mid2name": {
                "ns:m.07vd9tq": "Amanda Louise Marchant"
            },
            "SExpr_w_name": "(JOIN (R music.group_member.membership) Amanda Louise Marchant)",
            "SExpr": "(JOIN (R music.group_member.membership) m.07vd9tq)"
        }
    },
    "776": {
        "generations": "who publishes the new york times?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07k2d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07k2d ns:user.weel.default_domain.periodical.publisher ?x .\n}\n",
            "TopicEntityMid": "m.07k2d",
            "mid2name": {
                "ns:m.07k2d": "The New York Times"
            },
            "SExpr_w_name": "(JOIN (R user.weel.default_domain.periodical.publisher) The New York Times)",
            "SExpr": "(JOIN (R user.weel.default_domain.periodical.publisher) m.07k2d)"
        }
    },
    "777": {
        "generations": "what religion does the international society for krishna consciousness practice?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017j3y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017j3y ns:religion.religion.practices ?x .\n}\n",
            "TopicEntityMid": "m.017j3y",
            "mid2name": {
                "ns:m.017j3y": "International Society for Krishna Consciousness"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.practices) International Society for Krishna Consciousness)",
            "SExpr": "(JOIN (R religion.religion.practices) m.017j3y)"
        }
    },
    "778": {
        "generations": "where was the Amos-5 satellite launched from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010ff8wk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010ff8wk ns:spaceflight.satellite.launch_site ?x .\n}\n",
            "TopicEntityMid": "m.010ff8wk",
            "mid2name": {
                "ns:m.010ff8wk": "Amos-5"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.satellite.launch_site) Amos-5)",
            "SExpr": "(JOIN (R spaceflight.satellite.launch_site) m.010ff8wk)"
        }
    },
    "779": {
        "generations": "What is Monel a subclass of in engineering materials?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03lb0y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03lb0y ns:engineering.material.subclass ?x .\n}\n",
            "TopicEntityMid": "m.03lb0y",
            "mid2name": {
                "ns:m.03lb0y": "Monel"
            },
            "SExpr_w_name": "(JOIN (R engineering.material.subclass) Monel)",
            "SExpr": "(JOIN (R engineering.material.subclass) m.03lb0y)"
        }
    },
    "780": {
        "generations": "What aircraft was involved in the 2006 Eagle III accident?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rlvxx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rlvxx ns:aviation.airliner_accident.aircraft ?x .\n}\n",
            "TopicEntityMid": "m.02rlvxx",
            "mid2name": {
                "ns:m.02rlvxx": "2006 Eagle III accident"
            },
            "SExpr_w_name": "(JOIN (R aviation.airliner_accident.aircraft) 2006 Eagle III accident)",
            "SExpr": "(JOIN (R aviation.airliner_accident.aircraft) m.02rlvxx)"
        }
    },
    "781": {
        "generations": "What games did Dupuis develop?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07l381)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07l381 ns:cvg.cvg_developer.game_versions_developed ?x .\n}\n",
            "TopicEntityMid": "m.07l381",
            "mid2name": {
                "ns:m.07l381": "Dupuis"
            },
            "SExpr_w_name": "(JOIN (R cvg.cvg_developer.game_versions_developed) Dupuis)",
            "SExpr": "(JOIN (R cvg.cvg_developer.game_versions_developed) m.07l381)"
        }
    },
    "782": {
        "generations": "What models are included in the Dell XPS computer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hdpv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hdpv ns:computer.computer.includes_models ?x .\n}\n",
            "TopicEntityMid": "m.04hdpv",
            "mid2name": {
                "ns:m.04hdpv": "Dell XPS"
            },
            "SExpr_w_name": "(JOIN (R computer.computer.includes_models) Dell XPS)",
            "SExpr": "(JOIN (R computer.computer.includes_models) m.04hdpv)"
        }
    },
    "783": {
        "generations": "What species is the fictional character Yukk?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027pc23)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027pc23 ns:fictional_universe.fictional_character.species ?x .\n}\n",
            "TopicEntityMid": "m.027pc23",
            "mid2name": {
                "ns:m.027pc23": "Yukk!"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.species) Yukk!)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.species) m.027pc23)"
        }
    },
    "784": {
        "generations": "where is the headquarters of The Courier newspaper?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042cxg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042cxg ns:book.newspaper.headquarters ?x .\n}\n",
            "TopicEntityMid": "m.042cxg",
            "mid2name": {
                "ns:m.042cxg": "The Courier"
            },
            "SExpr_w_name": "(JOIN (R book.newspaper.headquarters) The Courier)",
            "SExpr": "(JOIN (R book.newspaper.headquarters) m.042cxg)"
        }
    }
}