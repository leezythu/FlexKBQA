{
    "0": {
        "generations": "What movie produced by Joakim Noah features the song \"Anthem without a title\" with lyrics written by someone?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c2yrf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c2yrf ns:film.producer.films_executive_produced ?y .\n?y ns:film.film.language ?x .\n?x ns:music.lyricist.lyrics_written ns:m.02z41y .\n}\n",
            "TopicEntityMid": "m.0c2yrf",
            "mid2name": {
                "ns:m.0c2yrf": "Joakim Noah",
                "ns:m.02z41y": "Anthem without a title"
            },
            "SExpr_w_name": "(AND (JOIN music.lyricist.lyrics_written Anthem without a title) (JOIN (R film.film.language) (JOIN (R film.producer.films_executive_produced) Joakim Noah)))",
            "SExpr": "(AND (JOIN music.lyricist.lyrics_written m.02z41y) (JOIN (R film.film.language) (JOIN (R film.producer.films_executive_produced) m.0c2yrf)))"
        }
    },
    "1": {
        "generations": "What was the name of the Washington Redskins before they became a defunct sports team and what podcast covers the 49ers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.084l5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.084l5 ns:sports.sports_team.previously_known_as ?y .\n?y ns:sports.defunct_sports_team.sport ?x .\n?x ns:broadcast.genre.content ns:m.03bt98m .\n}\n",
            "TopicEntityMid": "m.084l5",
            "mid2name": {
                "ns:m.084l5": "Washington Redskins",
                "ns:m.03bt98m": "Chronicle Podcasts: 49ers"
            },
            "SExpr_w_name": "(AND (JOIN broadcast.genre.content Chronicle Podcasts: 49ers) (JOIN (R sports.defunct_sports_team.sport) (JOIN (R sports.sports_team.previously_known_as) Washington Redskins)))",
            "SExpr": "(AND (JOIN broadcast.genre.content m.03bt98m) (JOIN (R sports.defunct_sports_team.sport) (JOIN (R sports.sports_team.previously_known_as) m.084l5)))"
        }
    },
    "2": {
        "generations": "who wrote the poetry of ted hughes and what is it about?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07484)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07484 ns:book.book_subject.works ?y .\n?y ns:book.written_work.author ?x .\n?x ns:book.author.works_written ns:m.06m32m0 .\n}\n",
            "TopicEntityMid": "m.07484",
            "mid2name": {
                "ns:m.07484": "Saki",
                "ns:m.06m32m0": "The Poetry of Ted Hughes"
            },
            "SExpr_w_name": "(AND (JOIN book.author.works_written The Poetry of Ted Hughes) (JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) Saki)))",
            "SExpr": "(AND (JOIN book.author.works_written m.06m32m0) (JOIN (R book.written_work.author) (JOIN (R book.book_subject.works) m.07484)))"
        }
    },
    "3": {
        "generations": "What comic book story arc features the origin of Captain America and which fictional character from which universe is associated with it?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c2m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c2m4 ns:fictional_universe.fictional_character.gender ?y .\n?y ns:fictional_universe.character_gender.characters_of_this_gender ?x .\n?x ns:comic_books.comic_book_story_arc.spanning ns:m.0h2c1zd .\n}\n",
            "TopicEntityMid": "m.0c2m4",
            "mid2name": {
                "ns:m.0c2m4": "Draco Malfoy",
                "ns:m.0h2c1zd": "The origin of Captain America"
            },
            "SExpr_w_name": "(AND (JOIN comic_books.comic_book_story_arc.spanning The origin of Captain America) (JOIN (R fictional_universe.character_gender.characters_of_this_gender) (JOIN (R fictional_universe.fictional_character.gender) Draco Malfoy)))",
            "SExpr": "(AND (JOIN comic_books.comic_book_story_arc.spanning m.0h2c1zd) (JOIN (R fictional_universe.character_gender.characters_of_this_gender) (JOIN (R fictional_universe.fictional_character.gender) m.0c2m4)))"
        }
    },
    "4": {
        "generations": "What military conflicts did Benjamin Harrison participate in as a member of the armed forces of the United States of America?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:military.military_combatant.military_conflicts ?y .\n?y ns:military.armed_force.personnel ?x .\n?x ns:military.military_service.military_person ns:m.01b61 .\n}\n",
            "TopicEntityMid": "m.09c7w0",
            "mid2name": {
                "ns:m.09c7w0": "United States of America",
                "ns:m.01b61": "Benjamin Harrison"
            },
            "SExpr_w_name": "(AND (JOIN military.military_service.military_person Benjamin Harrison) (JOIN (R military.armed_force.personnel) (JOIN (R military.military_combatant.military_conflicts) United States of America)))",
            "SExpr": "(AND (JOIN military.military_service.military_person m.01b61) (JOIN (R military.armed_force.personnel) (JOIN (R military.military_combatant.military_conflicts) m.09c7w0)))"
        }
    },
    "5": {
        "generations": "What is the major export industry in Rome related to hotel design?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c62 ns:location.statistical_region.major_exports ?y .\n?y ns:location.imports_exports_by_industry.industry ?x .\n?x ns:education.field_of_study.subdisciplines ns:m.09bw6q .\n}\n",
            "TopicEntityMid": "m.06c62",
            "mid2name": {
                "ns:m.06c62": "Rome",
                "ns:m.09bw6q": "Hotel design"
            },
            "SExpr_w_name": "(AND (JOIN education.field_of_study.subdisciplines Hotel design) (JOIN (R location.imports_exports_by_industry.industry) (JOIN (R location.statistical_region.major_exports) Rome)))",
            "SExpr": "(AND (JOIN education.field_of_study.subdisciplines m.09bw6q) (JOIN (R location.imports_exports_by_industry.industry) (JOIN (R location.statistical_region.major_exports) m.06c62)))"
        }
    },
    "6": {
        "generations": "what award did nina dobrev win at the teen choice awards?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027nwk2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027nwk2 ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.ceremony ?x .\n?x ns:award.award_announcement.award ns:m.056p05 .\n}\n",
            "TopicEntityMid": "m.027nwk2",
            "mid2name": {
                "ns:m.027nwk2": "Nina Dobrev",
                "ns:m.056p05": "Teen Choice Awards"
            },
            "SExpr_w_name": "(AND (JOIN award.award_announcement.award Teen Choice Awards) (JOIN (R award.award_honor.ceremony) (JOIN (R award.award_winner.awards_won) Nina Dobrev)))",
            "SExpr": "(AND (JOIN award.award_announcement.award m.056p05) (JOIN (R award.award_honor.ceremony) (JOIN (R award.award_winner.awards_won) m.027nwk2)))"
        }
    },
    "7": {
        "generations": "who is the current prime minister of turkey?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060bp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060bp ns:government.government_office_category.offices ?y .\n?y ns:people.appointed_role.appointment ?x .\n?x ns:people.appointment.appointee ns:m.0967xb .\n}\n",
            "TopicEntityMid": "m.060bp",
            "mid2name": {
                "ns:m.060bp": "Prime minister",
                "ns:m.0967xb": "Ahmet Davuto\u011flu"
            },
            "SExpr_w_name": "(AND (JOIN people.appointment.appointee Ahmet Davuto\u011flu) (JOIN (R people.appointed_role.appointment) (JOIN (R government.government_office_category.offices) Prime minister)))",
            "SExpr": "(AND (JOIN people.appointment.appointee m.0967xb) (JOIN (R people.appointed_role.appointment) (JOIN (R government.government_office_category.offices) m.060bp)))"
        }
    },
    "8": {
        "generations": "where did lebron james live in akron?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n?x ns:location.hud_county_place.place ns:m.0z20d .\n}\n",
            "TopicEntityMid": "m.01jz6d",
            "mid2name": {
                "ns:m.01jz6d": "LeBron James",
                "ns:m.0z20d": "Akron"
            },
            "SExpr_w_name": "(AND (JOIN location.hud_county_place.place Akron) (JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) LeBron James)))",
            "SExpr": "(AND (JOIN location.hud_county_place.place m.0z20d) (JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.01jz6d)))"
        }
    },
    "9": {
        "generations": "which mosque did malcolm x lead?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03f2h01)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03f2h01 ns:business.board_member.leader_of ?y .\n?y ns:organization.leadership.organization ?x .\n?x ns:religion.religion.places_of_worship ns:m.027qk37 .\n}\n",
            "TopicEntityMid": "m.03f2h01",
            "mid2name": {
                "ns:m.03f2h01": "Malcolm X",
                "ns:m.027qk37": "Mosque Maryam"
            },
            "SExpr_w_name": "(AND (JOIN religion.religion.places_of_worship Mosque Maryam) (JOIN (R organization.leadership.organization) (JOIN (R business.board_member.leader_of) Malcolm X)))",
            "SExpr": "(AND (JOIN religion.religion.places_of_worship m.027qk37) (JOIN (R organization.leadership.organization) (JOIN (R business.board_member.leader_of) m.03f2h01)))"
        }
    },
    "10": {
        "generations": "What roller coaster in the Netherlands uses a lift hill for propulsion?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059j2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059j2 ns:location.location.contains ?y .\n?y ns:amusement_parks.park.rides ?x .\n?x ns:amusement_parks.roller_coaster.propulsion ns:m.04np8z .\n}\n",
            "TopicEntityMid": "m.059j2",
            "mid2name": {
                "ns:m.059j2": "Netherlands",
                "ns:m.04np8z": "Lift hill"
            },
            "SExpr_w_name": "(AND (JOIN amusement_parks.roller_coaster.propulsion Lift hill) (JOIN (R amusement_parks.park.rides) (JOIN (R location.location.contains) Netherlands)))",
            "SExpr": "(AND (JOIN amusement_parks.roller_coaster.propulsion m.04np8z) (JOIN (R amusement_parks.park.rides) (JOIN (R location.location.contains) m.059j2)))"
        }
    },
    "11": {
        "generations": "where can you see an exhibition about the harry potter literary series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078ffw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078ffw ns:exhibitions.exhibition_subject.exhibitions_created_about_this_subject ?y .\n?y ns:exhibitions.exhibition.venues ?x .\n?x ns:exhibitions.exhibition_run.venue ns:m.0j2m3px .\n}\n",
            "TopicEntityMid": "m.078ffw",
            "mid2name": {
                "ns:m.078ffw": "Harry Potter literary series",
                "ns:m.0j2m3px": "Museum of Science and Industry"
            },
            "SExpr_w_name": "(AND (JOIN exhibitions.exhibition_run.venue Museum of Science and Industry) (JOIN (R exhibitions.exhibition.venues) (JOIN (R exhibitions.exhibition_subject.exhibitions_created_about_this_subject) Harry Potter literary series)))",
            "SExpr": "(AND (JOIN exhibitions.exhibition_run.venue m.0j2m3px) (JOIN (R exhibitions.exhibition.venues) (JOIN (R exhibitions.exhibition_subject.exhibitions_created_about_this_subject) m.078ffw)))"
        }
    },
    "12": {
        "generations": "who won the 2010 world series?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0713r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0713r ns:sports.sports_team.season_record ?y .\n?y ns:sports.sports_team_season_record.season ?x .\n?x ns:sports.sports_league_season.championship ns:m.09gnk2r .\n}\n",
            "TopicEntityMid": "m.0713r",
            "mid2name": {
                "ns:m.0713r": "San Francisco Giants",
                "ns:m.09gnk2r": "2010 World Series"
            },
            "SExpr_w_name": "(AND (JOIN sports.sports_league_season.championship 2010 World Series) (JOIN (R sports.sports_team_season_record.season) (JOIN (R sports.sports_team.season_record) San Francisco Giants)))",
            "SExpr": "(AND (JOIN sports.sports_league_season.championship m.09gnk2r) (JOIN (R sports.sports_team_season_record.season) (JOIN (R sports.sports_team.season_record) m.0713r)))"
        }
    },
    "13": {
        "generations": "where was william jennings bryan born and what radio station does WXME own?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b3tf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b3tf ns:people.person.nationality ?y .\n?y ns:location.location.people_born_here ?x .\n?x ns:broadcast.radio_station_owner.radio_stations ns:m.04gr4f7 .\n}\n",
            "TopicEntityMid": "m.0b3tf",
            "mid2name": {
                "ns:m.0b3tf": "William Jennings Bryan",
                "ns:m.04gr4f7": "WXME"
            },
            "SExpr_w_name": "(AND (JOIN broadcast.radio_station_owner.radio_stations WXME) (JOIN (R location.location.people_born_here) (JOIN (R people.person.nationality) William Jennings Bryan)))",
            "SExpr": "(AND (JOIN broadcast.radio_station_owner.radio_stations m.04gr4f7) (JOIN (R location.location.people_born_here) (JOIN (R people.person.nationality) m.0b3tf)))"
        }
    },
    "14": {
        "generations": "What genre of music is featured in the film Juice and associated with The Matriarch Agency?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08w51z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08w51z ns:film.film.music ?y .\n?y ns:music.artist.genre ?x .\n?x ns:business.industry.companies ns:m.0130mdf1 .\n}\n",
            "TopicEntityMid": "m.08w51z",
            "mid2name": {
                "ns:m.08w51z": "Juice",
                "ns:m.0130mdf1": "The Matriarch Agency"
            },
            "SExpr_w_name": "(AND (JOIN business.industry.companies The Matriarch Agency) (JOIN (R music.artist.genre) (JOIN (R film.film.music) Juice)))",
            "SExpr": "(AND (JOIN business.industry.companies m.0130mdf1) (JOIN (R music.artist.genre) (JOIN (R film.film.music) m.08w51z)))"
        }
    },
    "15": {
        "generations": "In which film festival did Taken 2 participate in 1998 in San Francisco?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hhggmy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hhggmy ns:film.film.directed_by ?y .\n?y ns:film.director.film ?x .\n?x ns:film.film.film_festivals ns:m.07nwvdk .\n}\n",
            "TopicEntityMid": "m.0hhggmy",
            "mid2name": {
                "ns:m.0hhggmy": "Taken 2",
                "ns:m.07nwvdk": "1998 San Francisco International Film Festival"
            },
            "SExpr_w_name": "(AND (JOIN film.film.film_festivals 1998 San Francisco International Film Festival) (JOIN (R film.director.film) (JOIN (R film.film.directed_by) Taken 2)))",
            "SExpr": "(AND (JOIN film.film.film_festivals m.07nwvdk) (JOIN (R film.director.film) (JOIN (R film.film.directed_by) m.0hhggmy)))"
        }
    },
    "16": {
        "generations": "who did the film set decoration for the movie Taken?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mgx6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mgx6z ns:film.film.film_series ?y .\n?y ns:film.film_series.films_in_series ?x .\n?x ns:film.film.film_set_decoration_by ns:m.0h30f6w .\n}\n",
            "TopicEntityMid": "m.03mgx6z",
            "mid2name": {
                "ns:m.03mgx6z": "Taken",
                "ns:m.0h30f6w": "Linda Spheeris"
            },
            "SExpr_w_name": "(AND (JOIN film.film.film_set_decoration_by Linda Spheeris) (JOIN (R film.film_series.films_in_series) (JOIN (R film.film.film_series) Taken)))",
            "SExpr": "(AND (JOIN film.film.film_set_decoration_by m.0h30f6w) (JOIN (R film.film_series.films_in_series) (JOIN (R film.film.film_series) m.03mgx6z)))"
        }
    },
    "17": {
        "generations": "who founded a business in denver that caters to white people?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cl1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cl1 ns:business.business_location.parent_company ?y .\n?y ns:organization.organization.founders ?x .\n?x ns:people.person.ethnicity ns:m.02ctzb .\n}\n",
            "TopicEntityMid": "m.02cl1",
            "mid2name": {
                "ns:m.02cl1": "Denver",
                "ns:m.02ctzb": "White people"
            },
            "SExpr_w_name": "(AND (JOIN people.person.ethnicity White people) (JOIN (R organization.organization.founders) (JOIN (R business.business_location.parent_company) Denver)))",
            "SExpr": "(AND (JOIN people.person.ethnicity m.02ctzb) (JOIN (R organization.organization.founders) (JOIN (R business.business_location.parent_company) m.02cl1)))"
        }
    },
    "18": {
        "generations": "What is the composition \"Life Can Be So Beautiful, Part(y) 2\" about in relation to London?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jpl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jpl ns:book.book_subject.musical_compositions_about_this_topic ?y .\n?y ns:music.composition.form ?x .\n?x ns:music.compositional_form.compositions ns:m.0zx5zj1 .\n}\n",
            "TopicEntityMid": "m.04jpl",
            "mid2name": {
                "ns:m.04jpl": "London",
                "ns:m.0zx5zj1": "Life Can Be So Beautiful, Part(y) 2"
            },
            "SExpr_w_name": "(AND (JOIN music.compositional_form.compositions Life Can Be So Beautiful, Part(y) 2) (JOIN (R music.composition.form) (JOIN (R book.book_subject.musical_compositions_about_this_topic) London)))",
            "SExpr": "(AND (JOIN music.compositional_form.compositions m.0zx5zj1) (JOIN (R music.composition.form) (JOIN (R book.book_subject.musical_compositions_about_this_topic) m.04jpl)))"
        }
    },
    "19": {
        "generations": "How much damage did the cyclone cause in Jamaica in US dollars?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:meteorology.cyclone_affected_area.cyclones ?y .\n?y ns:meteorology.tropical_cyclone.damages ?x .\n?x ns:measurement_unit.dated_money_value.currency ns:m.09nqf .\n}\n",
            "TopicEntityMid": "m.03_r3",
            "mid2name": {
                "ns:m.03_r3": "Jamaica",
                "ns:m.09nqf": "United States Dollar"
            },
            "SExpr_w_name": "(AND (JOIN measurement_unit.dated_money_value.currency United States Dollar) (JOIN (R meteorology.tropical_cyclone.damages) (JOIN (R meteorology.cyclone_affected_area.cyclones) Jamaica)))",
            "SExpr": "(AND (JOIN measurement_unit.dated_money_value.currency m.09nqf) (JOIN (R meteorology.tropical_cyclone.damages) (JOIN (R meteorology.cyclone_affected_area.cyclones) m.03_r3)))"
        }
    },
    "20": {
        "generations": "who is the coach of the new york rangers that worked with shaun williams?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hmtk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hmtk ns:sports.sports_team.coaches ?y .\n?y ns:sports.sports_team_coach_tenure.position ?x .\n?x ns:people.profession.people_with_this_profession ns:m.01117_zb .\n}\n",
            "TopicEntityMid": "m.0hmtk",
            "mid2name": {
                "ns:m.0hmtk": "New York Rangers",
                "ns:m.01117_zb": "Shaun Williams"
            },
            "SExpr_w_name": "(AND (JOIN people.profession.people_with_this_profession Shaun Williams) (JOIN (R sports.sports_team_coach_tenure.position) (JOIN (R sports.sports_team.coaches) New York Rangers)))",
            "SExpr": "(AND (JOIN people.profession.people_with_this_profession m.01117_zb) (JOIN (R sports.sports_team_coach_tenure.position) (JOIN (R sports.sports_team.coaches) m.0hmtk)))"
        }
    },
    "21": {
        "generations": "What is the hierarchy of courts in Missouri?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ych)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ych ns:law.court_jurisdiction_area.courts ?y .\n?y ns:law.court.superior_courts ?x .\n?x ns:law.court.inferior_courts ns:m.03qj7vv .\n}\n",
            "TopicEntityMid": "m.04ych",
            "mid2name": {
                "ns:m.04ych": "Missouri",
                "ns:m.03qj7vv": "Missouri Court of Appeals"
            },
            "SExpr_w_name": "(AND (JOIN law.court.inferior_courts Missouri Court of Appeals) (JOIN (R law.court.superior_courts) (JOIN (R law.court_jurisdiction_area.courts) Missouri)))",
            "SExpr": "(AND (JOIN law.court.inferior_courts m.03qj7vv) (JOIN (R law.court.superior_courts) (JOIN (R law.court_jurisdiction_area.courts) m.04ych)))"
        }
    },
    "22": {
        "generations": "What is the slogan for the Israel tour operators that targets a specific age group?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03spz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03spz ns:travel.travel_destination.tour_operators ?y .\n?y ns:business.brand.slogans ?x .\n?x ns:business.brand_slogan.slogan ns:m.03gqyyl .\n}\n",
            "TopicEntityMid": "m.03spz",
            "mid2name": {
                "ns:m.03spz": "Israel",
                "ns:m.03gqyyl": "Not Too Young, Not Too Old"
            },
            "SExpr_w_name": "(AND (JOIN business.brand_slogan.slogan Not Too Young, Not Too Old) (JOIN (R business.brand.slogans) (JOIN (R travel.travel_destination.tour_operators) Israel)))",
            "SExpr": "(AND (JOIN business.brand_slogan.slogan m.03gqyyl) (JOIN (R business.brand.slogans) (JOIN (R travel.travel_destination.tour_operators) m.03spz)))"
        }
    },
    "23": {
        "generations": "What sports teams are associated with Indiana State Sycamores football and the United States Air Force Academy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k9wp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k9wp ns:education.educational_institution.sports_teams ?y .\n?y ns:basketball.basketball_team.division ?x .\n?x ns:american_football.football_division.teams ns:m.064k31n .\n}\n",
            "TopicEntityMid": "m.0k9wp",
            "mid2name": {
                "ns:m.0k9wp": "United States Air Force Academy",
                "ns:m.064k31n": "Indiana State Sycamores football"
            },
            "SExpr_w_name": "(AND (JOIN american_football.football_division.teams Indiana State Sycamores footballn) (JOIN (R basketball.basketball_team.division) (JOIN (R education.educational_institution.sports_teams) United States Air Force Academy)))",
            "SExpr": "(AND (JOIN american_football.football_division.teams m.064k31n) (JOIN (R basketball.basketball_team.division) (JOIN (R education.educational_institution.sports_teams) m.0k9wp)))"
        }
    },
    "24": {
        "generations": "who is a fictional character that has the occupation of steven hyde and was adopted by meg griffin's parents?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035szd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035szd ns:user.duck1123.default_domain.adopted_character.adoptive_parents ?y .\n?y ns:fictional_universe.fictional_character.occupation ?x .\n?x ns:fictional_universe.character_occupation.characters_with_this_occupation ns:m.0671sg .\n}\n",
            "TopicEntityMid": "m.035szd",
            "mid2name": {
                "ns:m.035szd": "Meg Griffin",
                "ns:m.0671sg": "Steven Hyde"
            },
            "SExpr_w_name": "(AND (JOIN fictional_universe.character_occupation.characters_with_this_occupation Steven Hyde) (JOIN (R fictional_universe.fictional_character.occupation) (JOIN (R user.duck1123.default_domain.adopted_character.adoptive_parents) Meg Griffin)))",
            "SExpr": "(AND (JOIN fictional_universe.character_occupation.characters_with_this_occupation m.0671sg) (JOIN (R fictional_universe.fictional_character.occupation) (JOIN (R user.duck1123.default_domain.adopted_character.adoptive_parents) m.035szd)))"
        }
    },
    "25": {
        "generations": "what is the internet top level domain for nigeria?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cgv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cgv ns:location.country.internet_tld ?y .\n?y ns:internet.top_level_domain.registry ?x .\n?x ns:internet.top_level_domain_registry.domains ns:m.04l2x2 .\n}\n",
            "TopicEntityMid": "m.05cgv",
            "mid2name": {
                "ns:m.05cgv": "Nigeria",
                "ns:m.04l2x2": "ng"
            },
            "SExpr_w_name": "(AND (JOIN internet.top_level_domain_registry.domains ng) (JOIN (R internet.top_level_domain.registry) (JOIN (R location.country.internet_tld) Nigeria)))",
            "SExpr": "(AND (JOIN internet.top_level_domain_registry.domains m.04l2x2) (JOIN (R internet.top_level_domain.registry) (JOIN (R location.country.internet_tld) m.05cgv)))"
        }
    },
    "26": {
        "generations": "who contributed to rufus wainwright's music recording and was produced by brad albettas?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_t2t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_t2t ns:music.producer.tracks_produced ?y .\n?y ns:music.recording.contributions ?x .\n?x ns:music.track_contribution.contributor ns:m.0dn2yjs .\n}\n",
            "TopicEntityMid": "m.02_t2t",
            "mid2name": {
                "ns:m.02_t2t": "Rufus Wainwright",
                "ns:m.0dn2yjs": "Brad Albetta"
            },
            "SExpr_w_name": "(AND (JOIN music.track_contribution.contributor Brad Albettas) (JOIN (R music.recording.contributions) (JOIN (R music.producer.tracks_produced) Rufus Wainwright)))",
            "SExpr": "(AND (JOIN music.track_contribution.contributor m.0dn2yjs) (JOIN (R music.recording.contributions) (JOIN (R music.producer.tracks_produced) m.02_t2t)))"
        }
    },
    "27": {
        "generations": "did henry clay run for president in the united states?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ct18)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ct18 ns:government.politician.election_campaigns ?y .\n?y ns:government.election_campaign.election ?x .\n?x ns:time.event.instance_of_recurring_event ns:m.07wcy .\n}\n",
            "TopicEntityMid": "m.0ct18",
            "mid2name": {
                "ns:m.0ct18": "Henry Clay",
                "ns:m.07wcy": "United States presidential election"
            },
            "SExpr_w_name": "(AND (JOIN time.event.instance_of_recurring_event United States presidential election) (JOIN (R government.election_campaign.election) (JOIN (R government.politician.election_campaigns) Henry Clay)))",
            "SExpr": "(AND (JOIN time.event.instance_of_recurring_event m.07wcy) (JOIN (R government.election_campaign.election) (JOIN (R government.politician.election_campaigns) m.0ct18)))"
        }
    },
    "28": {
        "generations": "What song features Shaquille O'Neal and has a track called \"How You Like That\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012xdf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012xdf ns:music.featured_artist.recordings ?y .\n?y ns:music.recording.canonical_version ?x .\n?x ns:music.recording.tracks ns:m.0xf1l3c .\n}\n",
            "TopicEntityMid": "m.012xdf",
            "mid2name": {
                "ns:m.012xdf": "Shaquille O'Neal",
                "ns:m.0xf1l3c": "How You Like That (ja, ja, ja)"
            },
            "SExpr_w_name": "(AND (JOIN music.recording.tracks How You Like That (ja, ja, ja)) (JOIN (R music.recording.canonical_version) (JOIN (R music.featured_artist.recordings) Shaquille O'Neal)))",
            "SExpr": "(AND (JOIN music.recording.tracks m.0xf1l3c) (JOIN (R music.recording.canonical_version) (JOIN (R music.featured_artist.recordings) m.012xdf)))"
        }
    },
    "29": {
        "generations": "where was jules verne born and what is the capital of that administrative division?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04093)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04093 ns:people.person.place_of_birth ?y .\n?y ns:location.capital_of_administrative_division.capital_of ?x .\n?x ns:location.administrative_division_capital_relationship.administrative_division ns:m.0mh7s .\n}\n",
            "TopicEntityMid": "m.04093",
            "mid2name": {
                "ns:m.04093": "Jules Verne",
                "ns:m.0mh7s": "Loire-Atlantique"
            },
            "SExpr_w_name": "(AND (JOIN location.administrative_division_capital_relationship.administrative_division Loire-Atlantiques) (JOIN (R location.capital_of_administrative_division.capital_of) (JOIN (R people.person.place_of_birth) Jules Verne)))",
            "SExpr": "(AND (JOIN location.administrative_division_capital_relationship.administrative_division m.0mh7s) (JOIN (R location.capital_of_administrative_division.capital_of) (JOIN (R people.person.place_of_birth) m.04093)))"
        }
    },
    "30": {
        "generations": "what video game did ben stiller do voice acting for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mdqp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mdqp ns:cvg.game_voice_actor.computer_game_voice_performances ?y .\n?y ns:cvg.game_performance.game ?x .\n?x ns:cvg.computer_videogame.cvg_genre ns:m.07yqn .\n}\n",
            "TopicEntityMid": "m.0mdqp",
            "mid2name": {
                "ns:m.0mdqp": "Ben Stiller",
                "ns:m.07yqn": "Platform game"
            },
            "SExpr_w_name": "(AND (JOIN cvg.computer_videogame.cvg_genre Platform gamen) (JOIN (R cvg.game_performance.game) (JOIN (R cvg.game_voice_actor.computer_game_voice_performances) Ben Stiller)))",
            "SExpr": "(AND (JOIN cvg.computer_videogame.cvg_genre m.07yqn) (JOIN (R cvg.game_performance.game) (JOIN (R cvg.game_voice_actor.computer_game_voice_performances) m.0mdqp)))"
        }
    },
    "31": {
        "generations": "Which episode of Daniel Tosh did Jeff Dunham appear in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ch_0g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ch_0g ns:tv.tv_actor.guest_roles ?y .\n?y ns:tv.tv_guest_role.episodes_appeared_in ?x .\n?x ns:tv.tv_series_episode.next_episode ns:m.079d22r .\n}\n",
            "TopicEntityMid": "m.0ch_0g",
            "mid2name": {
                "ns:m.0ch_0g": "Jeff Dunham",
                "ns:m.079d22r": "Daniel Tosh"
            },
            "SExpr_w_name": "(AND (JOIN tv.tv_series_episode.next_episode Daniel Tosh) (JOIN (R tv.tv_guest_role.episodes_appeared_in) (JOIN (R tv.tv_actor.guest_roles) Jeff Dunham)))",
            "SExpr": "(AND (JOIN tv.tv_series_episode.next_episode m.079d22r) (JOIN (R tv.tv_guest_role.episodes_appeared_in) (JOIN (R tv.tv_actor.guest_roles) m.0ch_0g)))"
        }
    },
    "32": {
        "generations": "What is the postal code for the headquarters of a newspaper in the Palestinian territories?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nyg5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nyg5 ns:periodicals.newspaper_circulation_area.newspapers ?y .\n?y ns:book.newspaper.headquarters ?x .\n?x ns:location.mailing_address.postal_code ns:m.03wnkkj .\n}\n",
            "TopicEntityMid": "m.0nyg5",
            "mid2name": {
                "ns:m.0nyg5": "Palestinian territories",
                "ns:m.03wnkkj": "1107 2020"
            },
            "SExpr_w_name": "(AND (JOIN location.mailing_address.postal_code 1107 2020) (JOIN (R book.newspaper.headquarters) (JOIN (R periodicals.newspaper_circulation_area.newspapers) Palestinian territories)))",
            "SExpr": "(AND (JOIN location.mailing_address.postal_code m.03wnkkj) (JOIN (R book.newspaper.headquarters) (JOIN (R periodicals.newspaper_circulation_area.newspapers) m.0nyg5)))"
        }
    },
    "33": {
        "generations": "what award did in living color season 4 win?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dq5zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dq5zq ns:tv.tv_series_season.series ?y .\n?y ns:award.award_winning_work.awards_won ?x .\n?x ns:award.award_honor.honored_for ns:m.01jtxq .\n}\n",
            "TopicEntityMid": "m.04dq5zq",
            "mid2name": {
                "ns:m.04dq5zq": "In Living Color (Season 4)",
                "ns:m.01jtxq": "In Living Color"
            },
            "SExpr_w_name": "(AND (JOIN award.award_honor.honored_for In Living Color) (JOIN (R award.award_winning_work.awards_won) (JOIN (R tv.tv_series_season.series) In Living Color (Season 4))))",
            "SExpr": "(AND (JOIN award.award_honor.honored_for m.01jtxq) (JOIN (R award.award_winning_work.awards_won) (JOIN (R tv.tv_series_season.series) m.04dq5zq)))"
        }
    },
    "34": {
        "generations": "who is the current house representative for montana's congressional district?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050l8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050l8 ns:location.location.coterminous_with ?y .\n?y ns:location.cotermination.location ?x .\n?x ns:user.robert.us_congress.congressional_district.current_house_representative ns:m.02d4rm .\n}\n",
            "TopicEntityMid": "m.050l8",
            "mid2name": {
                "ns:m.050l8": "Montana",
                "ns:m.02d4rm": "Denny Rehberg"
            },
            "SExpr_w_name": "(AND (JOIN user.robert.us_congress.congressional_district.current_house_representative Denny Rehberg) (JOIN (R location.cotermination.location) (JOIN (R location.location.coterminous_with) Montana)))",
            "SExpr": "(AND (JOIN user.robert.us_congress.congressional_district.current_house_representative m.02d4rm) (JOIN (R location.cotermination.location) (JOIN (R location.location.coterminous_with) m.050l8)))"
        }
    },
    "35": {
        "generations": "What time zone is Newfoundland in and what continent is it adjacent to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06n3y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06n3y ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:location.location.time_zones ns:m.05jphn .\n}\n",
            "TopicEntityMid": "m.06n3y",
            "mid2name": {
                "ns:m.06n3y": "South America",
                "ns:m.05jphn": "Newfoundland Time Zone"
            },
            "SExpr_w_name": "(AND (JOIN location.location.time_zones Newfoundland Time Zonen) (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) South America)))",
            "SExpr": "(AND (JOIN location.location.time_zones m.05jphn) (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.06n3y)))"
        }
    },
    "36": {
        "generations": "who was the military commander of cuba during the making of the film fidel: the untold story?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d04z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d04z6 ns:military.military_combatant.military_commanders ?y .\n?y ns:military.military_command.military_commander ?x .\n?x ns:film.film_subject.films ns:m.099l1r .\n}\n",
            "TopicEntityMid": "m.0d04z6",
            "mid2name": {
                "ns:m.0d04z6": "Cuba",
                "ns:m.099l1r": "Fidel: The Untold Story"
            },
            "SExpr_w_name": "(AND (JOIN film.film_subject.films Fidel: The Untold Story) (JOIN (R military.military_command.military_commander) (JOIN (R military.military_combatant.military_commanders) Cuba)))",
            "SExpr": "(AND (JOIN film.film_subject.films m.099l1r) (JOIN (R military.military_command.military_commander) (JOIN (R military.military_combatant.military_commanders) m.0d04z6)))"
        }
    },
    "37": {
        "generations": "who created the character Mason Capwell and who are his parents and children in the fictional universe created by Jerome Dobson?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f3bz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f3bz1 ns:fictional_universe.fictional_character.parents ?y .\n?y ns:fictional_universe.fictional_character.children ?x .\n?x ns:fictional_universe.fictional_character.character_created_by ns:m.0chv580 .\n}\n",
            "TopicEntityMid": "m.04f3bz1",
            "mid2name": {
                "ns:m.04f3bz1": "Mason Capwell",
                "ns:m.0chv580": "Jerome Dobson"
            },
            "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_character.character_created_by Jerome Dobson) (JOIN (R fictional_universe.fictional_character.children) (JOIN (R fictional_universe.fictional_character.parents) Mason Capwell)))",
            "SExpr": "(AND (JOIN fictional_universe.fictional_character.character_created_by m.0chv580) (JOIN (R fictional_universe.fictional_character.children) (JOIN (R fictional_universe.fictional_character.parents) m.04f3bz1)))"
        }
    },
    "38": {
        "generations": "What was Oregon's involvement in the Battle of Antietam?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lkxb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lkxb ns:military.military_conflict.combatants ?y .\n?y ns:military.military_combatant_group.combatants ?x .\n?x ns:location.country.first_level_divisions ns:m.05kj_ .\n}\n",
            "TopicEntityMid": "m.0lkxb",
            "mid2name": {
                "ns:m.0lkxb": "Battle of Antietam",
                "ns:m.05kj_": "Oregon"
            },
            "SExpr_w_name": "(AND (JOIN location.country.first_level_divisions Oregon) (JOIN (R military.military_combatant_group.combatants) (JOIN (R military.military_conflict.combatants) Battle of Antietam)))",
            "SExpr": "(AND (JOIN location.country.first_level_divisions m.05kj_) (JOIN (R military.military_combatant_group.combatants) (JOIN (R military.military_conflict.combatants) m.0lkxb)))"
        }
    },
    "39": {
        "generations": "what language did elizabeth taylor speak in buffy the vampire slayer magazine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bmh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bmh4 ns:people.person.languages ?y .\n?y ns:fictional_universe.fictional_language.found_in_fictional_universe ?x .\n?x ns:book.periodical_subject.periodicals ns:m.0fs0kl .\n}\n",
            "TopicEntityMid": "m.0bmh4",
            "mid2name": {
                "ns:m.0bmh4": "Elizabeth Taylor",
                "ns:m.0fs0kl": "Buffy the Vampire Slayer Magazine"
            },
            "SExpr_w_name": "(AND (JOIN book.periodical_subject.periodicals Buffy the Vampire Slayer Magazine) (JOIN (R fictional_universe.fictional_language.found_in_fictional_universe) (JOIN (R people.person.languages) Elizabeth Taylor)))",
            "SExpr": "(AND (JOIN book.periodical_subject.periodicals m.0fs0kl) (JOIN (R fictional_universe.fictional_language.found_in_fictional_universe) (JOIN (R people.person.languages) m.0bmh4)))"
        }
    },
    "40": {
        "generations": "Who was the authority for information on the London 2012 Summer Olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06vvk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06vvk ns:time.recurring_event.instances ?y .\n?y ns:dataworld.information_source.authority ?x .\n?x ns:dataworld.provenance.source ns:m.06sks6 .\n}\n",
            "TopicEntityMid": "m.06vvk",
            "mid2name": {
                "ns:m.06vvk": "Summer Olympic Games",
                "ns:m.06sks6": "The London 2012 Summer Olympics"
            },
            "SExpr_w_name": "(AND (JOIN dataworld.provenance.source The London 2012 Summer Olympics) (JOIN (R dataworld.information_source.authority) (JOIN (R time.recurring_event.instances) Summer Olympic Games)))",
            "SExpr": "(AND (JOIN dataworld.provenance.source m.06sks6) (JOIN (R dataworld.information_source.authority) (JOIN (R time.recurring_event.instances) m.06vvk)))"
        }
    },
    "41": {
        "generations": "Who is the current head coach of the football team that plays against the Green Bay Packers and which players from the Packers are in the fantasy football team?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03b3j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03b3j ns:user.szaijan.fantasy_football.player.position ?y .\n?y ns:user.szaijan.fantasy_football.position.player ?x .\n?x ns:american_football.football_team.current_head_coach ns:m.06sdgy .\n}\n",
            "TopicEntityMid": "m.03b3j",
            "mid2name": {
                "ns:m.03b3j": "Green Bay Packers",
                "ns:m.06sdgy": "Jeff Fisher"
            },
            "SExpr_w_name": "(AND (JOIN american_football.football_team.current_head_coach Jeff Fisher) (JOIN (R user.szaijan.fantasy_football.position.player) (JOIN (R user.szaijan.fantasy_football.player.position) Green Bay Packers)))",
            "SExpr": "(AND (JOIN american_football.football_team.current_head_coach m.06sdgy) (JOIN (R user.szaijan.fantasy_football.position.player) (JOIN (R user.szaijan.fantasy_football.player.position) m.03b3j)))"
        }
    },
    "42": {
        "generations": "Which character from Family Guy attended Brown University?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027gynh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027gynh ns:tv.tv_series_season.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?x ns:fictional_universe.fictional_character.education ns:m.01bm_ .\n}\n",
            "TopicEntityMid": "m.027gynh",
            "mid2name": {
                "ns:m.027gynh": "Family Guy - Season 1",
                "ns:m.01bm_": "Brown University"
            },
            "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_character.education Brown University) (JOIN (R tv.regular_tv_appearance.character) (JOIN (R tv.tv_series_season.regular_cast) Family Guy - Season 1)))",
            "SExpr": "(AND (JOIN fictional_universe.fictional_character.education m.01bm_) (JOIN (R tv.regular_tv_appearance.character) (JOIN (R tv.tv_series_season.regular_cast) m.027gynh)))"
        }
    },
    "43": {
        "generations": "who dubbed the voice of darth vader in films?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:user.jschell.default_domain.alter_ego.alter_ego_of ?y .\n?y ns:film.film_character.portrayed_in_films_dubbed ?x .\n?x ns:film.dubbing_performance.actor ns:m.03cjp48 .\n}\n",
            "TopicEntityMid": "m.0f2y0",
            "mid2name": {
                "ns:m.0f2y0": "Darth Vader",
                "ns:m.03cjp48": "Reiner Sch\u00f6ne"
            },
            "SExpr_w_name": "(AND (JOIN film.dubbing_performance.actor Reiner Sch\u00f6ne) (JOIN (R film.film_character.portrayed_in_films_dubbed) (JOIN (R user.jschell.default_domain.alter_ego.alter_ego_of) Darth Vader)))",
            "SExpr": "(AND (JOIN film.dubbing_performance.actor m.03cjp48) (JOIN (R film.film_character.portrayed_in_films_dubbed) (JOIN (R user.jschell.default_domain.alter_ego.alter_ego_of) m.0f2y0)))"
        }
    },
    "44": {
        "generations": "What genre of music does Deion Sanders make and who is a popular artist in that genre?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n69x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n69x ns:music.artist.album ?y .\n?y ns:music.album.genre ?x .\n?x ns:music.genre.artists ns:m.04q0flj .\n}\n",
            "TopicEntityMid": "m.03n69x",
            "mid2name": {
                "ns:m.03n69x": "Deion Sanders",
                "ns:m.04q0flj": "Barikad Crew"
            },
            "SExpr_w_name": "(AND (JOIN music.genre.artists Barikad Crew) (JOIN (R music.album.genre) (JOIN (R music.artist.album) Deion Sanders)))",
            "SExpr": "(AND (JOIN music.genre.artists m.04q0flj) (JOIN (R music.album.genre) (JOIN (R music.artist.album) m.03n69x)))"
        }
    },
    "45": {
        "generations": "who is the baseball coach Futoshi Nakanishi?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018jz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018jz ns:sports.sport.positions ?y .\n?y ns:sports.coaching_position.coaches ?x .\n?x ns:sports.sports_team_coach_tenure.coach ns:m.0nbgdsg .\n}\n",
            "TopicEntityMid": "m.018jz",
            "mid2name": {
                "ns:m.018jz": "Baseball",
                "ns:m.0nbgdsg": "Futoshi Nakanishi"
            },
            "SExpr_w_name": "(AND (JOIN sports.sports_team_coach_tenure.coach Futoshi Nakanishi) (JOIN (R sports.coaching_position.coaches) (JOIN (R sports.sport.positions) Baseball)))",
            "SExpr": "(AND (JOIN sports.sports_team_coach_tenure.coach m.0nbgdsg) (JOIN (R sports.coaching_position.coaches) (JOIN (R sports.sport.positions) m.018jz)))"
        }
    },
    "46": {
        "generations": "Did Joe Montana act in any horror movies?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r6hc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r6hc ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n?x ns:film.film.genre ns:m.03npn .\n}\n",
            "TopicEntityMid": "m.01r6hc",
            "mid2name": {
                "ns:m.01r6hc": "Joe Montana",
                "ns:m.03npn": "Horror"
            },
            "SExpr_w_name": "(AND (JOIN film.film.genre Horrorn) (JOIN (R film.performance.film) (JOIN (R film.actor.film) Joe Montana)))",
            "SExpr": "(AND (JOIN film.film.genre m.03npn) (JOIN (R film.performance.film) (JOIN (R film.actor.film) m.01r6hc)))"
        }
    },
    "47": {
        "generations": "Did Saint Lucia participate in the 2010 Commonwealth Games?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06s0l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06s0l ns:location.country.currency_used ?y .\n?y ns:finance.currency.countries_used ?x .\n?x ns:sports.sport_country.multi_event_tournaments_participated_in ns:m.01_z6_ .\n}\n",
            "TopicEntityMid": "m.06s0l",
            "mid2name": {
                "ns:m.06s0l": "Saint Lucia",
                "ns:m.01_z6_": "2010 Commonwealth Games"
            },
            "SExpr_w_name": "(AND (JOIN sports.sport_country.multi_event_tournaments_participated_in 2010 Commonwealth Games) (JOIN (R finance.currency.countries_used) (JOIN (R location.country.currency_used) Saint Lucia)))",
            "SExpr": "(AND (JOIN sports.sport_country.multi_event_tournaments_participated_in m.01_z6_) (JOIN (R finance.currency.countries_used) (JOIN (R location.country.currency_used) m.06s0l)))"
        }
    },
    "48": {
        "generations": "Which albums were released by Glenn Miller or Benny Goodman that feature contributions from Judy Garland?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g10g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g10g ns:music.artist.contribution ?y .\n?y ns:music.recording_contribution.album ?x .\n?x ns:music.album.releases ns:m.0qdlr33 .\n}\n",
            "TopicEntityMid": "m.0g10g",
            "mid2name": {
                "ns:m.0g10g": "Judy Garland",
                "ns:m.0qdlr33": "Glenn Miller / Benny Goodman"
            },
            "SExpr_w_name": "(AND (JOIN music.album.releases Glenn Miller / Benny Goodman) (JOIN (R music.recording_contribution.album) (JOIN (R music.artist.contribution) Judy Garland)))",
            "SExpr": "(AND (JOIN music.album.releases m.0qdlr33) (JOIN (R music.recording_contribution.album) (JOIN (R music.artist.contribution) m.0g10g)))"
        }
    },
    "49": {
        "generations": "What division are the Arizona Cardinals in and which team is in the same conference as the Carolina Panthers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ws7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ws7 ns:american_football.football_team.division ?y .\n?y ns:american_football.football_division.conference ?x .\n?x ns:american_football.football_conference.teams ns:m.01y3c .\n}\n",
            "TopicEntityMid": "m.0ws7",
            "mid2name": {
                "ns:m.0ws7": "Arizona Cardinals",
                "ns:m.01y3c": "Carolina Panthers"
            },
            "SExpr_w_name": "(AND (JOIN american_football.football_conference.teams Carolina Panthers) (JOIN (R american_football.football_division.conference) (JOIN (R american_football.football_team.division) Arizona Cardinals)))",
            "SExpr": "(AND (JOIN american_football.football_conference.teams m.01y3c) (JOIN (R american_football.football_division.conference) (JOIN (R american_football.football_team.division) m.0ws7)))"
        }
    },
    "50": {
        "generations": "What is the classification of the Brattleboro rat and where did the breed originate?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v3q ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.rank ?x .\n?x ns:biology.organism_classification_rank.organism_classifications ns:m.03c6syn .\n}\n",
            "TopicEntityMid": "m.04v3q",
            "mid2name": {
                "ns:m.04v3q": "Malta",
                "ns:m.03c6syn": "Brattleboro rat"
            },
            "SExpr_w_name": "(AND (JOIN biology.organism_classification_rank.organism_classifications Brattleboro ratn) (JOIN (R biology.organism_classification.rank) (JOIN (R biology.breed_origin.breeds_originating_here) Malta)))",
            "SExpr": "(AND (JOIN biology.organism_classification_rank.organism_classifications m.03c6syn) (JOIN (R biology.organism_classification.rank) (JOIN (R biology.breed_origin.breeds_originating_here) m.04v3q)))"
        }
    },
    "51": {
        "generations": "who directed the episode of jonas brothers that mark cendrowski appeared on?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cbm64)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cbm64 ns:tv.tv_program_guest.appeared_on ?y .\n?y ns:tv.tv_guest_personal_appearance.episode ?x .\n?x ns:tv.tv_series_episode.director ns:m.0bsky2 .\n}\n",
            "TopicEntityMid": "m.0cbm64",
            "mid2name": {
                "ns:m.0cbm64": "Jonas Brothers",
                "ns:m.0bsky2": "Mark Cendrowski"
            },
            "SExpr_w_name": "(AND (JOIN tv.tv_series_episode.director Mark Cendrowski) (JOIN (R tv.tv_guest_personal_appearance.episode) (JOIN (R tv.tv_program_guest.appeared_on) Jonas Brothers)))",
            "SExpr": "(AND (JOIN tv.tv_series_episode.director m.0bsky2) (JOIN (R tv.tv_guest_personal_appearance.episode) (JOIN (R tv.tv_program_guest.appeared_on) m.0cbm64)))"
        }
    },
    "52": {
        "generations": "which artwork in Mitla, Oaxaca was created by Mathew Brady?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.028vw5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.028vw5 ns:visual_art.visual_artist.artworks ?y .\n?y ns:visual_art.artwork.media ?x .\n?x ns:visual_art.visual_art_medium.artworks ns:m.03q6lbv .\n}\n",
            "TopicEntityMid": "m.028vw5",
            "mid2name": {
                "ns:m.028vw5": "Mathew Brady",
                "ns:m.03q6lbv": "Maison du Cur\u00e9 - Mitla, Oaxaca"
            },
            "SExpr_w_name": "(AND (JOIN visual_art.visual_art_medium.artworks Maison du Cur\u00e9 - Mitla, Oaxaca) (JOIN (R visual_art.artwork.media) (JOIN (R visual_art.visual_artist.artworks) Mathew Brady)))",
            "SExpr": "(AND (JOIN visual_art.visual_art_medium.artworks m.03q6lbv) (JOIN (R visual_art.artwork.media) (JOIN (R visual_art.visual_artist.artworks) m.028vw5)))"
        }
    },
    "53": {
        "generations": "who was the prime minister of belgium?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0154j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0154j ns:government.governmental_jurisdiction.government_positions ?y .\n?y ns:government.government_office_or_title.office_holders ?x .\n?x ns:government.government_position_held.office_position_or_title ns:m.0df7_c8 .\n}\n",
            "TopicEntityMid": "m.0154j",
            "mid2name": {
                "ns:m.0154j": "Belgium",
                "ns:m.0df7_c8": "Prime Minister of Belgium"
            },
            "SExpr_w_name": "(AND (JOIN government.government_position_held.office_position_or_title Prime Minister of Belgium) (JOIN (R government.government_office_or_title.office_holders) (JOIN (R government.governmental_jurisdiction.government_positions) Belgium)))",
            "SExpr": "(AND (JOIN government.government_position_held.office_position_or_title m.0df7_c8) (JOIN (R government.government_office_or_title.office_holders) (JOIN (R government.governmental_jurisdiction.government_positions) m.0154j)))"
        }
    },
    "54": {
        "generations": "what organization was founded by napoleon bonaparte and has a board membership in the legion of honour?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j5b8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j5b8 ns:royalty.chivalric_order_founder.orders_founded ?y .\n?y ns:organization.organization.board_members ?x .\n?x ns:organization.organization_board_membership.organization ns:m.0154yf .\n}\n",
            "TopicEntityMid": "m.0j5b8",
            "mid2name": {
                "ns:m.0j5b8": "Napoleon Bonaparte",
                "ns:m.0154yf": "Legion of Honour"
            },
            "SExpr_w_name": "(AND (JOIN organization.organization_board_membership.organization Legion of Honour) (JOIN (R organization.organization.board_members) (JOIN (R royalty.chivalric_order_founder.orders_founded) Napoleon Bonaparte)))",
            "SExpr": "(AND (JOIN organization.organization_board_membership.organization m.0154yf) (JOIN (R organization.organization.board_members) (JOIN (R royalty.chivalric_order_founder.orders_founded) m.0j5b8)))"
        }
    },
    "55": {
        "generations": "What wind instrument did Michael Jackson collect?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:music.group_member.instruments_played ?y .\n?y ns:interests.collectable_item.in_collections ?x .\n?x ns:interests.collection.items ns:m.0859_ .\n}\n",
            "TopicEntityMid": "m.09889g",
            "mid2name": {
                "ns:m.09889g": "Michael Jackson",
                "ns:m.0859_": "Wind instrument"
            },
            "SExpr_w_name": "(AND (JOIN interests.collection.items Wind instrument) (JOIN (R interests.collectable_item.in_collections) (JOIN (R music.group_member.instruments_played) Michael Jackson)))",
            "SExpr": "(AND (JOIN interests.collection.items m.0859_) (JOIN (R interests.collectable_item.in_collections) (JOIN (R music.group_member.instruments_played) m.09889g)))"
        }
    },
    "56": {
        "generations": "What advertising campaign did Pretty Little Liars run called #TheBetrAyal?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09v38qj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09v38qj ns:user.micahsaul.advertising.advertised_thing.ad_campaigns ?y .\n?y ns:user.micahsaul.advertising.ad_campaign.advertiser ?x .\n?x ns:user.micahsaul.advertising.advertiser.ad_campaigns ns:m.0zfk9s4 .\n}\n",
            "TopicEntityMid": "m.09v38qj",
            "mid2name": {
                "ns:m.09v38qj": "Pretty Little Liars",
                "ns:m.0zfk9s4": "Pretty Little Liars #TheBetrAyal campaign"
            },
            "SExpr_w_name": "(AND (JOIN user.micahsaul.advertising.advertiser.ad_campaigns Pretty Little Liars #TheBetrAyal campaign) (JOIN (R user.micahsaul.advertising.ad_campaign.advertiser) (JOIN (R user.micahsaul.advertising.advertised_thing.ad_campaigns) Pretty Little Liars)))",
            "SExpr": "(AND (JOIN user.micahsaul.advertising.advertiser.ad_campaigns m.0zfk9s4) (JOIN (R user.micahsaul.advertising.ad_campaign.advertiser) (JOIN (R user.micahsaul.advertising.advertised_thing.ad_campaigns) m.09v38qj)))"
        }
    },
    "57": {
        "generations": "What is the Old Assembly Hall of Colet Court and what kind of school is it associated with?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07g47h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07g47h ns:education.school_category.schools_of_this_kind ?y .\n?y ns:architecture.architectural_structure_owner.structures_owned ?x .\n?x ns:architecture.ownership.structure ns:m.0h3565l .\n}\n",
            "TopicEntityMid": "m.07g47h",
            "mid2name": {
                "ns:m.07g47h": "Preparatory school",
                "ns:m.0h3565l": "Old Assembly Hall of Colet Court"
            },
            "SExpr_w_name": "(AND (JOIN architecture.ownership.structure Old Assembly Hall of Colet Court) (JOIN (R architecture.architectural_structure_owner.structures_owned) (JOIN (R education.school_category.schools_of_this_kind) Preparatory school)))",
            "SExpr": "(AND (JOIN architecture.ownership.structure m.0h3565l) (JOIN (R architecture.architectural_structure_owner.structures_owned) (JOIN (R education.school_category.schools_of_this_kind) m.07g47h)))"
        }
    },
    "58": {
        "generations": "What was the previous and next event in the Albanian First Division in the 2009-10 season?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jdx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jdx ns:location.location.events ?y .\n?y ns:time.event.previous_in_series ?x .\n?x ns:time.event.next_in_series ns:m.0g59565 .\n}\n",
            "TopicEntityMid": "m.0jdx",
            "mid2name": {
                "ns:m.0jdx": "Albania",
                "ns:m.0g59565": "2009\u201310 Albanian First Division"
            },
            "SExpr_w_name": "(AND (JOIN time.event.next_in_series 2009\u201310 Albanian First Division) (JOIN (R time.event.previous_in_series) (JOIN (R location.location.events) Albania)))",
            "SExpr": "(AND (JOIN time.event.next_in_series m.0g59565) (JOIN (R time.event.previous_in_series) (JOIN (R location.location.events) m.0jdx)))"
        }
    },
    "59": {
        "generations": "Who is the commander-in-chief of the emperor's fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rbq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rbq ns:fictional_universe.fictional_job_title.fictional_characters_with_this_job ?y .\n?y ns:fictional_universe.fictional_employment_tenure.employer ?x .\n?x ns:fictional_universe.fictional_character.rank ns:m.01lqvg .\n}\n",
            "TopicEntityMid": "m.02rbq",
            "mid2name": {
                "ns:m.02rbq": "Emperor",
                "ns:m.01lqvg": "Commander-in-chief"
            },
            "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_character.rank Commander-in-chief) (JOIN (R fictional_universe.fictional_employment_tenure.employer) (JOIN (R fictional_universe.fictional_job_title.fictional_characters_with_this_job) Emperor)))",
            "SExpr": "(AND (JOIN fictional_universe.fictional_character.rank m.01lqvg) (JOIN (R fictional_universe.fictional_employment_tenure.employer) (JOIN (R fictional_universe.fictional_job_title.fictional_characters_with_this_job) m.02rbq)))"
        }
    },
    "60": {
        "generations": "which album features the song \"Sunset Road\" produced by B\u00e9la Fleck and the Flecktones?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017f9r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017f9r ns:music.producer.releases_produced ?y .\n?y ns:music.release.track ?x .\n?x ns:music.single.versions ns:m.0f_bdtm .\n}\n",
            "TopicEntityMid": "m.017f9r",
            "mid2name": {
                "ns:m.017f9r": "B\u00e9la Fleck and the Flecktones",
                "ns:m.0f_bdtm": "Sunset Road"
            },
            "SExpr_w_name": "(AND (JOIN music.single.versions Sunset Road) (JOIN (R music.release.track) (JOIN (R music.producer.releases_produced) B\u00e9la Fleck and the Flecktones)))",
            "SExpr": "(AND (JOIN music.single.versions m.0f_bdtm) (JOIN (R music.release.track) (JOIN (R music.producer.releases_produced) m.017f9r)))"
        }
    },
    "61": {
        "generations": "which fictional universe was created by janet morris and features a language spoken by egyptians?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025tvhm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025tvhm ns:people.ethnicity.languages_spoken ?y .\n?y ns:fictional_universe.fictional_language.where_spoken ?x .\n?x ns:fictional_universe.fictional_universe.created_by ns:m.0dzxdk .\n}\n",
            "TopicEntityMid": "m.025tvhm",
            "mid2name": {
                "ns:m.025tvhm": "Egyptians",
                "ns:m.0dzxdk": "Janet Morris"
            },
            "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_universe.created_by Janet Morris) (JOIN (R fictional_universe.fictional_language.where_spoken) (JOIN (R people.ethnicity.languages_spoken) Egyptians)))",
            "SExpr": "(AND (JOIN fictional_universe.fictional_universe.created_by m.0dzxdk) (JOIN (R fictional_universe.fictional_language.where_spoken) (JOIN (R people.ethnicity.languages_spoken) m.025tvhm)))"
        }
    },
    "62": {
        "generations": "How often does the United States presidential inauguration occur and what is the frequency unit used to describe it?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bxbl6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bxbl6 ns:time.recurring_event.current_frequency ?y .\n?y ns:user.gogza.default_domain.recurring_period.period ?x .\n?x ns:measurement_unit.measurement_system.frequency_units ns:m.0kfm_6x .\n}\n",
            "TopicEntityMid": "m.03bxbl6",
            "mid2name": {
                "ns:m.03bxbl6": "United States presidential inauguration",
                "ns:m.0kfm_6x": "Biannual"
            },
            "SExpr_w_name": "(AND (JOIN measurement_unit.measurement_system.frequency_units Biannual) (JOIN (R user.gogza.default_domain.recurring_period.period) (JOIN (R time.recurring_event.current_frequency) United States presidential inauguration)))",
            "SExpr": "(AND (JOIN measurement_unit.measurement_system.frequency_units m.0kfm_6x) (JOIN (R user.gogza.default_domain.recurring_period.period) (JOIN (R time.recurring_event.current_frequency) m.03bxbl6)))"
        }
    },
    "63": {
        "generations": "What is the name of the island partially located in Alameda?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s0c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s0c ns:geography.geographical_feature_category.subcategories ?y .\n?y ns:geography.geographical_feature_category.features ?x .\n?x ns:location.location.partially_contains ns:m.0135g .\n}\n",
            "TopicEntityMid": "m.03s0c",
            "mid2name": {
                "ns:m.03s0c": "Island",
                "ns:m.0135g": "Alameda"
            },
            "SExpr_w_name": "(AND (JOIN location.location.partially_contains Alameda) (JOIN (R geography.geographical_feature_category.features) (JOIN (R geography.geographical_feature_category.subcategories) Island)))",
            "SExpr": "(AND (JOIN location.location.partially_contains m.0135g) (JOIN (R geography.geographical_feature_category.features) (JOIN (R geography.geographical_feature_category.subcategories) m.03s0c)))"
        }
    },
    "64": {
        "generations": "who ruled the beylik of tunis?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07fj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07fj_ ns:royalty.kingdom.rulers ?y .\n?y ns:people.family_member.family ?x .\n?x ns:royalty.royal_line.kingdom_s_ruled ns:m.02pxfzb .\n}\n",
            "TopicEntityMid": "m.07fj_",
            "mid2name": {
                "ns:m.07fj_": "Tunisia",
                "ns:m.02pxfzb": "Beylik of Tunis"
            },
            "SExpr_w_name": "(AND (JOIN royalty.royal_line.kingdom_s_ruled Beylik of Tunis) (JOIN (R people.family_member.family) (JOIN (R royalty.kingdom.rulers) Tunisia)))",
            "SExpr": "(AND (JOIN royalty.royal_line.kingdom_s_ruled m.02pxfzb) (JOIN (R people.family_member.family) (JOIN (R royalty.kingdom.rulers) m.07fj_)))"
        }
    },
    "65": {
        "generations": "which fictional universe does \u00c9owyn appear in that contains Rh\u00fbn?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gynx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gynx ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_setting.contained_by ?x .\n?x ns:fictional_universe.fictional_setting.contains ns:m.028_qv .\n}\n",
            "TopicEntityMid": "m.0gynx",
            "mid2name": {
                "ns:m.0gynx": "\u00c9owyn",
                "ns:m.028_qv": "Rh\u00fbn"
            },
            "SExpr_w_name": "(AND (JOIN fictional_universe.fictional_setting.contains Rh\u00fbn) (JOIN (R fictional_universe.fictional_setting.contained_by) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) \u00c9owyn)))",
            "SExpr": "(AND (JOIN fictional_universe.fictional_setting.contains m.028_qv) (JOIN (R fictional_universe.fictional_setting.contained_by) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0gynx)))"
        }
    },
    "66": {
        "generations": "Who is a character of the Elsa Bloodstone species and was born in Madrid?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.056_y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.056_y ns:fictional_universe.fictional_setting.fictional_characters_born_here ?y .\n?y ns:fictional_universe.fictional_character.species ?x .\n?x ns:fictional_universe.character_species.characters_of_this_species ns:m.0db5jj .\n}\n",
            "TopicEntityMid": "m.056_y",
            "mid2name": {
                "ns:m.056_y": "Madrid",
                "ns:m.0db5jj": "Elsa Bloodstone"
            },
            "SExpr_w_name": "(AND (JOIN fictional_universe.character_species.characters_of_this_species Elsa Bloodstone) (JOIN (R fictional_universe.fictional_character.species) (JOIN (R fictional_universe.fictional_setting.fictional_characters_born_here) Madrid)))",
            "SExpr": "(AND (JOIN fictional_universe.character_species.characters_of_this_species m.0db5jj) (JOIN (R fictional_universe.fictional_character.species) (JOIN (R fictional_universe.fictional_setting.fictional_characters_born_here) m.056_y)))"
        }
    },
    "67": {
        "generations": "What music album was released around the same time as The Twilight Saga: Breaking Dawn - Part 1?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.075wx89)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.075wx89 ns:film.film.release_date_s ?y .\n?y ns:film.film_regional_release_date.film_release_distribution_medium ?x .\n?x ns:music.release_component.package ns:m.0bf68q1 .\n}\n",
            "TopicEntityMid": "m.075wx89",
            "mid2name": {
                "ns:m.075wx89": "The Twilight Saga: Breaking Dawn - Part 1",
                "ns:m.0bf68q1": "Ella\u2026 Of Thee I Swing"
            },
            "SExpr_w_name": "(AND (JOIN music.release_component.package Ella\u2026 Of Thee I Swing) (JOIN (R film.film_regional_release_date.film_release_distribution_medium) (JOIN (R film.film.release_date_s) The Twilight Saga: Breaking Dawn - Part 1)))",
            "SExpr": "(AND (JOIN music.release_component.package m.0bf68q1) (JOIN (R film.film_regional_release_date.film_release_distribution_medium) (JOIN (R film.film.release_date_s) m.075wx89)))"
        }
    },
    "68": {
        "generations": "Did Nicholas Sparks publish an edition of The Road with a specific binding?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0328bl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0328bl ns:book.author.book_editions_published ?y .\n?y ns:book.book_edition.binding ?x .\n?x ns:book.book.editions ns:m.012gjz8t .\n}\n",
            "TopicEntityMid": "m.0328bl",
            "mid2name": {
                "ns:m.0328bl": "Nicholas Sparks",
                "ns:m.012gjz8t": "The Road"
            },
            "SExpr_w_name": "(AND (JOIN book.book.editions The Road) (JOIN (R book.book_edition.binding) (JOIN (R book.author.book_editions_published) Nicholas Sparks)))",
            "SExpr": "(AND (JOIN book.book.editions m.012gjz8t) (JOIN (R book.book_edition.binding) (JOIN (R book.author.book_editions_published) m.0328bl)))"
        }
    },
    "69": {
        "generations": "who invented basketball and what position does kevin durant play?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gxrc1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gxrc1 ns:basketball.basketball_player.position_s ?y .\n?y ns:sports.sports_position.sport ?x .\n?x ns:law.invention.inventor ns:m.0lvh5 .\n}\n",
            "TopicEntityMid": "m.0gxrc1",
            "mid2name": {
                "ns:m.0gxrc1": "Kevin Durant",
                "ns:m.0lvh5": "James Naismith"
            },
            "SExpr_w_name": "(AND (JOIN law.invention.inventor James Naismith) (JOIN (R sports.sports_position.sport) (JOIN (R basketball.basketball_player.position_s) Kevin Durant)))",
            "SExpr": "(AND (JOIN law.invention.inventor m.0lvh5) (JOIN (R sports.sports_position.sport) (JOIN (R basketball.basketball_player.position_s) m.0gxrc1)))"
        }
    },
    "70": {
        "generations": "What conferences are about Cardiff Digital and require a Bachelor's degree?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019v9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019v9k ns:education.educational_degree.people_with_this_degree ?y .\n?y ns:education.education.minor ?x .\n?x ns:conferences.conference_subject.specific_conferences_about_this ns:m.0y47dch .\n}\n",
            "TopicEntityMid": "m.019v9k",
            "mid2name": {
                "ns:m.019v9k": "Bachelor's degree",
                "ns:m.0y47dch": "Cardiff Digital"
            },
            "SExpr_w_name": "(AND (JOIN conferences.conference_subject.specific_conferences_about_this Cardiff Digital) (JOIN (R education.education.minor) (JOIN (R education.educational_degree.people_with_this_degree) Bachelor's degree)))",
            "SExpr": "(AND (JOIN conferences.conference_subject.specific_conferences_about_this m.0y47dch) (JOIN (R education.education.minor) (JOIN (R education.educational_degree.people_with_this_degree) m.019v9k)))"
        }
    },
    "71": {
        "generations": "What is the liquid formulation of a drug that contains Angelica archangelica, cimicifuga racemosa, zincum gluconicum, funiculus umbilicalis suis, lymph node, oophorinum, uterus, glandula suprarenalis, thyroidinum, and is marketed to prevent conditions that Gardasil also prevents?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dnv87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dnv87 ns:medicine.condition_prevention_factors.conditions_this_may_prevent ?y .\n?y ns:medicine.drug_ingredient.active_moiety_of_drug ?x .\n?x ns:medicine.drug.marketed_formulations ns:m.0hqth80 .\n}\n",
            "TopicEntityMid": "m.0dnv87",
            "mid2name": {
                "ns:m.0dnv87": "Gardasil",
                "ns:m.0hqth80": "Angelica archangelica, cimicifuga racemosa, zincum gluconicum, funiculus umbilicalis suis, lymph node, oophorinum, uterus, glandula suprarenalis, thyroidinum, 3/3/12/60/60/60/60/30/12/30/30/12/12/9/8/8/8/8/9/12/6 liquid"
            },
            "SExpr_w_name": "(AND (JOIN medicine.drug.marketed_formulations Angelica archangelica, cimicifuga racemosa, zincum gluconicum, funiculus umbilicalis suis, lymph node, oophorinum, uterus, glandula suprarenalis, thyroidinum, 3/3/12/60/60/60/60/30/12/30/30/12/12/9/8/8/8/8/9/12/6 liquid) (JOIN (R medicine.drug_ingredient.active_moiety_of_drug) (JOIN (R medicine.condition_prevention_factors.conditions_this_may_prevent) Gardasil)))",
            "SExpr": "(AND (JOIN medicine.drug.marketed_formulations m.0hqth80) (JOIN (R medicine.drug_ingredient.active_moiety_of_drug) (JOIN (R medicine.condition_prevention_factors.conditions_this_may_prevent) m.0dnv87)))"
        }
    },
    "72": {
        "generations": "Who substituted Adri\u00e1n L\u00f3pez \u00c1lvarez in the UEFA Champions League Final?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nblxt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nblxt ns:sports.sports_championship.events ?y .\n?y ns:soccer.football_match.substitution ?x .\n?x ns:soccer.football_player_substitution.on ns:m.02rm62s .\n}\n",
            "TopicEntityMid": "m.05nblxt",
            "mid2name": {
                "ns:m.05nblxt": "UEFA Champions League Final",
                "ns:m.02rm62s": "Adri\u00e1n L\u00f3pez \u00c1lvarez"
            },
            "SExpr_w_name": "(AND (JOIN soccer.football_player_substitution.on Adri\u00e1n L\u00f3pez \u00c1lvarezs) (JOIN (R soccer.football_match.substitution) (JOIN (R sports.sports_championship.events) UEFA Champions League Final)))",
            "SExpr": "(AND (JOIN soccer.football_player_substitution.on m.02rm62s) (JOIN (R soccer.football_match.substitution) (JOIN (R sports.sports_championship.events) m.05nblxt)))"
        }
    },
    "73": {
        "generations": "What programming language paradigm is used by Lasso and on which computing platform is it supported for Microsoft Windows?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04r_8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04r_8 ns:computer.computing_platform.file_formats_supported ?y .\n?y ns:computer.file_format.genre ?x .\n?x ns:computer.programming_language_paradigm.languages ns:m.02ldnl .\n}\n",
            "TopicEntityMid": "m.04r_8",
            "mid2name": {
                "ns:m.04r_8": "Microsoft Windows",
                "ns:m.02ldnl": "Lasso"
            },
            "SExpr_w_name": "(AND (JOIN computer.programming_language_paradigm.languages Lasso) (JOIN (R computer.file_format.genre) (JOIN (R computer.computing_platform.file_formats_supported) Microsoft Windows)))",
            "SExpr": "(AND (JOIN computer.programming_language_paradigm.languages m.02ldnl) (JOIN (R computer.file_format.genre) (JOIN (R computer.computing_platform.file_formats_supported) m.04r_8)))"
        }
    },
    "74": {
        "generations": "is cam newton in the pro football hall of fame?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02phnp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02phnp7 ns:sports.pro_athlete.sports_played_professionally ?y .\n?y ns:sports.pro_sports_played.sport ?x .\n?x ns:award.hall_of_fame_discipline.halls_of_fame ns:m.01nzmp .\n}\n",
            "TopicEntityMid": "m.02phnp7",
            "mid2name": {
                "ns:m.02phnp7": "Cam Newton",
                "ns:m.01nzmp": "Pro Football Hall of Fame"
            },
            "SExpr_w_name": "(AND (JOIN award.hall_of_fame_discipline.halls_of_fame Pro Football Hall of Fame) (JOIN (R sports.pro_sports_played.sport) (JOIN (R sports.pro_athlete.sports_played_professionally) Cam Newton)))",
            "SExpr": "(AND (JOIN award.hall_of_fame_discipline.halls_of_fame m.01nzmp) (JOIN (R sports.pro_sports_played.sport) (JOIN (R sports.pro_athlete.sports_played_professionally) m.02phnp7)))"
        }
    },
    "75": {
        "generations": "what is the rating of the movie Up in the UK?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rn00y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rn00y ns:film.film.film_format ?y .\n?y ns:film.film_format.film_format ?x .\n?x ns:film.film.rating ns:m.0kprcv .\n}\n",
            "TopicEntityMid": "m.02rn00y",
            "mid2name": {
                "ns:m.02rn00y": "Up",
                "ns:m.0kprcv": "UK: PG"
            },
            "SExpr_w_name": "(AND (JOIN film.film.rating UK: PG) (JOIN (R film.film_format.film_format) (JOIN (R film.film.film_format) Up)))",
            "SExpr": "(AND (JOIN film.film.rating m.0kprcv) (JOIN (R film.film_format.film_format) (JOIN (R film.film.film_format) m.02rn00y)))"
        }
    },
    "76": {
        "generations": "What local transportation can be used to get to the filming location of American Idol season 5?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09zcyj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09zcyj ns:award.competition.instance_of_recurring_competition ?y .\n?y ns:tv.tv_program.filming_locations ?x .\n?x ns:travel.travel_destination.local_transportation ns:m.02t5_b .\n}\n",
            "TopicEntityMid": "m.09zcyj",
            "mid2name": {
                "ns:m.09zcyj": "American Idol - Season 5",
                "ns:m.02t5_b": "Metrolink"
            },
            "SExpr_w_name": "(AND (JOIN travel.travel_destination.local_transportation Metrolink) (JOIN (R tv.tv_program.filming_locations) (JOIN (R award.competition.instance_of_recurring_competition) American Idol - Season 5)))",
            "SExpr": "(AND (JOIN travel.travel_destination.local_transportation m.02t5_b) (JOIN (R tv.tv_program.filming_locations) (JOIN (R award.competition.instance_of_recurring_competition) m.09zcyj)))"
        }
    },
    "77": {
        "generations": "In which city did the Olympics take place when Shawn Johnson competed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026sgt0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026sgt0 ns:olympics.olympic_athlete.country ?y .\n?y ns:olympics.olympic_athlete_affiliation.olympics ?x .\n?x ns:olympics.olympic_games.host_city ns:m.01914 .\n}\n",
            "TopicEntityMid": "m.026sgt0",
            "mid2name": {
                "ns:m.026sgt0": "Shawn Johnson",
                "ns:m.01914": "Beijing"
            },
            "SExpr_w_name": "(AND (JOIN olympics.olympic_games.host_city Beijing) (JOIN (R olympics.olympic_athlete_affiliation.olympics) (JOIN (R olympics.olympic_athlete.country) Shawn Johnson)))",
            "SExpr": "(AND (JOIN olympics.olympic_games.host_city m.01914) (JOIN (R olympics.olympic_athlete_affiliation.olympics) (JOIN (R olympics.olympic_athlete.country) m.026sgt0)))"
        }
    },
    "78": {
        "generations": "What sport do Jordan Tillsonn and Ronaldo play?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hhqw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hhqw ns:soccer.football_player.position_s ?y .\n?y ns:sports.sport.pro_athletes ?x .\n?x ns:sports.pro_sports_played.athlete ns:m.010hrnvn .\n}\n",
            "TopicEntityMid": "m.0hhqw",
            "mid2name": {
                "ns:m.0hhqw": "Ronaldo",
                "ns:m.010hrnvn": "Jordan Tillson"
            },
            "SExpr_w_name": "(AND (JOIN sports.pro_sports_played.athlete Jordan Tillsonn) (JOIN (R sports.sport.pro_athletes) (JOIN (R soccer.football_player.position_s) Ronaldo)))",
            "SExpr": "(AND (JOIN sports.pro_sports_played.athlete m.010hrnvn) (JOIN (R sports.sport.pro_athletes) (JOIN (R soccer.football_player.position_s) m.0hhqw)))"
        }
    },
    "79": {
        "generations": "who is a member of the arizona house of representatives?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vmt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vmt ns:government.governmental_jurisdiction.government_bodies ?y .\n?y ns:government.governmental_body.component_bodies ?x .\n?x ns:government.governmental_body.offices_positions ns:m.0zs2pws .\n}\n",
            "TopicEntityMid": "m.0vmt",
            "mid2name": {
                "ns:m.0vmt": "Arizona",
                "ns:m.0zs2pws": "Member of Arizona House of Representatives"
            },
            "SExpr_w_name": "(AND (JOIN government.governmental_body.offices_positions Member of Arizona House of Representativess) (JOIN (R government.governmental_body.component_bodies) (JOIN (R government.governmental_jurisdiction.government_bodies) Arizona)))",
            "SExpr": "(AND (JOIN government.governmental_body.offices_positions m.0zs2pws) (JOIN (R government.governmental_body.component_bodies) (JOIN (R government.governmental_jurisdiction.government_bodies) m.0vmt)))"
        }
    },
    "80": {
        "generations": "who won the 2008 FA Cup Final and the 2007-08 FA Cup award?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rmn9t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rmn9t ns:sports.sports_league_season.awards ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?x ns:soccer.football_team.matches ns:m.03hg9s7 .\n}\n",
            "TopicEntityMid": "m.02rmn9t",
            "mid2name": {
                "ns:m.02rmn9t": "2007\u201308 FA Cup",
                "ns:m.03hg9s7": "2008 FA Cup Final"
            },
            "SExpr_w_name": "(AND (JOIN soccer.football_team.matches 2008 FA Cup Final) (JOIN (R sports.sports_award.award_winner) (JOIN (R sports.sports_league_season.awards) 2007\u201308 FA Cup)))",
            "SExpr": "(AND (JOIN soccer.football_team.matches m.03hg9s7) (JOIN (R sports.sports_award.award_winner) (JOIN (R sports.sports_league_season.awards) m.02rmn9t)))"
        }
    },
    "81": {
        "generations": "How was St James's Palace destroyed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yv_q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yv_q ns:architecture.building.building_function ?y .\n?y ns:architecture.building_function.buildings ?x .\n?x ns:architecture.structure.destroyed_by ns:m.02zrvn .\n}\n",
            "TopicEntityMid": "m.01yv_q",
            "mid2name": {
                "ns:m.01yv_q": "St James's Palace",
                "ns:m.02zrvn": "Demolition"
            },
            "SExpr_w_name": "(AND (JOIN architecture.structure.destroyed_by Demolitionn) (JOIN (R architecture.building_function.buildings) (JOIN (R architecture.building.building_function) St James's Palace)))",
            "SExpr": "(AND (JOIN architecture.structure.destroyed_by m.02zrvn) (JOIN (R architecture.building_function.buildings) (JOIN (R architecture.building.building_function) m.01yv_q)))"
        }
    },
    "82": {
        "generations": "What organization presents awards for high school soccer coaches in Indiana and also presents the Heisman Trophy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01q9mk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01q9mk ns:award.award_category.disciplines_or_subjects ?y .\n?y ns:award.award_discipline.awards_in_this_discipline ?x .\n?x ns:award.award_category.presenting_organization ns:m.06vz2cv .\n}\n",
            "TopicEntityMid": "m.01q9mk",
            "mid2name": {
                "ns:m.01q9mk": "Heisman Trophy",
                "ns:m.06vz2cv": "Indiana State High School Soccer Coaches Association"
            },
            "SExpr_w_name": "(AND (JOIN award.award_category.presenting_organization Indiana State High School Soccer Coaches Association) (JOIN (R award.award_discipline.awards_in_this_discipline) (JOIN (R award.award_category.disciplines_or_subjects) Heisman Trophy)))",
            "SExpr": "(AND (JOIN award.award_category.presenting_organization m.06vz2cv) (JOIN (R award.award_discipline.awards_in_this_discipline) (JOIN (R award.award_category.disciplines_or_subjects) m.01q9mk)))"
        }
    },
    "83": {
        "generations": "Which city bid on the 1952 Summer Olympics women's 10 meter platform diving event and also bid on hosting the Olympics in Philadelphia?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dclg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dclg ns:olympics.olympic_bidding_city.olympics_bid_on ?y .\n?y ns:olympics.olympic_city_bid.olympic_games ?x .\n?x ns:user.jg.default_domain.olympic_games.events ns:m.027frxr .\n}\n",
            "TopicEntityMid": "m.0dclg",
            "mid2name": {
                "ns:m.0dclg": "Philadelphia",
                "ns:m.027frxr": "Diving at the 1952 Summer Olympics \u2013 Women's 10 metre platform"
            },
            "SExpr_w_name": "(AND (JOIN user.jg.default_domain.olympic_games.events Diving at the 1952 Summer Olympics \u2013 Women's 10 metre platform) (JOIN (R olympics.olympic_city_bid.olympic_games) (JOIN (R olympics.olympic_bidding_city.olympics_bid_on) Philadelphia)))",
            "SExpr": "(AND (JOIN user.jg.default_domain.olympic_games.events m.027frxr) (JOIN (R olympics.olympic_city_bid.olympic_games) (JOIN (R olympics.olympic_bidding_city.olympics_bid_on) m.0dclg)))"
        }
    },
    "84": {
        "generations": "What physicist spoke about a topic mentioned by Dmitri Mendeleev?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gglj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gglj ns:user.freebass.default_domain.topic_mentioned.mentioned_in ?y .\n?y ns:event.speech_or_presentation.speech_topic ?x .\n?x ns:user.narphorium.default_domain.profession.job_titles ns:m.05snw .\n}\n",
            "TopicEntityMid": "m.0gglj",
            "mid2name": {
                "ns:m.0gglj": "Dmitri Mendeleev",
                "ns:m.05snw": "Physicist"
            },
            "SExpr_w_name": "(AND (JOIN user.narphorium.default_domain.profession.job_titles Physicist) (JOIN (R event.speech_or_presentation.speech_topic) (JOIN (R user.freebass.default_domain.topic_mentioned.mentioned_in) Dmitri Mendeleev)))",
            "SExpr": "(AND (JOIN user.narphorium.default_domain.profession.job_titles m.05snw) (JOIN (R event.speech_or_presentation.speech_topic) (JOIN (R user.freebass.default_domain.topic_mentioned.mentioned_in) m.0gglj)))"
        }
    },
    "85": {
        "generations": "What country is Tsingtao Beer from and what language is used to write in Tibet?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kbrp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kbrp ns:language.language_writing_system.languages ?y .\n?y ns:language.human_language.countries_spoken_in ?x .\n?x ns:food.beer_country_region.beers_from_here ns:m.04dqs3y .\n}\n",
            "TopicEntityMid": "m.01kbrp",
            "mid2name": {
                "ns:m.01kbrp": "Tibetan alphabet",
                "ns:m.04dqs3y": "Tsingtao Beer"
            },
            "SExpr_w_name": "(AND (JOIN food.beer_country_region.beers_from_here Tsingtao Beer) (JOIN (R language.human_language.countries_spoken_in) (JOIN (R language.language_writing_system.languages) Tibetan alphabet)))",
            "SExpr": "(AND (JOIN food.beer_country_region.beers_from_here m.04dqs3y) (JOIN (R language.human_language.countries_spoken_in) (JOIN (R language.language_writing_system.languages) m.01kbrp)))"
        }
    },
    "86": {
        "generations": "Which satellite was launched by the United States Department of the Navy using the Vanguard launch vehicle?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cv24)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cv24 ns:spaceflight.space_program_sponsor.space_programs_sponsored ?y .\n?y ns:spaceflight.space_program.missions ?x .\n?x ns:spaceflight.satellite.launch_vehicle ns:m.03l2zj .\n}\n",
            "TopicEntityMid": "m.03cv24",
            "mid2name": {
                "ns:m.03cv24": "United States Department of the Navy",
                "ns:m.03l2zj": "Vanguard"
            },
            "SExpr_w_name": "(AND (JOIN spaceflight.satellite.launch_vehicle Vanguard) (JOIN (R spaceflight.space_program.missions) (JOIN (R spaceflight.space_program_sponsor.space_programs_sponsored) United States Department of the Navy)))",
            "SExpr": "(AND (JOIN spaceflight.satellite.launch_vehicle m.03l2zj) (JOIN (R spaceflight.space_program.missions) (JOIN (R spaceflight.space_program_sponsor.space_programs_sponsored) m.03cv24)))"
        }
    }
}