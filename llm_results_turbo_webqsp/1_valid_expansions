{
    "0": {
        "generations": "where has justin bieber lived?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
            "TopicEntityMid": "m.06w2sn5",
            "mid2name": {
                "ns:m.06w2sn5": "Justin Bieber"
            },
            "SExpr_w_name": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) Justin Bieber))",
            "SExpr": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.06w2sn5))"
        }
    },
    "1": {
        "generations": "Which male fictional character has been portrayed in films set in their place of birth?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05zppz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05zppz ns:fictional_universe.fictional_setting.fictional_characters_born_here ?y .\n?y ns:film.film_character.portrayed_in_films ?x .\n}\n",
            "TopicEntityMid": "m.05zppz",
            "mid2name": {
                "ns:m.05zppz": "Male"
            },
            "SExpr_w_name": "(JOIN (R film.film_character.portrayed_in_films) (JOIN (R fictional_universe.fictional_setting.fictional_characters_born_here) Male))",
            "SExpr": "(JOIN (R film.film_character.portrayed_in_films) (JOIN (R fictional_universe.fictional_setting.fictional_characters_born_here) m.05zppz))"
        }
    },
    "2": {
        "generations": "what awards was natalie portman nominated for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09l3p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09l3p ns:award.award_nominee.award_nominations ?y .\n?y ns:award.award_nomination.nominated_for ?x .\n}\n",
            "TopicEntityMid": "m.09l3p",
            "mid2name": {
                "ns:m.09l3p": "Natalie Portman"
            },
            "SExpr_w_name": "(JOIN (R award.award_nomination.nominated_for) (JOIN (R award.award_nominee.award_nominations) Natalie Portman))",
            "SExpr": "(JOIN (R award.award_nomination.nominated_for) (JOIN (R award.award_nominee.award_nominations) m.09l3p))"
        }
    },
    "3": {
        "generations": "who contributed music to star wars episode i: the phantom menace?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddt_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddt_ ns:film.film.music ?y .\n?y ns:music.artist.track_contributions ?x .\n}\n",
            "TopicEntityMid": "m.0ddt_",
            "mid2name": {
                "ns:m.0ddt_": "Star Wars Episode I: The Phantom Menace"
            },
            "SExpr_w_name": "(JOIN (R music.artist.track_contributions) (JOIN (R film.film.music) Star Wars Episode I: The Phantom Menace))",
            "SExpr": "(JOIN (R music.artist.track_contributions) (JOIN (R film.film.music) m.0ddt_))"
        }
    },
    "4": {
        "generations": "what is the latitude of grand bahama?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03st9j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03st9j ns:location.location.geolocation ?y .\n?y ns:location.geocode.latitude ?x .\n}\n",
            "TopicEntityMid": "m.03st9j",
            "mid2name": {
                "ns:m.03st9j": "Grand Bahama"
            },
            "SExpr_w_name": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) Grand Bahama))",
            "SExpr": "(JOIN (R location.geocode.latitude) (JOIN (R location.location.geolocation) m.03st9j))"
        }
    },
    "5": {
        "generations": "What is the nominal GDP per capita of the Bahamas?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0160w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0160w ns:location.statistical_region.gdp_nominal_per_capita ?y .\n?y ns:measurement_unit.dated_money_value.valid_date ?x .\n}\n",
            "TopicEntityMid": "m.0160w",
            "mid2name": {
                "ns:m.0160w": "Bahamas"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_money_value.valid_date) (JOIN (R location.statistical_region.gdp_nominal_per_capita) Bahamas))",
            "SExpr": "(JOIN (R measurement_unit.dated_money_value.valid_date) (JOIN (R location.statistical_region.gdp_nominal_per_capita) m.0160w))"
        }
    },
    "6": {
        "generations": "what character did john noble play in his starring tv roles?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02fgm7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02fgm7 ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n}\n",
            "TopicEntityMid": "m.02fgm7",
            "mid2name": {
                "ns:m.02fgm7": "John Noble"
            },
            "SExpr_w_name": "(JOIN (R tv.regular_tv_appearance.character) (JOIN (R tv.tv_actor.starring_roles) John Noble))",
            "SExpr": "(JOIN (R tv.regular_tv_appearance.character) (JOIN (R tv.tv_actor.starring_roles) m.02fgm7))"
        }
    },
    "7": {
        "generations": "What are some of the character notes for actors in The Lord of the Rings: The Two Towers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017gm7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017gm7 ns:film.film.starring ?y .\n?y ns:film.performance.character_note ?x .\n}\n",
            "TopicEntityMid": "m.017gm7",
            "mid2name": {
                "ns:m.017gm7": "The Lord of the Rings: The Two Towers"
            },
            "SExpr_w_name": "(JOIN (R film.performance.character_note) (JOIN (R film.film.starring) The Lord of the Rings: The Two Towers))",
            "SExpr": "(JOIN (R film.performance.character_note) (JOIN (R film.film.starring) m.017gm7))"
        }
    },
    "8": {
        "generations": "who has owned the washington redskins?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.084l5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.084l5 ns:sports.professional_sports_team.owner_s ?y .\n?y ns:people.person.employment_history ?x .\n}\n",
            "TopicEntityMid": "m.084l5",
            "mid2name": {
                "ns:m.084l5": "Washington Redskins"
            },
            "SExpr_w_name": "(JOIN (R people.person.employment_history) (JOIN (R sports.professional_sports_team.owner_s) Washington Redskins))",
            "SExpr": "(JOIN (R people.person.employment_history) (JOIN (R sports.professional_sports_team.owner_s) m.084l5))"
        }
    },
    "9": {
        "generations": "what is saki's profession specialization?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07484)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07484 ns:people.person.profession ?y .\n?y ns:people.profession.specializations ?x .\n}\n",
            "TopicEntityMid": "m.07484",
            "mid2name": {
                "ns:m.07484": "Saki"
            },
            "SExpr_w_name": "(JOIN (R people.profession.specializations) (JOIN (R people.person.profession) Saki))",
            "SExpr": "(JOIN (R people.profession.specializations) (JOIN (R people.person.profession) m.07484))"
        }
    },
    "10": {
        "generations": "when did sacha baron cohen's TV show end?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c9c0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c9c0 ns:tv.tv_program_creator.programs_created ?y .\n?y ns:tv.tv_program.air_date_of_final_episode ?x .\n}\n",
            "TopicEntityMid": "m.0c9c0",
            "mid2name": {
                "ns:m.0c9c0": "Sacha Baron Cohen"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program.air_date_of_final_episode) (JOIN (R tv.tv_program_creator.programs_created) Sacha Baron Cohen))",
            "SExpr": "(JOIN (R tv.tv_program.air_date_of_final_episode) (JOIN (R tv.tv_program_creator.programs_created) m.0c9c0))"
        }
    },
    "11": {
        "generations": "what is the unemployment rate in cleveland?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01sn3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01sn3 ns:location.hud_foreclosure_area.bls_unemployment_rate ?y .\n?y ns:measurement_unit.dated_float.number ?x .\n}\n",
            "TopicEntityMid": "m.01sn3",
            "mid2name": {
                "ns:m.01sn3": "Cleveland"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_float.number) (JOIN (R location.hud_foreclosure_area.bls_unemployment_rate) Cleveland))",
            "SExpr": "(JOIN (R measurement_unit.dated_float.number) (JOIN (R location.hud_foreclosure_area.bls_unemployment_rate) m.01sn3))"
        }
    },
    "12": {
        "generations": "who created the character draco malfoy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c2m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c2m4 ns:fictional_universe.fictional_character.character_created_by ?y .\n?y ns:influence.influence_node.influenced_by ?x .\n}\n",
            "TopicEntityMid": "m.0c2m4",
            "mid2name": {
                "ns:m.0c2m4": "Draco Malfoy"
            },
            "SExpr_w_name": "(JOIN (R influence.influence_node.influenced_by) (JOIN (R fictional_universe.fictional_character.character_created_by) Draco Malfoy))",
            "SExpr": "(JOIN (R influence.influence_node.influenced_by) (JOIN (R fictional_universe.fictional_character.character_created_by) m.0c2m4))"
        }
    },
    "13": {
        "generations": "what currency is used for the minimum wage in the united states?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.statistical_region.minimum_wage ?y .\n?y ns:measurement_unit.recurring_money_value.currency ?x .\n}\n",
            "TopicEntityMid": "m.09c7w0",
            "mid2name": {
                "ns:m.09c7w0": "United States of America"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.recurring_money_value.currency) (JOIN (R location.statistical_region.minimum_wage) United States of America))",
            "SExpr": "(JOIN (R measurement_unit.recurring_money_value.currency) (JOIN (R location.statistical_region.minimum_wage) m.09c7w0))"
        }
    },
    "14": {
        "generations": "What is the designation of Rome as a natural or cultural site?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c62 ns:protected_sites.listed_site.designation_as_natural_or_cultural_site ?y .\n?y ns:protected_sites.natural_or_cultural_site_listing.designation ?x .\n}\n",
            "TopicEntityMid": "m.06c62",
            "mid2name": {
                "ns:m.06c62": "Rome"
            },
            "SExpr_w_name": "(JOIN (R protected_sites.natural_or_cultural_site_listing.designation) (JOIN (R protected_sites.listed_site.designation_as_natural_or_cultural_site) Rome))",
            "SExpr": "(JOIN (R protected_sites.natural_or_cultural_site_listing.designation) (JOIN (R protected_sites.listed_site.designation_as_natural_or_cultural_site) m.06c62))"
        }
    },
    "15": {
        "generations": "In what year was Nina Dobrev nominated for a long list award?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027nwk2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027nwk2 ns:award.long_list_nominee.long_list_nominations ?y .\n?y ns:award.long_list_nomination.year ?x .\n}\n",
            "TopicEntityMid": "m.027nwk2",
            "mid2name": {
                "ns:m.027nwk2": "Nina Dobrev"
            },
            "SExpr_w_name": "(JOIN (R award.long_list_nomination.year) (JOIN (R award.long_list_nominee.long_list_nominations) Nina Dobrev))",
            "SExpr": "(JOIN (R award.long_list_nomination.year) (JOIN (R award.long_list_nominee.long_list_nominations) m.027nwk2))"
        }
    },
    "16": {
        "generations": "What military conflicts was John F. Kennedy involved in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d3k14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d3k14 ns:military.military_commander.military_commands ?y .\n?y ns:military.military_command.military_combatant ?x .\n}\n",
            "TopicEntityMid": "m.0d3k14",
            "mid2name": {
                "ns:m.0d3k14": "John F. Kennedy"
            },
            "SExpr_w_name": "(JOIN (R military.military_command.military_combatant) (JOIN (R military.military_commander.military_commands) John F. Kennedy))",
            "SExpr": "(JOIN (R military.military_command.military_combatant) (JOIN (R military.military_commander.military_commands) m.0d3k14))"
        }
    },
    "17": {
        "generations": "where did beverly cleary go to school?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018rv0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018rv0 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
            "TopicEntityMid": "m.018rv0",
            "mid2name": {
                "ns:m.018rv0": "Beverly Cleary"
            },
            "SExpr_w_name": "(JOIN (R education.education.institution) (JOIN (R people.person.education) Beverly Cleary))",
            "SExpr": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.018rv0))"
        }
    },
    "18": {
        "generations": "What is the predominant religion in Bali?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bkb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bkb ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
            "TopicEntityMid": "m.01bkb",
            "mid2name": {
                "ns:m.01bkb": "Bali"
            },
            "SExpr_w_name": "(JOIN (R location.religion_percentage.religion) (JOIN (R location.statistical_region.religions) Bali))",
            "SExpr": "(JOIN (R location.religion_percentage.religion) (JOIN (R location.statistical_region.religions) m.01bkb))"
        }
    },
    "19": {
        "generations": "What industry does air transportation belong to according to the NAICS 2007?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qb78c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qb78c ns:business.industry.child_industry ?y .\n?y ns:business.industry.naics_2007 ?x .\n}\n",
            "TopicEntityMid": "m.03qb78c",
            "mid2name": {
                "ns:m.03qb78c": "Air Transportation"
            },
            "SExpr_w_name": "(JOIN (R business.industry.naics_2007) (JOIN (R business.industry.child_industry) Air Transportation))",
            "SExpr": "(JOIN (R business.industry.naics_2007) (JOIN (R business.industry.child_industry) m.03qb78c))"
        }
    },
    "20": {
        "generations": "who is the current prime minister's governmental body?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060bp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060bp ns:government.government_office_category.officeholders ?y .\n?y ns:government.government_position_held.governmental_body ?x .\n}\n",
            "TopicEntityMid": "m.060bp",
            "mid2name": {
                "ns:m.060bp": "Prime minister"
            },
            "SExpr_w_name": "(JOIN (R government.government_position_held.governmental_body) (JOIN (R government.government_office_category.officeholders) Prime minister))",
            "SExpr": "(JOIN (R government.government_position_held.governmental_body) (JOIN (R government.government_office_category.officeholders) m.060bp))"
        }
    },
    "21": {
        "generations": "What is the postal code for Sedona?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ny57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ny57 ns:location.citytown.postal_codes ?y .\n?y ns:location.location.containedby ?x .\n}\n",
            "TopicEntityMid": "m.0ny57",
            "mid2name": {
                "ns:m.0ny57": "Sedona"
            },
            "SExpr_w_name": "(JOIN (R location.location.containedby) (JOIN (R location.citytown.postal_codes) Sedona))",
            "SExpr": "(JOIN (R location.location.containedby) (JOIN (R location.citytown.postal_codes) m.0ny57))"
        }
    },
    "22": {
        "generations": "what diseases is bill clinton at risk for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:people.person.gender ?y .\n?y ns:medicine.risk_factor.diseases ?x .\n}\n",
            "TopicEntityMid": "m.0157m",
            "mid2name": {
                "ns:m.0157m": "Bill Clinton"
            },
            "SExpr_w_name": "(JOIN (R medicine.risk_factor.diseases) (JOIN (R people.person.gender) Bill Clinton))",
            "SExpr": "(JOIN (R medicine.risk_factor.diseases) (JOIN (R people.person.gender) m.0157m))"
        }
    },
    "23": {
        "generations": "What is the percentage of gross savings as a percentage of GDP in Russia?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.statistical_region.gross_savings_as_percent_of_gdp ?y .\n?y ns:measurement_unit.dated_percentage.source ?x .\n}\n",
            "TopicEntityMid": "m.06bnz",
            "mid2name": {
                "ns:m.06bnz": "Russia"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_percentage.source) (JOIN (R location.statistical_region.gross_savings_as_percent_of_gdp) Russia))",
            "SExpr": "(JOIN (R measurement_unit.dated_percentage.source) (JOIN (R location.statistical_region.gross_savings_as_percent_of_gdp) m.06bnz))"
        }
    },
    "24": {
        "generations": "what books has lebron james written?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:book.author.works_written ?y .\n?y ns:book.written_work.author ?x .\n}\n",
            "TopicEntityMid": "m.01jz6d",
            "mid2name": {
                "ns:m.01jz6d": "LeBron James"
            },
            "SExpr_w_name": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) LeBron James))",
            "SExpr": "(JOIN (R book.written_work.author) (JOIN (R book.author.works_written) m.01jz6d))"
        }
    },
    "25": {
        "generations": "who won the NBA Rookie of the Year Award?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02yqnh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02yqnh ns:award.award_category.winners ?y .\n?y ns:award.award_honor.award_winner ?x .\n}\n",
            "TopicEntityMid": "m.02yqnh",
            "mid2name": {
                "ns:m.02yqnh": "NBA Rookie of the Year Award"
            },
            "SExpr_w_name": "(JOIN (R award.award_honor.award_winner) (JOIN (R award.award_category.winners) NBA Rookie of the Year Award))",
            "SExpr": "(JOIN (R award.award_honor.award_winner) (JOIN (R award.award_category.winners) m.02yqnh))"
        }
    },
    "26": {
        "generations": "who died by decapitation?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jb19)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jb19 ns:people.cause_of_death.includes_causes_of_death ?y .\n?y ns:people.cause_of_death.people ?x .\n}\n",
            "TopicEntityMid": "m.0jb19",
            "mid2name": {
                "ns:m.0jb19": "Decapitation"
            },
            "SExpr_w_name": "(JOIN (R people.cause_of_death.people) (JOIN (R people.cause_of_death.includes_causes_of_death) Decapitation))",
            "SExpr": "(JOIN (R people.cause_of_death.people) (JOIN (R people.cause_of_death.includes_causes_of_death) m.0jb19))"
        }
    },
    "27": {
        "generations": "What court handled the legal case on marriage?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ztj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ztj ns:law.legal_subject.legal_cases ?y .\n?y ns:law.legal_case.court ?x .\n}\n",
            "TopicEntityMid": "m.04ztj",
            "mid2name": {
                "ns:m.04ztj": "Marriage"
            },
            "SExpr_w_name": "(JOIN (R law.legal_case.court) (JOIN (R law.legal_subject.legal_cases) Marriage))",
            "SExpr": "(JOIN (R law.legal_case.court) (JOIN (R law.legal_subject.legal_cases) m.04ztj))"
        }
    },
    "28": {
        "generations": "what events have taken place in ishmael's birthplace?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ghr4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ghr4 ns:people.person.place_of_birth ?y .\n?y ns:location.location.events ?x .\n}\n",
            "TopicEntityMid": "m.01ghr4",
            "mid2name": {
                "ns:m.01ghr4": "Ishmael"
            },
            "SExpr_w_name": "(JOIN (R location.location.events) (JOIN (R people.person.place_of_birth) Ishmael))",
            "SExpr": "(JOIN (R location.location.events) (JOIN (R people.person.place_of_birth) m.01ghr4))"
        }
    },
    "29": {
        "generations": "What currency is used for foreign direct investment net inflows in the Netherlands?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059j2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059j2 ns:location.statistical_region.foreign_direct_investment_net_inflows ?y .\n?y ns:measurement_unit.dated_money_value.currency ?x .\n}\n",
            "TopicEntityMid": "m.059j2",
            "mid2name": {
                "ns:m.059j2": "Netherlands"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_money_value.currency) (JOIN (R location.statistical_region.foreign_direct_investment_net_inflows) Netherlands))",
            "SExpr": "(JOIN (R measurement_unit.dated_money_value.currency) (JOIN (R location.statistical_region.foreign_direct_investment_net_inflows) m.059j2))"
        }
    },
    "30": {
        "generations": "Which district does Brazil's governing officials represent?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.district_represented ?x .\n}\n",
            "TopicEntityMid": "m.015fr",
            "mid2name": {
                "ns:m.015fr": "Brazil"
            },
            "SExpr_w_name": "(JOIN (R government.government_position_held.district_represented) (JOIN (R government.governmental_jurisdiction.governing_officials) Brazil))",
            "SExpr": "(JOIN (R government.government_position_held.district_represented) (JOIN (R government.governmental_jurisdiction.governing_officials) m.015fr))"
        }
    },
    "31": {
        "generations": "who is the president of a religious organization?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060c4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060c4 ns:religion.religious_leadership_role.religious_titles ?y .\n?y ns:religion.religious_leadership_title.leaders ?x .\n}\n",
            "TopicEntityMid": "m.060c4",
            "mid2name": {
                "ns:m.060c4": "President"
            },
            "SExpr_w_name": "(JOIN (R religion.religious_leadership_title.leaders) (JOIN (R religion.religious_leadership_role.religious_titles) President))",
            "SExpr": "(JOIN (R religion.religious_leadership_title.leaders) (JOIN (R religion.religious_leadership_role.religious_titles) m.060c4))"
        }
    },
    "32": {
        "generations": "what is the current unemployment rate in france?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.statistical_region.unemployment_rate ?y .\n?y ns:measurement_unit.dated_percentage.date ?x .\n}\n",
            "TopicEntityMid": "m.0f8l9c",
            "mid2name": {
                "ns:m.0f8l9c": "France"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_percentage.date) (JOIN (R location.statistical_region.unemployment_rate) France))",
            "SExpr": "(JOIN (R measurement_unit.dated_percentage.date) (JOIN (R location.statistical_region.unemployment_rate) m.0f8l9c))"
        }
    },
    "33": {
        "generations": "Which book features the character Esther?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pn7 ns:fictional_universe.person_in_fiction.representations_in_fiction ?y .\n?y ns:book.book_character.appears_in_book ?x .\n}\n",
            "TopicEntityMid": "m.02pn7",
            "mid2name": {
                "ns:m.02pn7": "Esther"
            },
            "SExpr_w_name": "(JOIN (R book.book_character.appears_in_book) (JOIN (R fictional_universe.person_in_fiction.representations_in_fiction) Esther))",
            "SExpr": "(JOIN (R book.book_character.appears_in_book) (JOIN (R fictional_universe.person_in_fiction.representations_in_fiction) m.02pn7))"
        }
    },
    "34": {
        "generations": "What video games are associated with the Toronto Maple Leafs?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j6tr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j6tr ns:sports.sports_team.sport ?y .\n?y ns:cvg.computer_game_subject.games ?x .\n}\n",
            "TopicEntityMid": "m.0j6tr",
            "mid2name": {
                "ns:m.0j6tr": "Toronto Maple Leafs"
            },
            "SExpr_w_name": "(JOIN (R cvg.computer_game_subject.games) (JOIN (R sports.sports_team.sport) Toronto Maple Leafs))",
            "SExpr": "(JOIN (R cvg.computer_game_subject.games) (JOIN (R sports.sports_team.sport) m.0j6tr))"
        }
    },
    "35": {
        "generations": "on what tv show did cher make a guest appearance?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vtj38)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vtj38 ns:tv.tv_program_guest.appeared_on ?y .\n?y ns:tv.tv_guest_personal_appearance.episode ?x .\n}\n",
            "TopicEntityMid": "m.01vtj38",
            "mid2name": {
                "ns:m.01vtj38": "Cher"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_guest_personal_appearance.episode) (JOIN (R tv.tv_program_guest.appeared_on) Cher))",
            "SExpr": "(JOIN (R tv.tv_guest_personal_appearance.episode) (JOIN (R tv.tv_program_guest.appeared_on) m.01vtj38))"
        }
    },
    "36": {
        "generations": "who was born in hampton and wrote lyrics for songs?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mnsf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mnsf ns:location.location.people_born_here ?y .\n?y ns:music.lyricist.lyrics_written ?x .\n}\n",
            "TopicEntityMid": "m.0mnsf",
            "mid2name": {
                "ns:m.0mnsf": "Hampton"
            },
            "SExpr_w_name": "(JOIN (R music.lyricist.lyrics_written) (JOIN (R location.location.people_born_here) Hampton))",
            "SExpr": "(JOIN (R music.lyricist.lyrics_written) (JOIN (R location.location.people_born_here) m.0mnsf))"
        }
    },
    "37": {
        "generations": "What organizations are in the Harry Potter literary series universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078ffw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078ffw ns:book.literary_series.fictional_universe ?y .\n?y ns:fictional_universe.fictional_universe.organizations ?x .\n}\n",
            "TopicEntityMid": "m.078ffw",
            "mid2name": {
                "ns:m.078ffw": "Harry Potter literary series"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R book.literary_series.fictional_universe) Harry Potter literary series))",
            "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) (JOIN (R book.literary_series.fictional_universe) m.078ffw))"
        }
    },
    "38": {
        "generations": "when did london heathrow airport open?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jn4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jn4 ns:location.location.contains ?y .\n?y ns:architecture.structure.opened ?x .\n}\n",
            "TopicEntityMid": "m.03jn4",
            "mid2name": {
                "ns:m.03jn4": "London Heathrow Airport"
            },
            "SExpr_w_name": "(JOIN (R architecture.structure.opened) (JOIN (R location.location.contains) London Heathrow Airport))",
            "SExpr": "(JOIN (R architecture.structure.opened) (JOIN (R location.location.contains) m.03jn4))"
        }
    },
    "39": {
        "generations": "who is josh hutcherson's sibling?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08wjf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08wjf4 ns:people.person.sibling_s ?y .\n?y ns:people.sibling_relationship.sibling ?x .\n}\n",
            "TopicEntityMid": "m.08wjf4",
            "mid2name": {
                "ns:m.08wjf4": "Josh Hutchersonm"
            },
            "SExpr_w_name": "(JOIN (R people.sibling_relationship.sibling) (JOIN (R people.person.sibling_s) Josh Hutchersonm))",
            "SExpr": "(JOIN (R people.sibling_relationship.sibling) (JOIN (R people.person.sibling_s) m.08wjf4))"
        }
    },
    "40": {
        "generations": "what was the overall pick of the san francisco giants in the sports league draft?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0713r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0713r ns:sports.professional_sports_team.draft_picks ?y .\n?y ns:sports.sports_league_draft_pick.pick_overall ?x .\n}\n",
            "TopicEntityMid": "m.0713r",
            "mid2name": {
                "ns:m.0713r": "San Francisco Giants"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league_draft_pick.pick_overall) (JOIN (R sports.professional_sports_team.draft_picks) San Francisco Giants))",
            "SExpr": "(JOIN (R sports.sports_league_draft_pick.pick_overall) (JOIN (R sports.professional_sports_team.draft_picks) m.0713r))"
        }
    },
    "41": {
        "generations": "Which film was directed by someone who also directed a film about Frederick Douglass?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zg0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zg0 ns:film.film_subject.films ?y .\n?y ns:film.film.directed_by ?x .\n}\n",
            "TopicEntityMid": "m.02zg0",
            "mid2name": {
                "ns:m.02zg0": "Frederick Douglass"
            },
            "SExpr_w_name": "(JOIN (R film.film.directed_by) (JOIN (R film.film_subject.films) Frederick Douglass))",
            "SExpr": "(JOIN (R film.film.directed_by) (JOIN (R film.film_subject.films) m.02zg0))"
        }
    },
    "42": {
        "generations": "who is sherlock holmes married to in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06rkl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06rkl ns:fictional_universe.fictional_character.married_to ?y .\n?y ns:fictional_universe.marriage_of_fictional_characters.spouses ?x .\n}\n",
            "TopicEntityMid": "m.06rkl",
            "mid2name": {
                "ns:m.06rkl": "Sherlock Holmes"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.marriage_of_fictional_characters.spouses) (JOIN (R fictional_universe.fictional_character.married_to) Sherlock Holmes))",
            "SExpr": "(JOIN (R fictional_universe.marriage_of_fictional_characters.spouses) (JOIN (R fictional_universe.fictional_character.married_to) m.06rkl))"
        }
    },
    "43": {
        "generations": "When did Bush become a member of a musical group?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01727v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01727v ns:music.musical_group.member ?y .\n?y ns:music.group_membership.start ?x .\n}\n",
            "TopicEntityMid": "m.01727v",
            "mid2name": {
                "ns:m.01727v": "Bush"
            },
            "SExpr_w_name": "(JOIN (R music.group_membership.start) (JOIN (R music.musical_group.member) Bush))",
            "SExpr": "(JOIN (R music.group_membership.start) (JOIN (R music.musical_group.member) m.01727v))"
        }
    },
    "44": {
        "generations": "what is the runtime of the movie Juice?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08w51z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08w51z ns:film.film.runtime ?y .\n?y ns:film.film_cut.runtime ?x .\n}\n",
            "TopicEntityMid": "m.08w51z",
            "mid2name": {
                "ns:m.08w51z": "Juice"
            },
            "SExpr_w_name": "(JOIN (R film.film_cut.runtime) (JOIN (R film.film.runtime) Juice))",
            "SExpr": "(JOIN (R film.film_cut.runtime) (JOIN (R film.film.runtime) m.08w51z))"
        }
    },
    "45": {
        "generations": "What opera genre is similar to the film Taken?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mgx6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mgx6z ns:film.film.genre ?y .\n?y ns:opera.opera_genre.operas_in_this_genre ?x .\n}\n",
            "TopicEntityMid": "m.03mgx6z",
            "mid2name": {
                "ns:m.03mgx6z": "Taken"
            },
            "SExpr_w_name": "(JOIN (R opera.opera_genre.operas_in_this_genre) (JOIN (R film.film.genre) Taken))",
            "SExpr": "(JOIN (R opera.opera_genre.operas_in_this_genre) (JOIN (R film.film.genre) m.03mgx6z))"
        }
    },
    "46": {
        "generations": "what books are associated with joey lawrence's language?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pr9kj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pr9kj ns:people.person.languages ?y .\n?y ns:book.school_or_movement.associated_works ?x .\n}\n",
            "TopicEntityMid": "m.01pr9kj",
            "mid2name": {
                "ns:m.01pr9kj": "Joey Lawrence"
            },
            "SExpr_w_name": "(JOIN (R book.school_or_movement.associated_works) (JOIN (R people.person.languages) Joey Lawrence))",
            "SExpr": "(JOIN (R book.school_or_movement.associated_works) (JOIN (R people.person.languages) m.01pr9kj))"
        }
    },
    "47": {
        "generations": "What is the capital of the administrative division that Denver is the capital of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02cl1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02cl1 ns:location.capital_of_administrative_division.capital_of ?y .\n?y ns:location.administrative_division_capital_relationship.administrative_division ?x .\n}\n",
            "TopicEntityMid": "m.02cl1",
            "mid2name": {
                "ns:m.02cl1": "Denver"
            },
            "SExpr_w_name": "(JOIN (R location.administrative_division_capital_relationship.administrative_division) (JOIN (R location.capital_of_administrative_division.capital_of) Denver))",
            "SExpr": "(JOIN (R location.administrative_division_capital_relationship.administrative_division) (JOIN (R location.capital_of_administrative_division.capital_of) m.02cl1))"
        }
    },
    "48": {
        "generations": "what musical compositions are about a topic related to brian austin green?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01npcy7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01npcy7 ns:people.person.nationality ?y .\n?y ns:book.book_subject.musical_compositions_about_this_topic ?x .\n}\n",
            "TopicEntityMid": "m.01npcy7",
            "mid2name": {
                "ns:m.01npcy7": "Brian Austin Green"
            },
            "SExpr_w_name": "(JOIN (R book.book_subject.musical_compositions_about_this_topic) (JOIN (R people.person.nationality) Brian Austin Green))",
            "SExpr": "(JOIN (R book.book_subject.musical_compositions_about_this_topic) (JOIN (R people.person.nationality) m.01npcy7))"
        }
    },
    "49": {
        "generations": "which art movement is associated with depictions of sparta?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09472)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09472 ns:visual_art.art_subject.artwork_on_the_subject ?y .\n?y ns:visual_art.artwork.period_or_movement ?x .\n}\n",
            "TopicEntityMid": "m.09472",
            "mid2name": {
                "ns:m.09472": "Sparta"
            },
            "SExpr_w_name": "(JOIN (R visual_art.artwork.period_or_movement) (JOIN (R visual_art.art_subject.artwork_on_the_subject) Sparta))",
            "SExpr": "(JOIN (R visual_art.artwork.period_or_movement) (JOIN (R visual_art.art_subject.artwork_on_the_subject) m.09472))"
        }
    },
    "50": {
        "generations": "where was the exhibition about joan mir held?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g_6k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g_6k ns:exhibitions.exhibition_subject.exhibitions_created_about_this_subject ?y .\n?y ns:exhibitions.exhibition.venues ?x .\n}\n",
            "TopicEntityMid": "m.0g_6k",
            "mid2name": {
                "ns:m.0g_6k": "Joan Mir"
            },
            "SExpr_w_name": "(JOIN (R exhibitions.exhibition.venues) (JOIN (R exhibitions.exhibition_subject.exhibitions_created_about_this_subject) Joan Mir))",
            "SExpr": "(JOIN (R exhibitions.exhibition.venues) (JOIN (R exhibitions.exhibition_subject.exhibitions_created_about_this_subject) m.0g_6k))"
        }
    },
    "51": {
        "generations": "what are the government positions in pakistan?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05sb1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05sb1 ns:location.country.administrative_divisions ?y .\n?y ns:government.governmental_jurisdiction.government_positions ?x .\n}\n",
            "TopicEntityMid": "m.05sb1",
            "mid2name": {
                "ns:m.05sb1": "Pakistan"
            },
            "SExpr_w_name": "(JOIN (R government.governmental_jurisdiction.government_positions) (JOIN (R location.country.administrative_divisions) Pakistan))",
            "SExpr": "(JOIN (R government.governmental_jurisdiction.government_positions) (JOIN (R location.country.administrative_divisions) m.05sb1))"
        }
    },
    "52": {
        "generations": "What sports teams does Santa Clara University have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027xx3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027xx3 ns:education.educational_institution.athletics_brand ?y .\n?y ns:education.athletics_brand.teams ?x .\n}\n",
            "TopicEntityMid": "m.027xx3",
            "mid2name": {
                "ns:m.027xx3": "Santa Clara University"
            },
            "SExpr_w_name": "(JOIN (R education.athletics_brand.teams) (JOIN (R education.educational_institution.athletics_brand) Santa Clara University))",
            "SExpr": "(JOIN (R education.athletics_brand.teams) (JOIN (R education.educational_institution.athletics_brand) m.027xx3))"
        }
    },
    "53": {
        "generations": "when did the new york rangers win their last championship?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hmtk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hmtk ns:sports.sports_team.championships ?y .\n?y ns:sports.sports_championship_event.result ?x .\n}\n",
            "TopicEntityMid": "m.0hmtk",
            "mid2name": {
                "ns:m.0hmtk": "New York Rangers"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_championship_event.result) (JOIN (R sports.sports_team.championships) New York Rangers))",
            "SExpr": "(JOIN (R sports.sports_championship_event.result) (JOIN (R sports.sports_team.championships) m.0hmtk))"
        }
    },
    "54": {
        "generations": "What are the superior courts in Missouri?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ych)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ych ns:law.court_jurisdiction_area.courts ?y .\n?y ns:law.court.superior_courts ?x .\n}\n",
            "TopicEntityMid": "m.04ych",
            "mid2name": {
                "ns:m.04ych": "Missouri"
            },
            "SExpr_w_name": "(JOIN (R law.court.superior_courts) (JOIN (R law.court_jurisdiction_area.courts) Missouri))",
            "SExpr": "(JOIN (R law.court.superior_courts) (JOIN (R law.court_jurisdiction_area.courts) m.04ych))"
        }
    },
    "55": {
        "generations": "Where does the Egypt sports team play their home games?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:sports.sports_team_location.teams ?y .\n?y ns:sports.sports_team.venue ?x .\n}\n",
            "TopicEntityMid": "m.02k54",
            "mid2name": {
                "ns:m.02k54": "Egypt"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team.venue) (JOIN (R sports.sports_team_location.teams) Egypt))",
            "SExpr": "(JOIN (R sports.sports_team.venue) (JOIN (R sports.sports_team_location.teams) m.02k54))"
        }
    },
    "56": {
        "generations": "what was benjamin franklin's cause of death according to the icd-9-cm classification?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.deceased_person.cause_of_death ?y .\n?y ns:medicine.icd_9_cm_classification.includes_classifications ?x .\n}\n",
            "TopicEntityMid": "m.019fz",
            "mid2name": {
                "ns:m.019fz": "Benjamin Franklin"
            },
            "SExpr_w_name": "(JOIN (R medicine.icd_9_cm_classification.includes_classifications) (JOIN (R people.deceased_person.cause_of_death) Benjamin Franklin))",
            "SExpr": "(JOIN (R medicine.icd_9_cm_classification.includes_classifications) (JOIN (R people.deceased_person.cause_of_death) m.019fz))"
        }
    },
    "57": {
        "generations": "What is the market capitalization of listed companies as a percentage of GDP in Israel?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03spz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03spz ns:location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp ?y .\n?y ns:measurement_unit.dated_percentage.rate ?x .\n}\n",
            "TopicEntityMid": "m.03spz",
            "mid2name": {
                "ns:m.03spz": "Israel"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_percentage.rate) (JOIN (R location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp) Israel))",
            "SExpr": "(JOIN (R measurement_unit.dated_percentage.rate) (JOIN (R location.statistical_region.market_cap_of_listed_companies_as_percent_of_gdp) m.03spz))"
        }
    },
    "58": {
        "generations": "What are the colors of the United States Air Force Academy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k9wp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k9wp ns:education.educational_institution.subsidiary_or_constituent_schools ?y .\n?y ns:education.educational_institution.colors ?x .\n}\n",
            "TopicEntityMid": "m.0k9wp",
            "mid2name": {
                "ns:m.0k9wp": "United States Air Force Academy"
            },
            "SExpr_w_name": "(JOIN (R education.educational_institution.colors) (JOIN (R education.educational_institution.subsidiary_or_constituent_schools) United States Air Force Academy))",
            "SExpr": "(JOIN (R education.educational_institution.colors) (JOIN (R education.educational_institution.subsidiary_or_constituent_schools) m.0k9wp))"
        }
    },
    "59": {
        "generations": "What category was the cyclone that affected Puerto Rico?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r7t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r7t ns:meteorology.cyclone_affected_area.cyclones ?y .\n?y ns:meteorology.tropical_cyclone.category ?x .\n}\n",
            "TopicEntityMid": "m.05r7t",
            "mid2name": {
                "ns:m.05r7t": "Puerto Rico"
            },
            "SExpr_w_name": "(JOIN (R meteorology.tropical_cyclone.category) (JOIN (R meteorology.cyclone_affected_area.cyclones) Puerto Rico))",
            "SExpr": "(JOIN (R meteorology.tropical_cyclone.category) (JOIN (R meteorology.cyclone_affected_area.cyclones) m.05r7t))"
        }
    },
    "60": {
        "generations": "who are shawnee smith's parents and spouse?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06t3nj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06t3nj ns:people.person.parents ?y .\n?y ns:people.person.spouse_s ?x .\n}\n",
            "TopicEntityMid": "m.06t3nj",
            "mid2name": {
                "ns:m.06t3nj": "Shawnee Smith"
            },
            "SExpr_w_name": "(JOIN (R people.person.spouse_s) (JOIN (R people.person.parents) Shawnee Smith))",
            "SExpr": "(JOIN (R people.person.spouse_s) (JOIN (R people.person.parents) m.06t3nj))"
        }
    },
    "61": {
        "generations": "What movies are currently playing in theaters in Spain?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:film.film_location.featured_in_films ?y .\n?y ns:user.mikeshwe.default_domain.fandango_film.currently_in_theatres ?x .\n}\n",
            "TopicEntityMid": "m.06mkj",
            "mid2name": {
                "ns:m.06mkj": "Spain"
            },
            "SExpr_w_name": "(JOIN (R user.mikeshwe.default_domain.fandango_film.currently_in_theatres) (JOIN (R film.film_location.featured_in_films) Spain))",
            "SExpr": "(JOIN (R user.mikeshwe.default_domain.fandango_film.currently_in_theatres) (JOIN (R film.film_location.featured_in_films) m.06mkj))"
        }
    },
    "62": {
        "generations": "Which school did Meg Griffin graduate from in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035szd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035szd ns:fictional_universe.fictional_character.education ?y .\n?y ns:fictional_universe.school_in_fiction.students_graduates ?x .\n}\n",
            "TopicEntityMid": "m.035szd",
            "mid2name": {
                "ns:m.035szd": "Meg Griffin"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.school_in_fiction.students_graduates) (JOIN (R fictional_universe.fictional_character.education) Meg Griffin))",
            "SExpr": "(JOIN (R fictional_universe.school_in_fiction.students_graduates) (JOIN (R fictional_universe.fictional_character.education) m.035szd))"
        }
    },
    "63": {
        "generations": "what awards has angelina jolie won?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:award.ranked_item.appears_in_ranked_lists ?y .\n?y ns:award.ranking.list ?x .\n}\n",
            "TopicEntityMid": "m.0f4vbz",
            "mid2name": {
                "ns:m.0f4vbz": "Angelina Jolie"
            },
            "SExpr_w_name": "(JOIN (R award.ranking.list) (JOIN (R award.ranked_item.appears_in_ranked_lists) Angelina Jolie))",
            "SExpr": "(JOIN (R award.ranking.list) (JOIN (R award.ranked_item.appears_in_ranked_lists) m.0f4vbz))"
        }
    },
    "64": {
        "generations": "what is the debt service as a percentage of trade volume in bangkok?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fn2g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fn2g ns:location.administrative_division.country ?y .\n?y ns:location.statistical_region.debt_service_as_percent_of_trade_volume ?x .\n}\n",
            "TopicEntityMid": "m.0fn2g",
            "mid2name": {
                "ns:m.0fn2g": "Bangkok"
            },
            "SExpr_w_name": "(JOIN (R location.statistical_region.debt_service_as_percent_of_trade_volume) (JOIN (R location.administrative_division.country) Bangkok))",
            "SExpr": "(JOIN (R location.statistical_region.debt_service_as_percent_of_trade_volume) (JOIN (R location.administrative_division.country) m.0fn2g))"
        }
    },
    "65": {
        "generations": "when was taylor swift's record label founded?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dl567)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dl567 ns:music.artist.label ?y .\n?y ns:organization.organization.date_founded ?x .\n}\n",
            "TopicEntityMid": "m.0dl567",
            "mid2name": {
                "ns:m.0dl567": "Taylor Swift"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.date_founded) (JOIN (R music.artist.label) Taylor Swift))",
            "SExpr": "(JOIN (R organization.organization.date_founded) (JOIN (R music.artist.label) m.0dl567))"
        }
    },
    "66": {
        "generations": "What was the size of Nigeria's armed forces in a specific year?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cgv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cgv ns:location.statistical_region.size_of_armed_forces ?y .\n?y ns:measurement_unit.dated_integer.year ?x .\n}\n",
            "TopicEntityMid": "m.05cgv",
            "mid2name": {
                "ns:m.05cgv": "Nigeria"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_integer.year) (JOIN (R location.statistical_region.size_of_armed_forces) Nigeria))",
            "SExpr": "(JOIN (R measurement_unit.dated_integer.year) (JOIN (R location.statistical_region.size_of_armed_forces) m.05cgv))"
        }
    },
    "67": {
        "generations": "What are some quotes by people about Catholicism?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c8wxp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c8wxp ns:religion.religion.deities ?y .\n?y ns:people.person.quotations ?x .\n}\n",
            "TopicEntityMid": "m.0c8wxp",
            "mid2name": {
                "ns:m.0c8wxp": "Catholicism"
            },
            "SExpr_w_name": "(JOIN (R people.person.quotations) (JOIN (R religion.religion.deities) Catholicism))",
            "SExpr": "(JOIN (R people.person.quotations) (JOIN (R religion.religion.deities) m.0c8wxp))"
        }
    },
    "68": {
        "generations": "who is Lola Bunny's romantic partner in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0534r8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0534r8 ns:fictional_universe.fictional_character.romantically_involved_with ?y .\n?y ns:fictional_universe.romantic_involvement.partner ?x .\n}\n",
            "TopicEntityMid": "m.0534r8",
            "mid2name": {
                "ns:m.0534r8": "Lola Bunny"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.romantic_involvement.partner) (JOIN (R fictional_universe.fictional_character.romantically_involved_with) Lola Bunny))",
            "SExpr": "(JOIN (R fictional_universe.romantic_involvement.partner) (JOIN (R fictional_universe.fictional_character.romantically_involved_with) m.0534r8))"
        }
    },
    "69": {
        "generations": "What language is the movie Baby Looney Tunes' Eggs-traordinary Adventure in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04j2p8f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04j2p8f ns:film.film.language ?y .\n?y ns:language.human_language.iso_639_3_code ?x .\n}\n",
            "TopicEntityMid": "m.04j2p8f",
            "mid2name": {
                "ns:m.04j2p8f": "Baby Looney Tunes' Eggs-traordinary Adventure"
            },
            "SExpr_w_name": "(JOIN (R language.human_language.iso_639_3_code) (JOIN (R film.film.language) Baby Looney Tunes' Eggs-traordinary Adventure))",
            "SExpr": "(JOIN (R language.human_language.iso_639_3_code) (JOIN (R film.film.language) m.04j2p8f))"
        }
    },
    "70": {
        "generations": "who was friends with c.s. lewis?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wd02c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wd02c ns:celebrities.celebrity.celebrity_friends ?y .\n?y ns:celebrities.friendship.friend ?x .\n}\n",
            "TopicEntityMid": "m.01wd02c",
            "mid2name": {
                "ns:m.01wd02c": "C. S. Lewis"
            },
            "SExpr_w_name": "(JOIN (R celebrities.friendship.friend) (JOIN (R celebrities.celebrity.celebrity_friends) C. S. Lewis))",
            "SExpr": "(JOIN (R celebrities.friendship.friend) (JOIN (R celebrities.celebrity.celebrity_friends) m.01wd02c))"
        }
    },
    "71": {
        "generations": "what companies are part of the european union?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_6t_z8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_6t_z8 ns:organization.organization_scope.organizations_with_this_scope ?y .\n?y ns:business.product_line.parent_product_line ?x .\n}\n",
            "TopicEntityMid": "m.0_6t_z8",
            "mid2name": {
                "ns:m.0_6t_z8": "European Union"
            },
            "SExpr_w_name": "(JOIN (R business.product_line.parent_product_line) (JOIN (R organization.organization_scope.organizations_with_this_scope) European Union))",
            "SExpr": "(JOIN (R business.product_line.parent_product_line) (JOIN (R organization.organization_scope.organizations_with_this_scope) m.0_6t_z8))"
        }
    },
    "72": {
        "generations": "In which film did Nelson Mandela make a personal appearance?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g7q ns:film.person_or_entity_appearing_in_film.films ?y .\n?y ns:film.personal_film_appearance.film ?x .\n}\n",
            "TopicEntityMid": "m.05g7q",
            "mid2name": {
                "ns:m.05g7q": "Nelson Mandela"
            },
            "SExpr_w_name": "(JOIN (R film.personal_film_appearance.film) (JOIN (R film.person_or_entity_appearing_in_film.films) Nelson Mandela))",
            "SExpr": "(JOIN (R film.personal_film_appearance.film) (JOIN (R film.person_or_entity_appearing_in_film.films) m.05g7q))"
        }
    },
    "73": {
        "generations": "who are the members of the government body in the philippines?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05v8c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05v8c ns:government.governmental_jurisdiction.government_bodies ?y .\n?y ns:government.governmental_body.members ?x .\n}\n",
            "TopicEntityMid": "m.05v8c",
            "mid2name": {
                "ns:m.05v8c": "Philippines"
            },
            "SExpr_w_name": "(JOIN (R government.governmental_body.members) (JOIN (R government.governmental_jurisdiction.government_bodies) Philippines))",
            "SExpr": "(JOIN (R government.governmental_body.members) (JOIN (R government.governmental_jurisdiction.government_bodies) m.05v8c))"
        }
    },
    "74": {
        "generations": "what is the net worth of ryanair?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01m_zd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01m_zd ns:business.business_operation.assets ?y .\n?y ns:measurement_unit.dated_money_value.amount ?x .\n}\n",
            "TopicEntityMid": "m.01m_zd",
            "mid2name": {
                "ns:m.01m_zd": "Ryanair"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_money_value.amount) (JOIN (R business.business_operation.assets) Ryanair))",
            "SExpr": "(JOIN (R measurement_unit.dated_money_value.amount) (JOIN (R business.business_operation.assets) m.01m_zd))"
        }
    },
    "75": {
        "generations": "what is the population of oklahoma?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mph ns:location.statistical_region.population ?y .\n?y ns:measurement_unit.dated_integer.number ?x .\n}\n",
            "TopicEntityMid": "m.05mph",
            "mid2name": {
                "ns:m.05mph": "Oklahoma"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_integer.number) (JOIN (R location.statistical_region.population) Oklahoma))",
            "SExpr": "(JOIN (R measurement_unit.dated_integer.number) (JOIN (R location.statistical_region.population) m.05mph))"
        }
    },
    "76": {
        "generations": "What is the date of the imports and exports between Canada and the specified location?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.date ?x .\n}\n",
            "TopicEntityMid": "m.0d060g",
            "mid2name": {
                "ns:m.0d060g": "Canada"
            },
            "SExpr_w_name": "(JOIN (R location.imports_and_exports.date) (JOIN (R location.statistical_region.places_imported_from) Canada))",
            "SExpr": "(JOIN (R location.imports_and_exports.date) (JOIN (R location.statistical_region.places_imported_from) m.0d060g))"
        }
    },
    "77": {
        "generations": "what awards did shaquille o'neal win?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012xdf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012xdf ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.honored_for ?x .\n}\n",
            "TopicEntityMid": "m.012xdf",
            "mid2name": {
                "ns:m.012xdf": "Shaquille O'Neal"
            },
            "SExpr_w_name": "(JOIN (R award.award_honor.honored_for) (JOIN (R award.award_winner.awards_won) Shaquille O'Neal))",
            "SExpr": "(JOIN (R award.award_honor.honored_for) (JOIN (R award.award_winner.awards_won) m.012xdf))"
        }
    },
    "78": {
        "generations": "what position did derek fisher play in his last team?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lvwk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lvwk ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
            "TopicEntityMid": "m.04lvwk",
            "mid2name": {
                "ns:m.04lvwk": "Derek Fisher"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team_roster.position) (JOIN (R sports.pro_athlete.teams) Derek Fisher))",
            "SExpr": "(JOIN (R sports.sports_team_roster.position) (JOIN (R sports.pro_athlete.teams) m.04lvwk))"
        }
    },
    "79": {
        "generations": "how do you get to the location of caylee anthony's death?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gtx2_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gtx2_ ns:time.event.locations ?y .\n?y ns:travel.travel_destination.how_to_get_here ?x .\n}\n",
            "TopicEntityMid": "m.04gtx2_",
            "mid2name": {
                "ns:m.04gtx2_": "Death of Caylee Anthony"
            },
            "SExpr_w_name": "(JOIN (R travel.travel_destination.how_to_get_here) (JOIN (R time.event.locations) Death of Caylee Anthony))",
            "SExpr": "(JOIN (R travel.travel_destination.how_to_get_here) (JOIN (R time.event.locations) m.04gtx2_))"
        }
    },
    "80": {
        "generations": "what sports magazine covered the houston oilers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04nmxtk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04nmxtk ns:sports.defunct_sports_team.sport ?y .\n?y ns:book.periodical_subject.periodicals ?x .\n}\n",
            "TopicEntityMid": "m.04nmxtk",
            "mid2name": {
                "ns:m.04nmxtk": "Houston Oilers"
            },
            "SExpr_w_name": "(JOIN (R book.periodical_subject.periodicals) (JOIN (R sports.defunct_sports_team.sport) Houston Oilers))",
            "SExpr": "(JOIN (R book.periodical_subject.periodicals) (JOIN (R sports.defunct_sports_team.sport) m.04nmxtk))"
        }
    },
    "81": {
        "generations": "What religion did Gabriel Faur\u00e9 practice?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jn7y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jn7y ns:people.person.religion ?y .\n?y ns:religion.religion.number_of_adherents ?x .\n}\n",
            "TopicEntityMid": "m.0jn7y",
            "mid2name": {
                "ns:m.0jn7y": "Gabriel Faur\u00e9"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.number_of_adherents) (JOIN (R people.person.religion) Gabriel Faur\u00e9))",
            "SExpr": "(JOIN (R religion.religion.number_of_adherents) (JOIN (R people.person.religion) m.0jn7y))"
        }
    },
    "82": {
        "generations": "What fictional universe did Jules Verne create?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04093)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04093 ns:fictional_universe.fictional_universe_creator.fictional_universes_created ?y .\n?y ns:fictional_universe.fictional_universe.works_set_here ?x .\n}\n",
            "TopicEntityMid": "m.04093",
            "mid2name": {
                "ns:m.04093": "Jules Verne"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.works_set_here) (JOIN (R fictional_universe.fictional_universe_creator.fictional_universes_created) Jules Verne))",
            "SExpr": "(JOIN (R fictional_universe.fictional_universe.works_set_here) (JOIN (R fictional_universe.fictional_universe_creator.fictional_universes_created) m.04093))"
        }
    },
    "83": {
        "generations": "who was jon gosselin married to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.046s1z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.046s1z1 ns:user.narphorium.people.notable_person.part_of_notable_couple ?y .\n?y ns:user.narphorium.people.notable_couple.members ?x .\n}\n",
            "TopicEntityMid": "m.046s1z1",
            "mid2name": {
                "ns:m.046s1z1": "Jon Gosselin"
            },
            "SExpr_w_name": "(JOIN (R user.narphorium.people.notable_couple.members) (JOIN (R user.narphorium.people.notable_person.part_of_notable_couple) Jon Gosselin))",
            "SExpr": "(JOIN (R user.narphorium.people.notable_couple.members) (JOIN (R user.narphorium.people.notable_person.part_of_notable_couple) m.046s1z1))"
        }
    },
    "84": {
        "generations": "Which company built locomotives for Mitsubishi Group?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0czgc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0czgc ns:rail.locomotive_builder.locomotive_classes_built ?y .\n?y ns:rail.locomotive_class.built_by ?x .\n}\n",
            "TopicEntityMid": "m.0czgc",
            "mid2name": {
                "ns:m.0czgc": "Mitsubishi Group"
            },
            "SExpr_w_name": "(JOIN (R rail.locomotive_class.built_by) (JOIN (R rail.locomotive_builder.locomotive_classes_built) Mitsubishi Group))",
            "SExpr": "(JOIN (R rail.locomotive_class.built_by) (JOIN (R rail.locomotive_builder.locomotive_classes_built) m.0czgc))"
        }
    },
    "85": {
        "generations": "what is the cruise speed of aircraft models made by mitsubishi heavy industries?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02bght)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02bght ns:aviation.aircraft_manufacturer.aircraft_models_made ?y .\n?y ns:aviation.aircraft_model.cruise_speed ?x .\n}\n",
            "TopicEntityMid": "m.02bght",
            "mid2name": {
                "ns:m.02bght": "Mitsubishi Heavy Industries, Ltd."
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_model.cruise_speed) (JOIN (R aviation.aircraft_manufacturer.aircraft_models_made) Mitsubishi Heavy Industries, Ltd.))",
            "SExpr": "(JOIN (R aviation.aircraft_model.cruise_speed) (JOIN (R aviation.aircraft_manufacturer.aircraft_models_made) m.02bght))"
        }
    },
    "86": {
        "generations": "who is sponsored by mitsubishi motors?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01cylx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01cylx ns:business.sponsor.sponsorship ?y .\n?y ns:business.sponsorship.sponsored_recipient ?x .\n}\n",
            "TopicEntityMid": "m.01cylx",
            "mid2name": {
                "ns:m.01cylx": "Mitsubishi Motors"
            },
            "SExpr_w_name": "(JOIN (R business.sponsorship.sponsored_recipient) (JOIN (R business.sponsor.sponsorship) Mitsubishi Motors))",
            "SExpr": "(JOIN (R business.sponsorship.sponsored_recipient) (JOIN (R business.sponsor.sponsorship) m.01cylx))"
        }
    },
    "87": {
        "generations": "what sport does jay cutler play professionally?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.097hft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.097hft ns:sports.pro_athlete.sports_played_professionally ?y .\n?y ns:sports.pro_sports_played.sport ?x .\n}\n",
            "TopicEntityMid": "m.097hft",
            "mid2name": {
                "ns:m.097hft": "Jay Cutler"
            },
            "SExpr_w_name": "(JOIN (R sports.pro_sports_played.sport) (JOIN (R sports.pro_athlete.sports_played_professionally) Jay Cutler))",
            "SExpr": "(JOIN (R sports.pro_sports_played.sport) (JOIN (R sports.pro_athlete.sports_played_professionally) m.097hft))"
        }
    },
    "88": {
        "generations": "What album was released for the soundtrack of the movie Megamind?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05229c_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05229c_ ns:film.film.soundtrack ?y .\n?y ns:music.album.releases ?x .\n}\n",
            "TopicEntityMid": "m.05229c_",
            "mid2name": {
                "ns:m.05229c_": "MegaMind"
            },
            "SExpr_w_name": "(JOIN (R music.album.releases) (JOIN (R film.film.soundtrack) MegaMind))",
            "SExpr": "(JOIN (R music.album.releases) (JOIN (R film.film.soundtrack) m.05229c_))"
        }
    },
    "89": {
        "generations": "How many staff members does a typical public university have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jxkf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jxkf ns:education.school_category.schools_of_this_kind ?y .\n?y ns:education.educational_institution.number_of_staff ?x .\n}\n",
            "TopicEntityMid": "m.05jxkf",
            "mid2name": {
                "ns:m.05jxkf": "Public university"
            },
            "SExpr_w_name": "(JOIN (R education.educational_institution.number_of_staff) (JOIN (R education.school_category.schools_of_this_kind) Public university))",
            "SExpr": "(JOIN (R education.educational_institution.number_of_staff) (JOIN (R education.school_category.schools_of_this_kind) m.05jxkf))"
        }
    },
    "90": {
        "generations": "What songs did Jayne Mansfield record?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.024y6w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.024y6w ns:music.artist.track ?y .\n?y ns:music.recording.tracks ?x .\n}\n",
            "TopicEntityMid": "m.024y6w",
            "mid2name": {
                "ns:m.024y6w": "Jayne Mansfield"
            },
            "SExpr_w_name": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) Jayne Mansfield))",
            "SExpr": "(JOIN (R music.recording.tracks) (JOIN (R music.artist.track) m.024y6w))"
        }
    },
    "91": {
        "generations": "What division do the Los Angeles Kings play in for ice hockey?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jnq8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jnq8 ns:ice_hockey.hockey_team.division ?y .\n?y ns:ice_hockey.hockey_division.teams ?x .\n}\n",
            "TopicEntityMid": "m.0jnq8",
            "mid2name": {
                "ns:m.0jnq8": "Los Angeles Kings"
            },
            "SExpr_w_name": "(JOIN (R ice_hockey.hockey_division.teams) (JOIN (R ice_hockey.hockey_team.division) Los Angeles Kings))",
            "SExpr": "(JOIN (R ice_hockey.hockey_division.teams) (JOIN (R ice_hockey.hockey_team.division) m.0jnq8))"
        }
    },
    "92": {
        "generations": "What countries partially contain Chile?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p1v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p1v ns:location.location.partially_contained_by ?y .\n?y ns:location.partial_containment_relationship.partially_contained_by ?x .\n}\n",
            "TopicEntityMid": "m.01p1v",
            "mid2name": {
                "ns:m.01p1v": "Chile"
            },
            "SExpr_w_name": "(JOIN (R location.partial_containment_relationship.partially_contained_by) (JOIN (R location.location.partially_contained_by) Chile))",
            "SExpr": "(JOIN (R location.partial_containment_relationship.partially_contained_by) (JOIN (R location.location.partially_contained_by) m.01p1v))"
        }
    },
    "93": {
        "generations": "how many passing attempts does peyton manning have in american football?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027jv8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027jv8 ns:american_football.football_player.passing ?y .\n?y ns:american_football.player_passing_statistics.attempts ?x .\n}\n",
            "TopicEntityMid": "m.027jv8",
            "mid2name": {
                "ns:m.027jv8": "Peyton Manning"
            },
            "SExpr_w_name": "(JOIN (R american_football.player_passing_statistics.attempts) (JOIN (R american_football.football_player.passing) Peyton Manning))",
            "SExpr": "(JOIN (R american_football.player_passing_statistics.attempts) (JOIN (R american_football.football_player.passing) m.027jv8))"
        }
    },
    "94": {
        "generations": "what is the role of the national football league board membership?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059yj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059yj ns:organization.organization.board_members ?y .\n?y ns:organization.organization_board_membership.role ?x .\n}\n",
            "TopicEntityMid": "m.059yj",
            "mid2name": {
                "ns:m.059yj": "National Football League"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_board_membership.role) (JOIN (R organization.organization.board_members) National Football League))",
            "SExpr": "(JOIN (R organization.organization_board_membership.role) (JOIN (R organization.organization.board_members) m.059yj))"
        }
    },
    "95": {
        "generations": "who was in the regular cast of season 4 of in living color?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04dq5zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04dq5zq ns:tv.tv_series_season.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n",
            "TopicEntityMid": "m.04dq5zq",
            "mid2name": {
                "ns:m.04dq5zq": "In Living Color (Season 4)"
            },
            "SExpr_w_name": "(JOIN (R tv.regular_tv_appearance.actor) (JOIN (R tv.tv_series_season.regular_cast) In Living Color (Season 4)))",
            "SExpr": "(JOIN (R tv.regular_tv_appearance.actor) (JOIN (R tv.tv_series_season.regular_cast) m.04dq5zq))"
        }
    },
    "96": {
        "generations": "what is harry potter's occupation in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03647x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03647x ns:fictional_universe.fictional_character.occupation ?y .\n?y ns:fictional_universe.character_occupation.characters_with_this_occupation ?x .\n}\n",
            "TopicEntityMid": "m.03647x",
            "mid2name": {
                "ns:m.03647x": "Harry Potter"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) (JOIN (R fictional_universe.fictional_character.occupation) Harry Potter))",
            "SExpr": "(JOIN (R fictional_universe.character_occupation.characters_with_this_occupation) (JOIN (R fictional_universe.fictional_character.occupation) m.03647x))"
        }
    },
    "97": {
        "generations": "What genre of music does Nick Cannon's album belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01d1st)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01d1st ns:music.artist.album ?y .\n?y ns:music.album.genre ?x .\n}\n",
            "TopicEntityMid": "m.01d1st",
            "mid2name": {
                "ns:m.01d1st": "Nick Cannon"
            },
            "SExpr_w_name": "(JOIN (R music.album.genre) (JOIN (R music.artist.album) Nick Cannon))",
            "SExpr": "(JOIN (R music.album.genre) (JOIN (R music.artist.album) m.01d1st))"
        }
    },
    "98": {
        "generations": "What is the prefix for the taxonomy entry related to Thailand?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07f1x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07f1x ns:user.tsegaran.random.taxonomy_subject.entry ?y .\n?y ns:user.tsegaran.random.taxonomy_entry.prefix ?x .\n}\n",
            "TopicEntityMid": "m.07f1x",
            "mid2name": {
                "ns:m.07f1x": "Thailand"
            },
            "SExpr_w_name": "(JOIN (R user.tsegaran.random.taxonomy_entry.prefix) (JOIN (R user.tsegaran.random.taxonomy_subject.entry) Thailand))",
            "SExpr": "(JOIN (R user.tsegaran.random.taxonomy_entry.prefix) (JOIN (R user.tsegaran.random.taxonomy_subject.entry) m.07f1x))"
        }
    },
    "99": {
        "generations": "what organizations were founded in montana?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050l8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050l8 ns:government.governmental_jurisdiction.agencies ?y .\n?y ns:organization.organization.place_founded ?x .\n}\n",
            "TopicEntityMid": "m.050l8",
            "mid2name": {
                "ns:m.050l8": "Montana"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.place_founded) (JOIN (R government.governmental_jurisdiction.agencies) Montana))",
            "SExpr": "(JOIN (R organization.organization.place_founded) (JOIN (R government.governmental_jurisdiction.agencies) m.050l8))"
        }
    },
    "100": {
        "generations": "who founded organizations in south america?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06n3y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06n3y ns:location.location.contains_major_portion_of ?y .\n?y ns:organization.organization_founder.organizations_founded ?x .\n}\n",
            "TopicEntityMid": "m.06n3y",
            "mid2name": {
                "ns:m.06n3y": "South America"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_founder.organizations_founded) (JOIN (R location.location.contains_major_portion_of) South America))",
            "SExpr": "(JOIN (R organization.organization_founder.organizations_founded) (JOIN (R location.location.contains_major_portion_of) m.06n3y))"
        }
    },
    "101": {
        "generations": "What rides at amusement parks are themed after Pixar movies?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kk9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kk9v ns:amusement_parks.ride_theme.rides ?y .\n?y ns:amusement_parks.ride.area ?x .\n}\n",
            "TopicEntityMid": "m.0kk9v",
            "mid2name": {
                "ns:m.0kk9v": "Pixar"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.ride.area) (JOIN (R amusement_parks.ride_theme.rides) Pixar))",
            "SExpr": "(JOIN (R amusement_parks.ride.area) (JOIN (R amusement_parks.ride_theme.rides) m.0kk9v))"
        }
    },
    "102": {
        "generations": "What was the magnitude of the 2011 Christchurch earthquake?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gg9kfr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gg9kfr ns:user.robert.earthquakes.earthquake.magnitude ?y .\n?y ns:user.robert.earthquakes.earthquake_magnitude.magnitude ?x .\n}\n",
            "TopicEntityMid": "m.0gg9kfr",
            "mid2name": {
                "ns:m.0gg9kfr": "2011 Christchurch earthquake"
            },
            "SExpr_w_name": "(JOIN (R user.robert.earthquakes.earthquake_magnitude.magnitude) (JOIN (R user.robert.earthquakes.earthquake.magnitude) 2011 Christchurch earthquake))",
            "SExpr": "(JOIN (R user.robert.earthquakes.earthquake_magnitude.magnitude) (JOIN (R user.robert.earthquakes.earthquake.magnitude) m.0gg9kfr))"
        }
    },
    "103": {
        "generations": "What is the gender of Mason Capwell's fictional character parents?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f3bz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f3bz1 ns:fictional_universe.fictional_character.parents ?y .\n?y ns:fictional_universe.fictional_character.gender ?x .\n}\n",
            "TopicEntityMid": "m.04f3bz1",
            "mid2name": {
                "ns:m.04f3bz1": "Mason Capwell"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.gender) (JOIN (R fictional_universe.fictional_character.parents) Mason Capwell))",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.gender) (JOIN (R fictional_universe.fictional_character.parents) m.04f3bz1))"
        }
    },
    "104": {
        "generations": "who appointed james madison to his government position?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0424m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0424m ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.appointed_by ?x .\n}\n",
            "TopicEntityMid": "m.0424m",
            "mid2name": {
                "ns:m.0424m": "James Madison"
            },
            "SExpr_w_name": "(JOIN (R government.government_position_held.appointed_by) (JOIN (R government.politician.government_positions_held) James Madison))",
            "SExpr": "(JOIN (R government.government_position_held.appointed_by) (JOIN (R government.politician.government_positions_held) m.0424m))"
        }
    },
    "105": {
        "generations": "when does daylight saving time begin in colorado?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n4w ns:location.location.time_zones ?y .\n?y ns:time.time_zone.day_dst_begins ?x .\n}\n",
            "TopicEntityMid": "m.01n4w",
            "mid2name": {
                "ns:m.01n4w": "Colorado"
            },
            "SExpr_w_name": "(JOIN (R time.time_zone.day_dst_begins) (JOIN (R location.location.time_zones) Colorado))",
            "SExpr": "(JOIN (R time.time_zone.day_dst_begins) (JOIN (R location.location.time_zones) m.01n4w))"
        }
    },
    "106": {
        "generations": "What military conflicts has Taiwan been involved in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f32 ns:military.military_combatant.belongs_to_combatant_group ?y .\n?y ns:military.military_combatant.military_conflicts ?x .\n}\n",
            "TopicEntityMid": "m.06f32",
            "mid2name": {
                "ns:m.06f32": "Taiwan"
            },
            "SExpr_w_name": "(JOIN (R military.military_combatant.military_conflicts) (JOIN (R military.military_combatant.belongs_to_combatant_group) Taiwan))",
            "SExpr": "(JOIN (R military.military_combatant.military_conflicts) (JOIN (R military.military_combatant.belongs_to_combatant_group) m.06f32))"
        }
    },
    "107": {
        "generations": "What movies has Brandi Glanville acted in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h94rm6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h94rm6 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
            "TopicEntityMid": "m.0h94rm6",
            "mid2name": {
                "ns:m.0h94rm6": "Brandi Glanville"
            },
            "SExpr_w_name": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) Brandi Glanville))",
            "SExpr": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.0h94rm6))"
        }
    },
    "108": {
        "generations": "How many episodes are there about Adolf Hitler in TV programs?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:tv.tv_subject.tv_programs ?y .\n?y ns:tv.tv_program.number_of_episodes ?x .\n}\n",
            "TopicEntityMid": "m.07_m9_",
            "mid2name": {
                "ns:m.07_m9_": "Adolf Hitler"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program.number_of_episodes) (JOIN (R tv.tv_subject.tv_programs) Adolf Hitler))",
            "SExpr": "(JOIN (R tv.tv_program.number_of_episodes) (JOIN (R tv.tv_subject.tv_programs) m.07_m9_))"
        }
    },
    "109": {
        "generations": "What division and conference does the Green Bay Packers belong to in American football?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03b3j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03b3j ns:american_football.football_team.conference ?y .\n?y ns:american_football.football_conference.divisions ?x .\n}\n",
            "TopicEntityMid": "m.03b3j",
            "mid2name": {
                "ns:m.03b3j": "Green Bay Packers"
            },
            "SExpr_w_name": "(JOIN (R american_football.football_conference.divisions) (JOIN (R american_football.football_team.conference) Green Bay Packers))",
            "SExpr": "(JOIN (R american_football.football_conference.divisions) (JOIN (R american_football.football_team.conference) m.03b3j))"
        }
    },
    "110": {
        "generations": "which brands are owned in europe by newspapers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02j9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02j9z ns:periodicals.newspaper_circulation_area.newspapers ?y .\n?y ns:business.brand.owner_s ?x .\n}\n",
            "TopicEntityMid": "m.02j9z",
            "mid2name": {
                "ns:m.02j9z": "Europe"
            },
            "SExpr_w_name": "(JOIN (R business.brand.owner_s) (JOIN (R periodicals.newspaper_circulation_area.newspapers) Europe))",
            "SExpr": "(JOIN (R business.brand.owner_s) (JOIN (R periodicals.newspaper_circulation_area.newspapers) m.02j9z))"
        }
    },
    "111": {
        "generations": "What are the Abrahamic religions?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f_h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f_h6 ns:religion.religion.practices ?y .\n?y ns:religion.religious_practice.practice_of ?x .\n}\n",
            "TopicEntityMid": "m.0f_h6",
            "mid2name": {
                "ns:m.0f_h6": "Abrahamic religions"
            },
            "SExpr_w_name": "(JOIN (R religion.religious_practice.practice_of) (JOIN (R religion.religion.practices) Abrahamic religions))",
            "SExpr": "(JOIN (R religion.religious_practice.practice_of) (JOIN (R religion.religion.practices) m.0f_h6))"
        }
    },
    "112": {
        "generations": "what disease does tom cruise have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07r1h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07r1h ns:medicine.notable_person_with_medical_condition.condition ?y .\n?y ns:medicine.disease.parent_disease ?x .\n}\n",
            "TopicEntityMid": "m.07r1h",
            "mid2name": {
                "ns:m.07r1h": "Tom Cruise"
            },
            "SExpr_w_name": "(JOIN (R medicine.disease.parent_disease) (JOIN (R medicine.notable_person_with_medical_condition.condition) Tom Cruise))",
            "SExpr": "(JOIN (R medicine.disease.parent_disease) (JOIN (R medicine.notable_person_with_medical_condition.condition) m.07r1h))"
        }
    },
    "113": {
        "generations": "Who are the representatives for New York in the legislative sessions?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059rby)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059rby ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.legislative_sessions ?x .\n}\n",
            "TopicEntityMid": "m.059rby",
            "mid2name": {
                "ns:m.059rby": "New York"
            },
            "SExpr_w_name": "(JOIN (R government.government_position_held.legislative_sessions) (JOIN (R government.political_district.representatives) New York))",
            "SExpr": "(JOIN (R government.government_position_held.legislative_sessions) (JOIN (R government.political_district.representatives) m.059rby))"
        }
    },
    "114": {
        "generations": "what genre is family guy season 1?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027gynh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027gynh ns:tv.tv_series_season.series ?y .\n?y ns:tv.tv_program.genre ?x .\n}\n",
            "TopicEntityMid": "m.027gynh",
            "mid2name": {
                "ns:m.027gynh": "Family Guy - Season 1"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program.genre) (JOIN (R tv.tv_series_season.series) Family Guy - Season 1))",
            "SExpr": "(JOIN (R tv.tv_program.genre) (JOIN (R tv.tv_series_season.series) m.027gynh))"
        }
    },
    "115": {
        "generations": "which comic book character has appeared in stories with lois lane?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04pzy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04pzy ns:comic_books.comic_book_character.story_specific_appearances ?y .\n?y ns:comic_books.comic_book_story.letters ?x .\n}\n",
            "TopicEntityMid": "m.04pzy",
            "mid2name": {
                "ns:m.04pzy": "Lois Lane"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_story.letters) (JOIN (R comic_books.comic_book_character.story_specific_appearances) Lois Lane))",
            "SExpr": "(JOIN (R comic_books.comic_book_story.letters) (JOIN (R comic_books.comic_book_character.story_specific_appearances) m.04pzy))"
        }
    },
    "116": {
        "generations": "What is the percentage of agriculture in the GDP of the country of origin of the play Annie?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_1m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_1m4 ns:theater.play.country_of_origin ?y .\n?y ns:location.statistical_region.agriculture_as_percent_of_gdp ?x .\n}\n",
            "TopicEntityMid": "m.01_1m4",
            "mid2name": {
                "ns:m.01_1m4": "Annie"
            },
            "SExpr_w_name": "(JOIN (R location.statistical_region.agriculture_as_percent_of_gdp) (JOIN (R theater.play.country_of_origin) Annie))",
            "SExpr": "(JOIN (R location.statistical_region.agriculture_as_percent_of_gdp) (JOIN (R theater.play.country_of_origin) m.01_1m4))"
        }
    },
    "117": {
        "generations": "what is the content rating for the movie aladdin?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jnwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jnwx ns:film.film.rating ?y .\n?y ns:film.content_rating.film ?x .\n}\n",
            "TopicEntityMid": "m.0jnwx",
            "mid2name": {
                "ns:m.0jnwx": "Aladdin"
            },
            "SExpr_w_name": "(JOIN (R film.content_rating.film) (JOIN (R film.film.rating) Aladdin))",
            "SExpr": "(JOIN (R film.content_rating.film) (JOIN (R film.film.rating) m.0jnwx))"
        }
    },
    "118": {
        "generations": "where do the miami heat stay when they travel?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jm2v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jm2v ns:sports.sports_team.location ?y .\n?y ns:travel.travel_destination.accommodation ?x .\n}\n",
            "TopicEntityMid": "m.0jm2v",
            "mid2name": {
                "ns:m.0jm2v": "Miami Heat"
            },
            "SExpr_w_name": "(JOIN (R travel.travel_destination.accommodation) (JOIN (R sports.sports_team.location) Miami Heat))",
            "SExpr": "(JOIN (R travel.travel_destination.accommodation) (JOIN (R sports.sports_team.location) m.0jm2v))"
        }
    },
    "119": {
        "generations": "who is the fantasy football player for the position played by deion sanders?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n69x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n69x ns:american_football.football_player.position_s ?y .\n?y ns:user.szaijan.fantasy_football.position.player ?x .\n}\n",
            "TopicEntityMid": "m.03n69x",
            "mid2name": {
                "ns:m.03n69x": "Deion Sanders"
            },
            "SExpr_w_name": "(JOIN (R user.szaijan.fantasy_football.position.player) (JOIN (R american_football.football_player.position_s) Deion Sanders))",
            "SExpr": "(JOIN (R user.szaijan.fantasy_football.position.player) (JOIN (R american_football.football_player.position_s) m.03n69x))"
        }
    },
    "120": {
        "generations": "Which state is adjacent to Alaska?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hjy ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n}\n",
            "TopicEntityMid": "m.0hjy",
            "mid2name": {
                "ns:m.0hjy": "Alaska"
            },
            "SExpr_w_name": "(JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) Alaska))",
            "SExpr": "(JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.0hjy))"
        }
    },
    "121": {
        "generations": "what countries speak persian language and have second level divisions?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.032f6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.032f6 ns:language.human_language.countries_spoken_in ?y .\n?y ns:location.country.second_level_divisions ?x .\n}\n",
            "TopicEntityMid": "m.032f6",
            "mid2name": {
                "ns:m.032f6": "Persian Language"
            },
            "SExpr_w_name": "(JOIN (R location.country.second_level_divisions) (JOIN (R language.human_language.countries_spoken_in) Persian Language))",
            "SExpr": "(JOIN (R location.country.second_level_divisions) (JOIN (R language.human_language.countries_spoken_in) m.032f6))"
        }
    },
    "122": {
        "generations": "when did maxie jones last appear on tv?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fbppx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fbppx ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.to ?x .\n}\n",
            "TopicEntityMid": "m.0fbppx",
            "mid2name": {
                "ns:m.0fbppx": "Maxie Jones"
            },
            "SExpr_w_name": "(JOIN (R tv.regular_tv_appearance.to) (JOIN (R tv.tv_character.appeared_in_tv_program) Maxie Jones))",
            "SExpr": "(JOIN (R tv.regular_tv_appearance.to) (JOIN (R tv.tv_character.appeared_in_tv_program) m.0fbppx))"
        }
    },
    "123": {
        "generations": "what is the source of the gdp nominal for the palestinian national authority?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0604m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0604m ns:location.statistical_region.gdp_nominal ?y .\n?y ns:measurement_unit.dated_money_value.source ?x .\n}\n",
            "TopicEntityMid": "m.0604m",
            "mid2name": {
                "ns:m.0604m": "Palestinian National Authority"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_money_value.source) (JOIN (R location.statistical_region.gdp_nominal) Palestinian National Authority))",
            "SExpr": "(JOIN (R measurement_unit.dated_money_value.source) (JOIN (R location.statistical_region.gdp_nominal) m.0604m))"
        }
    },
    "124": {
        "generations": "what language is the harvard college newspaper written in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mpwj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mpwj ns:education.educational_institution.newspaper ?y .\n?y ns:book.periodical.language ?x .\n}\n",
            "TopicEntityMid": "m.01mpwj",
            "mid2name": {
                "ns:m.01mpwj": "Harvard College"
            },
            "SExpr_w_name": "(JOIN (R book.periodical.language) (JOIN (R education.educational_institution.newspaper) Harvard College))",
            "SExpr": "(JOIN (R book.periodical.language) (JOIN (R education.educational_institution.newspaper) m.01mpwj))"
        }
    },
    "125": {
        "generations": "who are padm\u00e9 amidala's siblings in the star wars universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0drf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0drf_ ns:fictional_universe.fictional_character.siblings ?y .\n?y ns:fictional_universe.sibling_relationship_of_fictional_characters.siblings ?x .\n}\n",
            "TopicEntityMid": "m.0drf_",
            "mid2name": {
                "ns:m.0drf_": "Padm\u00e9 Amidala"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.sibling_relationship_of_fictional_characters.siblings) (JOIN (R fictional_universe.fictional_character.siblings) Padm\u00e9 Amidala))",
            "SExpr": "(JOIN (R fictional_universe.sibling_relationship_of_fictional_characters.siblings) (JOIN (R fictional_universe.fictional_character.siblings) m.0drf_))"
        }
    },
    "126": {
        "generations": "What industry is Harry Potter and the Philosopher's Stone associated with?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03176f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03176f ns:film.film.production_companies ?y .\n?y ns:business.business_operation.industry ?x .\n}\n",
            "TopicEntityMid": "m.03176f",
            "mid2name": {
                "ns:m.03176f": "Harry Potter and the Philosopher's Stone"
            },
            "SExpr_w_name": "(JOIN (R business.business_operation.industry) (JOIN (R film.film.production_companies) Harry Potter and the Philosopher's Stone))",
            "SExpr": "(JOIN (R business.business_operation.industry) (JOIN (R film.film.production_companies) m.03176f))"
        }
    },
    "127": {
        "generations": "who voiced professor albus dumbledore in video games?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cb2r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cb2r ns:cvg.game_character.games ?y .\n?y ns:cvg.game_performance.voice_actor ?x .\n}\n",
            "TopicEntityMid": "m.0cb2r",
            "mid2name": {
                "ns:m.0cb2r": "Professor Albus Dumbledore"
            },
            "SExpr_w_name": "(JOIN (R cvg.game_performance.voice_actor) (JOIN (R cvg.game_character.games) Professor Albus Dumbledore))",
            "SExpr": "(JOIN (R cvg.game_performance.voice_actor) (JOIN (R cvg.game_character.games) m.0cb2r))"
        }
    },
    "128": {
        "generations": "Which teams were part of the American Football League?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ysy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ysy ns:sports.sports_league.teams ?y .\n?y ns:sports.sports_league_participation.team ?x .\n}\n",
            "TopicEntityMid": "m.0ysy",
            "mid2name": {
                "ns:m.0ysy": "American Football League"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league_participation.team) (JOIN (R sports.sports_league.teams) American Football League))",
            "SExpr": "(JOIN (R sports.sports_league_participation.team) (JOIN (R sports.sports_league.teams) m.0ysy))"
        }
    },
    "129": {
        "generations": "How many foreclosures are estimated in the original city of the Arizona Cardinals?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ws7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ws7 ns:user.dylanrocks.national_football_league.nfl_teams_that_have_moved_cities.original_city ?y .\n?y ns:location.hud_foreclosure_area.estimated_number_foreclosures ?x .\n}\n",
            "TopicEntityMid": "m.0ws7",
            "mid2name": {
                "ns:m.0ws7": "Arizona Cardinals"
            },
            "SExpr_w_name": "(JOIN (R location.hud_foreclosure_area.estimated_number_foreclosures) (JOIN (R user.dylanrocks.national_football_league.nfl_teams_that_have_moved_cities.original_city) Arizona Cardinals))",
            "SExpr": "(JOIN (R location.hud_foreclosure_area.estimated_number_foreclosures) (JOIN (R user.dylanrocks.national_football_league.nfl_teams_that_have_moved_cities.original_city) m.0ws7))"
        }
    },
    "130": {
        "generations": "What recording did Marilyn Monroe feature in as an artist?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04wqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04wqr ns:music.featured_artist.recordings ?y .\n?y ns:music.recording.artist ?x .\n}\n",
            "TopicEntityMid": "m.04wqr",
            "mid2name": {
                "ns:m.04wqr": "Marilyn Monroe"
            },
            "SExpr_w_name": "(JOIN (R music.recording.artist) (JOIN (R music.featured_artist.recordings) Marilyn Monroe))",
            "SExpr": "(JOIN (R music.recording.artist) (JOIN (R music.featured_artist.recordings) m.04wqr))"
        }
    },
    "131": {
        "generations": "what character did brad pitt play in a tv guest role?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c6qh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c6qh ns:tv.tv_actor.guest_roles ?y .\n?y ns:tv.tv_guest_role.character ?x .\n}\n",
            "TopicEntityMid": "m.0c6qh",
            "mid2name": {
                "ns:m.0c6qh": "Brad Pitt"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_guest_role.character) (JOIN (R tv.tv_actor.guest_roles) Brad Pitt))",
            "SExpr": "(JOIN (R tv.tv_guest_role.character) (JOIN (R tv.tv_actor.guest_roles) m.0c6qh))"
        }
    },
    "132": {
        "generations": "what type of music did dolly parton compose?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02f1c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02f1c ns:music.composer.compositions ?y .\n?y ns:music.composition.form ?x .\n}\n",
            "TopicEntityMid": "m.02f1c",
            "mid2name": {
                "ns:m.02f1c": "Dolly Parton"
            },
            "SExpr_w_name": "(JOIN (R music.composition.form) (JOIN (R music.composer.compositions) Dolly Parton))",
            "SExpr": "(JOIN (R music.composition.form) (JOIN (R music.composer.compositions) m.02f1c))"
        }
    },
    "133": {
        "generations": "When did Elizabeth II become a board member of an organization?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1_f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1_f ns:business.board_member.organization_board_memberships ?y .\n?y ns:organization.organization_board_membership.from ?x .\n}\n",
            "TopicEntityMid": "m.0d1_f",
            "mid2name": {
                "ns:m.0d1_f": "Elizabeth II"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_board_membership.from) (JOIN (R business.board_member.organization_board_memberships) Elizabeth II))",
            "SExpr": "(JOIN (R organization.organization_board_membership.from) (JOIN (R business.board_member.organization_board_memberships) m.0d1_f))"
        }
    },
    "134": {
        "generations": "when did the jonas brothers' concert tour end?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cbm64)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cbm64 ns:music.artist.concert_tours ?y .\n?y ns:time.event.end_date ?x .\n}\n",
            "TopicEntityMid": "m.0cbm64",
            "mid2name": {
                "ns:m.0cbm64": "Jonas Brothers"
            },
            "SExpr_w_name": "(JOIN (R time.event.end_date) (JOIN (R music.artist.concert_tours) Jonas Brothers))",
            "SExpr": "(JOIN (R time.event.end_date) (JOIN (R music.artist.concert_tours) m.0cbm64))"
        }
    },
    "135": {
        "generations": "How many medals did Saudi Arabia win in the Olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z215)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z215 ns:olympics.olympic_participating_country.medals_won ?y .\n?y ns:olympics.olympic_medal_honor.medal ?x .\n}\n",
            "TopicEntityMid": "m.01z215",
            "mid2name": {
                "ns:m.01z215": "Saudi Arabia"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_medal_honor.medal) (JOIN (R olympics.olympic_participating_country.medals_won) Saudi Arabia))",
            "SExpr": "(JOIN (R olympics.olympic_medal_honor.medal) (JOIN (R olympics.olympic_participating_country.medals_won) m.01z215))"
        }
    },
    "136": {
        "generations": "What sports did Czechoslovakian athletes participate in at the Olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mk6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mk6 ns:olympics.olympic_participating_country.athletes ?y .\n?y ns:olympics.olympic_athlete_affiliation.sport ?x .\n}\n",
            "TopicEntityMid": "m.01mk6",
            "mid2name": {
                "ns:m.01mk6": "Czechoslovakia"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_athlete_affiliation.sport) (JOIN (R olympics.olympic_participating_country.athletes) Czechoslovakia))",
            "SExpr": "(JOIN (R olympics.olympic_athlete_affiliation.sport) (JOIN (R olympics.olympic_participating_country.athletes) m.01mk6))"
        }
    },
    "137": {
        "generations": "who were richard wagner's peers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c44 ns:influence.influence_node.peers ?y .\n?y ns:influence.peer_relationship.peers ?x .\n}\n",
            "TopicEntityMid": "m.06c44",
            "mid2name": {
                "ns:m.06c44": "Richard Wagner"
            },
            "SExpr_w_name": "(JOIN (R influence.peer_relationship.peers) (JOIN (R influence.influence_node.peers) Richard Wagner))",
            "SExpr": "(JOIN (R influence.peer_relationship.peers) (JOIN (R influence.influence_node.peers) m.06c44))"
        }
    },
    "138": {
        "generations": "When did someone start working for the Denver Broncos?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0289q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0289q ns:business.employer.employees ?y .\n?y ns:business.employment_tenure.from ?x .\n}\n",
            "TopicEntityMid": "m.0289q",
            "mid2name": {
                "ns:m.0289q": "Denver Broncos"
            },
            "SExpr_w_name": "(JOIN (R business.employment_tenure.from) (JOIN (R business.employer.employees) Denver Broncos))",
            "SExpr": "(JOIN (R business.employment_tenure.from) (JOIN (R business.employer.employees) m.0289q))"
        }
    },
    "139": {
        "generations": "What is the number of Basque language speakers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017k6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017k6 ns:language.human_language.main_country ?y .\n?y ns:user.mr_kav.default_domain.customer.num ?x .\n}\n",
            "TopicEntityMid": "m.017k6",
            "mid2name": {
                "ns:m.017k6": "Basque Language"
            },
            "SExpr_w_name": "(JOIN (R user.mr_kav.default_domain.customer.num) (JOIN (R language.human_language.main_country) Basque Language))",
            "SExpr": "(JOIN (R user.mr_kav.default_domain.customer.num) (JOIN (R language.human_language.main_country) m.017k6))"
        }
    },
    "140": {
        "generations": "what is the population of north korea's capital?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b7q ns:location.country.capital ?y .\n?y ns:topic_server.population_number ?x .\n}\n",
            "TopicEntityMid": "m.05b7q",
            "mid2name": {
                "ns:m.05b7q": "North Korea"
            },
            "SExpr_w_name": "(JOIN (R topic_server.population_number) (JOIN (R location.country.capital) North Korea))",
            "SExpr": "(JOIN (R topic_server.population_number) (JOIN (R location.country.capital) m.05b7q))"
        }
    },
    "141": {
        "generations": "what league do the houston rockets play in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jmfb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jmfb ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n",
            "TopicEntityMid": "m.0jmfb",
            "mid2name": {
                "ns:m.0jmfb": "Houston Rockets"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) Houston Rockets))",
            "SExpr": "(JOIN (R sports.sports_league_participation.league) (JOIN (R sports.sports_team.league) m.0jmfb))"
        }
    },
    "142": {
        "generations": "What is the geologic era and age of rock of Mount Whitney?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jlyt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jlyt ns:geography.mountain.age_of_rock ?y .\n?y ns:geography.mountain_age.geologic_era ?x .\n}\n",
            "TopicEntityMid": "m.01jlyt",
            "mid2name": {
                "ns:m.01jlyt": "Mount Whitney"
            },
            "SExpr_w_name": "(JOIN (R geography.mountain_age.geologic_era) (JOIN (R geography.mountain.age_of_rock) Mount Whitney))",
            "SExpr": "(JOIN (R geography.mountain_age.geologic_era) (JOIN (R geography.mountain.age_of_rock) m.01jlyt))"
        }
    },
    "143": {
        "generations": "who designed the film sets for mary poppins?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kcn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kcn7 ns:film.film.film_set_decoration_by ?y .\n?y ns:film.film_set_designer.film_sets_designed ?x .\n}\n",
            "TopicEntityMid": "m.0kcn7",
            "mid2name": {
                "ns:m.0kcn7": "Mary Poppins"
            },
            "SExpr_w_name": "(JOIN (R film.film_set_designer.film_sets_designed) (JOIN (R film.film.film_set_decoration_by) Mary Poppins))",
            "SExpr": "(JOIN (R film.film_set_designer.film_sets_designed) (JOIN (R film.film.film_set_decoration_by) m.0kcn7))"
        }
    },
    "144": {
        "generations": "What was the noble title of Edward VI of England?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02s82)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02s82 ns:royalty.noble_person.titles ?y .\n?y ns:royalty.noble_title_tenure.noble_title ?x .\n}\n",
            "TopicEntityMid": "m.02s82",
            "mid2name": {
                "ns:m.02s82": "Edward VI of England"
            },
            "SExpr_w_name": "(JOIN (R royalty.noble_title_tenure.noble_title) (JOIN (R royalty.noble_person.titles) Edward VI of England))",
            "SExpr": "(JOIN (R royalty.noble_title_tenure.noble_title) (JOIN (R royalty.noble_person.titles) m.02s82))"
        }
    },
    "145": {
        "generations": "what season did johnny bench win a sports award?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0476l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0476l ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n}\n",
            "TopicEntityMid": "m.0476l",
            "mid2name": {
                "ns:m.0476l": "Johnny Bench"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_award.season) (JOIN (R sports.sports_award_winner.awards) Johnny Bench))",
            "SExpr": "(JOIN (R sports.sports_award.season) (JOIN (R sports.sports_award_winner.awards) m.0476l))"
        }
    },
    "146": {
        "generations": "when was MTV's website launched?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04rqd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04rqd ns:internet.website_owner.websites_owned ?y .\n?y ns:internet.website.launched ?x .\n}\n",
            "TopicEntityMid": "m.04rqd",
            "mid2name": {
                "ns:m.04rqd": "MTV"
            },
            "SExpr_w_name": "(JOIN (R internet.website.launched) (JOIN (R internet.website_owner.websites_owned) MTV))",
            "SExpr": "(JOIN (R internet.website.launched) (JOIN (R internet.website_owner.websites_owned) m.04rqd))"
        }
    },
    "147": {
        "generations": "what is guatemala's energy use per capita in dated kgoe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345_ ns:location.statistical_region.energy_use_per_capita ?y .\n?y ns:measurement_unit.dated_kgoe.number ?x .\n}\n",
            "TopicEntityMid": "m.0345_",
            "mid2name": {
                "ns:m.0345_": "Guatemala"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_kgoe.number) (JOIN (R location.statistical_region.energy_use_per_capita) Guatemala))",
            "SExpr": "(JOIN (R measurement_unit.dated_kgoe.number) (JOIN (R location.statistical_region.energy_use_per_capita) m.0345_))"
        }
    },
    "148": {
        "generations": "who distributed the film superman?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_mdl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_mdl ns:film.film.distributors ?y .\n?y ns:film.film_film_distributor_relationship.distributor ?x .\n}\n",
            "TopicEntityMid": "m.01_mdl",
            "mid2name": {
                "ns:m.01_mdl": "Superman"
            },
            "SExpr_w_name": "(JOIN (R film.film_film_distributor_relationship.distributor) (JOIN (R film.film.distributors) Superman))",
            "SExpr": "(JOIN (R film.film_film_distributor_relationship.distributor) (JOIN (R film.film.distributors) m.01_mdl))"
        }
    },
    "149": {
        "generations": "how many receiving yards did marion barber iii have in american football?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07yzk2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07yzk2 ns:american_football.football_player.receiving ?y .\n?y ns:american_football.player_receiving_statistics.yards ?x .\n}\n",
            "TopicEntityMid": "m.07yzk2",
            "mid2name": {
                "ns:m.07yzk2": "Marion Barber III"
            },
            "SExpr_w_name": "(JOIN (R american_football.player_receiving_statistics.yards) (JOIN (R american_football.football_player.receiving) Marion Barber III))",
            "SExpr": "(JOIN (R american_football.player_receiving_statistics.yards) (JOIN (R american_football.football_player.receiving) m.07yzk2))"
        }
    },
    "150": {
        "generations": "which organizations merged with the national collegiate athletic association?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gh43)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gh43 ns:organization.organization.involved_in_merger ?y .\n?y ns:organization.organization_merger.organizations_merging ?x .\n}\n",
            "TopicEntityMid": "m.0gh43",
            "mid2name": {
                "ns:m.0gh43": "National Collegiate Athletic Association"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_merger.organizations_merging) (JOIN (R organization.organization.involved_in_merger) National Collegiate Athletic Association))",
            "SExpr": "(JOIN (R organization.organization_merger.organizations_merging) (JOIN (R organization.organization.involved_in_merger) m.0gh43))"
        }
    },
    "151": {
        "generations": "when did pretty little liars start airing?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09v38qj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09v38qj ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.from ?x .\n}\n",
            "TopicEntityMid": "m.09v38qj",
            "mid2name": {
                "ns:m.09v38qj": "Pretty Little Liars"
            },
            "SExpr_w_name": "(JOIN (R tv.regular_tv_appearance.from) (JOIN (R tv.tv_program.regular_cast) Pretty Little Liars))",
            "SExpr": "(JOIN (R tv.regular_tv_appearance.from) (JOIN (R tv.tv_program.regular_cast) m.09v38qj))"
        }
    },
    "152": {
        "generations": "what consumer products are associated with andy warhol?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kc6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kc6 ns:business.product_theme.products ?y .\n?y ns:business.consumer_product.themes ?x .\n}\n",
            "TopicEntityMid": "m.0kc6",
            "mid2name": {
                "ns:m.0kc6": "Andy Warhol"
            },
            "SExpr_w_name": "(JOIN (R business.consumer_product.themes) (JOIN (R business.product_theme.products) Andy Warhol))",
            "SExpr": "(JOIN (R business.consumer_product.themes) (JOIN (R business.product_theme.products) m.0kc6))"
        }
    },
    "153": {
        "generations": "what species is luke skywalker in star wars?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:fictional_universe.fictional_character.species ?y .\n?y ns:fictional_universe.character_species.characters_of_this_species ?x .\n}\n",
            "TopicEntityMid": "m.0f1bg",
            "mid2name": {
                "ns:m.0f1bg": "Luke Skywalker"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.character_species.characters_of_this_species) (JOIN (R fictional_universe.fictional_character.species) Luke Skywalker))",
            "SExpr": "(JOIN (R fictional_universe.character_species.characters_of_this_species) (JOIN (R fictional_universe.fictional_character.species) m.0f1bg))"
        }
    },
    "154": {
        "generations": "How often does Radio 1's Hackney Weekend 2012 occur?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yx1g5l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yx1g5l ns:time.event.instance_of_recurring_event ?y .\n?y ns:time.recurring_event.current_frequency ?x .\n}\n",
            "TopicEntityMid": "m.0yx1g5l",
            "mid2name": {
                "ns:m.0yx1g5l": "Radio 1\u2032s Hackney Weekend 2012"
            },
            "SExpr_w_name": "(JOIN (R time.recurring_event.current_frequency) (JOIN (R time.event.instance_of_recurring_event) Radio 1\u2032s Hackney Weekend 2012))",
            "SExpr": "(JOIN (R time.recurring_event.current_frequency) (JOIN (R time.event.instance_of_recurring_event) m.0yx1g5l))"
        }
    },
    "155": {
        "generations": "who is the leader of the st. louis rams organization?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06x76)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06x76 ns:organization.organization.leadership ?y .\n?y ns:organization.leadership.role ?x .\n}\n",
            "TopicEntityMid": "m.06x76",
            "mid2name": {
                "ns:m.06x76": "St. Louis Rams"
            },
            "SExpr_w_name": "(JOIN (R organization.leadership.role) (JOIN (R organization.organization.leadership) St. Louis Rams))",
            "SExpr": "(JOIN (R organization.leadership.role) (JOIN (R organization.organization.leadership) m.06x76))"
        }
    },
    "156": {
        "generations": "when was thomas edison's patent issued?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07bty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07bty ns:user.lindenb.default_domain.scientist.known_for ?y .\n?y ns:law.us_patent.issue_date ?x .\n}\n",
            "TopicEntityMid": "m.07bty",
            "mid2name": {
                "ns:m.07bty": "Thomas Edison"
            },
            "SExpr_w_name": "(JOIN (R law.us_patent.issue_date) (JOIN (R user.lindenb.default_domain.scientist.known_for) Thomas Edison))",
            "SExpr": "(JOIN (R law.us_patent.issue_date) (JOIN (R user.lindenb.default_domain.scientist.known_for) m.07bty))"
        }
    },
    "157": {
        "generations": "which characters have the same ability as old bilbo in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6z1 ns:fictional_universe.fictional_character.powers_or_abilities ?y .\n?y ns:fictional_universe.character_powers.characters_with_this_ability ?x .\n}\n",
            "TopicEntityMid": "m.0g6z1",
            "mid2name": {
                "ns:m.0g6z1": "Old Bilbo"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.character_powers.characters_with_this_ability) (JOIN (R fictional_universe.fictional_character.powers_or_abilities) Old Bilbo))",
            "SExpr": "(JOIN (R fictional_universe.character_powers.characters_with_this_ability) (JOIN (R fictional_universe.fictional_character.powers_or_abilities) m.0g6z1))"
        }
    },
    "158": {
        "generations": "when did the continental congress end its legislative session?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09k5k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09k5k ns:government.governmental_body.sessions ?y .\n?y ns:government.legislative_session.date_ended ?x .\n}\n",
            "TopicEntityMid": "m.09k5k",
            "mid2name": {
                "ns:m.09k5k": "Continental Congress"
            },
            "SExpr_w_name": "(JOIN (R government.legislative_session.date_ended) (JOIN (R government.governmental_body.sessions) Continental Congress))",
            "SExpr": "(JOIN (R government.legislative_session.date_ended) (JOIN (R government.governmental_body.sessions) m.09k5k))"
        }
    },
    "159": {
        "generations": "which institution awarded a bachelor of science honorary degree?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h4rq6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h4rq6 ns:education.educational_degree.honorary_degree_recipients ?y .\n?y ns:education.honorary_degree.institution ?x .\n}\n",
            "TopicEntityMid": "m.02h4rq6",
            "mid2name": {
                "ns:m.02h4rq6": "Bachelor of Science"
            },
            "SExpr_w_name": "(JOIN (R education.honorary_degree.institution) (JOIN (R education.educational_degree.honorary_degree_recipients) Bachelor of Science))",
            "SExpr": "(JOIN (R education.honorary_degree.institution) (JOIN (R education.educational_degree.honorary_degree_recipients) m.02h4rq6))"
        }
    },
    "160": {
        "generations": "what is the postal code for audi's headquarters?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k50)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k50 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.postal_code ?x .\n}\n",
            "TopicEntityMid": "m.0k50",
            "mid2name": {
                "ns:m.0k50": "Audi"
            },
            "SExpr_w_name": "(JOIN (R location.mailing_address.postal_code) (JOIN (R organization.organization.headquarters) Audi))",
            "SExpr": "(JOIN (R location.mailing_address.postal_code) (JOIN (R organization.organization.headquarters) m.0k50))"
        }
    },
    "161": {
        "generations": "What flag is associated with the President of the United States?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060d2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060d2 ns:symbols.flag_referent.flag ?y .\n?y ns:symbols.flag_use.flag ?x .\n}\n",
            "TopicEntityMid": "m.060d2",
            "mid2name": {
                "ns:m.060d2": "President of the United States"
            },
            "SExpr_w_name": "(JOIN (R symbols.flag_use.flag) (JOIN (R symbols.flag_referent.flag) President of the United States))",
            "SExpr": "(JOIN (R symbols.flag_use.flag) (JOIN (R symbols.flag_referent.flag) m.060d2))"
        }
    },
    "162": {
        "generations": "who did hank azaria voice in a video game?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0sw6g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0sw6g ns:cvg.game_voice_actor.computer_game_voice_performances ?y .\n?y ns:cvg.game_performance.character ?x .\n}\n",
            "TopicEntityMid": "m.0sw6g",
            "mid2name": {
                "ns:m.0sw6g": "Hank Azaria"
            },
            "SExpr_w_name": "(JOIN (R cvg.game_performance.character) (JOIN (R cvg.game_voice_actor.computer_game_voice_performances) Hank Azaria))",
            "SExpr": "(JOIN (R cvg.game_performance.character) (JOIN (R cvg.game_voice_actor.computer_game_voice_performances) m.0sw6g))"
        }
    },
    "163": {
        "generations": "What music videos are associated with the genre of B\u00e9la Fleck and the Flecktones?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017f9r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017f9r ns:music.artist.genre ?y .\n?y ns:music.music_video_genre.music_videos_of_this_genre ?x .\n}\n",
            "TopicEntityMid": "m.017f9r",
            "mid2name": {
                "ns:m.017f9r": "B\u00e9la Fleck and the Flecktones"
            },
            "SExpr_w_name": "(JOIN (R music.music_video_genre.music_videos_of_this_genre) (JOIN (R music.artist.genre) B\u00e9la Fleck and the Flecktones))",
            "SExpr": "(JOIN (R music.music_video_genre.music_videos_of_this_genre) (JOIN (R music.artist.genre) m.017f9r))"
        }
    },
    "164": {
        "generations": "when did the battle of chancellorsville end?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d0mw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d0mw ns:time.event.included_in_event ?y .\n?y ns:user.jerols.default_domain.historical_event.date_ended ?x .\n}\n",
            "TopicEntityMid": "m.0d0mw",
            "mid2name": {
                "ns:m.0d0mw": "Battle of Chancellorsville"
            },
            "SExpr_w_name": "(JOIN (R user.jerols.default_domain.historical_event.date_ended) (JOIN (R time.event.included_in_event) Battle of Chancellorsville))",
            "SExpr": "(JOIN (R user.jerols.default_domain.historical_event.date_ended) (JOIN (R time.event.included_in_event) m.0d0mw))"
        }
    },
    "165": {
        "generations": "what play did morgan freeman act in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.055c8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.055c8 ns:theater.theater_actor.theater_roles ?y .\n?y ns:theater.theater_role.play ?x .\n}\n",
            "TopicEntityMid": "m.055c8",
            "mid2name": {
                "ns:m.055c8": "Morgan Freeman"
            },
            "SExpr_w_name": "(JOIN (R theater.theater_role.play) (JOIN (R theater.theater_actor.theater_roles) Morgan Freeman))",
            "SExpr": "(JOIN (R theater.theater_role.play) (JOIN (R theater.theater_actor.theater_roles) m.055c8))"
        }
    },
    "166": {
        "generations": "What are the different breeds of King Charles Spaniel and their coloring?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04nmst)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04nmst ns:biology.animal_breed.coloring ?y .\n?y ns:biology.breed_coloring.breeds ?x .\n}\n",
            "TopicEntityMid": "m.04nmst",
            "mid2name": {
                "ns:m.04nmst": "King Charles Spaniel"
            },
            "SExpr_w_name": "(JOIN (R biology.breed_coloring.breeds) (JOIN (R biology.animal_breed.coloring) King Charles Spaniel))",
            "SExpr": "(JOIN (R biology.breed_coloring.breeds) (JOIN (R biology.animal_breed.coloring) m.04nmst))"
        }
    },
    "167": {
        "generations": "when did the new york mets retire from professional sports?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g76)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g76 ns:sports.sport.pro_athletes ?y .\n?y ns:sports.pro_sports_played.career_end ?x .\n}\n",
            "TopicEntityMid": "m.05g76",
            "mid2name": {
                "ns:m.05g76": "New York Mets"
            },
            "SExpr_w_name": "(JOIN (R sports.pro_sports_played.career_end) (JOIN (R sports.sport.pro_athletes) New York Mets))",
            "SExpr": "(JOIN (R sports.pro_sports_played.career_end) (JOIN (R sports.sport.pro_athletes) m.05g76))"
        }
    },
    "168": {
        "generations": "What county is Destin located in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rp8x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rp8x ns:location.hud_county_place.county ?y .\n?y ns:location.us_county.hud_county_place ?x .\n}\n",
            "TopicEntityMid": "m.0rp8x",
            "mid2name": {
                "ns:m.0rp8x": "Destin"
            },
            "SExpr_w_name": "(JOIN (R location.us_county.hud_county_place) (JOIN (R location.hud_county_place.county) Destin))",
            "SExpr": "(JOIN (R location.us_county.hud_county_place) (JOIN (R location.hud_county_place.county) m.0rp8x))"
        }
    },
    "169": {
        "generations": "who was the production designer for the film Crazy, Stupid, Love?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddf2bm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddf2bm ns:film.film.film_art_direction_by ?y .\n?y ns:film.film_production_designer.films_production_designed ?x .\n}\n",
            "TopicEntityMid": "m.0ddf2bm",
            "mid2name": {
                "ns:m.0ddf2bm": "Crazy, Stupid, Love."
            },
            "SExpr_w_name": "(JOIN (R film.film_production_designer.films_production_designed) (JOIN (R film.film.film_art_direction_by) Crazy, Stupid, Love.))",
            "SExpr": "(JOIN (R film.film_production_designer.films_production_designed) (JOIN (R film.film.film_art_direction_by) m.0ddf2bm))"
        }
    },
    "170": {
        "generations": "which organizations is columbia university a member of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w5m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w5m ns:organization.organization_member.member_of ?y .\n?y ns:organization.organization_membership.organization ?x .\n}\n",
            "TopicEntityMid": "m.01w5m",
            "mid2name": {
                "ns:m.01w5m": "Columbia University"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_membership.organization) (JOIN (R organization.organization_member.member_of) Columbia University))",
            "SExpr": "(JOIN (R organization.organization_membership.organization) (JOIN (R organization.organization_member.member_of) m.01w5m))"
        }
    },
    "171": {
        "generations": "what political party does john boehner belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039rwf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039rwf ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
            "TopicEntityMid": "m.039rwf",
            "mid2name": {
                "ns:m.039rwf": "John Boehner"
            },
            "SExpr_w_name": "(JOIN (R government.political_party_tenure.party) (JOIN (R government.politician.party) John Boehner))",
            "SExpr": "(JOIN (R government.political_party_tenure.party) (JOIN (R government.politician.party) m.039rwf))"
        }
    },
    "172": {
        "generations": "who edited the film soul surfer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bby9p5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bby9p5 ns:film.film.edited_by ?y .\n?y ns:film.editor.film ?x .\n}\n",
            "TopicEntityMid": "m.0bby9p5",
            "mid2name": {
                "ns:m.0bby9p5": "Soul Surfer"
            },
            "SExpr_w_name": "(JOIN (R film.editor.film) (JOIN (R film.film.edited_by) Soul Surfer))",
            "SExpr": "(JOIN (R film.editor.film) (JOIN (R film.film.edited_by) m.0bby9p5))"
        }
    },
    "173": {
        "generations": "who do jewish people revere according to thought ranker?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.041rx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.041rx ns:people.ethnicity.people ?y .\n?y ns:user.kurt.default_domain.thoughtranker.revered_by ?x .\n}\n",
            "TopicEntityMid": "m.041rx",
            "mid2name": {
                "ns:m.041rx": "Jewish people"
            },
            "SExpr_w_name": "(JOIN (R user.kurt.default_domain.thoughtranker.revered_by) (JOIN (R people.ethnicity.people) Jewish people))",
            "SExpr": "(JOIN (R user.kurt.default_domain.thoughtranker.revered_by) (JOIN (R people.ethnicity.people) m.041rx))"
        }
    },
    "174": {
        "generations": "What is the parent organization of SkyWest Airlines?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nhdy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nhdy ns:organization.organization.parent ?y .\n?y ns:organization.organization_relationship.parent ?x .\n}\n",
            "TopicEntityMid": "m.01nhdy",
            "mid2name": {
                "ns:m.01nhdy": "SkyWest Airlines"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_relationship.parent) (JOIN (R organization.organization.parent) SkyWest Airlines))",
            "SExpr": "(JOIN (R organization.organization_relationship.parent) (JOIN (R organization.organization.parent) m.01nhdy))"
        }
    },
    "175": {
        "generations": "What sectors does McDonald's operate in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07gyp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07gyp7 ns:business.customer.supplier ?y .\n?y ns:organization.organization.sectors ?x .\n}\n",
            "TopicEntityMid": "m.07gyp7",
            "mid2name": {
                "ns:m.07gyp7": "McDonald's"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.sectors) (JOIN (R business.customer.supplier) McDonald's))",
            "SExpr": "(JOIN (R organization.organization.sectors) (JOIN (R business.customer.supplier) m.07gyp7))"
        }
    },
    "176": {
        "generations": "who did nicki minaj support as an artist?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047sxrj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047sxrj ns:music.group_member.artists_supported ?y .\n?y ns:music.artist.contribution ?x .\n}\n",
            "TopicEntityMid": "m.047sxrj",
            "mid2name": {
                "ns:m.047sxrj": "Nicki Minaj"
            },
            "SExpr_w_name": "(JOIN (R music.artist.contribution) (JOIN (R music.group_member.artists_supported) Nicki Minaj))",
            "SExpr": "(JOIN (R music.artist.contribution) (JOIN (R music.group_member.artists_supported) m.047sxrj))"
        }
    },
    "177": {
        "generations": "When did John Mayer start a romantic relationship?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s21dg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s21dg ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.start_date ?x .\n}\n",
            "TopicEntityMid": "m.01s21dg",
            "mid2name": {
                "ns:m.01s21dg": "John Mayer"
            },
            "SExpr_w_name": "(JOIN (R celebrities.romantic_relationship.start_date) (JOIN (R celebrities.celebrity.sexual_relationships) John Mayer))",
            "SExpr": "(JOIN (R celebrities.romantic_relationship.start_date) (JOIN (R celebrities.celebrity.sexual_relationships) m.01s21dg))"
        }
    },
    "178": {
        "generations": "what is the trading symbol for general motors?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035nm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035nm ns:business.issuer.issue ?y .\n?y ns:business.issue.trading_symbol ?x .\n}\n",
            "TopicEntityMid": "m.035nm",
            "mid2name": {
                "ns:m.035nm": "General Motors"
            },
            "SExpr_w_name": "(JOIN (R business.issue.trading_symbol) (JOIN (R business.issuer.issue) General Motors))",
            "SExpr": "(JOIN (R business.issue.trading_symbol) (JOIN (R business.issuer.issue) m.035nm))"
        }
    },
    "179": {
        "generations": "What states are partially contained within Illinois?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03v0t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03v0t ns:location.location.partiallycontains ?y .\n?y ns:location.partial_containment_relationship.partially_contains ?x .\n}\n",
            "TopicEntityMid": "m.03v0t",
            "mid2name": {
                "ns:m.03v0t": "Illinois"
            },
            "SExpr_w_name": "(JOIN (R location.partial_containment_relationship.partially_contains) (JOIN (R location.location.partiallycontains) Illinois))",
            "SExpr": "(JOIN (R location.partial_containment_relationship.partially_contains) (JOIN (R location.location.partiallycontains) m.03v0t))"
        }
    },
    "180": {
        "generations": "What movies has Adam Sandler written trailers for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pz91)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pz91 ns:film.writer.film ?y .\n?y ns:film.film.trailers ?x .\n}\n",
            "TopicEntityMid": "m.0pz91",
            "mid2name": {
                "ns:m.0pz91": "Adam Sandler"
            },
            "SExpr_w_name": "(JOIN (R film.film.trailers) (JOIN (R film.writer.film) Adam Sandler))",
            "SExpr": "(JOIN (R film.film.trailers) (JOIN (R film.writer.film) m.0pz91))"
        }
    },
    "181": {
        "generations": "when did GEICO start their ad campaign according to Micah Saul's data?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r95v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r95v ns:user.micahsaul.advertising.advertiser.ad_campaigns ?y .\n?y ns:user.micahsaul.advertising.ad_campaign.start_date ?x .\n}\n",
            "TopicEntityMid": "m.02r95v",
            "mid2name": {
                "ns:m.02r95v": "GEICO"
            },
            "SExpr_w_name": "(JOIN (R user.micahsaul.advertising.ad_campaign.start_date) (JOIN (R user.micahsaul.advertising.advertiser.ad_campaigns) GEICO))",
            "SExpr": "(JOIN (R user.micahsaul.advertising.ad_campaign.start_date) (JOIN (R user.micahsaul.advertising.advertiser.ad_campaigns) m.02r95v))"
        }
    },
    "182": {
        "generations": "what did richard nixon talk about in his speeches?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c97 ns:event.public_speaker.speeches_or_presentations ?y .\n?y ns:event.speech_or_presentation.speech_topic ?x .\n}\n",
            "TopicEntityMid": "m.06c97",
            "mid2name": {
                "ns:m.06c97": "Richard Nixon"
            },
            "SExpr_w_name": "(JOIN (R event.speech_or_presentation.speech_topic) (JOIN (R event.public_speaker.speeches_or_presentations) Richard Nixon))",
            "SExpr": "(JOIN (R event.speech_or_presentation.speech_topic) (JOIN (R event.public_speaker.speeches_or_presentations) m.06c97))"
        }
    },
    "183": {
        "generations": "When did CollegeHumor become the owner of the website?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_s3l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_s3l ns:internet.website.owner_new ?y .\n?y ns:internet.website_ownership.from ?x .\n}\n",
            "TopicEntityMid": "m.05_s3l",
            "mid2name": {
                "ns:m.05_s3l": "CollegeHumor"
            },
            "SExpr_w_name": "(JOIN (R internet.website_ownership.from) (JOIN (R internet.website.owner_new) CollegeHumor))",
            "SExpr": "(JOIN (R internet.website_ownership.from) (JOIN (R internet.website.owner_new) m.05_s3l))"
        }
    },
    "184": {
        "generations": "who owns the artwork \"The School of Athens\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025sm_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025sm_7 ns:visual_art.artwork.owners ?y .\n?y ns:visual_art.artwork_owner_relationship.owner ?x .\n}\n",
            "TopicEntityMid": "m.025sm_7",
            "mid2name": {
                "ns:m.025sm_7": "The School of Athens"
            },
            "SExpr_w_name": "(JOIN (R visual_art.artwork_owner_relationship.owner) (JOIN (R visual_art.artwork.owners) The School of Athens))",
            "SExpr": "(JOIN (R visual_art.artwork_owner_relationship.owner) (JOIN (R visual_art.artwork.owners) m.025sm_7))"
        }
    },
    "185": {
        "generations": "What topics has LeAnn Rimes written editorials about?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fkxr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fkxr ns:broadcast.artist.content ?y .\n?y ns:user.zsi_editorial.editorial.topic.lists ?x .\n}\n",
            "TopicEntityMid": "m.01fkxr",
            "mid2name": {
                "ns:m.01fkxr": "LeAnn Rimes"
            },
            "SExpr_w_name": "(JOIN (R user.zsi_editorial.editorial.topic.lists) (JOIN (R broadcast.artist.content) LeAnn Rimes))",
            "SExpr": "(JOIN (R user.zsi_editorial.editorial.topic.lists) (JOIN (R broadcast.artist.content) m.01fkxr))"
        }
    },
    "186": {
        "generations": "who wrote for one life to live?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01y6dz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01y6dz ns:tv.tv_program.recurring_writers ?y .\n?y ns:tv.tv_program_writer_relationship.writer ?x .\n}\n",
            "TopicEntityMid": "m.01y6dz",
            "mid2name": {
                "ns:m.01y6dz": "One Life to Live"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_program_writer_relationship.writer) (JOIN (R tv.tv_program.recurring_writers) One Life to Live))",
            "SExpr": "(JOIN (R tv.tv_program_writer_relationship.writer) (JOIN (R tv.tv_program.recurring_writers) m.01y6dz))"
        }
    },
    "187": {
        "generations": "when was the harlem renaissance?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019y_2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019y_2 ns:influence.influence_node.influenced ?y .\n?y ns:people.person.date_of_birth ?x .\n}\n",
            "TopicEntityMid": "m.019y_2",
            "mid2name": {
                "ns:m.019y_2": "Harlem Renaissance"
            },
            "SExpr_w_name": "(JOIN (R people.person.date_of_birth) (JOIN (R influence.influence_node.influenced) Harlem Renaissance))",
            "SExpr": "(JOIN (R people.person.date_of_birth) (JOIN (R influence.influence_node.influenced) m.019y_2))"
        }
    },
    "188": {
        "generations": "what style of architecture did william morris design?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08304)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08304 ns:architecture.architect.structures_designed ?y .\n?y ns:architecture.structure.architectural_style ?x .\n}\n",
            "TopicEntityMid": "m.08304",
            "mid2name": {
                "ns:m.08304": "William Morris"
            },
            "SExpr_w_name": "(JOIN (R architecture.structure.architectural_style) (JOIN (R architecture.architect.structures_designed) William Morris))",
            "SExpr": "(JOIN (R architecture.structure.architectural_style) (JOIN (R architecture.architect.structures_designed) m.08304))"
        }
    },
    "189": {
        "generations": "what is the current exchange rate for euro?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l6h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l6h ns:finance.currency.target_of_exchange ?y .\n?y ns:finance.exchange_rate.amount ?x .\n}\n",
            "TopicEntityMid": "m.02l6h",
            "mid2name": {
                "ns:m.02l6h": "Euro"
            },
            "SExpr_w_name": "(JOIN (R finance.exchange_rate.amount) (JOIN (R finance.currency.target_of_exchange) Euro))",
            "SExpr": "(JOIN (R finance.exchange_rate.amount) (JOIN (R finance.currency.target_of_exchange) m.02l6h))"
        }
    },
    "190": {
        "generations": "Who is the acting president of the organization's board membership?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01zdtb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01zdtb ns:organization.role.governors ?y .\n?y ns:organization.organization_board_membership.member ?x .\n}\n",
            "TopicEntityMid": "m.01zdtb",
            "mid2name": {
                "ns:m.01zdtb": "Acting President"
            },
            "SExpr_w_name": "(JOIN (R organization.organization_board_membership.member) (JOIN (R organization.role.governors) Acting President))",
            "SExpr": "(JOIN (R organization.organization_board_membership.member) (JOIN (R organization.role.governors) m.01zdtb))"
        }
    },
    "191": {
        "generations": "what field of study did nicolaus copernicus contribute to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vvm4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vvm4 ns:education.academic.research_areas ?y .\n?y ns:education.field_of_study.academics_in_this_field ?x .\n}\n",
            "TopicEntityMid": "m.01vvm4",
            "mid2name": {
                "ns:m.01vvm4": "Nicolaus Copernicus"
            },
            "SExpr_w_name": "(JOIN (R education.field_of_study.academics_in_this_field) (JOIN (R education.academic.research_areas) Nicolaus Copernicus))",
            "SExpr": "(JOIN (R education.field_of_study.academics_in_this_field) (JOIN (R education.academic.research_areas) m.01vvm4))"
        }
    },
    "192": {
        "generations": "who did john quincy adams appoint to a position?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_nq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_nq ns:people.appointer.appointment_made ?y .\n?y ns:people.appointment.appointee ?x .\n}\n",
            "TopicEntityMid": "m.03_nq",
            "mid2name": {
                "ns:m.03_nq": "John Quincy Adams"
            },
            "SExpr_w_name": "(JOIN (R people.appointment.appointee) (JOIN (R people.appointer.appointment_made) John Quincy Adams))",
            "SExpr": "(JOIN (R people.appointment.appointee) (JOIN (R people.appointer.appointment_made) m.03_nq))"
        }
    },
    "193": {
        "generations": "what is the area of panama city beach?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rhg5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rhg5 ns:location.hud_county_place.place ?y .\n?y ns:location.location.area ?x .\n}\n",
            "TopicEntityMid": "m.0rhg5",
            "mid2name": {
                "ns:m.0rhg5": "Panama City Beach"
            },
            "SExpr_w_name": "(JOIN (R location.location.area) (JOIN (R location.hud_county_place.place) Panama City Beach))",
            "SExpr": "(JOIN (R location.location.area) (JOIN (R location.hud_county_place.place) m.0rhg5))"
        }
    },
    "194": {
        "generations": "when was the chief justice of the united states appointed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07szk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07szk ns:people.appointed_role.appointment ?y .\n?y ns:people.appointment.declared_on ?x .\n}\n",
            "TopicEntityMid": "m.07szk",
            "mid2name": {
                "ns:m.07szk": "Chief Justice of the United States"
            },
            "SExpr_w_name": "(JOIN (R people.appointment.declared_on) (JOIN (R people.appointed_role.appointment) Chief Justice of the United States))",
            "SExpr": "(JOIN (R people.appointment.declared_on) (JOIN (R people.appointed_role.appointment) m.07szk))"
        }
    },
    "195": {
        "generations": "who discovered the element with the periodic table block named after them?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.053_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.053_d ns:chemistry.element_discoverer.discovered ?y .\n?y ns:chemistry.chemical_element.periodic_table_block ?x .\n}\n",
            "TopicEntityMid": "m.053_d",
            "mid2name": {
                "ns:m.053_d": "Marie Curie"
            },
            "SExpr_w_name": "(JOIN (R chemistry.chemical_element.periodic_table_block) (JOIN (R chemistry.element_discoverer.discovered) Marie Curie))",
            "SExpr": "(JOIN (R chemistry.chemical_element.periodic_table_block) (JOIN (R chemistry.element_discoverer.discovered) m.053_d))"
        }
    },
    "196": {
        "generations": "How many casualties were there during the 2003 invasion of Iraq?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01cpp0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01cpp0 ns:military.military_conflict.casualties ?y .\n?y ns:military.casualties.lower_estimate ?x .\n}\n",
            "TopicEntityMid": "m.01cpp0",
            "mid2name": {
                "ns:m.01cpp0": "2003 invasion of Iraq"
            },
            "SExpr_w_name": "(JOIN (R military.casualties.lower_estimate) (JOIN (R military.military_conflict.casualties) 2003 invasion of Iraq))",
            "SExpr": "(JOIN (R military.casualties.lower_estimate) (JOIN (R military.military_conflict.casualties) m.01cpp0))"
        }
    },
    "197": {
        "generations": "what is the mission statement of yale university's fraternities and sororities?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08815)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08815 ns:education.university.fraternities_and_sororities ?y .\n?y ns:education.fraternity_sorority.mission_statement ?x .\n}\n",
            "TopicEntityMid": "m.08815",
            "mid2name": {
                "ns:m.08815": "University Yale"
            },
            "SExpr_w_name": "(JOIN (R education.fraternity_sorority.mission_statement) (JOIN (R education.university.fraternities_and_sororities) University Yale))",
            "SExpr": "(JOIN (R education.fraternity_sorority.mission_statement) (JOIN (R education.university.fraternities_and_sororities) m.08815))"
        }
    },
    "198": {
        "generations": "Who is the current Speaker of the House and when did they start their tenure?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02079p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02079p ns:business.job_title.people_with_this_title ?y .\n?y ns:business.employment_tenure.to ?x .\n}\n",
            "TopicEntityMid": "m.02079p",
            "mid2name": {
                "ns:m.02079p": "Speaker"
            },
            "SExpr_w_name": "(JOIN (R business.employment_tenure.to) (JOIN (R business.job_title.people_with_this_title) Speaker))",
            "SExpr": "(JOIN (R business.employment_tenure.to) (JOIN (R business.job_title.people_with_this_title) m.02079p))"
        }
    },
    "199": {
        "generations": "who produced the tv show wipeout?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047d4bz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047d4bz ns:tv.tv_program.tv_producer ?y .\n?y ns:tv.tv_producer_term.producer ?x .\n}\n",
            "TopicEntityMid": "m.047d4bz",
            "mid2name": {
                "ns:m.047d4bz": "Wipeout"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_producer_term.producer) (JOIN (R tv.tv_program.tv_producer) Wipeout))",
            "SExpr": "(JOIN (R tv.tv_producer_term.producer) (JOIN (R tv.tv_program.tv_producer) m.047d4bz))"
        }
    },
    "200": {
        "generations": "How many vacant residential addresses were there in Port Lavaca in the last 90 days?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_z4x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_z4x ns:location.hud_foreclosure_area.total_90_day_vacant_residential_addresses ?y .\n?y ns:measurement_unit.dated_integer.source ?x .\n}\n",
            "TopicEntityMid": "m.0_z4x",
            "mid2name": {
                "ns:m.0_z4x": "Port Lavaca"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_integer.source) (JOIN (R location.hud_foreclosure_area.total_90_day_vacant_residential_addresses) Port Lavaca))",
            "SExpr": "(JOIN (R measurement_unit.dated_integer.source) (JOIN (R location.hud_foreclosure_area.total_90_day_vacant_residential_addresses) m.0_z4x))"
        }
    },
    "201": {
        "generations": "what division does tony romo's nfl team belong to in fantasy football?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.097yk7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.097yk7 ns:user.szaijan.fantasy_football.player.nfl_team ?y .\n?y ns:american_football.football_team.division ?x .\n}\n",
            "TopicEntityMid": "m.097yk7",
            "mid2name": {
                "ns:m.097yk7": "Tony Romo"
            },
            "SExpr_w_name": "(JOIN (R american_football.football_team.division) (JOIN (R user.szaijan.fantasy_football.player.nfl_team) Tony Romo))",
            "SExpr": "(JOIN (R american_football.football_team.division) (JOIN (R user.szaijan.fantasy_football.player.nfl_team) m.097yk7))"
        }
    },
    "202": {
        "generations": "What movies has Nike, Inc. produced?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lwkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lwkh ns:film.production_company.films ?y .\n?y ns:film.film.release_date_s ?x .\n}\n",
            "TopicEntityMid": "m.0lwkh",
            "mid2name": {
                "ns:m.0lwkh": "Nike, Inc."
            },
            "SExpr_w_name": "(JOIN (R film.film.release_date_s) (JOIN (R film.production_company.films) Nike, Inc.))",
            "SExpr": "(JOIN (R film.film.release_date_s) (JOIN (R film.production_company.films) m.0lwkh))"
        }
    },
    "203": {
        "generations": "What is the temperament of Staffordshire Bull Terriers?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kv93)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kv93 ns:biology.animal_breed.temperament ?y .\n?y ns:biology.breed_temperament.breeds ?x .\n}\n",
            "TopicEntityMid": "m.01kv93",
            "mid2name": {
                "ns:m.01kv93": "Staffordshire Bull Terrier"
            },
            "SExpr_w_name": "(JOIN (R biology.breed_temperament.breeds) (JOIN (R biology.animal_breed.temperament) Staffordshire Bull Terrier))",
            "SExpr": "(JOIN (R biology.breed_temperament.breeds) (JOIN (R biology.animal_breed.temperament) m.01kv93))"
        }
    },
    "204": {
        "generations": "what is the real GDP of england?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jx1 ns:location.statistical_region.gdp_real ?y .\n?y ns:measurement_unit.adjusted_money_value.measurement_value ?x .\n}\n",
            "TopicEntityMid": "m.02jx1",
            "mid2name": {
                "ns:m.02jx1": "England"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.adjusted_money_value.measurement_value) (JOIN (R location.statistical_region.gdp_real) England))",
            "SExpr": "(JOIN (R measurement_unit.adjusted_money_value.measurement_value) (JOIN (R location.statistical_region.gdp_real) m.02jx1))"
        }
    },
    "205": {
        "generations": "What product line does Ford Motor Company have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zs4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zs4 ns:business.brand.products ?y .\n?y ns:business.consumer_product.product_line ?x .\n}\n",
            "TopicEntityMid": "m.02zs4",
            "mid2name": {
                "ns:m.02zs4": "Ford Motor Company"
            },
            "SExpr_w_name": "(JOIN (R business.consumer_product.product_line) (JOIN (R business.brand.products) Ford Motor Company))",
            "SExpr": "(JOIN (R business.consumer_product.product_line) (JOIN (R business.brand.products) m.02zs4))"
        }
    },
    "206": {
        "generations": "what is the street address of luke air force base?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04twg5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04twg5 ns:location.location.street_address ?y .\n?y ns:location.mailing_address.street_address ?x .\n}\n",
            "TopicEntityMid": "m.04twg5",
            "mid2name": {
                "ns:m.04twg5": "Luke Air Force Base"
            },
            "SExpr_w_name": "(JOIN (R location.mailing_address.street_address) (JOIN (R location.location.street_address) Luke Air Force Base))",
            "SExpr": "(JOIN (R location.mailing_address.street_address) (JOIN (R location.location.street_address) m.04twg5))"
        }
    },
    "207": {
        "generations": "what country was george VI from?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cm83)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cm83 ns:people.family_member.family ?y .\n?y ns:people.family.country ?x .\n}\n",
            "TopicEntityMid": "m.0cm83",
            "mid2name": {
                "ns:m.0cm83": "George VI"
            },
            "SExpr_w_name": "(JOIN (R people.family.country) (JOIN (R people.family_member.family) George VI))",
            "SExpr": "(JOIN (R people.family.country) (JOIN (R people.family_member.family) m.0cm83))"
        }
    },
    "208": {
        "generations": "who has a bachelor's degree?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019v9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019v9k ns:education.educational_degree.people_with_this_degree ?y .\n?y ns:education.education.student ?x .\n}\n",
            "TopicEntityMid": "m.019v9k",
            "mid2name": {
                "ns:m.019v9k": "Bachelor's degree"
            },
            "SExpr_w_name": "(JOIN (R education.education.student) (JOIN (R education.educational_degree.people_with_this_degree) Bachelor's degree))",
            "SExpr": "(JOIN (R education.education.student) (JOIN (R education.educational_degree.people_with_this_degree) m.019v9k))"
        }
    },
    "209": {
        "generations": "who won the wimbledon tennis tournament?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mmmt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mmmt ns:tennis.tennis_tournament.champions ?y .\n?y ns:tennis.tennis_tournament_championship.winner ?x .\n}\n",
            "TopicEntityMid": "m.0mmmt",
            "mid2name": {
                "ns:m.0mmmt": "Wimbledon"
            },
            "SExpr_w_name": "(JOIN (R tennis.tennis_tournament_championship.winner) (JOIN (R tennis.tennis_tournament.champions) Wimbledon))",
            "SExpr": "(JOIN (R tennis.tennis_tournament_championship.winner) (JOIN (R tennis.tennis_tournament.champions) m.0mmmt))"
        }
    },
    "210": {
        "generations": "where is the german language spoken?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.language_family ?y .\n?y ns:language.language_family.geographic_distribution ?x .\n}\n",
            "TopicEntityMid": "m.04306rv",
            "mid2name": {
                "ns:m.04306rv": "German Language"
            },
            "SExpr_w_name": "(JOIN (R language.language_family.geographic_distribution) (JOIN (R language.human_language.language_family) German Language))",
            "SExpr": "(JOIN (R language.language_family.geographic_distribution) (JOIN (R language.human_language.language_family) m.04306rv))"
        }
    },
    "211": {
        "generations": "what is the iso 639-1 code for the russian language?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6ff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6ff ns:people.ethnicity.languages_spoken ?y .\n?y ns:language.human_language.iso_639_1_code ?x .\n}\n",
            "TopicEntityMid": "m.0g6ff",
            "mid2name": {
                "ns:m.0g6ff": "Russian"
            },
            "SExpr_w_name": "(JOIN (R language.human_language.iso_639_1_code) (JOIN (R people.ethnicity.languages_spoken) Russian))",
            "SExpr": "(JOIN (R language.human_language.iso_639_1_code) (JOIN (R people.ethnicity.languages_spoken) m.0g6ff))"
        }
    },
    "212": {
        "generations": "what is kevin garnett's career field goal percentage in basketball?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lm0t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lm0t ns:basketball.basketball_player.career_averages ?y .\n?y ns:basketball.basketball_player_career_stats.field_goal_percentage ?x .\n}\n",
            "TopicEntityMid": "m.02lm0t",
            "mid2name": {
                "ns:m.02lm0t": "Kevin Garnett"
            },
            "SExpr_w_name": "(JOIN (R basketball.basketball_player_career_stats.field_goal_percentage) (JOIN (R basketball.basketball_player.career_averages) Kevin Garnett))",
            "SExpr": "(JOIN (R basketball.basketball_player_career_stats.field_goal_percentage) (JOIN (R basketball.basketball_player.career_averages) m.02lm0t))"
        }
    },
    "213": {
        "generations": "Which country won the gold medal in the Olympics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lpp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lpp7 ns:olympics.olympic_medal.medal_winners ?y .\n?y ns:olympics.olympic_athlete.country ?x .\n}\n",
            "TopicEntityMid": "m.02lpp7",
            "mid2name": {
                "ns:m.02lpp7": "Gold medal"
            },
            "SExpr_w_name": "(JOIN (R olympics.olympic_athlete.country) (JOIN (R olympics.olympic_medal.medal_winners) Gold medal))",
            "SExpr": "(JOIN (R olympics.olympic_athlete.country) (JOIN (R olympics.olympic_medal.medal_winners) m.02lpp7))"
        }
    },
    "214": {
        "generations": "What soccer league does the Philadelphia Union belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mck3c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mck3c ns:soccer.football_team.league ?y .\n?y ns:soccer.football_league_participation.league ?x .\n}\n",
            "TopicEntityMid": "m.03mck3c",
            "mid2name": {
                "ns:m.03mck3c": "Philadelphia Union"
            },
            "SExpr_w_name": "(JOIN (R soccer.football_league_participation.league) (JOIN (R soccer.football_team.league) Philadelphia Union))",
            "SExpr": "(JOIN (R soccer.football_league_participation.league) (JOIN (R soccer.football_team.league) m.03mck3c))"
        }
    },
    "215": {
        "generations": "What music did Johnny Depp produce?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jfx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jfx1 ns:music.producer.tracks_produced ?y .\n?y ns:music.recording.contributions ?x .\n}\n",
            "TopicEntityMid": "m.0jfx1",
            "mid2name": {
                "ns:m.0jfx1": "Johnny Depp"
            },
            "SExpr_w_name": "(JOIN (R music.recording.contributions) (JOIN (R music.producer.tracks_produced) Johnny Depp))",
            "SExpr": "(JOIN (R music.recording.contributions) (JOIN (R music.producer.tracks_produced) m.0jfx1))"
        }
    },
    "216": {
        "generations": "What writing system is used in Vietnam?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01crd5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01crd5 ns:location.country.official_language ?y .\n?y ns:language.human_language.writing_system ?x .\n}\n",
            "TopicEntityMid": "m.01crd5",
            "mid2name": {
                "ns:m.01crd5": "Vietnam"
            },
            "SExpr_w_name": "(JOIN (R language.human_language.writing_system) (JOIN (R location.country.official_language) Vietnam))",
            "SExpr": "(JOIN (R language.human_language.writing_system) (JOIN (R location.country.official_language) m.01crd5))"
        }
    },
    "217": {
        "generations": "Which plays were composed by Sammy Hagar and have soundtracks?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rt2d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rt2d ns:theater.theatrical_composer.plays_composed ?y .\n?y ns:theater.play.soundtracks ?x .\n}\n",
            "TopicEntityMid": "m.02rt2d",
            "mid2name": {
                "ns:m.02rt2d": "Sammy Hagar"
            },
            "SExpr_w_name": "(JOIN (R theater.play.soundtracks) (JOIN (R theater.theatrical_composer.plays_composed) Sammy Hagar))",
            "SExpr": "(JOIN (R theater.play.soundtracks) (JOIN (R theater.theatrical_composer.plays_composed) m.02rt2d))"
        }
    },
    "218": {
        "generations": "What is the role of the guest performer in the recording?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0290ngj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0290ngj ns:music.performance_role.guest_performances ?y .\n?y ns:music.recording_contribution.performance_role ?x .\n}\n",
            "TopicEntityMid": "m.0290ngj",
            "mid2name": {
                "ns:m.0290ngj": "Vocals"
            },
            "SExpr_w_name": "(JOIN (R music.recording_contribution.performance_role) (JOIN (R music.performance_role.guest_performances) Vocals))",
            "SExpr": "(JOIN (R music.recording_contribution.performance_role) (JOIN (R music.performance_role.guest_performances) m.0290ngj))"
        }
    },
    "219": {
        "generations": "What instrument family does Donna Summer's music belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0136p1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0136p1 ns:music.group_member.instruments_played ?y .\n?y ns:music.instrument.family ?x .\n}\n",
            "TopicEntityMid": "m.0136p1",
            "mid2name": {
                "ns:m.0136p1": "Donna Summer"
            },
            "SExpr_w_name": "(JOIN (R music.instrument.family) (JOIN (R music.group_member.instruments_played) Donna Summer))",
            "SExpr": "(JOIN (R music.instrument.family) (JOIN (R music.group_member.instruments_played) m.0136p1))"
        }
    },
    "220": {
        "generations": "what book series did eleanor roosevelt write or contribute to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02n9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02n9k ns:book.author.series_written_or_contributed_to ?y .\n?y ns:book.literary_series.works_in_this_series ?x .\n}\n",
            "TopicEntityMid": "m.02n9k",
            "mid2name": {
                "ns:m.02n9k": "Eleanor Roosevelt"
            },
            "SExpr_w_name": "(JOIN (R book.literary_series.works_in_this_series) (JOIN (R book.author.series_written_or_contributed_to) Eleanor Roosevelt))",
            "SExpr": "(JOIN (R book.literary_series.works_in_this_series) (JOIN (R book.author.series_written_or_contributed_to) m.02n9k))"
        }
    },
    "221": {
        "generations": "What area was affected by the disaster at the Fukushima Daiichi Nuclear Power Plant?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vkzy2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vkzy2 ns:event.disaster_affected_structure.damaged_by_disasters ?y .\n?y ns:event.disaster.areas_affected ?x .\n}\n",
            "TopicEntityMid": "m.02vkzy2",
            "mid2name": {
                "ns:m.02vkzy2": "Fukushima Daiichi Nuclear Power Plant"
            },
            "SExpr_w_name": "(JOIN (R event.disaster.areas_affected) (JOIN (R event.disaster_affected_structure.damaged_by_disasters) Fukushima Daiichi Nuclear Power Plant))",
            "SExpr": "(JOIN (R event.disaster.areas_affected) (JOIN (R event.disaster_affected_structure.damaged_by_disasters) m.02vkzy2))"
        }
    },
    "222": {
        "generations": "What fictional objects are in the same universe as Mary Jane Watson?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ppxz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ppxz ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?y .\n?y ns:fictional_universe.fictional_universe.fictional_objects ?x .\n}\n",
            "TopicEntityMid": "m.01ppxz",
            "mid2name": {
                "ns:m.01ppxz": "Mary Jane Watson"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.fictional_objects) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Mary Jane Watson))",
            "SExpr": "(JOIN (R fictional_universe.fictional_universe.fictional_objects) (JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.01ppxz))"
        }
    },
    "223": {
        "generations": "which movie was nominated for an award called Twilight?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03nm_fh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03nm_fh ns:award.award_nominated_work.award_nominations ?y .\n?y ns:award.award_nomination.award_nominee ?x .\n}\n",
            "TopicEntityMid": "m.03nm_fh",
            "mid2name": {
                "ns:m.03nm_fh": "Twilight"
            },
            "SExpr_w_name": "(JOIN (R award.award_nomination.award_nominee) (JOIN (R award.award_nominated_work.award_nominations) Twilight))",
            "SExpr": "(JOIN (R award.award_nomination.award_nominee) (JOIN (R award.award_nominated_work.award_nominations) m.03nm_fh))"
        }
    },
    "224": {
        "generations": "What character did Bridgit Mendler dub in a film?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04081f3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04081f3 ns:film.actor.dubbing_performances ?y .\n?y ns:film.dubbing_performance.character ?x .\n}\n",
            "TopicEntityMid": "m.04081f3",
            "mid2name": {
                "ns:m.04081f3": "Bridgit Mendler"
            },
            "SExpr_w_name": "(JOIN (R film.dubbing_performance.character) (JOIN (R film.actor.dubbing_performances) Bridgit Mendler))",
            "SExpr": "(JOIN (R film.dubbing_performance.character) (JOIN (R film.actor.dubbing_performances) m.04081f3))"
        }
    },
    "225": {
        "generations": "What tournaments has Jessica Ennis-Hill competed in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b7nrg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b7nrg ns:sports.tournament_event_competitor.events_competed_in ?y .\n?y ns:sports.competitor_competition_relationship.tournament ?x .\n}\n",
            "TopicEntityMid": "m.0b7nrg",
            "mid2name": {
                "ns:m.0b7nrg": "Jessica Ennis-Hill"
            },
            "SExpr_w_name": "(JOIN (R sports.competitor_competition_relationship.tournament) (JOIN (R sports.tournament_event_competitor.events_competed_in) Jessica Ennis-Hill))",
            "SExpr": "(JOIN (R sports.competitor_competition_relationship.tournament) (JOIN (R sports.tournament_event_competitor.events_competed_in) m.0b7nrg))"
        }
    },
    "226": {
        "generations": "what tv show did robert pattinson appear on regularly?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062dn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062dn7 ns:tv.tv_personality.tv_regular_appearances ?y .\n?y ns:tv.tv_regular_personal_appearance.program ?x .\n}\n",
            "TopicEntityMid": "m.062dn7",
            "mid2name": {
                "ns:m.062dn7": "Robert Pattinson"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_regular_personal_appearance.program) (JOIN (R tv.tv_personality.tv_regular_appearances) Robert Pattinson))",
            "SExpr": "(JOIN (R tv.tv_regular_personal_appearance.program) (JOIN (R tv.tv_personality.tv_regular_appearances) m.062dn7))"
        }
    },
    "227": {
        "generations": "What country was the prequel to Paul Blart: Mall Cop filmed in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03why2r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03why2r ns:film.film.prequel ?y .\n?y ns:film.film.country ?x .\n}\n",
            "TopicEntityMid": "m.03why2r",
            "mid2name": {
                "ns:m.03why2r": "Paul Blart: Mall Cop"
            },
            "SExpr_w_name": "(JOIN (R film.film.country) (JOIN (R film.film.prequel) Paul Blart: Mall Cop))",
            "SExpr": "(JOIN (R film.film.country) (JOIN (R film.film.prequel) m.03why2r))"
        }
    },
    "228": {
        "generations": "what was the last episode spike appeared in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jz06)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jz06 ns:tv.tv_character.last_tv_appearance ?y .\n?y ns:tv.tv_series_episode.episode_number ?x .\n}\n",
            "TopicEntityMid": "m.0jz06",
            "mid2name": {
                "ns:m.0jz06": "Spike"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_series_episode.episode_number) (JOIN (R tv.tv_character.last_tv_appearance) Spike))",
            "SExpr": "(JOIN (R tv.tv_series_episode.episode_number) (JOIN (R tv.tv_character.last_tv_appearance) m.0jz06))"
        }
    },
    "229": {
        "generations": "Who were the emperors of the Roman dynasty during the reign of Hadrian?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jxc ns:user.robert.roman_empire.roman_emperor.dynasty ?y .\n?y ns:user.robert.roman_empire.roman_dynasty.emperors ?x .\n}\n",
            "TopicEntityMid": "m.03jxc",
            "mid2name": {
                "ns:m.03jxc": "Hadrian"
            },
            "SExpr_w_name": "(JOIN (R user.robert.roman_empire.roman_dynasty.emperors) (JOIN (R user.robert.roman_empire.roman_emperor.dynasty) Hadrian))",
            "SExpr": "(JOIN (R user.robert.roman_empire.roman_dynasty.emperors) (JOIN (R user.robert.roman_empire.roman_emperor.dynasty) m.03jxc))"
        }
    },
    "230": {
        "generations": "What is the active ingredient in Gardasil and what conditions does it prevent?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dnv87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dnv87 ns:medicine.condition_prevention_factors.conditions_this_may_prevent ?y .\n?y ns:medicine.drug_ingredient.active_moiety_of_formulation ?x .\n}\n",
            "TopicEntityMid": "m.0dnv87",
            "mid2name": {
                "ns:m.0dnv87": "Gardasil"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug_ingredient.active_moiety_of_formulation) (JOIN (R medicine.condition_prevention_factors.conditions_this_may_prevent) Gardasil))",
            "SExpr": "(JOIN (R medicine.drug_ingredient.active_moiety_of_formulation) (JOIN (R medicine.condition_prevention_factors.conditions_this_may_prevent) m.0dnv87))"
        }
    },
    "231": {
        "generations": "who sponsors the american red cross?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0by8vb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0by8vb ns:business.sponsored_recipient.sponsorship ?y .\n?y ns:business.sponsorship.sponsored_by ?x .\n}\n",
            "TopicEntityMid": "m.0by8vb",
            "mid2name": {
                "ns:m.0by8vb": "American Red Cross"
            },
            "SExpr_w_name": "(JOIN (R business.sponsorship.sponsored_by) (JOIN (R business.sponsored_recipient.sponsorship) American Red Cross))",
            "SExpr": "(JOIN (R business.sponsorship.sponsored_by) (JOIN (R business.sponsored_recipient.sponsorship) m.0by8vb))"
        }
    },
    "232": {
        "generations": "how many episodes did lorne appear in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03466b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03466b ns:tv.tv_character.appeared_in_tv_episodes ?y .\n?y ns:tv.tv_guest_role.episodes_appeared_in ?x .\n}\n",
            "TopicEntityMid": "m.03466b",
            "mid2name": {
                "ns:m.03466b": "Lorne"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_guest_role.episodes_appeared_in) (JOIN (R tv.tv_character.appeared_in_tv_episodes) Lorne))",
            "SExpr": "(JOIN (R tv.tv_guest_role.episodes_appeared_in) (JOIN (R tv.tv_character.appeared_in_tv_episodes) m.03466b))"
        }
    },
    "233": {
        "generations": "What sport is the UEFA Champions League Final for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nblxt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nblxt ns:sports.sports_championship.league ?y .\n?y ns:sports.sports_league.sport ?x .\n}\n",
            "TopicEntityMid": "m.05nblxt",
            "mid2name": {
                "ns:m.05nblxt": "UEFA Champions League Final"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league.sport) (JOIN (R sports.sports_championship.league) UEFA Champions League Final))",
            "SExpr": "(JOIN (R sports.sports_league.sport) (JOIN (R sports.sports_championship.league) m.05nblxt))"
        }
    },
    "234": {
        "generations": "how many soccer matches has cristiano ronaldo played in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xt6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xt6q ns:soccer.football_player.matches_played ?y .\n?y ns:soccer.football_player_match_participation.match ?x .\n}\n",
            "TopicEntityMid": "m.02xt6q",
            "mid2name": {
                "ns:m.02xt6q": "Cristiano Ronaldo"
            },
            "SExpr_w_name": "(JOIN (R soccer.football_player_match_participation.match) (JOIN (R soccer.football_player.matches_played) Cristiano Ronaldo))",
            "SExpr": "(JOIN (R soccer.football_player_match_participation.match) (JOIN (R soccer.football_player.matches_played) m.02xt6q))"
        }
    },
    "235": {
        "generations": "When was the train transit line opened?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07jdr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07jdr ns:metropolitan_transit.transit_system.transit_lines ?y .\n?y ns:rail.railway.opened ?x .\n}\n",
            "TopicEntityMid": "m.07jdr",
            "mid2name": {
                "ns:m.07jdr": "Train"
            },
            "SExpr_w_name": "(JOIN (R rail.railway.opened) (JOIN (R metropolitan_transit.transit_system.transit_lines) Train))",
            "SExpr": "(JOIN (R rail.railway.opened) (JOIN (R metropolitan_transit.transit_system.transit_lines) m.07jdr))"
        }
    },
    "236": {
        "generations": "In which film festival did Toy Story 3 participate?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hwbq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hwbq ns:film.film.film_festivals ?y .\n?y ns:film.film_festival_event.films ?x .\n}\n",
            "TopicEntityMid": "m.04hwbq",
            "mid2name": {
                "ns:m.04hwbq": "Toy Story 3"
            },
            "SExpr_w_name": "(JOIN (R film.film_festival_event.films) (JOIN (R film.film.film_festivals) Toy Story 3))",
            "SExpr": "(JOIN (R film.film_festival_event.films) (JOIN (R film.film.film_festivals) m.04hwbq))"
        }
    },
    "237": {
        "generations": "who dubbed the voice of andy in movies?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c09316)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c09316 ns:film.film_character.portrayed_in_films_dubbed ?y .\n?y ns:film.dubbing_performance.film ?x .\n}\n",
            "TopicEntityMid": "m.0c09316",
            "mid2name": {
                "ns:m.0c09316": "Andy"
            },
            "SExpr_w_name": "(JOIN (R film.dubbing_performance.film) (JOIN (R film.film_character.portrayed_in_films_dubbed) Andy))",
            "SExpr": "(JOIN (R film.dubbing_performance.film) (JOIN (R film.film_character.portrayed_in_films_dubbed) m.0c09316))"
        }
    },
    "238": {
        "generations": "Who owns the Panama Canal?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.066rl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.066rl ns:business.asset.owners ?y .\n?y ns:business.asset_ownership.to ?x .\n}\n",
            "TopicEntityMid": "m.066rl",
            "mid2name": {
                "ns:m.066rl": "Panama Canal"
            },
            "SExpr_w_name": "(JOIN (R business.asset_ownership.to) (JOIN (R business.asset.owners) Panama Canal))",
            "SExpr": "(JOIN (R business.asset_ownership.to) (JOIN (R business.asset.owners) m.066rl))"
        }
    },
    "239": {
        "generations": "how many rebounds did steve nash have in his basketball career?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yqrk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yqrk ns:basketball.basketball_player.player_statistics ?y .\n?y ns:basketball.basketball_player_stats.rebounds ?x .\n}\n",
            "TopicEntityMid": "m.01yqrk",
            "mid2name": {
                "ns:m.01yqrk": "Steve Nash"
            },
            "SExpr_w_name": "(JOIN (R basketball.basketball_player_stats.rebounds) (JOIN (R basketball.basketball_player.player_statistics) Steve Nash))",
            "SExpr": "(JOIN (R basketball.basketball_player_stats.rebounds) (JOIN (R basketball.basketball_player.player_statistics) m.01yqrk))"
        }
    },
    "240": {
        "generations": "what operating system is compatible with microsoft windows?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04r_8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04r_8 ns:user.chaswarner.default_domain.computer_program.reads ?y .\n?y ns:user.chaswarner.default_domain.file_format.os ?x .\n}\n",
            "TopicEntityMid": "m.04r_8",
            "mid2name": {
                "ns:m.04r_8": "Microsoft Windows"
            },
            "SExpr_w_name": "(JOIN (R user.chaswarner.default_domain.file_format.os) (JOIN (R user.chaswarner.default_domain.computer_program.reads) Microsoft Windows))",
            "SExpr": "(JOIN (R user.chaswarner.default_domain.file_format.os) (JOIN (R user.chaswarner.default_domain.computer_program.reads) m.04r_8))"
        }
    },
    "241": {
        "generations": "who appointed anthony kennedy to his position?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019s7r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019s7r ns:people.appointee.position ?y .\n?y ns:people.appointment.appointed_by ?x .\n}\n",
            "TopicEntityMid": "m.019s7r",
            "mid2name": {
                "ns:m.019s7r": "Anthony Kennedy"
            },
            "SExpr_w_name": "(JOIN (R people.appointment.appointed_by) (JOIN (R people.appointee.position) Anthony Kennedy))",
            "SExpr": "(JOIN (R people.appointment.appointed_by) (JOIN (R people.appointee.position) m.019s7r))"
        }
    },
    "242": {
        "generations": "What color cards are associated with the Baltimore Orioles in Magic: The Gathering?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01d6g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01d6g ns:sports.sports_team.colors ?y .\n?y ns:user.duck1123.default_domain.mtg_color.cards_of_this_color ?x .\n}\n",
            "TopicEntityMid": "m.01d6g",
            "mid2name": {
                "ns:m.01d6g": "Baltimore Orioles"
            },
            "SExpr_w_name": "(JOIN (R user.duck1123.default_domain.mtg_color.cards_of_this_color) (JOIN (R sports.sports_team.colors) Baltimore Orioles))",
            "SExpr": "(JOIN (R user.duck1123.default_domain.mtg_color.cards_of_this_color) (JOIN (R sports.sports_team.colors) m.01d6g))"
        }
    },
    "243": {
        "generations": "What company or companies were involved in the merger that created Baybrook Mall's owner?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r0gfd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r0gfd ns:business.shopping_center.owner ?y .\n?y ns:organization.organization.product_of_merger ?x .\n}\n",
            "TopicEntityMid": "m.02r0gfd",
            "mid2name": {
                "ns:m.02r0gfd": "Baybrook Mall"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.product_of_merger) (JOIN (R business.shopping_center.owner) Baybrook Mall))",
            "SExpr": "(JOIN (R organization.organization.product_of_merger) (JOIN (R business.shopping_center.owner) m.02r0gfd))"
        }
    },
    "244": {
        "generations": "which albums did randy jackson produce?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02yygk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02yygk ns:music.producer.releases_produced ?y .\n?y ns:music.release.track_list ?x .\n}\n",
            "TopicEntityMid": "m.02yygk",
            "mid2name": {
                "ns:m.02yygk": "Randy Jackson"
            },
            "SExpr_w_name": "(JOIN (R music.release.track_list) (JOIN (R music.producer.releases_produced) Randy Jackson))",
            "SExpr": "(JOIN (R music.release.track_list) (JOIN (R music.producer.releases_produced) m.02yygk))"
        }
    },
    "245": {
        "generations": "What structures were owned by the House of Habsburg in terms of architecture?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03lht)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03lht ns:architecture.architectural_structure_owner.structures_owned ?y .\n?y ns:architecture.ownership.structure ?x .\n}\n",
            "TopicEntityMid": "m.03lht",
            "mid2name": {
                "ns:m.03lht": "House of Habsburg"
            },
            "SExpr_w_name": "(JOIN (R architecture.ownership.structure) (JOIN (R architecture.architectural_structure_owner.structures_owned) House of Habsburg))",
            "SExpr": "(JOIN (R architecture.ownership.structure) (JOIN (R architecture.architectural_structure_owner.structures_owned) m.03lht))"
        }
    },
    "246": {
        "generations": "how much is oregon state university endowed with?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hx2t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hx2t ns:education.educational_institution.campuses ?y .\n?y ns:organization.endowed_organization.endowment ?x .\n}\n",
            "TopicEntityMid": "m.01hx2t",
            "mid2name": {
                "ns:m.01hx2t": "Oregon State University"
            },
            "SExpr_w_name": "(JOIN (R organization.endowed_organization.endowment) (JOIN (R education.educational_institution.campuses) Oregon State University))",
            "SExpr": "(JOIN (R organization.endowed_organization.endowment) (JOIN (R education.educational_institution.campuses) m.01hx2t))"
        }
    },
    "247": {
        "generations": "What is the name of the drop ride at Universal Studios Hollywood?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qsy8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qsy8 ns:amusement_parks.park.rides ?y .\n?y ns:amusement_parks.ride.drop ?x .\n}\n",
            "TopicEntityMid": "m.05qsy8",
            "mid2name": {
                "ns:m.05qsy8": "Universal Studios Hollywood"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.ride.drop) (JOIN (R amusement_parks.park.rides) Universal Studios Hollywood))",
            "SExpr": "(JOIN (R amusement_parks.ride.drop) (JOIN (R amusement_parks.park.rides) m.05qsy8))"
        }
    },
    "248": {
        "generations": "what position does dirk nowitzki play in basketball?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023dcl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023dcl ns:basketball.basketball_player.position_s ?y .\n?y ns:basketball.basketball_position.players ?x .\n}\n",
            "TopicEntityMid": "m.023dcl",
            "mid2name": {
                "ns:m.023dcl": "Dirk Nowitzki"
            },
            "SExpr_w_name": "(JOIN (R basketball.basketball_position.players) (JOIN (R basketball.basketball_player.position_s) Dirk Nowitzki))",
            "SExpr": "(JOIN (R basketball.basketball_position.players) (JOIN (R basketball.basketball_player.position_s) m.023dcl))"
        }
    },
    "249": {
        "generations": "which agency registered the philadelphia church of god as a non-profit organization?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ldnm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ldnm ns:organization.non_profit_organization.registered_with ?y .\n?y ns:organization.non_profit_registration.registering_agency ?x .\n}\n",
            "TopicEntityMid": "m.04ldnm",
            "mid2name": {
                "ns:m.04ldnm": "Philadelphia Church of God"
            },
            "SExpr_w_name": "(JOIN (R organization.non_profit_registration.registering_agency) (JOIN (R organization.non_profit_organization.registered_with) Philadelphia Church of God))",
            "SExpr": "(JOIN (R organization.non_profit_registration.registering_agency) (JOIN (R organization.non_profit_organization.registered_with) m.04ldnm))"
        }
    },
    "250": {
        "generations": "What is the source of exchange for the penny currency sub-unit in business?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015tzx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015tzx ns:business.currency_sub_unit.currency ?y .\n?y ns:finance.currency.source_of_exchange ?x .\n}\n",
            "TopicEntityMid": "m.015tzx",
            "mid2name": {
                "ns:m.015tzx": "Penny"
            },
            "SExpr_w_name": "(JOIN (R finance.currency.source_of_exchange) (JOIN (R business.currency_sub_unit.currency) Penny))",
            "SExpr": "(JOIN (R finance.currency.source_of_exchange) (JOIN (R business.currency_sub_unit.currency) m.015tzx))"
        }
    },
    "251": {
        "generations": "what is the average minimum temperature in san diego?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.071vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.071vr ns:travel.travel_destination.climate ?y .\n?y ns:travel.travel_destination_monthly_climate.average_min_temp_c ?x .\n}\n",
            "TopicEntityMid": "m.071vr",
            "mid2name": {
                "ns:m.071vr": "San Diego"
            },
            "SExpr_w_name": "(JOIN (R travel.travel_destination_monthly_climate.average_min_temp_c) (JOIN (R travel.travel_destination.climate) San Diego))",
            "SExpr": "(JOIN (R travel.travel_destination_monthly_climate.average_min_temp_c) (JOIN (R travel.travel_destination.climate) m.071vr))"
        }
    },
    "252": {
        "generations": "what tourist attractions are near the united states congress building?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t31)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t31 ns:user.mangala.default_domain.branch_of_government.administrative_building ?y .\n?y ns:travel.tourist_attraction.near_travel_destination ?x .\n}\n",
            "TopicEntityMid": "m.07t31",
            "mid2name": {
                "ns:m.07t31": "United States Congress"
            },
            "SExpr_w_name": "(JOIN (R travel.tourist_attraction.near_travel_destination) (JOIN (R user.mangala.default_domain.branch_of_government.administrative_building) United States Congress))",
            "SExpr": "(JOIN (R travel.tourist_attraction.near_travel_destination) (JOIN (R user.mangala.default_domain.branch_of_government.administrative_building) m.07t31))"
        }
    },
    "253": {
        "generations": "how many pages are in julie andrews' book editions?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kftt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kftt ns:book.author.book_editions_published ?y .\n?y ns:book.book_edition.number_of_pages ?x .\n}\n",
            "TopicEntityMid": "m.0kftt",
            "mid2name": {
                "ns:m.0kftt": "Julie Andrews"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition.number_of_pages) (JOIN (R book.author.book_editions_published) Julie Andrews))",
            "SExpr": "(JOIN (R book.book_edition.number_of_pages) (JOIN (R book.author.book_editions_published) m.0kftt))"
        }
    },
    "254": {
        "generations": "which military force did john paul jones serve in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045bz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045bz ns:military.military_person.service ?y .\n?y ns:military.military_service.military_force ?x .\n}\n",
            "TopicEntityMid": "m.045bz",
            "mid2name": {
                "ns:m.045bz": "John Paul Jones"
            },
            "SExpr_w_name": "(JOIN (R military.military_service.military_force) (JOIN (R military.military_person.service) John Paul Jones))",
            "SExpr": "(JOIN (R military.military_service.military_force) (JOIN (R military.military_person.service) m.045bz))"
        }
    },
    "255": {
        "generations": "what organisms are native to sri lanka?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06m_5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06m_5 ns:biology.breed_origin.breeds_originating_here ?y .\n?y ns:biology.organism_classification.higher_classification ?x .\n}\n",
            "TopicEntityMid": "m.06m_5",
            "mid2name": {
                "ns:m.06m_5": "Sri Lanka"
            },
            "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) Sri Lanka))",
            "SExpr": "(JOIN (R biology.organism_classification.higher_classification) (JOIN (R biology.breed_origin.breeds_originating_here) m.06m_5))"
        }
    },
    "256": {
        "generations": "What was the price change in Plymouth's housing market?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0sswj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0sswj ns:location.hud_foreclosure_area.ofheo_price_change ?y .\n?y ns:measurement_unit.dated_float.date ?x .\n}\n",
            "TopicEntityMid": "m.0sswj",
            "mid2name": {
                "ns:m.0sswj": "Plymouth"
            },
            "SExpr_w_name": "(JOIN (R measurement_unit.dated_float.date) (JOIN (R location.hud_foreclosure_area.ofheo_price_change) Plymouth))",
            "SExpr": "(JOIN (R measurement_unit.dated_float.date) (JOIN (R location.hud_foreclosure_area.ofheo_price_change) m.0sswj))"
        }
    },
    "257": {
        "generations": "What destinations are served by Ontario International Airport?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01l4_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01l4_l ns:travel.transport_terminus.travel_destinations_served ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n}\n",
            "TopicEntityMid": "m.01l4_l",
            "mid2name": {
                "ns:m.01l4_l": "Ontario International Airport"
            },
            "SExpr_w_name": "(JOIN (R travel.transportation.transport_terminus) (JOIN (R travel.transport_terminus.travel_destinations_served) Ontario International Airport))",
            "SExpr": "(JOIN (R travel.transportation.transport_terminus) (JOIN (R travel.transport_terminus.travel_destinations_served) m.01l4_l))"
        }
    },
    "258": {
        "generations": "what position does keisuke honda play in soccer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gsj06)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gsj06 ns:soccer.football_player.position_s ?y .\n?y ns:soccer.football_position.players ?x .\n}\n",
            "TopicEntityMid": "m.03gsj06",
            "mid2name": {
                "ns:m.03gsj06": "Keisuke Honda"
            },
            "SExpr_w_name": "(JOIN (R soccer.football_position.players) (JOIN (R soccer.football_player.position_s) Keisuke Honda))",
            "SExpr": "(JOIN (R soccer.football_position.players) (JOIN (R soccer.football_player.position_s) m.03gsj06))"
        }
    },
    "259": {
        "generations": "who was the previous coach of the oklahoma city thunder?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04cxw5b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04cxw5b ns:basketball.basketball_team.previous_coaches ?y .\n?y ns:basketball.basketball_historical_coach_position.to ?x .\n}\n",
            "TopicEntityMid": "m.04cxw5b",
            "mid2name": {
                "ns:m.04cxw5b": "Oklahoma City Thunder"
            },
            "SExpr_w_name": "(JOIN (R basketball.basketball_historical_coach_position.to) (JOIN (R basketball.basketball_team.previous_coaches) Oklahoma City Thunder))",
            "SExpr": "(JOIN (R basketball.basketball_historical_coach_position.to) (JOIN (R basketball.basketball_team.previous_coaches) m.04cxw5b))"
        }
    },
    "260": {
        "generations": "which website has the lyrics to songs engineered by paul mccartney?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03j24kf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03j24kf ns:music.engineer.tracks_engineered ?y .\n?y ns:music.recording.lyrics_website ?x .\n}\n",
            "TopicEntityMid": "m.03j24kf",
            "mid2name": {
                "ns:m.03j24kf": "Paul McCartney"
            },
            "SExpr_w_name": "(JOIN (R music.recording.lyrics_website) (JOIN (R music.engineer.tracks_engineered) Paul McCartney))",
            "SExpr": "(JOIN (R music.recording.lyrics_website) (JOIN (R music.engineer.tracks_engineered) m.03j24kf))"
        }
    },
    "261": {
        "generations": "What genre of films are featured on Anderson Cooper 360\u00b0?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03v9lv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03v9lv ns:broadcast.content.genre ?y .\n?y ns:film.film_genre.films_in_this_genre ?x .\n}\n",
            "TopicEntityMid": "m.03v9lv",
            "mid2name": {
                "ns:m.03v9lv": "Anderson Cooper 360\u00b0"
            },
            "SExpr_w_name": "(JOIN (R film.film_genre.films_in_this_genre) (JOIN (R broadcast.content.genre) Anderson Cooper 360\u00b0))",
            "SExpr": "(JOIN (R film.film_genre.films_in_this_genre) (JOIN (R broadcast.content.genre) m.03v9lv))"
        }
    },
    "262": {
        "generations": "What political campaigns were held in Massachusetts?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05k7sb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05k7sb ns:government.political_district.elections ?y .\n?y ns:government.election.campaigns ?x .\n}\n",
            "TopicEntityMid": "m.05k7sb",
            "mid2name": {
                "ns:m.05k7sb": "Massachusetts"
            },
            "SExpr_w_name": "(JOIN (R government.election.campaigns) (JOIN (R government.political_district.elections) Massachusetts))",
            "SExpr": "(JOIN (R government.election.campaigns) (JOIN (R government.political_district.elections) m.05k7sb))"
        }
    },
    "263": {
        "generations": "What TV show did Joseph McElderry appear on?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09d89qd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09d89qd ns:award.competitor.competitions ?y .\n?y ns:tv.tv_series_season.regular_personal_appearances ?x .\n}\n",
            "TopicEntityMid": "m.09d89qd",
            "mid2name": {
                "ns:m.09d89qd": "Joseph McElderry"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_series_season.regular_personal_appearances) (JOIN (R award.competitor.competitions) Joseph McElderry))",
            "SExpr": "(JOIN (R tv.tv_series_season.regular_personal_appearances) (JOIN (R award.competitor.competitions) m.09d89qd))"
        }
    },
    "264": {
        "generations": "what is the classification rank of a rottweiler?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nw62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nw62 ns:biology.organism_classification.rank ?y .\n?y ns:biology.organism_classification_rank.organism_classifications ?x .\n}\n",
            "TopicEntityMid": "m.01nw62",
            "mid2name": {
                "ns:m.01nw62": "Rottweiler"
            },
            "SExpr_w_name": "(JOIN (R biology.organism_classification_rank.organism_classifications) (JOIN (R biology.organism_classification.rank) Rottweiler))",
            "SExpr": "(JOIN (R biology.organism_classification_rank.organism_classifications) (JOIN (R biology.organism_classification.rank) m.01nw62))"
        }
    },
    "265": {
        "generations": "what are the ranks in the scottish system of nobility?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06q1r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06q1r ns:royalty.system_of_nobility.ranks ?y .\n?y ns:royalty.system_rank_relationship.rank ?x .\n}\n",
            "TopicEntityMid": "m.06q1r",
            "mid2name": {
                "ns:m.06q1r": "Scotland"
            },
            "SExpr_w_name": "(JOIN (R royalty.system_rank_relationship.rank) (JOIN (R royalty.system_of_nobility.ranks) Scotland))",
            "SExpr": "(JOIN (R royalty.system_rank_relationship.rank) (JOIN (R royalty.system_of_nobility.ranks) m.06q1r))"
        }
    },
    "266": {
        "generations": "What artwork is owned by St James's Palace?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yv_q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yv_q ns:visual_art.art_owner.artworks_owned ?y .\n?y ns:visual_art.artwork_owner_relationship.artwork ?x .\n}\n",
            "TopicEntityMid": "m.01yv_q",
            "mid2name": {
                "ns:m.01yv_q": "St James's Palace"
            },
            "SExpr_w_name": "(JOIN (R visual_art.artwork_owner_relationship.artwork) (JOIN (R visual_art.art_owner.artworks_owned) St James's Palace))",
            "SExpr": "(JOIN (R visual_art.artwork_owner_relationship.artwork) (JOIN (R visual_art.art_owner.artworks_owned) m.01yv_q))"
        }
    },
    "267": {
        "generations": "What TV programs did Bill Rancic produce?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02skv6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02skv6 ns:tv.tv_producer.programs_produced ?y .\n?y ns:tv.tv_producer_term.program ?x .\n}\n",
            "TopicEntityMid": "m.02skv6",
            "mid2name": {
                "ns:m.02skv6": "Bill Rancic"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_producer_term.program) (JOIN (R tv.tv_producer.programs_produced) Bill Rancic))",
            "SExpr": "(JOIN (R tv.tv_producer_term.program) (JOIN (R tv.tv_producer.programs_produced) m.02skv6))"
        }
    },
    "268": {
        "generations": "who was the placekicker for the team at the beginning of the season?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047g8h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047g8h ns:sports.sports_position.players ?y .\n?y ns:sports.sports_team_roster.from ?x .\n}\n",
            "TopicEntityMid": "m.047g8h",
            "mid2name": {
                "ns:m.047g8h": "Placekicker"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team_roster.from) (JOIN (R sports.sports_position.players) Placekicker))",
            "SExpr": "(JOIN (R sports.sports_team_roster.from) (JOIN (R sports.sports_position.players) m.047g8h))"
        }
    },
    "269": {
        "generations": "When was the first beer brewed in Poland?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qhw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qhw ns:food.beer_country_region.beers_from_here ?y .\n?y ns:food.beer.first_brewed ?x .\n}\n",
            "TopicEntityMid": "m.05qhw",
            "mid2name": {
                "ns:m.05qhw": "Poland"
            },
            "SExpr_w_name": "(JOIN (R food.beer.first_brewed) (JOIN (R food.beer_country_region.beers_from_here) Poland))",
            "SExpr": "(JOIN (R food.beer.first_brewed) (JOIN (R food.beer_country_region.beers_from_here) m.05qhw))"
        }
    },
    "270": {
        "generations": "what is fred davis' longest rushing play in american football?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rhm_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rhm_l ns:american_football.football_player.rushing ?y .\n?y ns:american_football.player_rushing_statistics.longest ?x .\n}\n",
            "TopicEntityMid": "m.02rhm_l",
            "mid2name": {
                "ns:m.02rhm_l": "Fred Davis"
            },
            "SExpr_w_name": "(JOIN (R american_football.player_rushing_statistics.longest) (JOIN (R american_football.football_player.rushing) Fred Davis))",
            "SExpr": "(JOIN (R american_football.player_rushing_statistics.longest) (JOIN (R american_football.football_player.rushing) m.02rhm_l))"
        }
    },
    "271": {
        "generations": "what is the acceptance rate for usc trojans football team's university?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07k53y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07k53y ns:sports.school_sports_team.school ?y .\n?y ns:education.university.acceptance_rate ?x .\n}\n",
            "TopicEntityMid": "m.07k53y",
            "mid2name": {
                "ns:m.07k53y": "USC Trojans football"
            },
            "SExpr_w_name": "(JOIN (R education.university.acceptance_rate) (JOIN (R sports.school_sports_team.school) USC Trojans football))",
            "SExpr": "(JOIN (R education.university.acceptance_rate) (JOIN (R sports.school_sports_team.school) m.07k53y))"
        }
    },
    "272": {
        "generations": "Which university awarded honorary degrees to recipients?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0160nk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0160nk ns:education.educational_institution.honorary_degrees_awarded ?y .\n?y ns:education.honorary_degree_recipient.honorary_degrees ?x .\n}\n",
            "TopicEntityMid": "m.0160nk",
            "mid2name": {
                "ns:m.0160nk": "Tulane University"
            },
            "SExpr_w_name": "(JOIN (R education.honorary_degree_recipient.honorary_degrees) (JOIN (R education.educational_institution.honorary_degrees_awarded) Tulane University))",
            "SExpr": "(JOIN (R education.honorary_degree_recipient.honorary_degrees) (JOIN (R education.educational_institution.honorary_degrees_awarded) m.0160nk))"
        }
    },
    "273": {
        "generations": "What is the capital of Virginia?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07z1m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07z1m ns:location.administrative_division.capital ?y .\n?y ns:location.administrative_division_capital_relationship.capital ?x .\n}\n",
            "TopicEntityMid": "m.07z1m",
            "mid2name": {
                "ns:m.07z1m": "Virginia"
            },
            "SExpr_w_name": "(JOIN (R location.administrative_division_capital_relationship.capital) (JOIN (R location.administrative_division.capital) Virginia))",
            "SExpr": "(JOIN (R location.administrative_division_capital_relationship.capital) (JOIN (R location.administrative_division.capital) m.07z1m))"
        }
    },
    "274": {
        "generations": "who belongs to the Indian National Congress political party?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0135dr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0135dr ns:government.political_party.politicians_in_this_party ?y .\n?y ns:government.political_party_tenure.politician ?x .\n}\n",
            "TopicEntityMid": "m.0135dr",
            "mid2name": {
                "ns:m.0135dr": "Indian National Congress"
            },
            "SExpr_w_name": "(JOIN (R government.political_party_tenure.politician) (JOIN (R government.political_party.politicians_in_this_party) Indian National Congress))",
            "SExpr": "(JOIN (R government.political_party_tenure.politician) (JOIN (R government.political_party.politicians_in_this_party) m.0135dr))"
        }
    },
    "275": {
        "generations": "What team plays at the Pepsi Center?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wd_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wd_7 ns:sports.sports_facility.home_venue_for ?y .\n?y ns:sports.team_venue_relationship.to ?x .\n}\n",
            "TopicEntityMid": "m.01wd_7",
            "mid2name": {
                "ns:m.01wd_7": "Pepsi Center"
            },
            "SExpr_w_name": "(JOIN (R sports.team_venue_relationship.to) (JOIN (R sports.sports_facility.home_venue_for) Pepsi Center))",
            "SExpr": "(JOIN (R sports.team_venue_relationship.to) (JOIN (R sports.sports_facility.home_venue_for) m.01wd_7))"
        }
    },
    "276": {
        "generations": "when did venus williams join her current group?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016cff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016cff ns:people.person.group ?y .\n?y ns:people.group_membership.from ?x .\n}\n",
            "TopicEntityMid": "m.016cff",
            "mid2name": {
                "ns:m.016cff": "Venus Williams"
            },
            "SExpr_w_name": "(JOIN (R people.group_membership.from) (JOIN (R people.person.group) Venus Williams))",
            "SExpr": "(JOIN (R people.group_membership.from) (JOIN (R people.person.group) m.016cff))"
        }
    },
    "277": {
        "generations": "What type of aircraft did Trans World Airlines own?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013w80)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013w80 ns:aviation.aircraft_owner.aircraft_fleet_composition ?y .\n?y ns:aviation.aircraft_ownership_count.aircraft_model ?x .\n}\n",
            "TopicEntityMid": "m.013w80",
            "mid2name": {
                "ns:m.013w80": "Trans World Airlines"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_ownership_count.aircraft_model) (JOIN (R aviation.aircraft_owner.aircraft_fleet_composition) Trans World Airlines))",
            "SExpr": "(JOIN (R aviation.aircraft_ownership_count.aircraft_model) (JOIN (R aviation.aircraft_owner.aircraft_fleet_composition) m.013w80))"
        }
    },
    "278": {
        "generations": "what products has roger federer endorsed?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01my95)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01my95 ns:business.product_endorser.products_endorsed ?y .\n?y ns:business.product_endorsement.to ?x .\n}\n",
            "TopicEntityMid": "m.01my95",
            "mid2name": {
                "ns:m.01my95": "Roger Federer"
            },
            "SExpr_w_name": "(JOIN (R business.product_endorsement.to) (JOIN (R business.product_endorser.products_endorsed) Roger Federer))",
            "SExpr": "(JOIN (R business.product_endorsement.to) (JOIN (R business.product_endorser.products_endorsed) m.01my95))"
        }
    },
    "279": {
        "generations": "Which congressional caucus is Eric Cantor a member of and who are the current house members of that caucus?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027z_f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027z_f ns:user.robert.us_congress.us_representative.congressional_caucus_memberships ?y .\n?y ns:user.robert.us_congress.congressional_caucus.current_house_members ?x .\n}\n",
            "TopicEntityMid": "m.027z_f",
            "mid2name": {
                "ns:m.027z_f": "Eric Cantor"
            },
            "SExpr_w_name": "(JOIN (R user.robert.us_congress.congressional_caucus.current_house_members) (JOIN (R user.robert.us_congress.us_representative.congressional_caucus_memberships) Eric Cantor))",
            "SExpr": "(JOIN (R user.robert.us_congress.congressional_caucus.current_house_members) (JOIN (R user.robert.us_congress.us_representative.congressional_caucus_memberships) m.027z_f))"
        }
    },
    "280": {
        "generations": "What periodicals were published by the University of Vermont?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01q7q2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01q7q2 ns:book.periodical_publisher.periodicals_published ?y .\n?y ns:book.periodical_publisher_period.from ?x .\n}\n",
            "TopicEntityMid": "m.01q7q2",
            "mid2name": {
                "ns:m.01q7q2": "University of Vermont"
            },
            "SExpr_w_name": "(JOIN (R book.periodical_publisher_period.from) (JOIN (R book.periodical_publisher.periodicals_published) University of Vermont))",
            "SExpr": "(JOIN (R book.periodical_publisher_period.from) (JOIN (R book.periodical_publisher.periodicals_published) m.01q7q2))"
        }
    },
    "281": {
        "generations": "who composed the featured song in fast and furious 6?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gtxbqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gtxbqr ns:film.film.featured_song ?y .\n?y ns:music.composition.composer ?x .\n}\n",
            "TopicEntityMid": "m.0gtxbqr",
            "mid2name": {
                "ns:m.0gtxbqr": "Fast & Furious 6"
            },
            "SExpr_w_name": "(JOIN (R music.composition.composer) (JOIN (R film.film.featured_song) Fast & Furious 6))",
            "SExpr": "(JOIN (R music.composition.composer) (JOIN (R film.film.featured_song) m.0gtxbqr))"
        }
    },
    "282": {
        "generations": "what is the championship for major league baseball?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09p14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09p14 ns:sports.sports_league.seasons ?y .\n?y ns:sports.sports_league_season.championship ?x .\n}\n",
            "TopicEntityMid": "m.09p14",
            "mid2name": {
                "ns:m.09p14": "Major League Baseball"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_league_season.championship) (JOIN (R sports.sports_league.seasons) Major League Baseball))",
            "SExpr": "(JOIN (R sports.sports_league_season.championship) (JOIN (R sports.sports_league.seasons) m.09p14))"
        }
    },
    "283": {
        "generations": "What countries does Angola export to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j4b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j4b ns:location.statistical_region.places_exported_to ?y .\n?y ns:location.imports_and_exports.exported_to ?x .\n}\n",
            "TopicEntityMid": "m.0j4b",
            "mid2name": {
                "ns:m.0j4b": "Angola"
            },
            "SExpr_w_name": "(JOIN (R location.imports_and_exports.exported_to) (JOIN (R location.statistical_region.places_exported_to) Angola))",
            "SExpr": "(JOIN (R location.imports_and_exports.exported_to) (JOIN (R location.statistical_region.places_exported_to) m.0j4b))"
        }
    },
    "284": {
        "generations": "what tv series did chad michael murray direct an episode for?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bmn4p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bmn4p ns:tv.tv_director.episodes_directed ?y .\n?y ns:tv.tv_series_episode.series ?x .\n}\n",
            "TopicEntityMid": "m.0bmn4p",
            "mid2name": {
                "ns:m.0bmn4p": "Chad Michael Murray"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_director.episodes_directed) Chad Michael Murray))",
            "SExpr": "(JOIN (R tv.tv_series_episode.series) (JOIN (R tv.tv_director.episodes_directed) m.0bmn4p))"
        }
    },
    "285": {
        "generations": "What was Augustus' noble rank in the Roman Empire?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ngg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ngg ns:user.robert.roman_empire.roman_emperor.title ?y .\n?y ns:royalty.noble_title.noble_rank ?x .\n}\n",
            "TopicEntityMid": "m.0ngg",
            "mid2name": {
                "ns:m.0ngg": "Augustus"
            },
            "SExpr_w_name": "(JOIN (R royalty.noble_title.noble_rank) (JOIN (R user.robert.roman_empire.roman_emperor.title) Augustus))",
            "SExpr": "(JOIN (R royalty.noble_title.noble_rank) (JOIN (R user.robert.roman_empire.roman_emperor.title) m.0ngg))"
        }
    },
    "286": {
        "generations": "which award category is the BAFTA Award for Best Makeup & Hair a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02r0csl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02r0csl ns:award.award_category.category_of ?y .\n?y ns:award.award.nomination_announcements ?x .\n}\n",
            "TopicEntityMid": "m.02r0csl",
            "mid2name": {
                "ns:m.02r0csl": "BAFTA Award for Best Makeup & Hair"
            },
            "SExpr_w_name": "(JOIN (R award.award.nomination_announcements) (JOIN (R award.award_category.category_of) BAFTA Award for Best Makeup & Hair))",
            "SExpr": "(JOIN (R award.award.nomination_announcements) (JOIN (R award.award_category.category_of) m.02r0csl))"
        }
    },
    "287": {
        "generations": "who directed the episodes of season 4 of buffy the vampire slayer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xj992)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xj992 ns:tv.tv_series_season.episodes ?y .\n?y ns:tv.tv_series_episode.director ?x .\n}\n",
            "TopicEntityMid": "m.02xj992",
            "mid2name": {
                "ns:m.02xj992": "Buffy the Vampire Slayer Season 4"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_series_episode.director) (JOIN (R tv.tv_series_season.episodes) Buffy the Vampire Slayer Season 4))",
            "SExpr": "(JOIN (R tv.tv_series_episode.director) (JOIN (R tv.tv_series_season.episodes) m.02xj992))"
        }
    },
    "288": {
        "generations": "What religion is associated with the holiday Diwali?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fpj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fpj ns:time.holiday.related_event ?y .\n?y ns:time.holiday.featured_in_religions ?x .\n}\n",
            "TopicEntityMid": "m.019fpj",
            "mid2name": {
                "ns:m.019fpj": "Diwali"
            },
            "SExpr_w_name": "(JOIN (R time.holiday.featured_in_religions) (JOIN (R time.holiday.related_event) Diwali))",
            "SExpr": "(JOIN (R time.holiday.featured_in_religions) (JOIN (R time.holiday.related_event) m.019fpj))"
        }
    },
    "289": {
        "generations": "who plays for inter milan in soccer?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03x6m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03x6m ns:soccer.football_team.player_statistics ?y .\n?y ns:soccer.football_player_stats.player ?x .\n}\n",
            "TopicEntityMid": "m.03x6m",
            "mid2name": {
                "ns:m.03x6m": "Inter Milan"
            },
            "SExpr_w_name": "(JOIN (R soccer.football_player_stats.player) (JOIN (R soccer.football_team.player_statistics) Inter Milan))",
            "SExpr": "(JOIN (R soccer.football_player_stats.player) (JOIN (R soccer.football_team.player_statistics) m.03x6m))"
        }
    }
}