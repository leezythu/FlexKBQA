{
    "0": {
        "generations": "What active ingredients are in Bacitracin/Neomycin/Polymyxin b/Ibuprofen/Acetaminophen/Isopropyl alcohol/Aspirin/Benzalkonium?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqvzgc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqvzgc ns:medicine.drug.active_moieties ?x .\n}\n",
            "TopicEntityMid": "m.0hqvzgc",
            "mid2name": {
                "ns:m.0hqvzgc": "Bacitracin/Neomycin/Polymyxin b/Ibuprofen/Acetaminophen/Isopropyl alcohol/Aspirin/Benzalkonium"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug.active_moieties) Bacitracin/Neomycin/Polymyxin b/Ibuprofen/Acetaminophen/Isopropyl alcohol/Aspirin/Benzalkonium)",
            "SExpr": "(JOIN (R medicine.drug.active_moieties) m.0hqvzgc)"
        }
    },
    "1": {
        "generations": "Who is the artist of the album Love Songs?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hpz0m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hpz0m ns:music.album.artist ?x .\n}\n",
            "TopicEntityMid": "m.01hpz0m",
            "mid2name": {
                "ns:m.01hpz0m": "Love Songs"
            },
            "SExpr_w_name": "(JOIN (R music.album.artist) Love Songs)",
            "SExpr": "(JOIN (R music.album.artist) m.01hpz0m)"
        }
    },
    "2": {
        "generations": "Who are some artists in the glam rock genre?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09jw2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09jw2 ns:music.genre.artists ?x .\n}\n",
            "TopicEntityMid": "m.09jw2",
            "mid2name": {
                "ns:m.09jw2": "Glam rock"
            },
            "SExpr_w_name": "(JOIN (R music.genre.artists) Glam rock)",
            "SExpr": "(JOIN (R music.genre.artists) m.09jw2)"
        }
    },
    "3": {
        "generations": "What material was used to construct the lighthouse?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025tnyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025tnyc ns:architecture.lighthouse_construction_material.used_on_lighthouse ?x .\n}\n",
            "TopicEntityMid": "m.025tnyc",
            "mid2name": {
                "ns:m.025tnyc": "Lumber"
            },
            "SExpr_w_name": "(JOIN (R architecture.lighthouse_construction_material.used_on_lighthouse) Lumber)",
            "SExpr": "(JOIN (R architecture.lighthouse_construction_material.used_on_lighthouse) m.025tnyc)"
        }
    },
    "4": {
        "generations": "What book series includes the Political Diaries of the Persian Gulf?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qz9jcy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qz9jcy ns:book.book_edition_series.sub_series ?x .\n}\n",
            "TopicEntityMid": "m.0qz9jcy",
            "mid2name": {
                "ns:m.0qz9jcy": "Political Diaries of the Persian Gulf"
            },
            "SExpr_w_name": "(JOIN (R book.book_edition_series.sub_series) Political Diaries of the Persian Gulf)",
            "SExpr": "(JOIN (R book.book_edition_series.sub_series) m.0qz9jcy)"
        }
    },
    "5": {
        "generations": "How do you pronounce demyelinating disease?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039wr4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039wr4 ns:base.schemastaging.context_name.pronunciation ?x .\n}\n",
            "TopicEntityMid": "m.039wr4",
            "mid2name": {
                "ns:m.039wr4": "Demyelinating disease"
            },
            "SExpr_w_name": "(JOIN (R base.schemastaging.context_name.pronunciation) Demyelinating disease)",
            "SExpr": "(JOIN (R base.schemastaging.context_name.pronunciation) m.039wr4)"
        }
    },
    "6": {
        "generations": "where is the SpiderTech-C10 sports team located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bmkh28)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bmkh28 ns:sports.sports_team.location ?x .\n}\n",
            "TopicEntityMid": "m.0bmkh28",
            "mid2name": {
                "ns:m.0bmkh28": "SpiderTech-C10"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team.location) SpiderTech-C10)",
            "SExpr": "(JOIN (R sports.sports_team.location) m.0bmkh28)"
        }
    },
    "7": {
        "generations": "What type of celestial object is the Andromeda Galaxy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jvb4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jvb4 ns:astronomy.celestial_object.category ?x .\n}\n",
            "TopicEntityMid": "m.0jvb4",
            "mid2name": {
                "ns:m.0jvb4": "Andromeda Galaxy"
            },
            "SExpr_w_name": "(JOIN (R astronomy.celestial_object.category) Andromeda Galaxy)",
            "SExpr": "(JOIN (R astronomy.celestial_object.category) m.0jvb4)"
        }
    },
    "8": {
        "generations": "What religion does Oriental Orthodoxy belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05pbd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05pbd ns:religion.religion.includes ?x .\n}\n",
            "TopicEntityMid": "m.05pbd",
            "mid2name": {
                "ns:m.05pbd": "Oriental Orthodoxy"
            },
            "SExpr_w_name": "(JOIN (R religion.religion.includes) Oriental Orthodoxy)",
            "SExpr": "(JOIN (R religion.religion.includes) m.05pbd)"
        }
    },
    "9": {
        "generations": "Who is the author of the book \"Trees\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0l8ktlz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0l8ktlz ns:book.written_work.author ?x .\n}\n",
            "TopicEntityMid": "m.0l8ktlz",
            "mid2name": {
                "ns:m.0l8ktlz": "Trees"
            },
            "SExpr_w_name": "(JOIN (R book.written_work.author) Trees)",
            "SExpr": "(JOIN (R book.written_work.author) m.0l8ktlz)"
        }
    },
    "10": {
        "generations": "What constellation is WASP-5 located in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_600h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_600h ns:astronomy.star.constellation ?x .\n}\n",
            "TopicEntityMid": "m.05_600h",
            "mid2name": {
                "ns:m.05_600h": "WASP-5"
            },
            "SExpr_w_name": "(JOIN (R astronomy.star.constellation) WASP-5)",
            "SExpr": "(JOIN (R astronomy.star.constellation) m.05_600h)"
        }
    },
    "11": {
        "generations": "What are the different generations of the Lexus GS model?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.032dp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.032dp7 ns:automotive.model.generations ?x .\n}\n",
            "TopicEntityMid": "m.032dp7",
            "mid2name": {
                "ns:m.032dp7": "Lexus GS"
            },
            "SExpr_w_name": "(JOIN (R automotive.model.generations) Lexus GS)",
            "SExpr": "(JOIN (R automotive.model.generations) m.032dp7)"
        }
    },
    "12": {
        "generations": "Who manufactured the Kosmos-3M rocket?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mvcl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mvcl ns:spaceflight.rocket.manufacturer ?x .\n}\n",
            "TopicEntityMid": "m.03mvcl",
            "mid2name": {
                "ns:m.03mvcl": "Kosmos-3M"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket.manufacturer) Kosmos-3M)",
            "SExpr": "(JOIN (R spaceflight.rocket.manufacturer) m.03mvcl)"
        }
    },
    "13": {
        "generations": "What are the dialects of the Japanese language?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_9r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_9r ns:language.human_language.dialects ?x .\n}\n",
            "TopicEntityMid": "m.03_9r",
            "mid2name": {
                "ns:m.03_9r": "Japanese Language"
            },
            "SExpr_w_name": "(JOIN (R language.human_language.dialects) Japanese Language)",
            "SExpr": "(JOIN (R language.human_language.dialects) m.03_9r)"
        }
    },
    "14": {
        "generations": "What is the street address of Mar\u00e9chal Juin Bridge?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g7lt70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g7lt70 ns:location.location.street_address ?x .\n}\n",
            "TopicEntityMid": "m.0g7lt70",
            "mid2name": {
                "ns:m.0g7lt70": "Mar\u00e9chal Juin Bridge"
            },
            "SExpr_w_name": "(JOIN (R location.location.street_address) Mar\u00e9chal Juin Bridge)",
            "SExpr": "(JOIN (R location.location.street_address) m.0g7lt70)"
        }
    },
    "15": {
        "generations": "What drug class does Xylometazoline belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lqc4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lqc4 ns:medicine.drug.drug_class ?x .\n}\n",
            "TopicEntityMid": "m.01lqc4",
            "mid2name": {
                "ns:m.01lqc4": "Xylometazoline"
            },
            "SExpr_w_name": "(JOIN (R medicine.drug.drug_class) Xylometazoline)",
            "SExpr": "(JOIN (R medicine.drug.drug_class) m.01lqc4)"
        }
    },
    "16": {
        "generations": "What company produces the Kona Cinder Cone?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cvm6d9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cvm6d9 ns:business.consumer_product.company ?x .\n}\n",
            "TopicEntityMid": "m.0cvm6d9",
            "mid2name": {
                "ns:m.0cvm6d9": "Kona Cinder Cone"
            },
            "SExpr_w_name": "(JOIN (R business.consumer_product.company) Kona Cinder Cone)",
            "SExpr": "(JOIN (R business.consumer_product.company) m.0cvm6d9)"
        }
    },
    "17": {
        "generations": "What category does the research on paper belong to in Ikariam?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0641k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0641k ns:base.ikariam.ikariam_research.category ?x .\n}\n",
            "TopicEntityMid": "m.0641k",
            "mid2name": {
                "ns:m.0641k": "Paper"
            },
            "SExpr_w_name": "(JOIN (R base.ikariam.ikariam_research.category) Paper)",
            "SExpr": "(JOIN (R base.ikariam.ikariam_research.category) m.0641k)"
        }
    },
    "18": {
        "generations": "What is the higher classification of the organism Aidi?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p2gv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p2gv ns:biology.organism_classification.higher_classification ?x .\n}\n",
            "TopicEntityMid": "m.01p2gv",
            "mid2name": {
                "ns:m.01p2gv": "Aidi"
            },
            "SExpr_w_name": "(JOIN (R biology.organism_classification.higher_classification) Aidi)",
            "SExpr": "(JOIN (R biology.organism_classification.higher_classification) m.01p2gv)"
        }
    },
    "19": {
        "generations": "What conferences are specifically about artificial intelligence?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mkz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mkz ns:conferences.conference_subject.specific_conferences_about_this ?x .\n}\n",
            "TopicEntityMid": "m.0mkz",
            "mid2name": {
                "ns:m.0mkz": "Artificial intelligence"
            },
            "SExpr_w_name": "(JOIN (R conferences.conference_subject.specific_conferences_about_this) Artificial intelligence)",
            "SExpr": "(JOIN (R conferences.conference_subject.specific_conferences_about_this) m.0mkz)"
        }
    },
    "20": {
        "generations": "Who were the commanders in conflict for the Sanctuary City Guard in military fiction?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dgh09v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dgh09v ns:base.militaryinfiction.military_unit_in_fiction.commanders_in_conflict ?x .\n}\n",
            "TopicEntityMid": "m.0dgh09v",
            "mid2name": {
                "ns:m.0dgh09v": "Sanctuary City Guard"
            },
            "SExpr_w_name": "(JOIN (R base.militaryinfiction.military_unit_in_fiction.commanders_in_conflict) Sanctuary City Guard)",
            "SExpr": "(JOIN (R base.militaryinfiction.military_unit_in_fiction.commanders_in_conflict) m.0dgh09v)"
        }
    },
    "21": {
        "generations": "What is Bruce Durham's nationality?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gj5d23)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gj5d23 ns:people.person.nationality ?x .\n}\n",
            "TopicEntityMid": "m.0gj5d23",
            "mid2name": {
                "ns:m.0gj5d23": "Bruce Durham"
            },
            "SExpr_w_name": "(JOIN (R people.person.nationality) Bruce Durham)",
            "SExpr": "(JOIN (R people.person.nationality) m.0gj5d23)"
        }
    },
    "22": {
        "generations": "What area does CFMY-FM broadcast to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wgh8m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wgh8m ns:broadcast.broadcast.area_served ?x .\n}\n",
            "TopicEntityMid": "m.03wgh8m",
            "mid2name": {
                "ns:m.03wgh8m": "CFMY-FM"
            },
            "SExpr_w_name": "(JOIN (R broadcast.broadcast.area_served) CFMY-FM)",
            "SExpr": "(JOIN (R broadcast.broadcast.area_served) m.03wgh8m)"
        }
    },
    "23": {
        "generations": "what election did the wyoming state senate have in 2008?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04vb26y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04vb26y ns:government.general_election.part_of_general_election ?x .\n}\n",
            "TopicEntityMid": "m.04vb26y",
            "mid2name": {
                "ns:m.04vb26y": "Wyoming State Senate elections, 2008"
            },
            "SExpr_w_name": "(JOIN (R government.general_election.part_of_general_election) Wyoming State Senate elections, 2008)",
            "SExpr": "(JOIN (R government.general_election.part_of_general_election) m.04vb26y)"
        }
    },
    "24": {
        "generations": "What fictional organizations are in A Song of Ice and Fire?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03qqp1q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03qqp1q ns:fictional_universe.fictional_universe.organizations ?x .\n}\n",
            "TopicEntityMid": "m.03qqp1q",
            "mid2name": {
                "ns:m.03qqp1q": "A Song of Ice and Fire"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_universe.organizations) A Song of Ice and Fire)",
            "SExpr": "(JOIN (R fictional_universe.fictional_universe.organizations) m.03qqp1q)"
        }
    },
    "25": {
        "generations": "What category does Adobe Systems belong to in UOA IT?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vlf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vlf ns:user.uoa_it.uoa_it.uoa_vendor.uoa_category ?x .\n}\n",
            "TopicEntityMid": "m.0vlf",
            "mid2name": {
                "ns:m.0vlf": "Adobe Systems"
            },
            "SExpr_w_name": "(JOIN (R user.uoa_it.uoa_it.uoa_vendor.uoa_category) Adobe Systems)",
            "SExpr": "(JOIN (R user.uoa_it.uoa_it.uoa_vendor.uoa_category) m.0vlf)"
        }
    },
    "26": {
        "generations": "Who are the characters in the comic strip Somebody's Stenog?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jst94l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jst94l ns:comic_strips.comic_strip.characters ?x .\n}\n",
            "TopicEntityMid": "m.0jst94l",
            "mid2name": {
                "ns:m.0jst94l": "Somebody's Stenog"
            },
            "SExpr_w_name": "(JOIN (R comic_strips.comic_strip.characters) Somebody's Stenog)",
            "SExpr": "(JOIN (R comic_strips.comic_strip.characters) m.0jst94l)"
        }
    },
    "27": {
        "generations": "where are the Breaksea Islands located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fnzmw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fnzmw ns:location.location.geolocation ?x .\n}\n",
            "TopicEntityMid": "m.0fnzmw",
            "mid2name": {
                "ns:m.0fnzmw": "Breaksea Islands"
            },
            "SExpr_w_name": "(JOIN (R location.location.geolocation) Breaksea Islands)",
            "SExpr": "(JOIN (R location.location.geolocation) m.0fnzmw)"
        }
    },
    "28": {
        "generations": "What school magazine does Boston University have?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gl5_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gl5_ ns:education.educational_institution.school_magazines ?x .\n}\n",
            "TopicEntityMid": "m.0gl5_",
            "mid2name": {
                "ns:m.0gl5_": "Boston University"
            },
            "SExpr_w_name": "(JOIN (R education.educational_institution.school_magazines) Boston University)",
            "SExpr": "(JOIN (R education.educational_institution.school_magazines) m.0gl5_)"
        }
    },
    "29": {
        "generations": "What school is associated with the radio station WZBT?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ybhw0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ybhw0 ns:education.student_radio_station.school ?x .\n}\n",
            "TopicEntityMid": "m.04ybhw0",
            "mid2name": {
                "ns:m.04ybhw0": "WZBT"
            },
            "SExpr_w_name": "(JOIN (R education.student_radio_station.school) WZBT)",
            "SExpr": "(JOIN (R education.student_radio_station.school) m.04ybhw0)"
        }
    },
    "30": {
        "generations": "what is johnny depp's net worth?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jfx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jfx1 ns:celebrities.celebrity.net_worth ?x .\n}\n",
            "TopicEntityMid": "m.0jfx1",
            "mid2name": {
                "ns:m.0jfx1": "Johnny Depp"
            },
            "SExpr_w_name": "(JOIN (R celebrities.celebrity.net_worth) Johnny Depp)",
            "SExpr": "(JOIN (R celebrities.celebrity.net_worth) m.0jfx1)"
        }
    },
    "31": {
        "generations": "What amendments are in the Constitution of Florida?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06n918)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06n918 ns:law.constitution.amendments ?x .\n}\n",
            "TopicEntityMid": "m.06n918",
            "mid2name": {
                "ns:m.06n918": "Constitution of Florida"
            },
            "SExpr_w_name": "(JOIN (R law.constitution.amendments) Constitution of Florida)",
            "SExpr": "(JOIN (R law.constitution.amendments) m.06n918)"
        }
    },
    "32": {
        "generations": "Who manufactured the Heinkel HD 37 aircraft model?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0416vrv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0416vrv ns:aviation.aircraft_model.manufacturer ?x .\n}\n",
            "TopicEntityMid": "m.0416vrv",
            "mid2name": {
                "ns:m.0416vrv": "Heinkel HD 37"
            },
            "SExpr_w_name": "(JOIN (R aviation.aircraft_model.manufacturer) Heinkel HD 37)",
            "SExpr": "(JOIN (R aviation.aircraft_model.manufacturer) m.0416vrv)"
        }
    },
    "33": {
        "generations": "What grade level uses the term \"Year One\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q93_8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q93_8 ns:education.grade_level.locations_used ?x .\n}\n",
            "TopicEntityMid": "m.02q93_8",
            "mid2name": {
                "ns:m.02q93_8": "Year One"
            },
            "SExpr_w_name": "(JOIN (R education.grade_level.locations_used) Year One)",
            "SExpr": "(JOIN (R education.grade_level.locations_used) m.02q93_8)"
        }
    },
    "34": {
        "generations": "What type of grapes are used to make Rosso di Montalcino wine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hh_lx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hh_lx ns:food.wine_style.grape_varieties ?x .\n}\n",
            "TopicEntityMid": "m.03hh_lx",
            "mid2name": {
                "ns:m.03hh_lx": "Rosso di Montalcino"
            },
            "SExpr_w_name": "(JOIN (R food.wine_style.grape_varieties) Rosso di Montalcino)",
            "SExpr": "(JOIN (R food.wine_style.grape_varieties) m.03hh_lx)"
        }
    },
    "35": {
        "generations": "who founded Apptera?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03brp55)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03brp55 ns:organization.organization.founders ?x .\n}\n",
            "TopicEntityMid": "m.03brp55",
            "mid2name": {
                "ns:m.03brp55": "Apptera"
            },
            "SExpr_w_name": "(JOIN (R organization.organization.founders) Apptera)",
            "SExpr": "(JOIN (R organization.organization.founders) m.03brp55)"
        }
    },
    "36": {
        "generations": "Who manages the .asia top-level domain?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0859rq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0859rq ns:internet.top_level_domain.registry ?x .\n}\n",
            "TopicEntityMid": "m.0859rq",
            "mid2name": {
                "ns:m.0859rq": "asia"
            },
            "SExpr_w_name": "(JOIN (R internet.top_level_domain.registry) asia)",
            "SExpr": "(JOIN (R internet.top_level_domain.registry) m.0859rq)"
        }
    },
    "37": {
        "generations": "What is the composition of the \u0394\u207a hadron in physics?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.093bc48)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.093bc48 ns:physics.hadron.composition ?x .\n}\n",
            "TopicEntityMid": "m.093bc48",
            "mid2name": {
                "ns:m.093bc48": "\u0394\u207a"
            },
            "SExpr_w_name": "(JOIN (R physics.hadron.composition) \u0394\u207a)",
            "SExpr": "(JOIN (R physics.hadron.composition) m.093bc48)"
        }
    },
    "38": {
        "generations": "What car model is made by Tyrrell?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j6p2lg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j6p2lg ns:automotive.make.model_s ?x .\n}\n",
            "TopicEntityMid": "m.0j6p2lg",
            "mid2name": {
                "ns:m.0j6p2lg": "Tyrrell"
            },
            "SExpr_w_name": "(JOIN (R automotive.make.model_s) Tyrrell)",
            "SExpr": "(JOIN (R automotive.make.model_s) m.0j6p2lg)"
        }
    },
    "39": {
        "generations": "What species is the fictional character Johnny?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cjcvb8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cjcvb8 ns:fictional_universe.fictional_character.species ?x .\n}\n",
            "TopicEntityMid": "m.0cjcvb8",
            "mid2name": {
                "ns:m.0cjcvb8": "Johnny"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.species) Johnny)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.species) m.0cjcvb8)"
        }
    },
    "40": {
        "generations": "Who manufactures the PIC16 MCU computer processor?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0457xzt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0457xzt ns:computer.computer_processor.manufacturers ?x .\n}\n",
            "TopicEntityMid": "m.0457xzt",
            "mid2name": {
                "ns:m.0457xzt": "PIC16 MCU"
            },
            "SExpr_w_name": "(JOIN (R computer.computer_processor.manufacturers) PIC16 MCU)",
            "SExpr": "(JOIN (R computer.computer_processor.manufacturers) m.0457xzt)"
        }
    },
    "41": {
        "generations": "what was Newton Heath L&YR F.C. later known as?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05l1ffz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05l1ffz ns:sports.defunct_sports_team.later_known_as ?x .\n}\n",
            "TopicEntityMid": "m.05l1ffz",
            "mid2name": {
                "ns:m.05l1ffz": "Newton Heath L&YR F.C."
            },
            "SExpr_w_name": "(JOIN (R sports.defunct_sports_team.later_known_as) Newton Heath L&YR F.C.)",
            "SExpr": "(JOIN (R sports.defunct_sports_team.later_known_as) m.05l1ffz)"
        }
    },
    "42": {
        "generations": "What is the patent number for the invention of Trench isolated capacitive micromachined ultrasonic transducer arrays with a supporting frame?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j3ljkt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j3ljkt ns:law.us_patent.associated_inventions ?x .\n}\n",
            "TopicEntityMid": "m.0j3ljkt",
            "mid2name": {
                "ns:m.0j3ljkt": "Trench isolated capacitive micromachined ultrasonic transducer arrays with a supporting frame: U.S. Patent No. 7,741,686"
            },
            "SExpr_w_name": "(JOIN (R law.us_patent.associated_inventions) Trench isolated capacitive micromachined ultrasonic transducer arrays with a supporting frame: U.S. Patent No. 7,741,686)",
            "SExpr": "(JOIN (R law.us_patent.associated_inventions) m.0j3ljkt)"
        }
    },
    "43": {
        "generations": "What types of beer fall under the Scottish and Irish Ale category?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hv2t2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hv2t2 ns:food.beer_style.beers ?x .\n}\n",
            "TopicEntityMid": "m.02hv2t2",
            "mid2name": {
                "ns:m.02hv2t2": "Scottish and Irish Ale"
            },
            "SExpr_w_name": "(JOIN (R food.beer_style.beers) Scottish and Irish Ale)",
            "SExpr": "(JOIN (R food.beer_style.beers) m.02hv2t2)"
        }
    },
    "44": {
        "generations": "What fossil specimen was found at Baltimartyria?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g56mtv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g56mtv ns:biology.fossil_specimen.found_at_site ?x .\n}\n",
            "TopicEntityMid": "m.0g56mtv",
            "mid2name": {
                "ns:m.0g56mtv": "Baltimartyria"
            },
            "SExpr_w_name": "(JOIN (R biology.fossil_specimen.found_at_site) Baltimartyria)",
            "SExpr": "(JOIN (R biology.fossil_specimen.found_at_site) m.0g56mtv)"
        }
    },
    "45": {
        "generations": "In what language was The Wind of Chance translated?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06ftxrw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06ftxrw ns:book.translation.language ?x .\n}\n",
            "TopicEntityMid": "m.06ftxrw",
            "mid2name": {
                "ns:m.06ftxrw": "The Wind of Chance"
            },
            "SExpr_w_name": "(JOIN (R book.translation.language) The Wind of Chance)",
            "SExpr": "(JOIN (R book.translation.language) m.06ftxrw)"
        }
    },
    "46": {
        "generations": "What is the license for SmartDraw software?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026kvm4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026kvm4 ns:computer.software.license ?x .\n}\n",
            "TopicEntityMid": "m.026kvm4",
            "mid2name": {
                "ns:m.026kvm4": "SmartDraw"
            },
            "SExpr_w_name": "(JOIN (R computer.software.license) SmartDraw)",
            "SExpr": "(JOIN (R computer.software.license) m.026kvm4)"
        }
    },
    "47": {
        "generations": "What is the UWH Cultural Criteria for protected sites?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_g3qj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_g3qj ns:protected_sites.site_listing_category.category_of ?x .\n}\n",
            "TopicEntityMid": "m.05_g3qj",
            "mid2name": {
                "ns:m.05_g3qj": "UWH Cultural Criteria"
            },
            "SExpr_w_name": "(JOIN (R protected_sites.site_listing_category.category_of) UWH Cultural Criteria)",
            "SExpr": "(JOIN (R protected_sites.site_listing_category.category_of) m.05_g3qj)"
        }
    },
    "48": {
        "generations": "what books did jim starlin write?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.024ksh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.024ksh ns:book.author.works_written ?x .\n}\n",
            "TopicEntityMid": "m.024ksh",
            "mid2name": {
                "ns:m.024ksh": "Jim Starlin"
            },
            "SExpr_w_name": "(JOIN (R book.author.works_written) Jim Starlin)",
            "SExpr": "(JOIN (R book.author.works_written) m.024ksh)"
        }
    },
    "49": {
        "generations": "Which cameras support the JPEG compressed format with EXIF 2.2?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q44xr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q44xr ns:digicams.camera_compressed_format.cameras ?x .\n}\n",
            "TopicEntityMid": "m.03q44xr",
            "mid2name": {
                "ns:m.03q44xr": "JPEG (EXIF 2.2)"
            },
            "SExpr_w_name": "(JOIN (R digicams.camera_compressed_format.cameras) JPEG (EXIF 2.2))",
            "SExpr": "(JOIN (R digicams.camera_compressed_format.cameras) m.03q44xr)"
        }
    },
    "50": {
        "generations": "What is Roxana Popa's gender?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0y4wv43)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0y4wv43 ns:people.person.gender ?x .\n}\n",
            "TopicEntityMid": "m.0y4wv43",
            "mid2name": {
                "ns:m.0y4wv43": "Roxana Popa"
            },
            "SExpr_w_name": "(JOIN (R people.person.gender) Roxana Popa)",
            "SExpr": "(JOIN (R people.person.gender) m.0y4wv43)"
        }
    },
    "51": {
        "generations": "What is the IATA code for the airline OS?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h4sld1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h4sld1 ns:aviation.iata_airline_designator.airline ?x .\n}\n",
            "TopicEntityMid": "m.0h4sld1",
            "mid2name": {
                "ns:m.0h4sld1": "OS"
            },
            "SExpr_w_name": "(JOIN (R aviation.iata_airline_designator.airline) OS)",
            "SExpr": "(JOIN (R aviation.iata_airline_designator.airline) m.0h4sld1)"
        }
    },
    "52": {
        "generations": "What industry is Metro Inc. in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r8pf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r8pf ns:business.business_operation.industry ?x .\n}\n",
            "TopicEntityMid": "m.01r8pf",
            "mid2name": {
                "ns:m.01r8pf": "Metro Inc."
            },
            "SExpr_w_name": "(JOIN (R business.business_operation.industry) Metro Inc.)",
            "SExpr": "(JOIN (R business.business_operation.industry) m.01r8pf)"
        }
    },
    "53": {
        "generations": "what league did the vancouver grizzlies play in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gg69rf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gg69rf ns:sports.sports_team.league ?x .\n}\n",
            "TopicEntityMid": "m.0gg69rf",
            "mid2name": {
                "ns:m.0gg69rf": "Vancouver Grizzlies"
            },
            "SExpr_w_name": "(JOIN (R sports.sports_team.league) Vancouver Grizzlies)",
            "SExpr": "(JOIN (R sports.sports_team.league) m.0gg69rf)"
        }
    },
    "54": {
        "generations": "What gene is associated with arginine N-succinyltransferase activity in biology?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l3yql)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l3yql ns:biology.gene_group.gene ?x .\n}\n",
            "TopicEntityMid": "m.02l3yql",
            "mid2name": {
                "ns:m.02l3yql": "arginine N-succinyltransferase activity"
            },
            "SExpr_w_name": "(JOIN (R biology.gene_group.gene) arginine N-succinyltransferase activity)",
            "SExpr": "(JOIN (R biology.gene_group.gene) m.02l3yql)"
        }
    },
    "55": {
        "generations": "Which fictional characters have lived in Canada?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:fictional_universe.fictional_setting.characters_that_have_lived_here ?x .\n}\n",
            "TopicEntityMid": "m.0d060g",
            "mid2name": {
                "ns:m.0d060g": "Canada"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) Canada)",
            "SExpr": "(JOIN (R fictional_universe.fictional_setting.characters_that_have_lived_here) m.0d060g)"
        }
    },
    "56": {
        "generations": "What are the hubs of Cubana de Aviaci\u00f3n airline?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015j21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015j21 ns:aviation.airline.hubs ?x .\n}\n",
            "TopicEntityMid": "m.015j21",
            "mid2name": {
                "ns:m.015j21": "Cubana de Aviaci\u00f3n"
            },
            "SExpr_w_name": "(JOIN (R aviation.airline.hubs) Cubana de Aviaci\u00f3n)",
            "SExpr": "(JOIN (R aviation.airline.hubs) m.015j21)"
        }
    },
    "57": {
        "generations": "What are the inferior courts of the Oregon Supreme Court?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lrz_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lrz_ ns:law.court.inferior_courts ?x .\n}\n",
            "TopicEntityMid": "m.02lrz_",
            "mid2name": {
                "ns:m.02lrz_": "Oregon Supreme Court"
            },
            "SExpr_w_name": "(JOIN (R law.court.inferior_courts) Oregon Supreme Court)",
            "SExpr": "(JOIN (R law.court.inferior_courts) m.02lrz_)"
        }
    },
    "58": {
        "generations": "What are the dialects of the MUMPS programming language?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04zs6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04zs6 ns:computer.programming_language.dialects ?x .\n}\n",
            "TopicEntityMid": "m.04zs6",
            "mid2name": {
                "ns:m.04zs6": "MUMPS"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language.dialects) MUMPS)",
            "SExpr": "(JOIN (R computer.programming_language.dialects) m.04zs6)"
        }
    },
    "59": {
        "generations": "what is the setting of the book \"We Are Atomic\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b9rhl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b9rhl ns:fictional_universe.work_of_fiction.setting ?x .\n}\n",
            "TopicEntityMid": "m.05b9rhl",
            "mid2name": {
                "ns:m.05b9rhl": "We Are Atomic"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.work_of_fiction.setting) We Are Atomic)",
            "SExpr": "(JOIN (R fictional_universe.work_of_fiction.setting) m.05b9rhl)"
        }
    },
    "60": {
        "generations": "Who is the artist of the recording \"Hurt\"?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gbfp6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gbfp6d ns:music.recording.artist ?x .\n}\n",
            "TopicEntityMid": "m.0gbfp6d",
            "mid2name": {
                "ns:m.0gbfp6d": "Hurt"
            },
            "SExpr_w_name": "(JOIN (R music.recording.artist) Hurt)",
            "SExpr": "(JOIN (R music.recording.artist) m.0gbfp6d)"
        }
    },
    "61": {
        "generations": "Which team has Spike as their mascot?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j0xk7m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j0xk7m ns:sports.mascot.team ?x .\n}\n",
            "TopicEntityMid": "m.0j0xk7m",
            "mid2name": {
                "ns:m.0j0xk7m": "Spike"
            },
            "SExpr_w_name": "(JOIN (R sports.mascot.team) Spike)",
            "SExpr": "(JOIN (R sports.mascot.team) m.0j0xk7m)"
        }
    },
    "62": {
        "generations": "Which amusement park has a ride called Carousel?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pwdc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pwdc ns:amusement_parks.ride.park ?x .\n}\n",
            "TopicEntityMid": "m.01pwdc",
            "mid2name": {
                "ns:m.01pwdc": "Carousel"
            },
            "SExpr_w_name": "(JOIN (R amusement_parks.ride.park) Carousel)",
            "SExpr": "(JOIN (R amusement_parks.ride.park) m.01pwdc)"
        }
    },
    "63": {
        "generations": "What TV show has an episode about World War II?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.081pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.081pw ns:tv.tv_subject.tv_episode_segments ?x .\n}\n",
            "TopicEntityMid": "m.081pw",
            "mid2name": {
                "ns:m.081pw": "World War II"
            },
            "SExpr_w_name": "(JOIN (R tv.tv_subject.tv_episode_segments) World War II)",
            "SExpr": "(JOIN (R tv.tv_subject.tv_episode_segments) m.081pw)"
        }
    },
    "64": {
        "generations": "Who founded the Ordre du Croissant?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mcc5t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mcc5t ns:royalty.order_of_chivalry.founders ?x .\n}\n",
            "TopicEntityMid": "m.03mcc5t",
            "mid2name": {
                "ns:m.03mcc5t": "Ordre du Croissant"
            },
            "SExpr_w_name": "(JOIN (R royalty.order_of_chivalry.founders) Ordre du Croissant)",
            "SExpr": "(JOIN (R royalty.order_of_chivalry.founders) m.03mcc5t)"
        }
    },
    "65": {
        "generations": "What genre is the movie The Switch?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_9p4z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_9p4z6 ns:film.film.genre ?x .\n}\n",
            "TopicEntityMid": "m.0_9p4z6",
            "mid2name": {
                "ns:m.0_9p4z6": "The Switch"
            },
            "SExpr_w_name": "(JOIN (R film.film.genre) The Switch)",
            "SExpr": "(JOIN (R film.film.genre) m.0_9p4z6)"
        }
    },
    "66": {
        "generations": "Who built the ship named Hope?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vxf0_h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vxf0_h ns:boats.ship.ship_builder ?x .\n}\n",
            "TopicEntityMid": "m.0vxf0_h",
            "mid2name": {
                "ns:m.0vxf0_h": "Hope"
            },
            "SExpr_w_name": "(JOIN (R boats.ship.ship_builder) Hope)",
            "SExpr": "(JOIN (R boats.ship.ship_builder) m.0vxf0_h)"
        }
    },
    "67": {
        "generations": "Which fictional universe does the character \"Secretary to the President of the United Federation\" appear in?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chvlxz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chvlxz ns:fictional_universe.fictional_character.appears_in_these_fictional_universes ?x .\n}\n",
            "TopicEntityMid": "m.0chvlxz",
            "mid2name": {
                "ns:m.0chvlxz": "Secretary to the President of the United Federation"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) Secretary to the President of the United Federation)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.appears_in_these_fictional_universes) m.0chvlxz)"
        }
    },
    "68": {
        "generations": "What products are included in the Celebrity Dolls product line?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gj5th)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gj5th ns:business.product_line.products ?x .\n}\n",
            "TopicEntityMid": "m.05gj5th",
            "mid2name": {
                "ns:m.05gj5th": "Celebrity Dolls"
            },
            "SExpr_w_name": "(JOIN (R business.product_line.products) Celebrity Dolls)",
            "SExpr": "(JOIN (R business.product_line.products) m.05gj5th)"
        }
    },
    "69": {
        "generations": "Who are the professional athletes in wheelchair tennis?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027wzl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027wzl ns:sports.sport.pro_athletes ?x .\n}\n",
            "TopicEntityMid": "m.027wzl",
            "mid2name": {
                "ns:m.027wzl": "Wheelchair tennis"
            },
            "SExpr_w_name": "(JOIN (R sports.sport.pro_athletes) Wheelchair tennis)",
            "SExpr": "(JOIN (R sports.sport.pro_athletes) m.027wzl)"
        }
    },
    "70": {
        "generations": "What is the gender of Fievel Mousekewitz?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0669rl3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0669rl3 ns:fictional_universe.fictional_character.gender ?x .\n}\n",
            "TopicEntityMid": "m.0669rl3",
            "mid2name": {
                "ns:m.0669rl3": "Fievel Mousekewitz"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.fictional_character.gender) Fievel Mousekewitz)",
            "SExpr": "(JOIN (R fictional_universe.fictional_character.gender) m.0669rl3)"
        }
    },
    "71": {
        "generations": "What is a void in astronomy?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lwkb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lwkb ns:astronomy.celestial_object_category.objects ?x .\n}\n",
            "TopicEntityMid": "m.02lwkb",
            "mid2name": {
                "ns:m.02lwkb": "Void"
            },
            "SExpr_w_name": "(JOIN (R astronomy.celestial_object_category.objects) Void)",
            "SExpr": "(JOIN (R astronomy.celestial_object_category.objects) m.02lwkb)"
        }
    },
    "72": {
        "generations": "What school is iPulse associated with?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012p05y3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012p05y3 ns:education.school_newspaper.school ?x .\n}\n",
            "TopicEntityMid": "m.012p05y3",
            "mid2name": {
                "ns:m.012p05y3": "iPulse"
            },
            "SExpr_w_name": "(JOIN (R education.school_newspaper.school) iPulse)",
            "SExpr": "(JOIN (R education.school_newspaper.school) m.012p05y3)"
        }
    },
    "73": {
        "generations": "Where is East Torrey Glacier located?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cm6kp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cm6kp ns:location.location.containedby ?x .\n}\n",
            "TopicEntityMid": "m.03cm6kp",
            "mid2name": {
                "ns:m.03cm6kp": "East Torrey Glacier"
            },
            "SExpr_w_name": "(JOIN (R location.location.containedby) East Torrey Glacier)",
            "SExpr": "(JOIN (R location.location.containedby) m.03cm6kp)"
        }
    },
    "74": {
        "generations": "What category does the Williams FJ33 engine belong to?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c8f78)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c8f78 ns:engineering.engine.category ?x .\n}\n",
            "TopicEntityMid": "m.0c8f78",
            "mid2name": {
                "ns:m.0c8f78": "Williams FJ33"
            },
            "SExpr_w_name": "(JOIN (R engineering.engine.category) Williams FJ33)",
            "SExpr": "(JOIN (R engineering.engine.category) m.0c8f78)"
        }
    },
    "75": {
        "generations": "What characters belong to the Anthropomorphic Personification species in the fictional universe?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ntn_v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ntn_v ns:fictional_universe.character_species.characters_of_this_species ?x .\n}\n",
            "TopicEntityMid": "m.02ntn_v",
            "mid2name": {
                "ns:m.02ntn_v": "Anthropomorphic Personification"
            },
            "SExpr_w_name": "(JOIN (R fictional_universe.character_species.characters_of_this_species) Anthropomorphic Personification)",
            "SExpr": "(JOIN (R fictional_universe.character_species.characters_of_this_species) m.02ntn_v)"
        }
    },
    "76": {
        "generations": "What programming language influenced Simula?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.079l6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.079l6 ns:computer.programming_language.influenced_by ?x .\n}\n",
            "TopicEntityMid": "m.079l6",
            "mid2name": {
                "ns:m.079l6": "Simula"
            },
            "SExpr_w_name": "(JOIN (R computer.programming_language.influenced_by) Simula)",
            "SExpr": "(JOIN (R computer.programming_language.influenced_by) m.079l6)"
        }
    },
    "77": {
        "generations": "What are the dwarf planets in the solar system?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06p5g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06p5g ns:astronomy.star_system.dwarf_planets ?x .\n}\n",
            "TopicEntityMid": "m.06p5g",
            "mid2name": {
                "ns:m.06p5g": "Solar System"
            },
            "SExpr_w_name": "(JOIN (R astronomy.star_system.dwarf_planets) Solar System)",
            "SExpr": "(JOIN (R astronomy.star_system.dwarf_planets) m.06p5g)"
        }
    },
    "78": {
        "generations": "What is the major for students studying general internal medicine?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vn0c97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vn0c97 ns:education.field_of_study.students_majoring ?x .\n}\n",
            "TopicEntityMid": "m.0vn0c97",
            "mid2name": {
                "ns:m.0vn0c97": "General Internal Medicine"
            },
            "SExpr_w_name": "(JOIN (R education.field_of_study.students_majoring) General Internal Medicine)",
            "SExpr": "(JOIN (R education.field_of_study.students_majoring) m.0vn0c97)"
        }
    },
    "79": {
        "generations": "what is the size of a Duracell AA battery?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08mbnq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08mbnq1 ns:engineering.battery.size ?x .\n}\n",
            "TopicEntityMid": "m.08mbnq1",
            "mid2name": {
                "ns:m.08mbnq1": "Duracell AA battery"
            },
            "SExpr_w_name": "(JOIN (R engineering.battery.size) Duracell AA battery)",
            "SExpr": "(JOIN (R engineering.battery.size) m.08mbnq1)"
        }
    },
    "80": {
        "generations": "What comic books did Andy Kubert pencil?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xnkt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xnkt ns:comic_books.comic_book_penciler.comic_books_penciled ?x .\n}\n",
            "TopicEntityMid": "m.02xnkt",
            "mid2name": {
                "ns:m.02xnkt": "Andy Kubert"
            },
            "SExpr_w_name": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) Andy Kubert)",
            "SExpr": "(JOIN (R comic_books.comic_book_penciler.comic_books_penciled) m.02xnkt)"
        }
    },
    "81": {
        "generations": "What disease is caused by excessive testosterone production?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06_p58b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06_p58b ns:medicine.disease_cause.diseases ?x .\n}\n",
            "TopicEntityMid": "m.06_p58b",
            "mid2name": {
                "ns:m.06_p58b": "Excessive testosterone production"
            },
            "SExpr_w_name": "(JOIN (R medicine.disease_cause.diseases) Excessive testosterone production)",
            "SExpr": "(JOIN (R medicine.disease_cause.diseases) m.06_p58b)"
        }
    },
    "82": {
        "generations": "What is the higher rank of the superclass in organism classification?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02sddxv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02sddxv ns:biology.organism_classification_rank.higher_rank ?x .\n}\n",
            "TopicEntityMid": "m.02sddxv",
            "mid2name": {
                "ns:m.02sddxv": "Superclass"
            },
            "SExpr_w_name": "(JOIN (R biology.organism_classification_rank.higher_rank) Superclass)",
            "SExpr": "(JOIN (R biology.organism_classification_rank.higher_rank) m.02sddxv)"
        }
    },
    "83": {
        "generations": "what calendar system is muharram a part of?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0296bf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0296bf ns:time.month.calendar_system ?x .\n}\n",
            "TopicEntityMid": "m.0296bf",
            "mid2name": {
                "ns:m.0296bf": "Muharram"
            },
            "SExpr_w_name": "(JOIN (R time.month.calendar_system) Muharram)",
            "SExpr": "(JOIN (R time.month.calendar_system) m.0296bf)"
        }
    },
    "84": {
        "generations": "What anime/manga franchises fall under the cyberpunk genre?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01qpc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01qpc ns:base.animemanga.anime_manga_genre.anime_manga_franchises ?x .\n}\n",
            "TopicEntityMid": "m.01qpc",
            "mid2name": {
                "ns:m.01qpc": "Cyberpunk"
            },
            "SExpr_w_name": "(JOIN (R base.animemanga.anime_manga_genre.anime_manga_franchises) Cyberpunk)",
            "SExpr": "(JOIN (R base.animemanga.anime_manga_genre.anime_manga_franchises) m.01qpc)"
        }
    },
    "85": {
        "generations": "What car model came before the Suzuki Cultus Crescent?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06t5yp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06t5yp ns:automotive.model.predecessor ?x .\n}\n",
            "TopicEntityMid": "m.06t5yp",
            "mid2name": {
                "ns:m.06t5yp": "Suzuki Cultus Crescent"
            },
            "SExpr_w_name": "(JOIN (R automotive.model.predecessor) Suzuki Cultus Crescent)",
            "SExpr": "(JOIN (R automotive.model.predecessor) m.06t5yp)"
        }
    },
    "86": {
        "generations": "Which royal house preceded the House of Holstein-Gottorp (Swedish line)?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0297pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0297pw ns:royalty.royal_line.preceded_by ?x .\n}\n",
            "TopicEntityMid": "m.0297pw",
            "mid2name": {
                "ns:m.0297pw": "House of Holstein-Gottorp (Swedish line)"
            },
            "SExpr_w_name": "(JOIN (R royalty.royal_line.preceded_by) House of Holstein-Gottorp (Swedish line))",
            "SExpr": "(JOIN (R royalty.royal_line.preceded_by) m.0297pw)"
        }
    },
    "87": {
        "generations": "What college has the athletics brand Boston College Eagles?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07m3nf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07m3nf ns:education.athletics_brand.institution ?x .\n}\n",
            "TopicEntityMid": "m.07m3nf",
            "mid2name": {
                "ns:m.07m3nf": "Boston College Eagles"
            },
            "SExpr_w_name": "(JOIN (R education.athletics_brand.institution) Boston College Eagles)",
            "SExpr": "(JOIN (R education.athletics_brand.institution) m.07m3nf)"
        }
    },
    "88": {
        "generations": "What type of rocket engine cycle is used in spaceflight?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04qqvv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04qqvv ns:spaceflight.rocket_engine_cycle.rocket_engines ?x .\n}\n",
            "TopicEntityMid": "m.04qqvv",
            "mid2name": {
                "ns:m.04qqvv": "Gas-generator cycle"
            },
            "SExpr_w_name": "(JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) Gas-generator cycle)",
            "SExpr": "(JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqvv)"
        }
    },
    "89": {
        "generations": "What is the Triple Whipple Truss named after?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c9_jt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c9_jt ns:symbols.namesake.named_after ?x .\n}\n",
            "TopicEntityMid": "m.0c9_jt",
            "mid2name": {
                "ns:m.0c9_jt": "Triple whipple truss"
            },
            "SExpr_w_name": "(JOIN (R symbols.namesake.named_after) Triple whipple truss)",
            "SExpr": "(JOIN (R symbols.namesake.named_after) m.0c9_jt)"
        }
    },
    "90": {
        "generations": "What is another name for real estate?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010n3n0w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010n3n0w ns:base.descriptive_names.names.descriptive_name ?x .\n}\n",
            "TopicEntityMid": "m.010n3n0w",
            "mid2name": {
                "ns:m.010n3n0w": "Real Estate"
            },
            "SExpr_w_name": "(JOIN (R base.descriptive_names.names.descriptive_name) Real Estate)",
            "SExpr": "(JOIN (R base.descriptive_names.names.descriptive_name) m.010n3n0w)"
        }
    },
    "91": {
        "generations": "What is the band on chromosome 7 in humans?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099php)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099php ns:biology.chromosome.band ?x .\n}\n",
            "TopicEntityMid": "m.099php",
            "mid2name": {
                "ns:m.099php": "Chromosome 7 (human)"
            },
            "SExpr_w_name": "(JOIN (R biology.chromosome.band) Chromosome 7 (human))",
            "SExpr": "(JOIN (R biology.chromosome.band) m.099php)"
        }
    },
    "92": {
        "generations": "who designed the costumes for the suite life movie?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dgqzyr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dgqzyr ns:film.film.costume_design_by ?x .\n}\n",
            "TopicEntityMid": "m.0dgqzyr",
            "mid2name": {
                "ns:m.0dgqzyr": "The Suite Life Movie"
            },
            "SExpr_w_name": "(JOIN (R film.film.costume_design_by) The Suite Life Movie)",
            "SExpr": "(JOIN (R film.film.costume_design_by) m.0dgqzyr)"
        }
    },
    "93": {
        "generations": "what type of engines use E85 fuel?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vf_2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vf_2 ns:automotive.fuel.engines ?x .\n}\n",
            "TopicEntityMid": "m.05vf_2",
            "mid2name": {
                "ns:m.05vf_2": "E85"
            },
            "SExpr_w_name": "(JOIN (R automotive.fuel.engines) E85)",
            "SExpr": "(JOIN (R automotive.fuel.engines) m.05vf_2)"
        }
    },
    "94": {
        "generations": "What track did Yingyang release?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_w7kvg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_w7kvg ns:music.artist.track ?x .\n}\n",
            "TopicEntityMid": "m.0_w7kvg",
            "mid2name": {
                "ns:m.0_w7kvg": "YINGYANG"
            },
            "SExpr_w_name": "(JOIN (R music.artist.track) YINGYANG)",
            "SExpr": "(JOIN (R music.artist.track) m.0_w7kvg)"
        }
    },
    "95": {
        "generations": "What is the name of the album?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v48k2k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v48k2k ns:music.release.album ?x .\n}\n",
            "TopicEntityMid": "m.0v48k2k",
            "mid2name": {
                "ns:m.0v48k2k": "Unforgettable"
            },
            "SExpr_w_name": "(JOIN (R music.release.album) Unforgettable)",
            "SExpr": "(JOIN (R music.release.album) m.0v48k2k)"
        }
    },
    "96": {
        "generations": "What category does Indonesia-Investments belong to on the internet?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010lm42f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010lm42f ns:internet.website.category ?x .\n}\n",
            "TopicEntityMid": "m.010lm42f",
            "mid2name": {
                "ns:m.010lm42f": "Indonesia-Investments"
            },
            "SExpr_w_name": "(JOIN (R internet.website.category) Indonesia-Investments)",
            "SExpr": "(JOIN (R internet.website.category) m.010lm42f)"
        }
    },
    "97": {
        "generations": "What movie features Low Earth orbit?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cspd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cspd ns:film.film_location.featured_in_films ?x .\n}\n",
            "TopicEntityMid": "m.0cspd",
            "mid2name": {
                "ns:m.0cspd": "Low Earth orbit"
            },
            "SExpr_w_name": "(JOIN (R film.film_location.featured_in_films) Low Earth orbit)",
            "SExpr": "(JOIN (R film.film_location.featured_in_films) m.0cspd)"
        }
    },
    "98": {
        "generations": "What animals did Archibald Primrose, 5th Earl of Rosebery own?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01htsy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01htsy ns:biology.animal_owner.animals_owned ?x .\n}\n",
            "TopicEntityMid": "m.01htsy",
            "mid2name": {
                "ns:m.01htsy": "Archibald Primrose, 5th Earl of Rosebery"
            },
            "SExpr_w_name": "(JOIN (R biology.animal_owner.animals_owned) Archibald Primrose, 5th Earl of Rosebery)",
            "SExpr": "(JOIN (R biology.animal_owner.animals_owned) m.01htsy)"
        }
    },
    "99": {
        "generations": "what tourist destination is near Arlington Gallery?",
        "ori_data_item": {
            "sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_jgbb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_jgbb ns:travel.tourist_attraction.near_travel_destination ?x .\n}\n",
            "TopicEntityMid": "m.04_jgbb",
            "mid2name": {
                "ns:m.04_jgbb": "Arlington Gallery"
            },
            "SExpr_w_name": "(JOIN (R travel.tourist_attraction.near_travel_destination) Arlington Gallery)",
            "SExpr": "(JOIN (R travel.tourist_attraction.near_travel_destination) m.04_jgbb)"
        }
    }
}